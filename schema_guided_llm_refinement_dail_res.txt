False
dbname:  schema_guided_llm_refinement-gold.txt
Evaluating predictions
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT DISTINCT Template_Type_Code FROM Templates;
Gold SQL:  SELECT Template_Type_Code FROM Ref_Template_Types WHERE EXISTS (SELECT * FROM Templates WHERE Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code)
Question:  What template type codes are associated with existing templates?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT AVG(Template_ID), COUNT(DISTINCT Document_ID), COUNT(DISTINCT Template_ID) FROM Documents WHERE  Template_ID > 34 LIMIT 7
Question:  What are the average, number of distinct documents, and number of distinct templates for templates with IDs greater than 34, considering the 8th to 14th results?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT t.Template_ID, COUNT(DISTINCT d.Document_Name) AS Distinct_Document_Names FROM Templates t LEFT JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID ORDER BY t.Template_ID DESC;
Gold SQL:  SELECT COUNT(DISTINCT Document_Name), Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID ORDER BY Documents.Template_ID DESC
Question:  What is the count of distinct document names for each template, listed in descending order by template ID?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT(Templates.Version_Number), Ref_Template_Types.Template_Type_Description, Templates.Version_Number FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_ID > 24 AND Documents.Document_ID BETWEEN 1 AND 10 GROUP BY Templates.Version_Number, Ref_Template_Types.Template_Type_Description HAVING AVG(Templates.Version_Number) > 61 ORDER BY Ref_Template_Types.Template_Type_Description DESC
Pred:  SELECT RTT.Template_Type_Description, T.Version_Number, COUNT(T.Version_Number) AS Version_Count FROM Ref_Template_Types RTT JOIN Templates T ON RTT.Template_Type_Code = T.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID WHERE T.Template_ID > 24 AND D.Document_ID BETWEEN 1 AND 10 GROUP BY RTT.Template_Type_Description, T.Version_Number HAVING AVG(T.Version_Number) > 61 ORDER BY RTT.Template_Type_Description DESC;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT SUM(sub.Document_ID) FROM ( SELECT DISTINCT d.Document_ID FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID WHERE p.Paragraph_ID > 66 ORDER BY d.Document_ID LIMIT 10 OFFSET 10 ) AS sub;
Gold SQL:  SELECT SUM(Documents.Document_ID) FROM Documents JOIN Paragraphs JOIN Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code AND Documents.Template_ID = Templates.Template_ID AND Paragraphs.Document_ID = Documents.Document_ID WHERE  Paragraph_ID > 66 LIMIT 10
Question:  What is the total of the document IDs for documents containing paragraphs with paragraph IDs greater than 66, limited to 10 results after the first 10 matches?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = 83 LIMIT 7
Pred:  SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = 83 AND Paragraph_ID BETWEEN 8 AND 14;
#############################
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT T.Template_Type_Code FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Paragraphs P ON P.Document_ID = D.Document_ID JOIN Ref_Template_Types RT ON T.Template_Type_Code = RT.Template_Type_Code WHERE T.Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID BETWEEN 1 AND 10)
SELECT  tt.Template_Type_Code, tt.Template_Type_Description FROM Ref_Template_Types tt JOIN Templates t ON tt.Template_Type_Code = t.Template_Type_Code JOIN Documents d ON t.Template_ID = d.Template_ID JOIN Paragraphs p ON d.Document_ID = p.Document_ID WHERE t.Template_ID > 10;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DISTINCT tt.Template_Type_Code, tt.Template_Type_Description FROM Ref_Template_Types tt JOIN Templates t ON tt.Template_Type_Code = t.Template_Type_Code JOIN Documents d ON t.Template_ID = d.Template_ID JOIN Paragraphs p ON d.Document_ID = p.Document_ID WHERE t.Template_ID > 10;
Gold SQL:  SELECT T.Template_Type_Code FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Paragraphs P ON P.Document_ID = D.Document_ID JOIN Ref_Template_Types RT ON T.Template_Type_Code = RT.Template_Type_Code WHERE T.Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID BETWEEN 1 AND 10)
Question:  What template type codes, excluding the first 10 template ids, are used across documents, templates, paragraphs and reference template types?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT MAX(P.Paragraph_ID), D.Template_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_ID BETWEEN 1 AND 10 AND D.Template_ID > 91 GROUP BY D.Template_ID
Pred:  SELECT t.Template_ID, MAX(p.Paragraph_ID) AS Max_Paragraph_ID FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Paragraphs p ON d.Document_ID = p.Document_ID WHERE t.Template_ID > 91 AND p.Paragraph_ID BETWEEN 1 AND 10 GROUP BY t.Template_ID;
#############################
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT p.Template_Type_Code FROM Templates AS p
SELECT  T.Template_Type_Code, R.Template_Type_Description FROM Templates T INNER JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT DISTINCT T.Template_Type_Code, R.Template_Type_Description FROM Templates T INNER JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code;
Gold SQL:  SELECT p.Template_Type_Code FROM Templates AS p
Question:  What are the template types in the templates table?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DISTINCT D.Document_Name FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE D.Template_ID <= 12 ORDER BY D.Document_ID LIMIT 999999999 OFFSET 6;
Gold SQL:  SELECT Documents.Document_Name FROM Documents WHERE Documents.Template_ID <= 12 AND EXISTS (SELECT * FROM Paragraphs WHERE Documents.Document_ID = Paragraphs.Document_ID) LIMIT 6
Question:  What are the names of documents with template IDs of 12 or less that contain at least one paragraph, starting from the seventh document?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Name, City FROM employee WHERE Employee_ID > 14 LIMIT 10;
Pred:  SELECT Name, City FROM employee WHERE Employee_ID > 14 ORDER BY Employee_ID ASC LIMIT 10;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT e.Bonus FROM evaluation e WHERE e.Year_awarded NOT IN (SELECT e2.Year_awarded FROM evaluation e2 ORDER BY e2.Year_awarded LIMIT 5) ORDER BY e.Bonus ASC LIMIT 7
Question:  What are the 7th to 13th smallest bonuses given to employees in years that are not among the first 5 years that bonuses were awarded?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT(*), MAX(Number_products), District, Name FROM shop WHERE Number_products BETWEEN 1 AND 10 GROUP BY District, Name;
Pred:  SELECT s.District, COUNT(s.Shop_ID) AS Total_Shops, MAX(s.Number_products) AS Max_Products, s.Name AS Shop_Name FROM shop s WHERE s.Number_products BETWEEN 1 AND 10 GROUP BY s.District;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT SUM(hiring.Employee_ID), hiring.Shop_ID, shop.Location FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Employee_ID >= 47 ORDER BY hiring.Shop_ID ASC;
Question:  What is the total employee ID, shop ID, and location for each shop, considering only employees with an ID of 47 or more, listed in ascending order by shop ID?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Start_from FROM hiring WHERE Shop_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM shop AS x WHERE  x.Number_products <= 68 AND hiring.Shop_ID = x.Shop_ID)
Pred:  SELECT h.Start_from FROM hiring h JOIN shop s ON h.Shop_ID = s.Shop_ID WHERE s.Number_products <= 68 AND s.Shop_ID BETWEEN 1 AND 10;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT DISTINCT Shop_ID FROM hiring;
Gold SQL:  SELECT Shop_ID FROM shop AS s WHERE EXISTS (SELECT * FROM hiring AS v WHERE v.Shop_ID = s.Shop_ID)
Question:  What are the IDs of the shops that have at least one employee hired?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT MIN(employee.Employee_ID) AS Smallest_Employee_ID, hiring.Shop_ID FROM employee JOIN hiring ON employee.Employee_ID = hiring.Employee_ID WHERE employee.Employee_ID <= 13 GROUP BY hiring.Shop_ID;
Gold SQL:  SELECT MIN(Employee_ID), Shop_ID FROM hiring WHERE  Employee_ID <= 13
Question:  What is the smallest employee ID and the corresponding shop ID for employees with an ID less than or equal to 13?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  Not Found
Gold SQL:  SELECT Shop_ID FROM hiring WHERE  Employee_ID > 73 GROUP BY Shop_ID HAVING AVG(Employee_ID) >= 80
Question:  Which shop ids have an average employee id of 80 or higher for employees with an id greater than 73?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT "Employee_ID") AS "Total_Employees_With_Zero_Bonus" FROM "evaluation" WHERE "Bonus" = 0;
'"evaluation"'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT MAX(Employee_ID) FROM employee WHERE Age > (SELECT MIN(Age) FROM employee);
Gold SQL:  SELECT MAX(hiring.Employee_ID), employee.Employee_ID FROM hiring JOIN employee ON hiring.Employee_ID = employee.Employee_ID WHERE Age > (SELECT MIN(Age) FROM employee AS j)
Question:  What is the maximum employee ID of employees who are older than the youngest employee?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT "Employee_ID") FROM "evaluation" WHERE "Bonus" = 89;
'"evaluation"'
^^^^^^^^^^^^^^^^^^^^^^^
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT y.Is_full_time FROM hiring AS y
SELECT e.Name, h.Is_full_time FROM employee e JOIN hiring h ON e.Employee_ID = h.Employee_ID;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT e.Name, h.Is_full_time FROM employee e JOIN hiring h ON e.Employee_ID = h.Employee_ID;
Gold SQL:  SELECT y.Is_full_time FROM hiring AS y
Question:  What is the full-time status of employees in the hiring table?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT e.* FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Bonus = 49 ORDER BY e.Employee_ID ASC LIMIT 1 OFFSET 1;
'employee.'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT l.Employee_ID FROM evaluation AS l WHERE  l.Bonus = 49 ORDER BY l.Employee_ID ASC LIMIT 1
Pred:  SELECT e.* FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID WHERE ev.Bonus = 49 ORDER BY e.Employee_ID ASC LIMIT 1 OFFSET 1;
#############################
#############################
Both are empty
GT:  SELECT COUNT(Shop_ID), Shop_ID, Location, District FROM shop WHERE Number_products BETWEEN 1 AND 10 OR Shop_ID > 11 GROUP BY District, Shop_ID, Location
Pred:  SELECT District, Shop_ID, Location, COUNT(*) AS Shop_Count FROM shop WHERE (Number_products BETWEEN 1 AND 10 OR Shop_ID > 11) GROUP BY District, Shop_ID, Location;
#############################
#############################
Both are empty
GT:  SELECT c.feature_id FROM Other_Property_Features AS c WHERE  c.property_id > 100 ORDER BY c.feature_id DESC LIMIT 6
Pred:  SELECT feature_id FROM Other_Property_Features WHERE property_id > 100 ORDER BY feature_id DESC LIMIT 6 OFFSET 6;
#############################
#############################
Both are empty
GT:  SELECT b.buyer_offered_price FROM Properties AS b WHERE  b.vendor_requested_price = 80
Pred:  SELECT buyer_offered_price FROM Properties WHERE vendor_requested_price = 80;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT owner_id FROM Owners WHERE owner_id != 14 ORDER BY owner_id LIMIT 9 OFFSET 9;
Gold SQL:  SELECT owner_id FROM Owners WHERE  owner_id != 14 ORDER BY owner_id ASC LIMIT 9
Question:  What are the next 9 owner ids in ascending order, excluding owner id 14, after the first 9 owners?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT( size_code), treatment_type_code FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY treatment_type_code HAVING AVG(cost_of_treatment) = 22
Pred:  SELECT t.treatment_type_code, COUNT( d.size_code) AS distinct_size_count FROM Treatments t JOIN Dogs d ON t.dog_id = d.dog_id WHERE t.cost_of_treatment = 22 GROUP BY t.treatment_type_code
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT MIN(professional_id) FROM Professionals WHERE professional_id < 15;
Gold SQL:  SELECT MIN(professional_id), COUNT(DISTINCT home_phone), COUNT(DISTINCT role_code) FROM Professionals WHERE  professional_id < 15
Question:  What is the lowest professional id of professionals with id less than 15, how many of these professionals have a unique home phone, and how many of them have a unique role code?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT b.city FROM Owners AS b WHERE  b.owner_id >= 87 ORDER BY b.city DESC
Pred:  SELECT  city FROM Owners WHERE owner_id >= 87 ORDER BY city DESC;
#############################
#############################
Both are empty
GT:  SELECT COUNT( gender), weight, age FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE cost_of_treatment BETWEEN 1 AND 10 GROUP BY weight, age
Pred:  SELECT d.weight, d.age, COUNT( d.gender) AS distinct_genders FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment BETWEEN 1 AND 10 GROUP BY d.weight, d.age;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT d.dog_id, d.owner_id FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id JOIN Sizes s ON d.size_code = s.size_code ORDER BY d.owner_id DESC LIMIT 6 OFFSET 6;
Gold SQL:  SELECT dog_id, Owners.owner_id FROM Dogs JOIN Owners JOIN Sizes ON Dogs.owner_id = Owners.owner_id AND Dogs.size_code = Sizes.size_code ORDER BY Owners.owner_id DESC LIMIT 6
Question:  What are the dog id and owner id of the 7th to 12th owners in descending order of owner id, given that the dog sizes match the sizes in the sizes table and the owner information matches the owners table?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT DISTINCT o.owner_id, o.first_name, o.last_name, o.email_address FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.owner_id <> 12;
Gold SQL:  SELECT p.owner_id FROM Dogs AS p WHERE dog_id NOT IN (SELECT dog_id FROM Dogs WHERE  owner_id != 12)
Question:  Which owners have a dog that is not listed as a dog that belongs to a different owner than the one with id 12?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT( weight), Treatments.treatment_type_code FROM Dogs JOIN Treatments JOIN Treatment_Types ON Dogs.dog_id = Treatments.dog_id AND Treatment_Types.treatment_type_code = Treatments.treatment_type_code WHERE  treatment_id > 29 GROUP BY Treatments.treatment_type_code HAVING MIN(cost_of_treatment) < 52
Pred:  SELECT tt.treatment_type_description, COUNT( d.weight) AS distinct_weights_count FROM Treatments t JOIN Dogs d ON t.dog_id = d.dog_id JOIN Treatment_Types tt ON t.treatment_type_code = tt.treatment_type_code WHERE t.cost_of_treatment < 52 AND t.treatment_id > 29 GROUP BY tt.treatment_type_description;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT treatment_type_code, MIN(treatment_id) AS smallest_treatment_id FROM Treatments GROUP BY treatment_type_code ORDER BY treatment_type_code ASC;
Gold SQL:  SELECT MIN(treatment_id), Treatment_Types.treatment_type_code FROM Treatments JOIN Treatment_Types ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY Treatment_Types.treatment_type_code ASC
Question:  What is the smallest treatment ID for each treatment type in ascending order of treatment type code?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT P.city, MAX(P.professional_id) AS max_professional_id, SUM(P.professional_id) AS sum_professional_ids, GROUP_CONCAT(DISTINCT P.last_name) AS last_names FROM Professionals P WHERE P.professional_id > 39 GROUP BY P.city HAVING MIN(P.professional_id) > 55
Error col: group_concat
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT MAX(l.professional_id), SUM(l.professional_id), l.last_name, l.city FROM Professionals AS l WHERE  l.professional_id > 39 GROUP BY l.city HAVING MIN(l.professional_id) > 55
Pred:  SELECT P.city, MAX(P.professional_id) AS max_professional_id, SUM(P.professional_id) AS sum_professional_ids, GROUP_CONCAT( P.last_name) AS last_names FROM Professionals P WHERE P.professional_id > 39 GROUP BY P.city HAVING MIN(P.professional_id) > 55
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT j.owner_id, j.gender, j.breed_code FROM Dogs AS j WHERE  j.dog_id < 69 GROUP BY j.breed_code ORDER BY j.gender ASC LIMIT 10
Question:  What are the owner id, gender, and breed code for dogs with id less than 69, grouped by breed, ordered by gender, and what are the 11th to 20th records in the result?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT COUNT(DISTINCT Weekly_Rank) FROM TV_series WHERE id BETWEEN 1 AND 10;
Gold SQL:  SELECT COUNT(DISTINCT c.Weekly_Rank) FROM TV_series AS c WHERE c.id BETWEEN 1 AND 10 AND Rating = (SELECT MAX(Rating) FROM TV_series)
Question:  How many unique weekly ranks do the top rated TV series with ids between 1 and 10 have?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT id FROM Cartoon WHERE Production_code >= 32 ORDER BY Production_code DESC LIMIT 6 OFFSET 6;
Gold SQL:  SELECT k.id FROM Cartoon AS k WHERE  k.Production_code >= 32 ORDER BY k.id DESC LIMIT 6
Question:  What are the ids of the 7th to 12th cartoons with production codes 32 or higher, listed in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Written_by", "Directed_by" FROM "Cartoon" WHERE "Production_code" NOT BETWEEN 11 AND 56 ORDER BY "Written_by" DESC;
'"Cartoon"'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT "Written_by", "Directed_by" FROM "Cartoon" WHERE "Production_code" NOT BETWEEN 11 AND 56 ORDER BY "Written_by" DESC;
Gold SQL:  SELECT Directed_by, Written_by FROM Cartoon WHERE Production_code BETWEEN 1 AND 10 OR Production_code > 56 GROUP BY Written_by, Directed_by ORDER BY Written_by DESC;
Question:  What are the writers and directors of cartoons, excluding those with production codes between 11 and 56, listed in descending order by writer?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Weekly_Rank" FROM "TV_series" WHERE "Share" BETWEEN 1 AND 10 ORDER BY "Weekly_Rank" DESC;
'"TV_series"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT COUNT(DISTINCT Directed_by), Original_air_date FROM Cartoon WHERE  Production_code != 18 AND Written_by NOT IN (SELECT Written_by FROM Cartoon AS w WHERE  w.Production_code >= 11) GROUP BY Original_air_date HAVING AVG(Production_code) >= 8 ORDER BY Original_air_date DESC
Question:  What are the original air dates and the number of distinct directors of cartoons that were not written by writers of cartoons with production codes greater than or equal to 11, and have an average production code of at least 8, excluding cartoons with production code 18?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT T1.Directed_by, T3.Country FROM Cartoon AS T1 JOIN TV_Channel AS T3 ON T1.Channel = T3.id JOIN TV_series AS T2 ON T2.Channel = T3.id WHERE T2.Share >= 14
Question:  Who are the directors of cartoons that were aired on the same channel as TV series with a share of 14 or more, and what are the countries where these channels are located?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT d.id FROM Cartoon AS d WHERE  d.Production_code < 17 ORDER BY d.id DESC LIMIT 8
Pred:  SELECT id FROM Cartoon WHERE Production_code < 17 ORDER BY id DESC LIMIT 8;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT COUNT(DISTINCT t.liked_id), t.liked_id FROM Likes AS t WHERE  t.student_id > 2 GROUP BY t.liked_id LIMIT 1
Question:  What is the second most popular student liked by students with id greater than 2?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT MIN(grade), name FROM Highschooler WHERE grade >= 88 GROUP BY name ORDER BY name ASC LIMIT 9
Pred:  SELECT name, MIN(grade) as lowest_grade FROM Highschooler WHERE grade >= 88 GROUP BY name ORDER BY name ASC LIMIT 9;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT student_id, liked_id FROM Likes WHERE student_id > 56 GROUP BY liked_id, student_id ORDER BY liked_id, student_id LIMIT 7 OFFSET 7;
Gold SQL:  SELECT l.student_id, l.liked_id FROM Likes AS l WHERE  l.student_id > 56 GROUP BY l.liked_id LIMIT 7
Question:  What are the student ids and their corresponding liked ids for students with ids greater than 56, grouped by liked ids and returning results from the 8th to the 14th?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT k.liked_id, k.student_id FROM Likes AS k WHERE k.liked_id = 51 GROUP BY k.liked_id, k.student_id HAVING MIN(k.liked_id) < 55 ORDER BY k.liked_id DESC;
Question:  What are the student IDs that have the minimum liked ID less than 55 when liked ID is 51, listed in descending order of liked ID?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT SUM(H.ID) AS TotalIDsum, GROUP_CONCAT(H.name) AS Names FROM Highschooler H INNER JOIN Likes L ON H.ID = L.student_id
Error col: group_concat
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT SUM(H.ID) AS TotalIDsum, GROUP_CONCAT(H.name) AS Names FROM Highschooler H INNER JOIN Likes L ON H.ID = L.student_id
Gold SQL:  SELECT SUM(Highschooler.ID), Highschooler.name FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id
Question:  What is the total ID of all high school students who like someone and what are their names?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT student_id FROM Likes WHERE student_id > 48 ORDER BY student_id OFFSET 6 ROWS FETCH NEXT 6 ROWS ONLY;
Error alias name: fetch
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT student_id FROM Likes WHERE student_id > 48 ORDER BY student_id OFFSET 6 ROWS FETCH NEXT 6 ROWS ONLY;
Gold SQL:  SELECT m.student_id FROM Likes AS m WHERE  m.student_id > 48 LIMIT 6
Question:  What are the ids of the 7th to 12th students in the likes table with a student id greater than 48?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT ca.Course_ID, ca.Grade FROM ( SELECT Course_ID, Teacher_ID, Grade, ROW_NUMBER() OVER (ORDER BY Course_ID) as RowNumber FROM course_arrange ) ca WHERE ca.RowNumber BETWEEN 8 AND 14;
Error col: row_number
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT ca.Course_ID, ca.Grade FROM ( SELECT Course_ID, Teacher_ID, Grade, ROW_NUMBER() OVER (ORDER BY Course_ID) as RowNumber FROM course_arrange ) ca WHERE ca.RowNumber BETWEEN 8 AND 14;
Gold SQL:  SELECT Grade FROM course_arrange JOIN course ON course.Course_ID = course_arrange.Course_ID LIMIT 7
Question:  What are the grades of the 8th to 14th courses in the course arrange list?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT teacher.Teacher_ID, course_arrange.Course_ID, Grade FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Course_ID >= 34 GROUP BY teacher.Teacher_ID, course_arrange.Course_ID, Grade;
Pred:  SELECT ca.Teacher_ID, ca.Course_ID, ca.Grade FROM course_arrange AS ca JOIN course AS c ON ca.Course_ID = c.Course_ID WHERE c.Course_ID >= 34 GROUP BY ca.Teacher_ID, ca.Course_ID, ca.Grade ORDER BY ca.Teacher_ID, ca.Course_ID, ca.Grade;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Teacher_ID", "Hometown" FROM "teacher" ORDER BY "Teacher_ID" ASC LIMIT 1 OFFSET 1;
'"teacher"'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT "Teacher_ID", "Hometown" FROM "teacher" ORDER BY "Teacher_ID" ASC LIMIT 1 OFFSET 1;
Gold SQL:  SELECT Teacher_ID, Hometown FROM teacher WHERE Teacher_ID < 100 ORDER BY Teacher_ID LIMIT 1
Question:  What are the teacher id and hometown of the second teacher with the lowest teacher id?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DISTINCT "Hometown" FROM "teacher" WHERE "Teacher_ID" BETWEEN 1 AND 10 OR "Teacher_ID" >= 45 ORDER BY "Hometown" ASC;
'"teacher"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT  u.Grade FROM course_arrange AS u WHERE u.Teacher_ID = 98 LIMIT 2;
Pred:  SELECT  Grade FROM course_arrange WHERE Teacher_ID = 98 ORDER BY Grade DESC LIMIT 2;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DISTINCT "Course_ID" FROM "course" WHERE "Course_ID" <> 30 ORDER BY "Course_ID" ASC LIMIT 3;
'"course"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT COUNT(Teacher_ID), COUNT( Hometown), Teacher_ID, Hometown FROM teacher WHERE Teacher_ID > 87 AND Teacher_ID >= 99 GROUP BY Hometown ORDER BY Teacher_ID ASC
Pred:  SELECT Teacher_ID, Hometown, COUNT( Teacher_ID) AS Distinct_Teacher_IDs, COUNT( Hometown) AS Distinct_Hometowns FROM teacher WHERE Teacher_ID >= 99 GROUP BY Hometown, Teacher_ID ORDER BY Teacher_ID ASC;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Show_ID" FROM "show" WHERE "Show_ID" <= 95;
'"show"'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT Conductor_ID, COUNT(DISTINCT Year_of_Work) AS Years_Worked FROM conductor WHERE Conductor_ID < 66 GROUP BY Conductor_ID ORDER BY Conductor_ID;
Gold SQL:  SELECT Conductor_ID, COUNT(DISTINCT Year_of_Work) FROM conductor WHERE Conductor_ID < 66 GROUP BY Conductor_ID LIMIT 8;
Question:  What are the conductor ids and the number of distinct years they worked for the 8 conductors with ids less than 66?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Orchestra_ID FROM orchestra WHERE Orchestra_ID BETWEEN 1 AND 10 AND  Conductor_ID >= 16
Pred:  SELECT Orchestra_ID FROM orchestra WHERE Orchestra_ID BETWEEN 1 AND 10 AND Conductor_ID >= 16;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Show_ID" FROM "show";
'"show"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT Age FROM conductor WHERE Conductor_ID > 95 ORDER BY Age ASC
Pred:  SELECT Age FROM conductor WHERE Conductor_ID > 95 ORDER BY Age ASC;
#############################
#############################
Both are empty
GT:  SELECT s.Nationality FROM conductor AS s WHERE s.Nationality NOT IN (SELECT Nationality FROM conductor AS s1 WHERE s1.Conductor_ID != 39)
Pred:  SELECT Nationality FROM conductor WHERE Conductor_ID = 39;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT s.Show_ID FROM show s INNER JOIN performance p ON s.Performance_ID = p.Performance_ID INNER JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID INNER JOIN conductor c ON o.Conductor_ID = c.Conductor_ID WHERE c.Conductor_ID < 8 LIMIT 10 OFFSET 9;
Gold SQL:  SELECT Show_ID FROM conductor JOIN show JOIN orchestra JOIN performance ON orchestra.Conductor_ID = conductor.Conductor_ID AND performance.Orchestra_ID = orchestra.Orchestra_ID AND show.Performance_ID = performance.Performance_ID WHERE  orchestra.Conductor_ID < 8 LIMIT 9
Question:  Which show IDs are associated with conductors whose IDs are less than 8, starting from the 10th result?
@@@@@@@@@@@@@@@@@@@@@@
InJO
gold query SELECT Orchestra_ID FROM performance JOIN show ON show.Performance_ID = performance.Performance_ID WHERE Performance_ID NOT IN (SELECT Performance_ID FROM performance LIMIT 10) LIMIT 3 has error on database file test-suite-sql-eval-master/database/orchestra/orchestra.sqlite
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT Date, Major_Record_Format FROM performance JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID
SELECT o.Orchestra_ID, o.Orchestra, p.Date, o.Major_Record_Format FROM performance p JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID ORDER BY o.Orchestra_ID, p.Date;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT o.Orchestra_ID, o.Orchestra, p.Date, o.Major_Record_Format FROM performance p JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID ORDER BY o.Orchestra_ID, p.Date;
Gold SQL:  SELECT Date, Major_Record_Format FROM performance JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID
Question:  What are the dates and major record formats of the performances for each orchestra?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Addresses.address_id FROM Addresses JOIN Addresses AS c ON Addresses.address_id = c.address_id WHERE  c.address_id = 90
Pred:  SELECT address_id FROM Addresses WHERE address_id = 90;
#############################
#############################
Both are empty
GT:  SELECT transcript_id FROM Transcripts WHERE  transcript_id > 33
Pred:  SELECT transcript_id FROM Transcripts WHERE transcript_id > 33;
#############################
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT other_details FROM Sections WHERE course_id BETWEEN 1 AND 10
SELECT s.section_id, s.section_name, s.other_details FROM Sections s JOIN Courses c ON s.course_id = c.course_id WHERE c.course_id BETWEEN 1 AND 10;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT s.section_id, s.section_name, s.other_details FROM Sections s JOIN Courses c ON s.course_id = c.course_id WHERE c.course_id BETWEEN 1 AND 10;
Gold SQL:  SELECT other_details FROM Sections WHERE course_id BETWEEN 1 AND 10
Question:  What are the other details of the sections with course ids between 1 and 10?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT(address_id), other_address_details FROM Addresses GROUP BY other_address_details HAVING COUNT(address_id) > 34
Pred:  SELECT other_address_details, COUNT(*) AS address_count FROM Addresses GROUP BY other_address_details HAVING COUNT(*) > 34;
#############################
#############################
Both are empty
GT:  SELECT student_course_id FROM Student_Enrolment_Courses JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id WHERE  student_id > 75
Pred:  SELECT sec.student_course_id FROM Student_Enrolment_Courses sec JOIN Student_Enrolment se ON sec.student_enrolment_id = se.student_enrolment_id WHERE se.student_id > 75;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT * FROM `Courses` WHERE `course_id` = 68;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT 1 FROM Courses WHERE course_id = 68 LIMIT 1;
Pred:  SELECT * FROM `Courses` WHERE `course_id` = 68;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  Not Found
Gold SQL:  SELECT SUM(transcript_id) FROM Transcripts WHERE  transcript_id > 27 LIMIT 4
Question:  What are the sum of next four transcript ids after 27?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT last_name FROM Students JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id WHERE  student_enrolment_id = 73
Pred:  SELECT s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id WHERE se.student_enrolment_id = 73;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT CONCAT(d.department_description, d.other_details)) AS unique_other_details_count FROM Departments d WHERE d.department_id <> 53;
Error col: concat
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT COUNT(DISTINCT CONCAT(d.department_description, d.other_details)) AS unique_other_details_count FROM Departments d WHERE d.department_id <> 53;
Gold SQL:  SELECT COUNT(DISTINCT g.other_details), g.department_description, g.other_details FROM Departments AS g WHERE  g.department_id != 53
Question:  What is the count of unique other details, along with department descriptions and other details, of all departments except the one with department id 53?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT se.student_enrolment_id, s.ssn FROM Student_Enrolment se JOIN Students s ON se.student_id = s.student_id ORDER BY se.student_enrolment_id DESC;
Gold SQL:  SELECT Student_Enrolment.student_enrolment_id, ssn FROM Students JOIN Student_Enrolment_Courses JOIN Student_Enrolment ON Student_Enrolment.student_id = Students.student_id AND Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id ORDER BY Student_Enrolment.student_enrolment_id DESC
Question:  What are the student enrolment ids and social security numbers of all students ordered by their student enrolment ids in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT h2.other_address_details, h1.other_address_details FROM Addresses AS h1 JOIN Addresses AS h2 ON h2.address_id = h1.address_id WHERE h2.address_id != 45 GROUP BY h1.other_address_details ORDER BY h1.other_address_details ASC
Question:  What are the distinct pairs of other address details for addresses with the same address id, excluding address id 45, sorted in ascending order by the other address details?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT other_details FROM ( SELECT other_details FROM Courses WHERE course_id <= 90 ORDER BY course_id DESC LIMIT 16 ) AS LimitedCourses LIMIT 8 OFFSET 8; 
Gold SQL:  SELECT other_details FROM Student_Enrolment_Courses JOIN Courses ON Courses.course_id = Student_Enrolment_Courses.course_id WHERE  Student_Enrolment_Courses.course_id <= 90 ORDER BY other_details DESC LIMIT 8
Question:  What are the 9th to 16th other details of courses with a course id less than or equal to 90, listed in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DISTINCT p.hand AS hand_preference, p.player_id, p.first_name FROM players p JOIN ( SELECT DISTINCT hand FROM players WHERE player_id < 14 ) subquery ON p.hand = subquery.hand WHERE p.player_id != 68 ORDER BY p.player_id LIMIT 5 OFFSET 5;
'('
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DISTINCT p.hand AS hand_preference, p.player_id, p.first_name FROM players p JOIN ( SELECT DISTINCT hand FROM players WHERE player_id < 14 ) subquery ON p.hand = subquery.hand WHERE p.player_id != 68 ORDER BY p.player_id LIMIT 5 OFFSET 5;
Gold SQL:  SELECT COUNT(DISTINCT hand), player_id, first_name FROM players WHERE player_id != 68 AND hand = (SELECT hand FROM players WHERE player_id < 14 LIMIT 1) LIMIT 5
Question:  What are the distinct hand preferences, player ids and first names of the next 5 players (excluding the first 5) who have the same dominant hand as the player with id less than 14 and the player id is not equal to 68?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT birth_date, COUNT(player_id) FROM players WHERE first_name NOT IN (SELECT first_name FROM players WHERE player_id >= 94) GROUP BY birth_date
Question:  What is the birth date and number of players for players with first names that do not appear for players with id greater than or equal to 94?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT p.player_id, p.first_name, p.last_name, SUM(r.tours) AS sum_tours FROM rankings r JOIN players p ON r.player_id = p.player_id WHERE r.ranking BETWEEN 1 AND 10 GROUP BY r.player_id, p.first_name, p.last_name ORDER BY sum_tours DESC;
Gold SQL:  SELECT tours FROM rankings WHERE ranking BETWEEN 1 AND 10 ORDER BY tours DESC
Question:  What are the number of tours for players ranked between 1 and 10, listed in descending order of tours?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT SUM(player_id), MIN(player_id), first_name FROM players WHERE  player_id != 3 GROUP BY first_name HAVING AVG(player_id) < 50
Pred:  SELECT first_name, SUM(player_id) AS sum_player_id, MIN(player_id) AS min_player_id, AVG(player_id) AS avg_player_id FROM players WHERE player_id != 3 GROUP BY first_name HAVING AVG(player_id) < 50;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT AVG(player_id), COUNT(DISTINCT last_name), country_code FROM players WHERE player_id BETWEEN 1 AND 10 OR player_id > 37 GROUP BY country_code HAVING COUNT(player_id) <= 40 ORDER BY country_code ASC
Question:  What is the average player ID, count of distinct last names, and country code for each country with at most 40 players, where the player ID is between 1 and 10 or greater than 37, sorted by country code in ascending order?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT player_id FROM players ORDER BY player_id ASC LIMIT 7 OFFSET 7;
Gold SQL:  SELECT player_id FROM players WHERE  player_id > 88 LIMIT 7
Question:  What are the 8th to 14th player ids when the list of player ids is sorted in ascending order?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT player_id FROM players WHERE player_id > 74 ORDER BY player_id ASC;
Gold SQL:  SELECT player_id, player_id, player_id FROM players WHERE  player_id > 74 ORDER BY player_id ASC
Question:  What are the player ids of players with id greater than 74, listed in ascending order of their ids, and what are their ids, and what are their ids?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  Not Found
Gold SQL:  SELECT COUNT(player_id), AVG(tours), COUNT(DISTINCT ranking_date) FROM rankings WHERE  tours > 68
Question:  What is the number of players, average number of tours, and total number of distinct ranking dates for players who have played more than 68 tours?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT k.Total_spent, k.Museum_ID FROM visit AS k WHERE  k.Num_of_Ticket > 74
Pred:  SELECT Museum_ID, SUM(Total_spent) AS Total_Amount_Spent FROM visit WHERE Num_of_Ticket > 74 GROUP BY Museum_ID;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT "Age") AS "Distinct_Ages" FROM "visitor";
'"visitor"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Museum_ID", "Num_of_Staff" FROM "museum" WHERE "Museum_ID" != 40 ORDER BY "Num_of_Staff" DESC LIMIT 3;
'"museum"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT MAX("Level_of_membership") AS "Highest_Level_of_Membership" FROM "visitor" WHERE "ID" != 80;
'"visitor"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT Museum_ID, Num_of_Staff FROM museum WHERE Num_of_Staff BETWEEN 1 AND 10 OR Museum_ID <= (SELECT MAX(Museum_ID) FROM museum WHERE Museum_ID BETWEEN 1 AND 10 LIMIT 8)
Question:  What are the museum IDs and the number of staff for museums with a staff size between 1 and 10, or those with an ID less than or equal to the 8th smallest ID in museums with IDs between 1 and 10?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT "Age") AS "Different_Ages" FROM "visitor" WHERE "Level_of_membership" BETWEEN 1 AND 10 OR "Level_of_membership" >= 96;
'"visitor"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Num_of_Staff != 83 OR T2.Num_of_Ticket > (SELECT AVG(Num_of_Ticket) FROM visit) ORDER BY T2.Num_of_Ticket DESC LIMIT 1;
Question:  What is the name of the museum with the most tickets sold by a visitor, considering only museums with a staff count different from 83 or with more tickets sold than the average?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT x.concert_ID, x.concert_Name FROM concert AS x WHERE  x.concert_ID > 80
Pred:  SELECT concert_ID, concert_Name FROM concert WHERE concert_ID > 80;
#############################
#############################
Both are empty
GT:  SELECT MAX(u.concert_ID), u.Singer_ID FROM singer_in_concert AS u WHERE u.concert_ID > 46 GROUP BY u.Singer_ID
Pred:  SELECT s.Name, s.Singer_ID, MAX(c.concert_ID) AS MaxConcertID FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.concert_ID > 46 GROUP BY s.Singer_ID, s.Name;
#############################
#############################
Both are empty
GT:  SELECT Age, Song_release_year FROM singer_in_concert JOIN concert JOIN singer ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE  concert.concert_ID > 99 GROUP BY Song_release_year HAVING MAX(Age) > 51 ORDER BY Age DESC
Pred:  SELECT s.Song_release_year, MAX(s.Age) AS Oldest_Age FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.concert_ID > 99 GROUP BY s.Song_release_year HAVING MAX(s.Age) > 51 ORDER BY Oldest_Age DESC;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT Age, COUNT(*) AS Singer_Count FROM singer WHERE Singer_ID <= 95 AND Age != 99 GROUP BY Age ORDER BY Age LIMIT 9 OFFSET 9;
Gold SQL:  SELECT COUNT(Singer_ID), Age FROM singer WHERE Singer_ID <= 95 AND Singer_ID NOT IN (SELECT Singer_ID FROM singer AS y WHERE y.Age != 99) LIMIT 9
Question:  What are the counts of singers and their ages for singers with id 95 or less, excluding those whose age is not 99, listed from the 10th to the 18th result?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  WITH SkippedCountries AS ( SELECT DISTINCT Country FROM singer ORDER BY Country OFFSET 7 ROWS ) SELECT Singer_ID FROM singer WHERE Age >= 12 AND Country IN (SELECT Country FROM SkippedCountries) ORDER BY Singer_ID ASC;
Error alias name: skippedcountries
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  WITH SkippedCountries AS ( SELECT DISTINCT Country FROM singer ORDER BY Country OFFSET 7 ROWS ) SELECT Singer_ID FROM singer WHERE Age >= 12 AND Country IN (SELECT Country FROM SkippedCountries) ORDER BY Singer_ID ASC;
Gold SQL:  SELECT f.Singer_ID FROM singer AS f WHERE  f.Age >= 12 AND Country NOT IN (SELECT Country FROM singer AS l LIMIT 7) ORDER BY f.Singer_ID ASC
Question:  Which singer IDs of singers who are at least 12 years old and are not from the first 7 countries of the singers' list, listed in ascending order by singer ID?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT concert.Year, concert.Stadium_ID FROM concert WHERE concert.concert_ID > 60 GROUP BY concert.Stadium_ID
Pred:  SELECT c.Stadium_ID, c.Year FROM concert c WHERE c.concert_ID > 60 GROUP BY c.Stadium_ID, c.Year ORDER BY c.Stadium_ID;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT COUNT(DISTINCT "Lowest") AS "Distinct_Lowest_Temperatures" FROM "stadium";
'"stadium"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT concert_Name FROM singer_in_concert JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID = 29 ORDER BY concert_Name DESC;
Pred:  SELECT concert_Name FROM concert WHERE concert_ID = 29;
#############################
#############################
Both are empty
GT:  SELECT Singer_ID FROM singer WHERE  Age >= 35 AND Singer_ID IN (SELECT Singer_ID FROM singer AS v WHERE  v.Singer_ID >= 26)
Pred:  SELECT Singer_ID FROM singer WHERE Age >= 35 AND Singer_ID >= 26;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Singer_ID", "Age" FROM "singer" WHERE "Singer_ID" > 51;
'"singer"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT Age, Singer_ID FROM singer WHERE  Singer_ID > 51
Pred:  SELECT "Singer_ID", "Age" FROM "singer" WHERE "Singer_ID" > 51;
#############################
#############################
Both are empty
GT:  SELECT Money_Rank, COUNT(Earnings) FROM poker_player WHERE Best_Finish BETWEEN 1 AND 10 OR People_ID < 13 GROUP BY Money_Rank HAVING COUNT(Earnings) > 24;
Pred:  SELECT Money_Rank, COUNT(Earnings) AS Earnings_Count FROM poker_player WHERE (Best_Finish BETWEEN 1 AND 10) OR People_ID < 13 GROUP BY Money_Rank HAVING COUNT(Earnings) > 24;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT MAX(Earnings), COUNT(DISTINCT Poker_Player_ID) FROM poker_player WHERE People_ID > 8 OR Money_Rank IN (SELECT Money_Rank FROM poker_player WHERE Money_Rank BETWEEN 1 AND 10 LIMIT 9)
Question:  What is the maximum earnings and the number of unique poker players with a people id greater than 8 or a money rank among the top 9 of the top 10 money ranks?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT p.Nationality, pl.Name, pp.Best_Finish FROM poker_player pp JOIN people pl ON pp.People_ID = pl.People_ID ORDER BY pl.Nationality DESC LIMIT 7 OFFSET 7;
'p'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT p.Nationality, pl.Name, pp.Best_Finish FROM poker_player pp JOIN people pl ON pp.People_ID = pl.People_ID ORDER BY pl.Nationality DESC LIMIT 7 OFFSET 7;
Gold SQL:  SELECT Best_Finish, Name, Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Nationality DESC LIMIT 7
Question:  What are the best finishes, names, and nationalities of the 8th to 14th poker players when ordered by nationality in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "People_ID" FROM "people" WHERE "Height" >= 69 ORDER BY "Height" DESC;
'"people"'
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT "People_ID" FROM "people" WHERE "Height" >= 69 ORDER BY "Height" DESC;
Gold SQL:  SELECT People_ID FROM people WHERE Height BETWEEN 1 AND 10 AND  Height >= 69 ORDER BY People_ID DESC
Question:  What are the IDs of the people, ordered from highest to lowest, with a height between 1 and 10 and at least 69 inches?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT p.People_ID, COUNT(pp.Poker_Player_ID) AS Poker_Player_Count, pp.Money_Rank FROM people p LEFT JOIN poker_player pp ON p.People_ID = pp.People_ID WHERE p.People_ID BETWEEN 1 AND 10 GROUP BY p.People_ID ORDER BY p.People_ID ASC LIMIT 1 OFFSET 1;
Gold SQL:  SELECT COUNT(Poker_Player_ID), Money_Rank FROM poker_player WHERE People_ID BETWEEN 1 AND 10 LIMIT 2
Question:  What is the count of poker player IDs and the money rank of the second and third people with people IDs between 1 and 10?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT MAX(Weight) AS HeaviestCarWeight FROM cars_data WHERE Weight = 91;
Gold SQL:  SELECT h.Weight FROM cars_data AS h WHERE h.Weight = 91 AND Weight = (SELECT MAX(Weight) FROM cars_data AS b)
Question:  What is the weight of the heaviest car that weighs 91 pounds?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT ContId, ContId FROM continents WHERE  ContId < 7 AND ContId NOT IN (SELECT ContId FROM continents AS b WHERE  b.ContId != 98 LIMIT 8)
Question:  What are the continent ids less than 7 that are not in the first 8 continent ids excluding the id 98 in the continents table?
@@@@@@@@@@@@@@@@@@@@@@
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT model_list.Model FROM car_names INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id AND car_names.MakeId = car_makers.Id WHERE model_list.ModelId > 4 ORDER BY model_list.Model ASC
SELECT ModelId, Model FROM model_list WHERE ModelId > 4 ORDER BY ModelId ASC;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT ModelId, Model FROM model_list WHERE ModelId > 4 ORDER BY ModelId ASC;
Gold SQL:  SELECT model_list.Model FROM car_names INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id AND car_names.MakeId = car_makers.Id WHERE model_list.ModelId > 4 ORDER BY model_list.Model ASC
Question:  What models, with model id greater than 4, are listed in ascending order?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT Id, Maker FROM car_makers WHERE Maker = 47
Pred:  SELECT Id, Maker FROM car_makers WHERE Id = 47;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DISTINCT c.ContId, c.Continent FROM continents c LEFT JOIN countries co ON c.ContId = co.Continent WHERE c.ContId >= 4 OR co.Continent IS NOT NULL ORDER BY c.ContId;
Gold SQL:  SELECT f.ContId, f.Continent FROM continents AS f WHERE  f.ContId >= 4 OR f.ContId IN (SELECT Continent FROM countries) GROUP BY f.ContId ORDER BY f.ContId ASC
Question:  What are the continent ids and their corresponding names for continents with id 4 or greater, or those that have countries listed, ordered by id?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT MakeId, Model FROM car_names ORDER BY MakeId LIMIT 4 OFFSET 3
Gold SQL:  SELECT MakeId, Model FROM car_names LIMIT 4
Question:  What are the make id and model of the next 4 cars after the first 3 in the car names list?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT COUNT(DISTINCT Cylinders) as UniqueCylinderCounts FROM cars_data WHERE Accelerate <> 56;
Gold SQL:  SELECT COUNT(DISTINCT Cylinders) FROM cars_data WHERE Accelerate != 56 GROUP BY Id
Question:  How many different numbers of cylinders are there in the data for cars that accelerate at a rate other than 56, grouped by car id?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT c.Maker FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId JOIN model_list ml ON cn.Model = ml.Model JOIN car_makers c ON ml.Maker = c.Id WHERE cd.Id >= 99 ORDER BY c.Id DESC;
Gold SQL:  SELECT MakeId FROM car_names WHERE  MakeId >= 99 ORDER BY MakeId DESC
Question:  What are the manufacturer ids of cars with ids 99 or higher, listed in descending order?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT j.CountryId, j.CountryName FROM countries AS j WHERE  j.CountryId > 68 ORDER BY j.CountryName DESC
Pred:  SELECT CountryId, CountryName FROM countries WHERE CountryId > 68 ORDER BY CountryName DESC;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT CountryId FROM countries WHERE CountryId BETWEEN 1 AND 10 ORDER BY CountryId LIMIT 3 OFFSET 3;
Gold SQL:  SELECT CountryId FROM countries WHERE CountryId BETWEEN 1 AND 10 ORDER BY CountryId DESC LIMIT 3
Question:  What are the CountryIds of the 4th to 6th countries with CountryId between 1 and 10?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT MAX(h.Id), h.Id, h.FullName, h.Maker FROM car_makers AS h WHERE FullName IN (SELECT FullName FROM car_makers WHERE  Id > 32) GROUP BY h.Maker, h.Id, h.FullName HAVING MAX(h.Id) > 31
Question:  For car makers with full names found in the list of makers with Id greater than 32, what is the maximum Id, Id, full name, and maker, grouped by maker, Id, and full name, where the maximum Id is greater than 31?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT s.id, s.name, COALESCE(SUM(d.killed), 0) AS total_killed FROM ship s LEFT JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name HAVING total_killed < 46 ORDER BY s.id DESC;
Error col: coalesce
^^^^^^^^^^^^^^^^^^^^^^^
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT T3.caused_by_ship_id FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id INNER JOIN death AS T3 ON T3.caused_by_ship_id = T1.id WHERE T3.killed < 46 ORDER BY T3.caused_by_ship_id DESC;
SELECT s.id, s.name, COALESCE(SUM(d.killed), 0) AS total_killed FROM ship s LEFT JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name HAVING total_killed < 46 ORDER BY s.id DESC;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT s.id, s.name, COALESCE(SUM(d.killed), 0) AS total_killed FROM ship s LEFT JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name HAVING total_killed < 46 ORDER BY s.id DESC;
Gold SQL:  SELECT T3.caused_by_ship_id FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id INNER JOIN death AS T3 ON T3.caused_by_ship_id = T1.id WHERE T3.killed < 46 ORDER BY T3.caused_by_ship_id DESC;
Question:  Which ships caused the fewest deaths, with less than 46 people killed, sorted by the ship ID in descending order?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT lost_in_battle FROM ship WHERE  id > 58
Pred:  SELECT b.name AS Battle_Name, s.name AS Ship_Name, s.ship_type AS Ship_Type, s.location AS Location, s.disposition_of_ship AS Disposition, d.killed AS Killed, d.injured AS Injured FROM ship s LEFT JOIN battle b ON s.lost_in_battle = b.id LEFT JOIN death d ON s.id = d.caused_by_ship_id WHERE s.id > 58;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT `location` FROM `ship` WHERE `id` > 2 AND `lost_in_battle` IS NOT NULL ORDER BY `id` DESC LIMIT 1 OFFSET 1;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT `location` FROM `ship` WHERE `id` > 2 AND `lost_in_battle` IS NOT NULL ORDER BY `id` DESC LIMIT 1 OFFSET 1;
Gold SQL:  SELECT ship.id, location FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.id > 2 ORDER BY ship.id DESC LIMIT 1
Question:  What is the location of the second-to-last ship with an id greater than 2 that was lost in a battle?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT s.name AS ShipName, s.id AS ShipID, SUM(d.killed) AS TotalKilled, SUM(d.injured) AS TotalInjured, b.name AS BattleName FROM ship s JOIN death d ON s.id = d.caused_by_ship_id JOIN battle b ON s.lost_in_battle = b.id GROUP BY s.id HAVING SUM(d.killed + d.injured) >= 24
Gold SQL:  SELECT killed FROM death WHERE EXISTS (SELECT * FROM ship WHERE  lost_in_battle >= 24 AND death.caused_by_ship_id = ship.id)
Question:  What are the death tolls caused by ships that lost at least 24 in battle?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT MIN(z.id), z.injured, z.caused_by_ship_id FROM death AS z WHERE  z.caused_by_ship_id >= 30 GROUP BY z.caused_by_ship_id
Pred:  SELECT MIN(death.id) AS min_death_id, SUM(death.injured) AS total_injured, death.caused_by_ship_id AS ship_id FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.id >= 30 GROUP BY death.caused_by_ship_id;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  Not Found
Gold SQL:  SELECT q.location FROM ship AS q WHERE  q.lost_in_battle > 43 LIMIT 2
Question:  What are the locations of the third and fourth ships that lost more than 43 in battle?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T3.id, T1.lost_in_battle FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id INNER JOIN death AS T3 ON T3.caused_by_ship_id = T1.id WHERE T3.id >= 50
Pred:  SELECT d.id AS death_id, s.lost_in_battle AS battle_id FROM death d JOIN ship s ON d.caused_by_ship_id = s.id WHERE d.id >= 50;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  WITH IncidentData AS ( SELECT s.tonnage, COUNT(d.id) AS incidents, SUM(d.injured) AS total_injuries FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.tonnage HAVING COUNT(d.id) = 4 AND SUM(d.injured) = 0 ) SELECT tonnage FROM IncidentData LIMIT 8, 8;
Error alias name: incidentdata
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  WITH IncidentData AS ( SELECT s.tonnage, COUNT(d.id) AS incidents, SUM(d.injured) AS total_injuries FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.tonnage HAVING COUNT(d.id) = 4 AND SUM(d.injured) = 0 ) SELECT tonnage FROM IncidentData LIMIT 8, 8;
Gold SQL:  SELECT T2.tonnage, SUM(T1.caused_by_ship_id) FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id = T2.id WHERE T1.injured = 0 GROUP BY T2.tonnage HAVING SUM(T1.caused_by_ship_id) = 4 LIMIT 8
Question:  What are the ship tonnages that caused exactly 4 incidents with zero injuries, listing the 9th to 16th results?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT u.lost_in_battle, u.id, u.disposition_of_ship FROM ship AS u WHERE  u.id < 36 GROUP BY u.disposition_of_ship LIMIT 3
Question:  What are the lost in battle, id, and disposition of ship for the third to fifth groups of ships with id less than 36, grouped by disposition of ship?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT  g.Title FROM song AS g WHERE g.Singer_ID > 8;
Pred:  SELECT  s.Title FROM song s JOIN singer sg ON s.Singer_ID = sg.Singer_ID WHERE sg.Singer_ID > 8;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT s.Singer_ID, s.Name, s.Birth_Year, g.Song_ID FROM singer s JOIN ( SELECT Song_ID, Singer_ID FROM song WHERE Singer_ID BETWEEN 1 AND 10 ) g ON s.Singer_ID = g.Singer_ID WHERE s.Singer_ID BETWEEN 1 AND 10 GROUP BY s.Singer_ID LIMIT 5;
'('
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT s.Singer_ID, s.Name, s.Birth_Year, g.Song_ID FROM singer s JOIN ( SELECT Song_ID, Singer_ID FROM song WHERE Singer_ID BETWEEN 1 AND 10 ) g ON s.Singer_ID = g.Singer_ID WHERE s.Singer_ID BETWEEN 1 AND 10 GROUP BY s.Singer_ID LIMIT 5;
Gold SQL:  SELECT T1.Birth_Year, T2.Song_ID, T2.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID BETWEEN 1 AND 10 GROUP BY T1.Birth_Year, T2.Song_ID, T2.Singer_ID LIMIT 5;
Question:  What is the birth year of singers with id between 1 and 10 along with their song id and singer id, grouped and limited to 5 results?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT AVG(n.Net_Worth_Millions) AS Net_Worth_Millions, n.Citizenship FROM singer AS n WHERE n.Singer_ID BETWEEN 1 AND 10 OR n.Birth_Year NOT IN (SELECT Birth_Year FROM singer AS g LIMIT 7) GROUP BY n.Citizenship;
Question:  What is the average net worth of singers, grouped by citizenship, for singers with an id between 1 and 10 or a birth year not among the first 7 birth years of all singers?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  WITH AverageSales AS ( SELECT AVG(s.Sales) as AvgSales FROM song s JOIN singer sg ON s.Singer_ID = sg.Singer_ID WHERE sg.Singer_ID BETWEEN 1 AND 10 ) SELECT s.Title, s.Highest_Position FROM song s JOIN AverageSales ON s.Sales <= AverageSales.AvgSales WHERE s.Singer_ID = 34 ORDER BY s.Song_ID LIMIT -1 OFFSET 1;
Error alias name: averagesales
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT Highest_Position, Title FROM song WHERE Singer_ID = 34 AND Sales <= (SELECT AVG(Sales) FROM song WHERE Singer_ID BETWEEN 1 AND 10) LIMIT 2
Pred:  WITH AverageSales AS ( SELECT AVG(s.Sales) as AvgSales FROM song s JOIN singer sg ON s.Singer_ID = sg.Singer_ID WHERE sg.Singer_ID BETWEEN 1 AND 10 ) SELECT s.Title, s.Highest_Position FROM song s JOIN AverageSales ON s.Sales <= AverageSales.AvgSales WHERE s.Singer_ID = 34 ORDER BY s.Song_ID LIMIT -1 OFFSET 1;
#############################
#############################
Both are empty
GT:  SELECT COUNT(Singer_ID), Citizenship FROM singer WHERE Birth_Year BETWEEN 1 AND 10 OR Singer_ID = 44 GROUP BY Citizenship ORDER BY Citizenship ASC LIMIT 8;
Pred:  SELECT Citizenship, COUNT(*) AS Num_Singers FROM singer WHERE (Birth_Year BETWEEN 1 AND 10) OR (Singer_ID = 44) GROUP BY Citizenship ORDER BY Citizenship ASC LIMIT 8;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT MAX("Net_Worth_Millions") AS "Highest_Net_Worth" FROM "singer";
'"singer"'
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  WITH OrderedSongs AS ( SELECT Song_ID, ROW_NUMBER() OVER (ORDER BY Song_ID) AS RowNum FROM song ) SELECT AVG(Song_ID) AS AverageSongID, SUM(Song_ID) AS TotalSongID FROM OrderedSongs WHERE RowNum BETWEEN 5 AND 8;
Error alias name: orderedsongs
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  WITH OrderedSongs AS ( SELECT Song_ID, ROW_NUMBER() OVER (ORDER BY Song_ID) AS RowNum FROM song ) SELECT AVG(Song_ID) AS AverageSongID, SUM(Song_ID) AS TotalSongID FROM OrderedSongs WHERE RowNum BETWEEN 5 AND 8;
Gold SQL:  SELECT AVG(Song_ID), COUNT(DISTINCT Song_ID), COUNT(DISTINCT Song_ID) FROM song LIMIT 4
Question:  What are the average and total distinct song IDs in the 5th to 8th rows of the song table?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT COUNT(DISTINCT song.Singer_ID), song.Highest_Position, song.Singer_ID FROM song WHERE Title <= (SELECT MIN(Title) FROM song AS l WHERE  l.Sales > 81 LIMIT 1) GROUP BY song.Singer_ID ORDER BY song.Highest_Position DESC
Question:  What is the number of distinct singers, their highest song position, and singer id for songs with titles that are less than or equal to the title of the song with the lowest title among songs that have sales greater than 81, grouped by singer id and ordered by highest position in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT s1.Name FROM singer s1 WHERE s1.Birth_Year > 1960 OR s1.Net_Worth_Millions = ( SELECT SUM(s2.Net_Worth_Millions) FROM ( SELECT * FROM singer WHERE Net_Worth_Millions BETWEEN 1 AND 10 ORDER BY Singer_ID LIMIT -1 OFFSET 9 ) s2 );
Error col: select
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT Song_ID, Title FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE  Sales = 4 LIMIT 6
Question:  What are the titles of the songs by singers with 4 sales, starting from the 7th song?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  WITH RankedSongs AS ( SELECT Song_ID, Title, Sales, ROW_NUMBER() OVER (ORDER BY Sales ASC) AS SalesRank FROM song ) SELECT Sales FROM RankedSongs WHERE SalesRank IN (2, 3);
Error alias name: rankedsongs
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  WITH RankedSongs AS ( SELECT Song_ID, Title, Sales, ROW_NUMBER() OVER (ORDER BY Sales ASC) AS SalesRank FROM song ) SELECT Sales FROM RankedSongs WHERE SalesRank IN (2, 3);
Gold SQL:  SELECT Sales FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID ORDER BY Sales ASC LIMIT 2
Question:  What are the sales of the second and third lowest-selling songs?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT "Song_ID" FROM "song" WHERE "Sales" BETWEEN 1 AND 10 AND "Highest_Position" <= 61 ORDER BY "Song_ID" DESC LIMIT 2 OFFSET 2;
'"song"'
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT Song_ID FROM song WHERE Sales BETWEEN 1 AND 10 AND Highest_Position <= 61 ORDER BY Song_ID DESC LIMIT 2
Pred:  SELECT "Song_ID" FROM "song" WHERE "Sales" BETWEEN 1 AND 10 AND "Highest_Position" <= 61 ORDER BY "Song_ID" DESC LIMIT 2 OFFSET 2;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT COUNT(DISTINCT Major) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID = 92);
Gold SQL:  SELECT COUNT(DISTINCT T3.Major) FROM Has_Pet AS T1 INNER JOIN Student AS T3 ON T1.StuID = T3.StuID INNER JOIN Pets AS T2 ON T2.PetID = T1.PetID WHERE T2.PetID != 92
Question:  How many different majors do students have, excluding the owner of pet 92?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T3.Age, T3.Sex, T3.Fname FROM Has_Pet AS T1 JOIN Student AS T3 ON T1.StuID = T3.StuID JOIN Pets AS T2 ON T2.PetID = T1.PetID WHERE T1.StuID BETWEEN 1 AND 10 ORDER BY T3.Age ASC;
Pred:  SELECT s.Age, s.Sex, s.Fname FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID WHERE s.StuID BETWEEN 1 AND 10 ORDER BY s.Age ASC;
#############################
#############################
Both are empty
GT:  SELECT  city_code FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID <= 100
Pred:  SELECT  Student.city_code FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.StuID <= 100;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT Advisor, COUNT(Age) FROM Student WHERE Fname NOT IN (SELECT Fname FROM Student AS j WHERE j.StuID = 75) GROUP BY Advisor;
Question:  What is the number of students by advisor, excluding students with the same first name as the student with student ID 75?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT MAX(T3.pet_age), MIN(T1.StuID) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T3.PetID = T1.PetID WHERE T3.pet_age = 76 LIMIT 5
Question:  What is the maximum pet age and the minimum student ID for students with pets aged 76, excluding the first 5 results?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT COUNT( PetID), StuID FROM Has_Pet WHERE StuID < 30 GROUP BY StuID LIMIT 8;
Pred:  SELECT Student.StuID, COUNT( Pets.PetID) AS NumOfPets FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID < 30 GROUP BY Student.StuID ORDER BY Student.StuID ASC LIMIT 8;
#############################
#############################
Both are empty
GT:  SELECT Student.StuID FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetID < 25
Pred:  SELECT  Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetID < 25;
#############################
#############################
Both are empty
GT:  SELECT weight FROM Pets WHERE PetID = 31
Pred:  SELECT weight FROM Pets WHERE PetID = 31;
#############################
#############################
Both are empty
GT:  SELECT  n.PetType FROM Pets AS n WHERE  n.pet_age > 79 AND n.PetID IN (SELECT e.PetID FROM Pets AS e WHERE e.weight BETWEEN 1 AND 10 AND  e.PetID <= 23)
Pred:  SELECT  PetType FROM Pets WHERE pet_age > 79 AND weight BETWEEN 1 AND 10 AND PetID <= 23;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT Abbreviation, COUNT(DISTINCT Airline) AS AirlineCount FROM airlines WHERE uid > 12 GROUP BY Abbreviation ORDER BY uid LIMIT 3;
Gold SQL:  SELECT COUNT(DISTINCT n.Airline), n.Abbreviation FROM airlines AS n WHERE  n.uid < 13 LIMIT 3
Question:  What are the unique airline abbreviations and the count of distinct airlines for the first 3 airlines with airline id greater than 12?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T1.FlightNo, T2.Country FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE  T1.FlightNo >= 77 LIMIT 1
Pred:  SELECT f.FlightNo, a.Country FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE f.FlightNo >= 77 ORDER BY f.FlightNo ASC LIMIT 1 OFFSET 1;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT f.DestAirport, COUNT(DISTINCT f.Airline) AS NumberOfAirlines FROM flights f JOIN airlines a ON f.Airline = a.uid WHERE f.FlightNo = 52 GROUP BY f.DestAirport ORDER BY f.DestAirport ASC;
Gold SQL:  SELECT COUNT(DISTINCT f.Airline), f.DestAirport FROM flights AS f WHERE f.FlightNo = 52 ORDER BY f.DestAirport ASC;
Question:  How many distinct airlines operate flight 52 to each destination airport, listed in ascending order of destination airport?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T1.City AS SourceCity, T1.Country AS SourceCountry, T2.City AS DestCity, T2.Country AS DestCountry FROM airports T1 JOIN flights ON T1.AirportCode = flights.SourceAirport JOIN airports T2 ON flights.DestAirport = T2.AirportCode WHERE flights.FlightNo >= 54
Pred:  SELECT src.City AS SourceCity, src.Country AS SourceCountry, dest.City AS DestinationCity, dest.Country AS DestinationCountry FROM flights f JOIN airports src ON f.SourceAirport = src.AirportCode JOIN airports dest ON f.DestAirport = dest.AirportCode WHERE f.FlightNo >= 54;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT DISTINCT airports.AirportName FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airlines.uid <= 79 ORDER BY airports.AirportName ASC;
Gold SQL:  SELECT SourceAirport FROM flights WHERE Airline <= 79 ORDER BY SourceAirport ASC
Question:  What are the source airports, listed in ascending order, for flights operated by airlines with an id of 79 or less?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T2.Airline, T3.AirportName FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T1.FlightNo < 70 ORDER BY T2.Airline ASC;
Pred:  SELECT a.Airline, ap.AirportName AS DestinationAirportName FROM flights f JOIN airlines a ON f.Airline = a.uid JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE f.FlightNo < 70 ORDER BY a.Airline ASC;
#############################
#############################
Both are empty
GT:  SELECT Abbreviation FROM airlines WHERE uid = 17;
Pred:  SELECT Abbreviation FROM airlines WHERE uid = 17;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT a.Airline, AVG(f.FlightNo) AS AverageFlightNumber FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.FlightNo >= 51 GROUP BY a.Airline ORDER BY a.Airline ASC;
Gold SQL:  SELECT AVG(FlightNo), Airline FROM flights WHERE FlightNo >= 51 GROUP BY Airline ORDER BY Airline ASC
Question:  What is the average flight number for each airline with flights numbered 51 or higher, listed in ascending order by airline?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT o.area_code FROM AREA_CODE_STATE AS o WHERE o.area_code BETWEEN 1 AND 10 AND state NOT IN (SELECT  state FROM VOTES) LIMIT 3
Pred:  SELECT area_code FROM AREA_CODE_STATE WHERE state NOT IN ( SELECT  state FROM VOTES ) AND area_code BETWEEN 1 AND 10 ORDER BY area_code LIMIT 3 OFFSET 3;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT state, contestant_number FROM VOTES WHERE  vote_id < 46 GROUP BY contestant_number HAVING COUNT(contestant_number) = 13 ORDER BY state DESC
Question:  Which contestants received exactly 13 votes from the first 45 votes cast, listed by state in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  Not Found
Gold SQL:  SELECT area_code, AREA_CODE_STATE.state FROM VOTES JOIN AREA_CODE_STATE ON AREA_CODE_STATE.state = VOTES.state WHERE  contestant_number < 16
Question:  What are the area codes and states for votes cast for contestants numbered less than 16?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DISTINCT `state` FROM `AREA_CODE_STATE` WHERE `area_code` > 7 AND `area_code` >= 17;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DATE(v.created) AS vote_date, v.state, COUNT(DISTINCT v.state) AS distinct_states_count FROM VOTES v WHERE v.contestant_number BETWEEN 1 AND 10 GROUP BY DATE(v.created), v.state ORDER BY v.state DESC;
Error col: date
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DATE(v.created) AS vote_date, v.state, COUNT(DISTINCT v.state) AS distinct_states_count FROM VOTES v WHERE v.contestant_number BETWEEN 1 AND 10 GROUP BY DATE(v.created), v.state ORDER BY v.state DESC;
Gold SQL:  SELECT COUNT(DISTINCT V.state), ACS.state, V.created FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number JOIN AREA_CODE_STATE ACS ON ACS.state = V.state WHERE V.contestant_number BETWEEN 1 AND 10 GROUP BY V.created, ACS.state ORDER BY ACS.state DESC
Question:  What is the count of distinct states of votes for contestants numbered between 1 and 10, grouped by date of vote and state, and sorted by state in descending order?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT `contestant_number` FROM `CONTESTANTS` WHERE `contestant_number` > 35 ORDER BY `contestant_number` ASC;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT contestant_number FROM CONTESTANTS WHERE  contestant_number > 35 ORDER BY contestant_number ASC
Pred:  SELECT `contestant_number` FROM `CONTESTANTS` WHERE `contestant_number` > 35 ORDER BY `contestant_number` ASC;
#############################
#############################
Both are empty
GT:  SELECT contestant_name FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_number > 81 LIMIT 4
Pred:  SELECT  c.contestant_name FROM CONTESTANTS c JOIN VOTES v ON c.contestant_number = v.contestant_number WHERE c.contestant_number BETWEEN 82 AND 85;
#############################
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT MIN(contestant_number) AS SmallestContestantNumber, contestant_number FROM `CONTESTANTS` WHERE contestant_number BETWEEN 1 AND 5 GROUP BY contestant_number
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT MIN(contestant_number) AS SmallestContestantNumber, contestant_number FROM `CONTESTANTS` WHERE contestant_number BETWEEN 1 AND 5 GROUP BY contestant_number
Gold SQL:  SELECT MIN(q.contestant_number), q.contestant_number FROM CONTESTANTS AS q WHERE q.contestant_number BETWEEN 1 AND 10 AND  q.contestant_number <= 5
Question:  What are the smallest and equal or larger contestant numbers between 1 and 5 from contestants table?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  Not Found
Gold SQL:  SELECT MAX(area_code), AVG(area_code) FROM AREA_CODE_STATE WHERE area_code BETWEEN 1 AND 10 OR  area_code = 37
Question:  What are the maximum and average area codes for the states with area codes between 1 and 10, and also the state with area code 37?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT `contestant_number` FROM `CONTESTANTS` ORDER BY `contestant_number` ASC LIMIT 1 OFFSET 1;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT `contestant_number` FROM `CONTESTANTS` ORDER BY `contestant_number` ASC LIMIT 1 OFFSET 1;
Gold SQL:  SELECT z.contestant_number FROM CONTESTANTS AS z LIMIT 1
Question:  What is the contestant number of the second contestant in the contestants list?
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  SELECT DISTINCT `state` FROM `AREA_CODE_STATE` WHERE `area_code` <= 67 ORDER BY `state` ASC;
Error alias name: `
^^^^^^^^^^^^^^^^^^^^^^^
#############################
Both are empty
GT:  SELECT c.state FROM AREA_CODE_STATE AS c WHERE c.area_code <= 67 ORDER BY c.state ASC
Pred:  SELECT  `state` FROM `AREA_CODE_STATE` WHERE `area_code` <= 67 ORDER BY `state` ASC;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT DISTINCT acs.area_code, acs.state FROM VOTES v JOIN AREA_CODE_STATE acs ON acs.state = v.state WHERE v.contestant_number < 66 ORDER BY v.created ASC LIMIT 6;
Gold SQL:  SELECT T1.area_code, T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number < 66 GROUP BY T1.state, T1.area_code LIMIT 6;
Question:  What are the area codes and states of the first six states with votes for contestants numbered less than 66?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT T2.GNPOld FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code WHERE T2.Population = 74 ORDER BY T2.GNPOld DESC LIMIT 8
Pred:  SELECT GNPOld FROM country WHERE Population = 74 AND GNPOld IS NOT NULL ORDER BY GNPOld DESC LIMIT 8 OFFSET 8;
#############################
Partial answer True
---------------------
Not equal but Partially Correct:
SELECT GNP FROM country WHERE LifeExpectancy <= 81
SELECT Name, GNP FROM country WHERE LifeExpectancy <= 81;
---------------------
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT Name, GNP FROM country WHERE LifeExpectancy <= 81;
Gold SQL:  SELECT GNP FROM country WHERE LifeExpectancy <= 81
Question:  What is the GNP of countries with a life expectancy of 81 years or less?
@@@@@@@@@@@@@@@@@@@@@@
#############################
Both are empty
GT:  SELECT CountryCode, Name FROM city WHERE  Population = 12 LIMIT 1
Pred:  SELECT c.CountryCode, cn.Name AS CountryName FROM city c JOIN country cn ON c.CountryCode = cn.Code WHERE c.Population = 12 ORDER BY c.Name LIMIT 1 OFFSET 1;
#############################
@@@@@@@@@@@@@@@@@@@@@@
Execution error easy
Predicted SQL:  SELECT COUNT(DISTINCT IndepYear) FROM country WHERE IndepYear IS NOT NULL AND IndepYear < 1954;
Gold SQL:  SELECT COUNT(DISTINCT e.IndepYear) FROM country AS e WHERE  e.IndepYear < 54
Question:  How many different years of independence are there for countries that gained independence before 1954?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error hard
Predicted SQL:  SELECT DISTINCT c.District FROM city c JOIN country co ON c.CountryCode = co.Code WHERE co.SurfaceArea <= 12;
Gold SQL:  SELECT T1.District FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T3.CountryCode = T2.Code WHERE T2.SurfaceArea <= 12
Question:  What are the districts of the cities located in countries with a surface area less than or equal to 12?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error medium
Predicted SQL:  SELECT cl.CountryCode, cl.Language, cl.IsOfficial, cl.Percentage, c.Name AS CountryName FROM countrylanguage AS cl JOIN country AS c ON cl.CountryCode = c.Code WHERE cl.Percentage BETWEEN 10 AND 30 ORDER BY cl.CountryCode, cl.Percentage DESC;
Gold SQL:  SELECT Language, IsOfficial FROM countrylanguage WHERE Percentage BETWEEN 1 AND 10 AND  Percentage < 30
Question:  What are the languages used in countries where the language percentage is between 1 and 10 and less than 30, and are they official languages?
@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  SELECT c.Name, c.Population, c.GNP FROM country c WHERE c.IndepYear != 21 OR c.Code IN ( SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.IsOfficial = 'T' AND cl.Percentage BETWEEN 1 AND 10 )
Gold SQL:  SELECT country.Population, country.GNP FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode JOIN city ON country.Code = city.CountryCode WHERE country.IndepYear != 21 OR countrylanguage.IsOfficial IN (SELECT IsOfficial FROM countrylanguage WHERE Percentage BETWEEN 1 AND 10)
Question:  What is the population and GNP of countries that have gained independence in a year other than 21 or where there is at least one official language spoken by between 1 and 10 percent of the population?'
@@@@@@@@@@@@@@@@@@@@@@
^^^^^^^^^^^^^^^^^^^^^^^
Error in parsing predicted SQL
Predicted SQL:  Not Found
'from' not found
^^^^^^^^^^^^^^^^^^^^^^^
@@@@@@@@@@@@@@@@@@@@@@
Execution error extra
Predicted SQL:  Not Found
Gold SQL:  SELECT city.Name FROM city JOIN city AS c ON city.ID = c.ID WHERE c.Population BETWEEN 1 AND 10 AND city.Name = (SELECT Name FROM city AS v LIMIT 1) GROUP BY city.Name HAVING AVG(c.Population) < 17
Question:  What is the city name where the average population of the city and itself is less than 17, the population is between 1 and 10, and the city name is the same as the one with the smallest id?
@@@@@@@@@@@@@@@@@@@@@@
                     easy                 medium               hard                 extra                all                 
count                33                   85                   56                   77                   251                 
=====================   EXECUTION ACCURACY     =====================
execution            0.818                0.671                0.571                0.481                0.610               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.545                0.294                0.232                0.104                0.255               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.769                0.703                0.905                0.717                0.764               
select(no AGG)       0.769                0.734                0.905                0.761                0.787               
where                0.947                0.852                0.838                0.488                0.762               
where(no OP)         0.947                0.907                0.919                0.659                0.848               
group(no Having)     0.000                0.444                0.765                0.727                0.630               
group                0.000                0.333                0.706                0.636                0.543               
order                1.000                0.520                0.619                0.684                0.606               
and/or               1.000                0.952                0.964                0.726                0.894               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.950                0.683                0.692                0.578                0.689               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.606                0.529                0.679                0.434                0.544               
select(no AGG)       0.606                0.553                0.679                0.461                0.560               
where                0.818                0.639                0.585                0.267                0.518               
where(no OP)         0.818                0.681                0.642                0.360                0.577               
group(no Having)     0.000                0.667                0.684                0.276                0.483               
group                0.000                0.500                0.632                0.241                0.417               
order                1.000                0.684                0.520                0.448                0.541               
and/or               0.970                0.988                1.000                0.946                0.978               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.792                0.524                0.482                0.342                0.483               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.678                0.604                0.776                0.541                0.636               
select(no AGG)       0.678                0.631                0.776                0.574                0.654               
where                0.878                0.730                0.689                0.345                0.617               
where(no OP)         0.878                0.778                0.756                0.466                0.686               
group(no Having)     1.000                0.533                0.722                0.400                0.547               
group                1.000                0.400                0.667                0.350                0.472               
order                1.000                0.591                0.565                0.542                0.571               
and/or               0.985                0.970                0.982                0.822                0.934               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.864                0.593                0.568                0.430                0.568               
