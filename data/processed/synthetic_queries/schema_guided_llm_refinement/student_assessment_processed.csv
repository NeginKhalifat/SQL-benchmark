query
""
SELECT asessment_outcome_code FROM Candidate_Assessments WHERE  candidate_id < 44 LIMIT 4
"SELECT COUNT(DISTINCT u.course_id), u.course_id FROM Student_Course_Attendance AS u GROUP BY u.course_id ORDER BY u.course_id DESC"
SELECT student_details FROM Students WHERE student_id BETWEEN 1 AND 10 AND  student_id != 8 GROUP BY student_details HAVING COUNT(student_id) >= 61 ORDER BY student_details DESC
"SELECT COUNT(k.person_id), COUNT(DISTINCT k.address_id) FROM People_Addresses AS k JOIN People_Addresses AS p ON p.person_address_id = k.person_address_id WHERE p.address_id BETWEEN 1 AND 10 OR COALESCE(k.date_to, '1970-01-01 00:00:00') NOT IN (SELECT COALESCE(date_to, '1970-01-01 00:00:00') FROM People_Addresses AS v WHERE v.address_id = 49) LIMIT 8"
"SELECT candidate_id, candidate_id, assessment_date FROM Candidate_Assessments WHERE  candidate_id <= 68 GROUP BY assessment_date HAVING AVG(candidate_id) = 79 LIMIT 6"
"SELECT COUNT(DISTINCT candidate_details), Candidates.candidate_id FROM Candidate_Assessments JOIN Candidates ON Candidates.candidate_id = Candidate_Assessments.candidate_id WHERE Candidates.candidate_id != 63 AND Candidates.candidate_id <= 4"
"SELECT COUNT(student_id), COUNT(student_id) FROM Students WHERE  student_id != 51 OR student_id IN (SELECT student_id FROM Students AS r WHERE r.student_id BETWEEN 1 AND 10)"
SELECT MAX(j.address_id) FROM Addresses AS j WHERE  j.address_id < 72 LIMIT 8
SELECT MAX(T3.course_id) FROM Student_Course_Attendance AS T1 INNER JOIN Student_Course_Registrations AS T2 ON T1.student_id = T2.student_id INNER JOIN Courses AS T3 ON T2.course_id = T3.course_id WHERE EXISTS (SELECT * FROM Student_Course_Registrations WHERE course_id BETWEEN '1' AND '10' AND T1.student_id = student_id) LIMIT 1
SELECT candidate_id FROM Candidate_Assessments WHERE EXISTS (SELECT * FROM Candidates c WHERE c.candidate_id = Candidate_Assessments.candidate_id AND c.candidate_id > 93)
"SELECT MIN(o.student_id), o.student_details FROM Students AS o WHERE  o.student_id <= 75 LIMIT 1"
"SELECT MIN(T2.student_id), T2.course_id FROM Student_Course_Attendance AS T1 JOIN Student_Course_Registrations AS T2 ON T1.student_id = T2.student_id JOIN Students AS T3 ON T1.student_id = T3.student_id JOIN Courses AS T4 ON T2.course_id = T4.course_id WHERE T3.student_id BETWEEN 1 AND 10 AND T2.course_id <= '93' ORDER BY T2.course_id LIMIT 1"
"SELECT Candidates.candidate_id, qualification FROM Candidate_Assessments JOIN Candidates ON Candidates.candidate_id = Candidate_Assessments.candidate_id WHERE  Candidate_Assessments.candidate_id <= 95 AND candidate_id NOT IN (SELECT candidate_id FROM Candidates WHERE candidate_id BETWEEN 1 AND 10) ORDER BY qualification ASC"
"SELECT middle_name, middle_name, middle_name FROM People WHERE middle_name IN (SELECT middle_name FROM People WHERE  person_id != 62) LIMIT 7"
SELECT address_id FROM People_Addresses WHERE person_address_id <= (SELECT MAX(person_address_id) FROM People_Addresses AS l WHERE  l.person_id > 40 LIMIT 9) ORDER BY address_id ASC
"SELECT candidate_id, COUNT(DISTINCT qualification) FROM Candidate_Assessments WHERE candidate_id > 43 GROUP BY candidate_id LIMIT 8;"
"SELECT COUNT(student_id), COUNT(DISTINCT student_id), COUNT(DISTINCT course_id) FROM Student_Course_Registrations WHERE course_id IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10') OR student_id >= 46 LIMIT 3"
"SELECT candidate_id, candidate_id FROM Candidate_Assessments WHERE  candidate_id = 83"
"SELECT COUNT(DISTINCT C.other_details), CAST(SCR.course_id AS text) AS course_id FROM Students S JOIN Student_Course_Registrations SCR ON S.student_id = SCR.student_id JOIN Courses C ON SCR.course_id = CAST(C.course_id AS number) WHERE SCR.student_id BETWEEN 1 AND 10 AND S.student_details > (SELECT MAX(student_details) FROM Students WHERE student_id <= 61 LIMIT 4) GROUP BY CAST(SCR.course_id AS text)"
"SELECT Students.student_id, student_details FROM Students JOIN Student_Course_Registrations ON Students.student_id = Student_Course_Registrations.student_id JOIN Student_Course_Attendance ON Student_Course_Registrations.student_id = Student_Course_Attendance.student_id AND Student_Course_Registrations.course_id = Student_Course_Attendance.course_id WHERE Student_Course_Attendance.student_id BETWEEN 1 AND 10 OR Student_Course_Attendance.student_id = 12 ORDER BY student_details ASC LIMIT 5"
"SELECT AVG(Student_Course_Registrations.student_id), Student_Course_Registrations.course_id FROM Students JOIN Student_Course_Registrations JOIN Courses ON CAST(Courses.course_id AS REAL) = Student_Course_Registrations.course_id AND Students.student_id = Student_Course_Registrations.student_id WHERE Student_Course_Registrations.student_id > 7 GROUP BY Student_Course_Registrations.course_id HAVING SUM(Student_Course_Registrations.student_id) <= 46 ORDER BY Student_Course_Registrations.course_id DESC"
"SELECT p.person_id, p.cell_mobile_number FROM People p JOIN Candidates c ON p.person_id = c.candidate_id JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id WHERE EXISTS (SELECT * FROM Candidates s WHERE ca.candidate_id = s.candidate_id) GROUP BY p.person_id, p.cell_mobile_number HAVING AVG(p.person_id) = 84 ORDER BY p.person_id DESC"
"SELECT COUNT(person_id), person_address_id, date_to FROM People_Addresses WHERE person_id BETWEEN 1 AND 10 AND person_address_id > (SELECT MIN(person_address_id) FROM People_Addresses) GROUP BY person_address_id, date_to"
"SELECT T1.student_id, T3.student_id FROM Student_Course_Attendance AS T1 JOIN Student_Course_Registrations AS T2 ON T1.student_id = T2.student_id JOIN Students AS T3 ON T2.student_id = T3.student_id JOIN Courses AS T4 ON T2.course_id = T4.course_id WHERE T4.course_id <= '31' LIMIT 3"
