query
SELECT lesson_status_code FROM Lessons WHERE staff_id BETWEEN 1 AND 10 OR  customer_id >= 35 ORDER BY lesson_status_code ASC
"SELECT SUM(c.amount_outstanding), COUNT(DISTINCT c.phone_number), c.customer_address_id FROM Customers AS c WHERE c.amount_outstanding BETWEEN 1 AND 10 GROUP BY c.customer_address_id ORDER BY c.customer_address_id ASC LIMIT 3"
SELECT city FROM Addresses WHERE  address_id = 53 ORDER BY city ASC
"SELECT COUNT(DISTINCT lesson_time), vehicle_id FROM Lessons WHERE staff_id BETWEEN 1 AND 10 AND  lesson_id != 89 GROUP BY vehicle_id LIMIT 7"
"SELECT customer_address_id, amount_outstanding FROM Addresses JOIN Customers JOIN Lessons ON Customers.customer_address_id = Addresses.address_id AND Customers.customer_id = Lessons.customer_id WHERE line_1_number_building > (SELECT MIN(line_1_number_building) FROM Addresses WHERE address_id BETWEEN 1 AND 10 AND  address_id <= 52 LIMIT 9) LIMIT 8"
SELECT vehicle_details FROM Vehicles WHERE vehicle_id BETWEEN 1 AND 10 AND vehicle_id <= (SELECT AVG(vehicle_id) FROM Lessons WHERE vehicle_id >= 71) ORDER BY vehicle_details DESC;
SELECT e.last_name FROM Staff AS e ORDER BY e.last_name ASC LIMIT 6
"SELECT s.last_name, s.date_left_staff FROM Addresses AS a JOIN Customers AS c ON c.customer_address_id = a.address_id JOIN Staff AS s ON s.staff_address_id = a.address_id WHERE c.date_became_customer < (SELECT AVG(date_became_customer) FROM Customers) GROUP BY s.date_left_staff, s.last_name HAVING COUNT(c.amount_outstanding) < 39"
"SELECT SUM(Staff.staff_address_id), Addresses.zip_postcode FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE  Addresses.address_id >= 17 OR Addresses.zip_postcode >= (SELECT Addresses.zip_postcode FROM Addresses WHERE  Addresses.address_id = 29) ORDER BY Addresses.zip_postcode ASC"
SELECT COUNT(DISTINCT Lessons.staff_id) FROM Staff JOIN Lessons ON Lessons.staff_id = Staff.staff_id WHERE customer_id BETWEEN 1 AND 10 AND first_name IN (SELECT first_name FROM Customers WHERE  customer_id != 69 LIMIT 9)
SELECT middle_name FROM Staff JOIN Lessons ON Lessons.staff_id = Staff.staff_id WHERE  lesson_id = 31
SELECT city FROM Addresses JOIN Customers JOIN Staff JOIN Lessons ON Customers.customer_address_id = Addresses.address_id AND Lessons.customer_id = Customers.customer_id AND Lessons.staff_id = Staff.staff_id AND Staff.staff_address_id = Addresses.address_id WHERE Staff.staff_address_id <= 40 LIMIT 1
SELECT Staff.last_name FROM Addresses JOIN Staff ON Addresses.address_id = Staff.staff_address_id JOIN Customers ON Customers.customer_address_id = Addresses.address_id JOIN Customer_Payments ON Customer_Payments.customer_id = Customers.customer_id WHERE amount_payment BETWEEN 1 AND 10 AND Addresses.address_id IN (SELECT address_id FROM Addresses)
"SELECT customer_address_id, amount_outstanding, cell_mobile_phone_number FROM Customers WHERE EXISTS (SELECT * FROM Addresses WHERE address_id BETWEEN 1 AND 10 AND Customers.customer_id = Addresses.address_id) GROUP BY customer_address_id, amount_outstanding, cell_mobile_phone_number HAVING MAX(customer_id) < 75 LIMIT 2"
"SELECT COUNT(staff_address_id), lesson_id, nickname, MIN(middle_name) FROM Staff JOIN Lessons ON Lessons.staff_id = Staff.staff_id WHERE vehicle_id <= 12 GROUP BY lesson_id, nickname HAVING MIN(lesson_id) > 86"
"SELECT middle_name, vehicle_details FROM Staff JOIN Lessons ON Lessons.staff_id = Staff.staff_id JOIN Vehicles ON Vehicles.vehicle_id = Lessons.vehicle_id WHERE Staff.staff_id < 68 GROUP BY vehicle_details HAVING MIN(Lessons.vehicle_id) <= 73 ORDER BY vehicle_details DESC LIMIT 5"
SELECT COUNT(DISTINCT j.amount_payment) FROM Customer_Payments AS j GROUP BY j.customer_id HAVING AVG(j.amount_payment) > 46 LIMIT 8
SELECT COUNT(DISTINCT email_address) FROM Addresses JOIN Customers ON Customers.customer_address_id = Addresses.address_id
"SELECT amount_outstanding, first_name FROM Customers WHERE customer_address_id BETWEEN 1 AND 10 AND first_name IN (SELECT first_name FROM Staff AS k WHERE k.staff_id BETWEEN 1 AND 10 LIMIT 5) LIMIT 5"
"SELECT COUNT(DISTINCT T.first_name), T.staff_id, T.first_name FROM (SELECT Staff.staff_id, Staff.first_name FROM Staff JOIN Staff AS h ON Staff.staff_id = h.staff_id GROUP BY Staff.staff_id, Staff.first_name) AS T ORDER BY T.first_name ASC"
SELECT address_id FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE EXISTS (SELECT * FROM Lessons WHERE staff_id <= 56 AND Staff.staff_id = Lessons.staff_id)
SELECT AVG(s.vehicle_id) FROM Vehicles AS s WHERE s.vehicle_id BETWEEN 1 AND 10
SELECT l.vehicle_details FROM Vehicles AS l WHERE vehicle_id IN (SELECT vehicle_id FROM Lessons AS c LIMIT 7) ORDER BY l.vehicle_details DESC LIMIT 2
"SELECT COUNT(DISTINCT c.phone_number), s.staff_id FROM Addresses a JOIN Customers c ON c.customer_address_id = a.address_id JOIN Staff s ON s.staff_address_id = a.address_id ORDER BY COUNT(DISTINCT c.phone_number) DESC LIMIT 3"
SELECT COUNT(DISTINCT amount_payment) FROM Customer_Payments
SELECT vehicle_details FROM Vehicles WHERE  vehicle_id != 38 LIMIT 9
"SELECT Customer_Payments.customer_id, customer_status_code FROM Customers JOIN Customer_Payments ON Customer_Payments.customer_id = Customers.customer_id WHERE  Customers.customer_id > 35 ORDER BY Customer_Payments.customer_id ASC LIMIT 3"
"SELECT SUM(address_id), COUNT(DISTINCT country) FROM Addresses WHERE address_id <= 90 AND state_province_county NOT IN (SELECT state_province_county FROM Addresses AS g WHERE g.address_id BETWEEN 1 AND 10)"
"SELECT MIN(w.customer_address_id), Customers.customer_id FROM Customers JOIN Customers AS w ON Customers.customer_id = w.customer_id WHERE customer_status_code NOT IN (SELECT customer_status_code FROM Customers AS c WHERE  c.amount_outstanding >= 96)"
"SELECT COUNT(DISTINCT T1.staff_id), T3.email_address FROM Staff AS T1 JOIN Lessons AS T2 ON T1.staff_id = T2.staff_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id WHERE T2.customer_id <= 92 ORDER BY T3.email_address ASC LIMIT 3"
"SELECT AVG(Lessons.vehicle_id), MAX(Customers.customer_id), Staff.middle_name FROM Customers JOIN Customer_Payments JOIN Staff JOIN Lessons ON Customers.customer_id = Lessons.customer_id AND Lessons.staff_id = Staff.staff_id AND Customer_Payments.customer_id = Customers.customer_id GROUP BY Staff.middle_name"
"SELECT SUM(price) AS total_price, customer_status_code FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id GROUP BY customer_status_code HAVING COUNT(Lessons.customer_id) <= 28 ORDER BY customer_status_code ASC"
"SELECT AVG(Lessons.vehicle_id), Customers.amount_outstanding, Lessons.lesson_status_code FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id WHERE Lessons.customer_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Lessons AS i WHERE  i.staff_id = 62 AND Customers.customer_id = i.customer_id) GROUP BY Lessons.lesson_status_code, Customers.amount_outstanding ORDER BY Customers.amount_outstanding DESC"
"SELECT COUNT(staff_id), staff_id FROM Staff WHERE  staff_id >= 19 ORDER BY staff_id DESC"
SELECT s.customer_id FROM Customers AS s WHERE  s.customer_address_id = 12
"SELECT Customer_Payments.customer_id, state_province_county, customer_status_code FROM Addresses JOIN Customers ON Customers.customer_address_id = Addresses.address_id JOIN Customer_Payments ON Customer_Payments.customer_id = Customers.customer_id WHERE customer_address_id >= 45 GROUP BY customer_status_code ORDER BY Customer_Payments.customer_id DESC;"
SELECT middle_name FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE Staff.staff_address_id BETWEEN 1 AND 10
