sql,hardness
"SELECT AVG(T1.length), AVG(T2.length) FROM film AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id WHERE T1.length > 50 GROUP BY T1.film_id ORDER BY T1.length DESC",extra
"SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE T1.first_name = 'John' AND T1.last_name = 'Doe' AND NOT EXISTS (SELECT 1 FROM film_actor AS T2 WHERE T2.actor_id = T1.actor_id AND T2.film_id = 1) ORDER BY T1.first_name DESC",extra
SELECT COUNT(DISTINCT T1.title) FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE T3.return_date != '2006-01-01',hard
SELECT COUNT(DISTINCT T1.first_name) FROM actor AS T1 WHERE T1.actor_id IN (SELECT T2.actor_id FROM film_actor AS T2 WHERE T2.film_id = 1) AND T1.last_name = 'GUINESS' ORDER BY T1.first_name ASC,extra
SELECT T1.first_name FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name != 'John',medium
"SELECT a.first_name, COUNT(*) FROM actor AS a JOIN film_actor AS fa ON a.actor_id = fa.actor_id WHERE a.actor_id NOT IN (SELECT actor_id FROM film_actor WHERE film_id = 1) GROUP BY a.first_name ORDER BY COUNT(*) DESC",extra
"SELECT COUNT(DISTINCT T1.customer_id), COUNT(T2.rental_id) FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.store_id != 1",extra
SELECT COUNT(T1.film_id) FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.store_id = 1 LIMIT 1,hard
"SELECT COUNT(DISTINCT T1.store_id), COUNT(T2.inventory_id) FROM store AS T1 JOIN inventory AS T2 ON T1.store_id = T2.store_id",medium
"SELECT film_id, SUM(length) FROM film WHERE film_id IN ( SELECT film_id FROM inventory WHERE store_id = 1 ) GROUP BY film_id HAVING SUM(length) > 100",extra
"SELECT T1.first_name, COUNT(T2.film_id) FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T1.first_name",medium
"SELECT T1.first_name, T2.customer_id FROM staff AS T1  JOIN rental AS T2  ON T1.staff_id = T2.staff_id  JOIN inventory AS T3  ON T2.inventory_id = T3.inventory_id  WHERE T3.film_id BETWEEN 1 AND 100 AND NOT EXISTS ( SELECT 1 FROM film WHERE film_id = T3.film_id AND rating = 'R' ) ORDER BY T2.rental_date DESC",extra
"SELECT COUNT(film_id), SUM(rental_duration) FROM film WHERE rental_duration < ( SELECT AVG(rental_duration) FROM film )",extra
"SELECT T1.first_name, T2.first_name FROM actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id WHERE T1.actor_id < 10 ORDER BY T1.first_name DESC",hard
"SELECT T1.first_name, T2.first_name FROM staff AS T1 JOIN staff AS T2 ON T1.staff_id < T2.staff_id LIMIT 5",medium
"SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE T1.actor_id NOT IN (SELECT T2.actor_id FROM film_actor AS T2 WHERE T2.film_id = 1) LIMIT 5",extra
"SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE EXISTS (SELECT 1 FROM film_actor AS T2 WHERE T2.actor_id = T1.actor_id LIMIT 10)",extra
SELECT COUNT(film_id) FROM film,easy
SELECT T1.title FROM film AS T1 WHERE EXISTS (SELECT T2.film_id FROM inventory AS T2 WHERE T2.film_id = T1.film_id) ORDER BY T1.length DESC,extra
SELECT * FROM film WHERE film_id = 1 AND release_year BETWEEN 2000 AND 2010 AND EXISTS (SELECT * FROM inventory WHERE film_id = film.film_id),extra
"SELECT T1.first_name, COUNT(T2.film_id) FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T1.first_name",hard
"SELECT COUNT(DISTINCT T1.language_id), T2.name FROM film AS T1 JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.release_year BETWEEN 2000 AND 2010 ORDER BY T2.name DESC LIMIT 10",extra
"SELECT T1.first_name, T2.staff_id FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN payment AS T3 ON T2.rental_id = T3.rental_id WHERE T3.amount < 2 ORDER BY T1.first_name ASC",extra
