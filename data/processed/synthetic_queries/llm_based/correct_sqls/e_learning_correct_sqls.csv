sql,hardness
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T1.author_id < 10 LIMIT 5,extra
"SELECT T1.subject_name, MIN(T3.test_result) FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Student_Tests_Taken AS T3 ON T2.course_id = T3.registration_id WHERE T1.subject_id = 1 GROUP BY T1.subject_name",extra
"SELECT T1.course_name, T2.subject_name FROM Courses AS T1 INNER JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id INNER JOIN Course_Authors_and_Tutors AS T3 ON T1.author_id = T3.author_id WHERE T1.course_id >= 100 ORDER BY T1.course_name ASC",extra
SELECT COUNT(T1.course_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T2.date_of_completion IS NOT NULL AND T1.course_name = 'Mathematics' AND T1.course_id NOT IN (SELECT T3.course_id FROM Courses AS T3 JOIN Student_Course_Enrolment AS T4 ON T3.course_id = T4.course_id WHERE T4.date_of_enrolment < '2020-01-01') ORDER BY T1.course_name ASC,extra
"SELECT MIN(COUNT(Course_Authors_and_Tutors.author_id)), MAX(COUNT(Course_Authors_and_Tutors.author_id)), COUNT(Course_Authors_and_Tutors.author_id) FROM Course_Authors_and_Tutors WHERE Course_Authors_and_Tutors.login_name != 'admin' LIMIT 10",extra
SELECT T1.course_name FROM Courses AS T1 JOIN Course_Authors_and_Tutors AS T2 ON T1.author_id = T2.author_id WHERE T1.course_name = 'Mathematics' OR T2.personal_name = 'John' OR T1.course_id BETWEEN 100 AND 200 OR T1.course_id IN (SELECT course_id FROM Student_Course_Enrolment) LIMIT 10,extra
SELECT COUNT(T1.student_id) FROM Students AS T1 WHERE T1.student_id BETWEEN 1000 AND 2000 AND T1.login_name = 'john_doe' AND NOT EXISTS (SELECT T2.student_id FROM Student_Course_Enrolment AS T2 WHERE T2.student_id = T1.student_id),extra
"SELECT T1.family_name, T1.middle_name FROM Course_Authors_and_Tutors AS T1 WHERE T1.login_name = 'author1' OR T1.password = 'password1' OR T1.author_tutor_ATB BETWEEN 'ATB1' AND 'ATB2'",hard
"SELECT T1.family_name, MIN(T1.middle_name) FROM Course_Authors_and_Tutors AS T1 WHERE T1.author_tutor_ATB = 'author' AND T1.gender_mf = 'm' AND T1.author_id BETWEEN 1 AND 100 GROUP BY T1.family_name",extra
"SELECT COUNT(DISTINCT T1.course_name), T2.subject_name FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id ORDER BY T1.course_name ASC",medium
SELECT * FROM Courses WHERE course_name = 'math' OR course_name = 'science' AND course_id BETWEEN 100 AND 200 ORDER BY course_id ASC LIMIT 10,extra
SELECT T1.course_name FROM Courses AS T1 WHERE EXISTS (SELECT 1 FROM Student_Course_Enrolment AS T2 WHERE T1.course_id = T2.course_id GROUP BY T2.course_id HAVING COUNT(T2.registration_id) = 1),hard
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 INNER JOIN Courses AS T2 ON T1.author_id = T2.author_id INNER JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE EXISTS (SELECT 1 FROM Student_Course_Enrolment AS T4 WHERE T4.course_id = T2.course_id LIMIT 10),extra
"SELECT T1.subject_name, T2.course_name FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Course_Authors_and_Tutors AS T3 ON T2.author_id = T3.author_id LIMIT 5",hard
"SELECT T1.family_name, AVG(T1.author_id) FROM Course_Authors_and_Tutors AS T1 GROUP BY T1.family_name HAVING AVG(T1.author_id) >= 10 ORDER BY T1.family_name ASC LIMIT 10",hard
"SELECT T1.course_name, T4.subject_name, COUNT(T5.registration_id) FROM Courses AS T1 JOIN Course_Authors_and_Tutors AS T2 ON T1.author_id = T2.author_id JOIN Student_Course_Enrolment AS T3 ON T1.course_id = T3.course_id JOIN Subjects AS T4 ON T4.subject_id = T1.subject_id LEFT JOIN Student_Tests_Taken AS T5 ON T3.registration_id = T5.registration_id WHERE T1.course_name != '' ORDER BY COUNT(T5.registration_id) DESC LIMIT 10",extra
"SELECT T1.subject_name, T2.course_name, T3.student_id FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Student_Course_Enrolment AS T3 ON T2.course_id = T3.course_id WHERE T3.date_of_enrolment <= '2020-01-01'",hard
"SELECT COUNT(T3.course_name), SUM(T3.course_name) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Courses AS T3 ON T2.course_id = T3.course_id WHERE (T3.course_name BETWEEN 'A' AND 'Z') OR EXISTS (SELECT T4.student_id FROM Students AS T4 WHERE T4.student_id = T2.student_id) OR T3.course_name = 'Math'",extra
SELECT COUNT(course_id) FROM Courses WHERE author_id < 100,easy
SELECT T1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'Mathematics' AND T1.gender_mf = 'M' AND T1.author_id BETWEEN 1 AND 100 AND EXISTS (SELECT 1 FROM Students AS T3 WHERE T3.family_name = T1.family_name) GROUP BY T1.family_name HAVING COUNT(T2.course_id) > 1 LIMIT 10,extra
SELECT COUNT(course_id) AS num_courses FROM Courses AS T1,easy
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING MIN(T2.date_of_enrolment) > '2020-01-01',medium
"SELECT COUNT(DISTINCT T2.student_id), COUNT(T3.registration_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Student_Tests_Taken AS T3 ON T2.registration_id = T3.registration_id WHERE T2.date_of_enrolment BETWEEN '2020-01-01' AND '2020-12-31'",hard
SELECT COUNT(Course_Authors_and_Tutors.author_id) FROM Course_Authors_and_Tutors WHERE Course_Authors_and_Tutors.author_tutor_ATB = 'Author' ORDER BY Course_Authors_and_Tutors.author_id DESC,medium
"SELECT COUNT(T1.student_id), MAX(T1.student_id) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.date_of_registration <= '2020-01-01'",extra
