sql,hardness
"SELECT Activity.actid, Faculty_Participates_in.actid FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid WHERE  FacID > 32 GROUP BY Faculty_Participates_in.actid HAVING COUNT(FacID) > 78 LIMIT 2",extra
"SELECT COUNT(DISTINCT o.actid), o.actid FROM Participates_in AS o WHERE  o.stuid != 100 LIMIT 5",medium
SELECT Participates_in.actid FROM Activity JOIN Participates_in JOIN Student ON Participates_in.actid = Activity.actid AND Student.StuID = Participates_in.stuid,medium
SELECT Phone FROM Faculty WHERE  FacID < 28 ORDER BY Phone ASC LIMIT 5,hard
SELECT COUNT(DISTINCT v.activity_name) FROM Activity AS v WHERE  v.actid < 55,easy
"SELECT COUNT(DISTINCT activity_name), activity_name FROM Activity WHERE  actid < 6 AND EXISTS (SELECT * FROM Participates_in AS i WHERE Activity.actid = i.actid) GROUP BY activity_name LIMIT 9",extra
"SELECT COUNT(DISTINCT stuid), COUNT(DISTINCT Participates_in.actid), COUNT(DISTINCT Activity.actid), activity_name FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE  Participates_in.actid > 77 GROUP BY activity_name HAVING SUM(Participates_in.actid) = 7",hard
"SELECT COUNT(DISTINCT Rank), COUNT(DISTINCT Faculty_Participates_in.FacID), Room FROM Faculty JOIN Faculty_Participates_in ON Faculty_Participates_in.FacID = Faculty.FacID WHERE Faculty.FacID BETWEEN 1 AND 10 OR FacID != (SELECT SUM(FacID) FROM Faculty WHERE  Phone < 3) LIMIT 5",extra
SELECT activity_name FROM Activity WHERE actid BETWEEN 1 AND 10 AND  actid < 54 ORDER BY activity_name ASC,medium
"SELECT activity_name, activity_name, activity_name, Faculty_Participates_in.actid FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid WHERE Activity.actid BETWEEN 1 AND 10 OR FacID NOT IN (SELECT FacID FROM Faculty AS k WHERE k.Phone BETWEEN 1 AND 10 AND  k.FacID >= 73) GROUP BY Faculty_Participates_in.actid HAVING COUNT(Faculty_Participates_in.actid) = 53",extra
"SELECT MAX(stuid), stuid, activity_name FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE Participates_in.actid BETWEEN 1 AND 10 GROUP BY activity_name HAVING AVG(Participates_in.actid) <= 54 ORDER BY stuid ASC",extra
SELECT actid FROM Activity,easy
"SELECT Major, city_code FROM Activity JOIN Participates_in JOIN Student ON Participates_in.actid = Activity.actid AND Student.StuID = Participates_in.stuid WHERE Activity.actid BETWEEN 1 AND 10 AND  Advisor <= 41 ORDER BY city_code DESC",extra
"SELECT MIN(stuid), LName FROM Activity JOIN Participates_in JOIN Student ON Participates_in.actid = Activity.actid AND Student.StuID = Participates_in.stuid WHERE  Major > 52 ORDER BY LName DESC",extra
"SELECT Age, Sex FROM Activity JOIN Participates_in JOIN Student JOIN Faculty_Participates_in ON Participates_in.actid = Activity.actid AND Activity.actid = Faculty_Participates_in.actid AND Student.StuID = Participates_in.stuid WHERE StuID BETWEEN 1 AND 10 AND  Activity.actid <= 43",extra
SELECT v.Fname FROM Student AS v WHERE  v.Advisor >= 56,easy
"SELECT COUNT(DISTINCT Activity.actid), Participates_in.actid FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE Activity.actid BETWEEN 1 AND 10 AND  Participates_in.actid <= 79 GROUP BY Participates_in.actid HAVING AVG(stuid) >= 84 ORDER BY Participates_in.actid DESC LIMIT 2",extra
SELECT activity_name FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid WHERE FacID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Participates_in WHERE  stuid > 24 AND Activity.actid = actid),extra
SELECT COUNT(DISTINCT stuid) FROM Participates_in WHERE  stuid = 6 AND EXISTS (SELECT * FROM Student WHERE  Major < 6 AND Participates_in.StuID = StuID),extra
"SELECT activity_name, activity_name FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE EXISTS (SELECT * FROM Activity AS e WHERE  e.actid < 13 AND Participates_in.StuID = e.actid LIMIT 1)",extra
"SELECT COUNT(DISTINCT actid), actid FROM Participates_in WHERE  stuid != 49 GROUP BY actid HAVING AVG(stuid) <= 28",medium
"SELECT MIN(n.actid), n.actid FROM Activity AS n WHERE  n.actid != 53",medium
