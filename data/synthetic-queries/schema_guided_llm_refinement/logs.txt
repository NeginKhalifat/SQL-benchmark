Logs: {'ship_mission': [['SELECT Nationality, Code FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE  Tonnage < 87 OR EXISTS (SELECT * FROM ship WHERE  Ship_ID >= 51 AND mission.Mission_ID = Ship_ID) LIMIT 10', 'SELECT Nationality, Code FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE  Tonnage < 87 OR Ship_ID >= 51 LIMIT 10'], ['SELECT MAX(Tonnage), COUNT(DISTINCT Nationality) FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE Speed_knots BETWEEN 1 AND 10 OR Tonnage IN (SELECT Tonnage FROM ship AS e WHERE e.Ship_ID BETWEEN 1 AND 10 LIMIT 6) LIMIT 6', 'SELECT MAX(T1.Tonnage), COUNT(DISTINCT T1.Nationality) FROM ship AS T1 JOIN mission AS T2 ON T2.Ship_ID = T1.Ship_ID WHERE T2.Speed_knots BETWEEN 1 AND 10 OR T1.Tonnage IN (SELECT T3.Tonnage FROM ship AS T3 WHERE T3.Ship_ID BETWEEN 1 AND 10 LIMIT 6) LIMIT 6'], ['SELECT COUNT(mission.Ship_ID), COUNT(DISTINCT Nationality), Tonnage FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE Mission_ID BETWEEN 1 AND 10 ORDER BY Tonnage ASC LIMIT 3', 'SELECT AVG(Tonnage) AS Average_Tonnage, COUNT(mission.Ship_ID), COUNT(DISTINCT Nationality) FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE Mission_ID BETWEEN 1 AND 10'], ['SELECT mission.Ship_ID, Tonnage FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE EXISTS (SELECT * FROM mission WHERE ship.Ship_ID = Ship_ID LIMIT 8)', 'SELECT mission.Ship_ID, Tonnage FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID'], ['SELECT AVG(Mission_ID), SUM(ship.Ship_ID) FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE EXISTS (SELECT * FROM mission AS u WHERE ship.Ship_ID = u.Ship_ID)', 'SELECT AVG(Mission_ID), COUNT(ship.Ship_ID) FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE EXISTS (SELECT * FROM mission AS u WHERE ship.Ship_ID = u.Ship_ID)'], ['SELECT COUNT(Tonnage), SUM(Tonnage), Tonnage, Name FROM ship WHERE  Tonnage <= 23 GROUP BY Name HAVING MIN(Tonnage) >= 71', 'SELECT COUNT(Tonnage), SUM(Tonnage), Tonnage, Name FROM ship WHERE Tonnage >= 71 GROUP BY Name'], ['SELECT SUM(Ship_ID), Tonnage FROM ship WHERE Tonnage BETWEEN 1 AND 10', 'SELECT SUM(Tonnage) FROM ship WHERE Tonnage BETWEEN 1 AND 10;'], ['SELECT Speed_knots FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE  Speed_knots >= 20 OR EXISTS (SELECT * FROM mission WHERE ship.Ship_ID = Ship_ID LIMIT 9) ORDER BY Speed_knots DESC LIMIT 6', 'SELECT Speed_knots FROM ship JOIN mission ON mission.Ship_ID = ship.Ship_ID WHERE Speed_knots >= 20 OR EXISTS (SELECT * FROM mission WHERE ship.Ship_ID = mission.Ship_ID) ORDER BY Speed_knots DESC LIMIT 6'], ['SELECT AVG(Speed_knots) FROM mission WHERE  Speed_knots = 13', 'SELECT AVG(Speed_knots) FROM mission;'], ['SELECT l.Ship_ID, l.Nationality FROM ship AS l WHERE  l.Tonnage >= 90 OR Name NOT IN (SELECT Name FROM ship AS n WHERE n.Ship_ID BETWEEN 1 AND 10 OR  n.Tonnage = 40) GROUP BY l.Nationality HAVING SUM(l.Tonnage) = 7 LIMIT 1', 'SELECT Ship_ID, Nationality FROM ship WHERE Tonnage >= 90 OR Ship_ID NOT IN (SELECT Ship_ID FROM ship WHERE Ship_ID BETWEEN 1 AND 10 OR Tonnage = 40) LIMIT 1'], ['SELECT COUNT(DISTINCT Ship_ID), Speed_knots, Launched_Year FROM mission WHERE EXISTS (SELECT * FROM ship AS v WHERE v.Tonnage BETWEEN 1 AND 10 AND mission.Mission_ID = v.Ship_ID) ORDER BY Launched_Year DESC LIMIT 6', 'SELECT COUNT(DISTINCT Ship_ID), Speed_knots, Launched_Year FROM mission WHERE EXISTS (SELECT * FROM ship AS v WHERE v.Tonnage BETWEEN 1 AND 10 AND v.Ship_ID = mission.Ship_ID) ORDER BY Launched_Year DESC LIMIT 6'], ['SELECT AVG(Tonnage), Nationality FROM ship WHERE Tonnage BETWEEN 1 AND 10 OR  Ship_ID < 65 LIMIT 6', 'SELECT AVG(Tonnage) as avg_tonnage, Nationality FROM ship WHERE Tonnage BETWEEN 1 AND 10 OR Ship_ID < 65 GROUP BY Nationality LIMIT 6'], ['SELECT SUM(u.Mission_ID), MAX(u.Ship_ID), u.Location, u.Speed_knots FROM mission AS u WHERE Mission_ID != (SELECT MAX(Mission_ID) FROM mission WHERE  Ship_ID < 96) GROUP BY u.Speed_knots LIMIT 9', 'SELECT SUM(u.Mission_ID), MAX(u.Ship_ID), u.Location, u.Speed_knots FROM mission AS u WHERE Mission_ID != (SELECT MAX(Mission_ID) FROM mission WHERE  Ship_ID < 96) GROUP BY u.Location LIMIT 9'], ['SELECT o.Launched_Year, o.Code FROM mission AS o WHERE  o.Mission_ID >= 36 GROUP BY o.Code ORDER BY o.Launched_Year ASC', 'SELECT o.Launched_Year, o.Code FROM mission AS o WHERE o.Mission_ID >= 36 GROUP BY o.Launched_Year, o.Code ORDER BY o.Launched_Year ASC'], ['SELECT Launched_Year, Ship_ID, Location, Speed_knots FROM mission WHERE Ship_ID BETWEEN 1 AND 10 OR  Speed_knots < 75 GROUP BY Speed_knots ORDER BY Ship_ID ASC', 'SELECT Launched_Year, Ship_ID, Location, Speed_knots FROM mission WHERE Ship_ID BETWEEN 1 AND 10 OR Speed_knots < 75 GROUP BY Launched_Year, Ship_ID, Location, Speed_knots ORDER BY Ship_ID ASC']], 'debate': [['SELECT Date FROM debate JOIN debate_people JOIN people ON debate_people.Negative = people.People_ID AND debate_people.Debate_ID = debate.Debate_ID AND people.People_ID = debate_people.Affirmative WHERE  People_ID = 99', 'SELECT T1.Date FROM debate AS T1 INNER JOIN debate_people AS T2 ON T1.Debate_ID = T2.Debate_ID INNER JOIN people AS T3 ON T3.People_ID = T2.Affirmative WHERE T2.Affirmative = 99;'], ['SELECT Debate_ID, District FROM debate_people JOIN people ON debate_people.Negative = people.People_ID AND people.People_ID = debate_people.Affirmative GROUP BY District ORDER BY District ASC', 'SELECT T1.Debate_ID, T2.District FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.District ORDER BY T2.District ASC;'], ['SELECT Negative, Debate_ID FROM debate_people LIMIT 9', 'SELECT T2.Name FROM debate_people AS T1 INNER JOIN people AS T2 ON T1.Negative = T2.People_ID LIMIT 9'], ['SELECT MAX(debate_people.Debate_ID), SUM(People_ID) FROM debate JOIN debate_people JOIN people ON debate_people.Negative = people.People_ID AND debate_people.Debate_ID = debate.Debate_ID AND people.People_ID = debate_people.Affirmative WHERE  Negative >= 42 OR EXISTS (SELECT * FROM debate WHERE debate_people.Debate_ID = Debate_ID LIMIT 7)', 'SELECT MAX(T1.Debate_ID), SUM(T1.Negative) FROM debate_people AS T1 INNER JOIN people AS T2 ON T1.Negative = T2.People_ID INNER JOIN debate AS T3 ON T1.Debate_ID = T3.Debate_ID WHERE T1.Negative >= 42 OR T1.Debate_ID IN (SELECT Debate_ID FROM debate LIMIT 7)'], ['SELECT If_Affirmative_Win FROM debate_people JOIN people ON debate_people.Negative = people.People_ID AND people.People_ID = debate_people.Affirmative', 'SELECT T1.If_Affirmative_Win FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID'], ['SELECT AVG(Debate_ID), Affirmative FROM debate_people WHERE Affirmative BETWEEN 1 AND 10 OR  Affirmative <= 63 GROUP BY Affirmative HAVING MIN(Negative) = 35 ORDER BY Affirmative DESC LIMIT 3', 'SELECT Affirmative, COUNT(*) FROM debate_people WHERE Affirmative BETWEEN 1 AND 10 OR Affirmative <= 63 GROUP BY Affirmative HAVING MIN(Negative) = 35 ORDER BY Affirmative DESC LIMIT 3'], ['SELECT COUNT(DISTINCT Venue), Venue FROM debate WHERE  Num_of_Audience > 66 OR Date = (SELECT SUM(Date) FROM debate AS l)', 'SELECT COUNT(DISTINCT Venue), Venue FROM debate WHERE Num_of_Audience > 66 OR Date = (SELECT MAX(Date) FROM debate AS l)'], ['SELECT n.Venue, n.Venue, n.Num_of_Audience FROM debate AS n WHERE  n.Debate_ID <= 31 GROUP BY n.Num_of_Audience HAVING AVG(n.Debate_ID) = 93', 'SELECT Venue, AVG(Num_of_Audience) FROM debate GROUP BY Venue;'], ['SELECT COUNT(debate.Debate_ID), COUNT(DISTINCT debate.Venue) FROM debate JOIN debate AS k ON debate.Debate_ID = k.Debate_ID WHERE debate.Num_of_Audience BETWEEN 1 AND 10 OR Venue NOT IN (SELECT Venue FROM debate WHERE  Num_of_Audience <= 56)', 'SELECT COUNT(debate.Debate_ID), COUNT(DISTINCT debate.Venue) FROM debate WHERE debate.Num_of_Audience BETWEEN 1 AND 10 OR Venue NOT IN (SELECT Venue FROM debate WHERE  Num_of_Audience <= 56)'], ['SELECT MAX(Affirmative), Affirmative FROM debate_people WHERE  Affirmative >= 11 GROUP BY Affirmative', 'SELECT MAX(Affirmative) FROM debate_people WHERE Affirmative >= 11;'], ['SELECT COUNT(DISTINCT Affirmative), Affirmative FROM debate_people WHERE  Affirmative <= 86 GROUP BY Affirmative HAVING AVG(Affirmative) = 3 ORDER BY Affirmative ASC', 'SELECT Affirmative, COUNT(*) FROM debate_people WHERE Affirmative <= 86 GROUP BY Affirmative ORDER BY Affirmative ASC'], ['SELECT r.Negative FROM debate_people AS r WHERE r.Negative BETWEEN 1 AND 10 AND  r.Negative = 82 ORDER BY r.Negative ASC', 'SELECT r.Negative FROM debate_people AS r WHERE r.Negative BETWEEN 1 AND 10 ORDER BY r.Negative ASC'], ['SELECT COUNT(Num_of_Audience), If_Affirmative_Win FROM debate JOIN debate_people ON debate_people.Debate_ID = debate.Debate_ID WHERE Num_of_Audience BETWEEN 1 AND 10 AND  Negative <= 48 ORDER BY If_Affirmative_Win ASC', 'SELECT COUNT(debate.Num_of_Audience), debate_people.If_Affirmative_Win FROM debate JOIN debate_people ON debate.Debate_ID = debate_people.Debate_ID WHERE debate.Num_of_Audience BETWEEN 1 AND 10 AND debate_people.Negative <= 48 ORDER BY debate_people.If_Affirmative_Win ASC'], ['SELECT COUNT(DISTINCT debate.Debate_ID), Date FROM debate JOIN debate_people ON debate_people.Debate_ID = debate.Debate_ID WHERE  Negative = 95', 'SELECT COUNT(DISTINCT T1.Debate_ID), T1.Date FROM debate AS T1 JOIN debate_people AS T2 ON T2.Debate_ID = T1.Debate_ID WHERE T2.Negative = 95'], ['SELECT COUNT(Debate_ID), If_Affirmative_Win, District FROM debate_people JOIN people ON debate_people.Negative = people.People_ID AND people.People_ID = debate_people.Affirmative WHERE Negative IN (SELECT Negative FROM debate_people WHERE Negative BETWEEN 1 AND 10 AND  Debate_ID > 41) GROUP BY District HAVING MAX(Negative) <= 27', 'SELECT COUNT(debate_people.Debate_ID), If_Affirmative_Win, people.District FROM debate_people JOIN people ON debate_people.Negative = people.People_ID AND people.People_ID = debate_people.Affirmative WHERE debate_people.Negative IN (SELECT Negative FROM debate_people WHERE Negative BETWEEN 1 AND 10 AND Debate_ID > 41) AND debate_people.Negative <= 27 GROUP BY people.District'], ['SELECT Debate_ID FROM debate WHERE EXISTS (SELECT * FROM debate_people WHERE Affirmative BETWEEN 1 AND 10 AND  Debate_ID < 64 AND debate.Debate_ID = Debate_ID)', 'SELECT Debate_ID FROM debate AS d WHERE EXISTS (SELECT * FROM debate_people WHERE Affirmative BETWEEN 1 AND 10 AND Debate_ID < 64 AND debate_people.Debate_ID = d.Debate_ID)'], ['SELECT f.Debate_ID FROM debate_people AS f JOIN debate_people ON debate_people.Debate_ID = f.Debate_ID WHERE  debate_people.Negative < 34', 'SELECT f.Debate_ID FROM debate_people AS f JOIN debate_people AS dp ON dp.Debate_ID = f.Debate_ID WHERE dp.Negative < 34;'], ['SELECT COUNT(DISTINCT Affirmative), People_ID, Negative FROM debate_people JOIN people ON debate_people.Negative = people.People_ID AND people.People_ID = debate_people.Affirmative WHERE  People_ID = 99', 'SELECT COUNT(DISTINCT dp.Affirmative), p.People_ID, dp.Negative FROM debate_people dp JOIN people p ON dp.Affirmative = p.People_ID WHERE p.People_ID = 99'], ['SELECT debate_people.Debate_ID, debate_people.If_Affirmative_Win FROM debate_people JOIN debate_people AS m ON debate_people.Debate_ID = m.Debate_ID WHERE  debate_people.Debate_ID != 95', 'SELECT t1.Debate_ID, t1.If_Affirmative_Win FROM debate_people AS t1 JOIN people AS t2 ON t1.Negative = t2.People_ID WHERE t1.Debate_ID != 95']], 'university_basketball': [['SELECT SUM(j.School_ID), j.School_ID FROM basketball_match AS j WHERE j.Team_ID BETWEEN 1 AND 10 OR All_Home NOT IN (SELECT All_Home FROM basketball_match WHERE  School_ID <= 15) GROUP BY j.School_ID HAVING COUNT(j.Team_ID) > 18 LIMIT 3', 'SELECT j.School_ID, SUM(j.Team_ID) FROM basketball_match AS j WHERE (j.Team_ID BETWEEN 1 AND 10) OR (j.All_Home NOT IN (SELECT All_Home FROM basketball_match WHERE School_ID <= 15)) GROUP BY j.School_ID HAVING COUNT(j.Team_ID) > 18 LIMIT 3'], ['SELECT COUNT(DISTINCT o.Nickname) FROM university AS o WHERE  o.Founded < 82 OR School NOT IN (SELECT School FROM university WHERE School_ID BETWEEN 1 AND 10 LIMIT 3)', 'SELECT COUNT(DISTINCT o.Nickname) FROM university AS o WHERE o.Founded < 82 OR School NOT IN (SELECT School FROM university WHERE School_ID IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10))'], ['SELECT MAX(basketball_match.All_Games_Percent), q.ACC_Percent FROM basketball_match AS q JOIN basketball_match ON basketball_match.Team_ID = q.Team_ID WHERE  basketball_match.All_Games_Percent >= 44 ORDER BY q.ACC_Percent ASC', 'SELECT MAX(q1.All_Games_Percent), q2.ACC_Percent FROM basketball_match AS q1, basketball_match AS q2 WHERE q1.Team_ID = q2.Team_ID AND q1.All_Games_Percent >= 44 ORDER BY q2.ACC_Percent ASC'], ['SELECT COUNT(All_Games_Percent), ACC_Percent FROM basketball_match GROUP BY ACC_Percent HAVING SUM(All_Games_Percent) <= 55', 'SELECT COUNT(All_Games_Percent), ACC_Percent FROM basketball_match GROUP BY ACC_Percent, All_Games_Percent HAVING SUM(All_Games_Percent) <= 55'], ['SELECT j.Affiliation, j.School FROM university AS j WHERE  j.Founded < 93 GROUP BY j.Affiliation', 'SELECT j.Affiliation, j.School FROM university AS j WHERE j.Founded < 93 GROUP BY j.Affiliation, j.School;'], ['SELECT COUNT(DISTINCT ACC_Road), All_Games FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE  Team_ID <= 45 ORDER BY All_Games DESC', 'SELECT COUNT(DISTINCT ACC_Road), CAST(All_Games AS number) AS All_Games FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE  Team_ID <= 45 ORDER BY CAST(All_Games AS number) DESC'], ['SELECT Enrollment, All_Road FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE EXISTS (SELECT * FROM university WHERE  Enrollment < 36 AND basketball_match.Team_ID = School_ID) GROUP BY All_Road', 'SELECT T1.Enrollment, T2.All_Road FROM university AS T1 JOIN basketball_match AS T2 ON T2.School_ID = T1.School_ID WHERE T1.Enrollment < 36 GROUP BY T1.Enrollment, T2.All_Road;'], ['SELECT COUNT(DISTINCT Affiliation) FROM university WHERE Affiliation NOT IN (SELECT Affiliation FROM university AS t)', "SELECT COUNT(DISTINCT Affiliation) FROM university WHERE Affiliation NOT IN (SELECT Affiliation FROM university AS t WHERE Affiliation = 'Private')"], ['SELECT h.All_Games_Percent, h.All_Games_Percent, h.School_ID FROM basketball_match AS h WHERE h.Team_ID BETWEEN 1 AND 10 AND  h.All_Games_Percent != 16', 'SELECT h.All_Games_Percent, h.School_ID FROM basketball_match AS h WHERE h.Team_ID BETWEEN 1 AND 10 AND  h.All_Games_Percent != 16'], ['SELECT COUNT(basketball_match.All_Games_Percent), basketball_match.Team_ID, basketball_match.Team_Name FROM basketball_match AS a JOIN basketball_match ON basketball_match.Team_ID = a.Team_ID WHERE  a.Team_ID != 76 GROUP BY basketball_match.Team_Name', 'SELECT COUNT(All_Games_Percent), Team_ID, Team_Name FROM basketball_match WHERE Team_ID != 76 GROUP BY Team_Name, Team_ID'], ['SELECT MAX(university.School_ID), Nickname FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE  All_Games_Percent < 92 GROUP BY Nickname HAVING MAX(All_Games_Percent) <= 63 LIMIT 9', 'SELECT MAX(basketball_match.All_Games_Percent), university.Nickname FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE basketball_match.All_Games_Percent < 92 GROUP BY university.Nickname HAVING MAX(basketball_match.All_Games_Percent) <= 63 LIMIT 9'], ['SELECT MIN(Team_ID) FROM basketball_match WHERE School_ID BETWEEN 1 AND 10 AND All_Road NOT IN (SELECT All_Road FROM basketball_match)', 'SELECT MIN(Team_ID) FROM basketball_match WHERE School_ID BETWEEN 1 AND 10 AND NOT EXISTS (SELECT 1 FROM basketball_match AS bm2 WHERE bm2.All_Road = basketball_match.All_Road)'], ['SELECT AVG(basketball_match.School_ID), Team_ID, School FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE  Team_ID < 87 GROUP BY School HAVING COUNT(Enrollment) >= 16 ORDER BY School DESC', 'SELECT AVG(b.All_Games_Percent), Team_ID, School FROM university JOIN basketball_match b ON b.School_ID = university.School_ID WHERE  b.Team_ID < 87 GROUP BY School HAVING COUNT(university.Enrollment) >= 16 ORDER BY School DESC;'], ['SELECT s.Founded, university.Enrollment FROM university JOIN university AS s ON university.School_ID = s.School_ID WHERE  s.Enrollment >= 84 ORDER BY university.Enrollment DESC', 'SELECT university.Founded, university.Enrollment FROM university JOIN university AS s ON university.School_ID = s.School_ID WHERE  s.Enrollment >= 84 ORDER BY university.Enrollment DESC'], ['SELECT All_Games, All_Games_Percent FROM basketball_match GROUP BY All_Games_Percent', 'SELECT Team_ID, SUM(All_Games_Percent) FROM basketball_match GROUP BY Team_ID;'], ['SELECT SUM(All_Games_Percent), Team_Name, Founded FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE  Enrollment <= 2 AND ACC_Home NOT IN (SELECT ACC_Home FROM basketball_match) GROUP BY Founded HAVING MAX(Founded) = 90 ORDER BY Team_Name DESC', "SELECT SUM(T2.All_Games_Percent), T2.Team_Name, T1.Founded FROM university AS T1 JOIN basketball_match AS T2 ON T2.School_ID = T1.School_ID WHERE T1.Enrollment <= 20000 AND T2.ACC_Home NOT IN ('0-1', '0-2', '0-3', '0-4', '0-5', '0-6', '0-7', '0-8', '0-9', '0-10', '0-11', '0-12', '0-13', '0-14', '0-15', '0-16', '0-17', '0-18') GROUP BY T2.Team_Name, T1.Founded HAVING MAX(T1.Founded) = 1990 ORDER BY T2.Team_Name DESC;"], ['SELECT School FROM university WHERE Enrollment BETWEEN 1 AND 10 OR Nickname = (SELECT MAX(Nickname) FROM university AS g WHERE  g.School_ID > 10 LIMIT 8)', 'SELECT School FROM university WHERE Enrollment BETWEEN 1 AND 10 OR Enrollment = (SELECT MAX(Enrollment) FROM university AS g WHERE  g.School_ID > 10 LIMIT 1)'], ['SELECT m.Nickname FROM university AS m JOIN university ON university.School_ID = m.School_ID WHERE  m.Enrollment <= 51', 'SELECT m.Nickname FROM university AS m JOIN university AS u ON u.School_ID = m.School_ID WHERE m.Enrollment <= 51'], ['SELECT ACC_Road FROM basketball_match WHERE Team_ID BETWEEN 1 AND 10 OR  School_ID != 28', 'SELECT ACC_Road FROM basketball_match WHERE (Team_ID BETWEEN 1 AND 10) OR School_ID != 28;'], ['SELECT AVG(basketball_match.School_ID), COUNT(DISTINCT ACC_Percent) FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE ACC_Regular_Season IN (SELECT ACC_Regular_Season FROM basketball_match AS t WHERE t.Team_ID BETWEEN 1 AND 10 AND  t.Team_ID != 18)', 'SELECT AVG(basketball_match.School_ID), COUNT(DISTINCT All_Games_Percent) FROM university JOIN basketball_match ON basketball_match.School_ID = university.School_ID WHERE ACC_Regular_Season IN (SELECT ACC_Regular_Season FROM basketball_match AS t WHERE t.Team_ID BETWEEN 1 AND 10 AND  t.Team_ID != 18)'], ['SELECT COUNT(All_Games_Percent), ACC_Regular_Season, School_ID FROM basketball_match WHERE  Team_ID > 59 OR EXISTS (SELECT * FROM university AS b WHERE b.Founded BETWEEN 1 AND 10 AND basketball_match.Team_ID = b.School_ID) GROUP BY School_ID LIMIT 6', 'SELECT AVG(All_Games_Percent), ACC_Regular_Season, School_ID FROM basketball_match WHERE Team_ID > 59 OR EXISTS (SELECT * FROM university AS b WHERE b.Founded BETWEEN 1 AND 10 AND basketball_match.Team_ID = b.School_ID) GROUP BY School_ID, ACC_Regular_Season LIMIT 6'], ['SELECT Founded, School_ID, Location FROM university WHERE  Enrollment = 91 GROUP BY Location ORDER BY School_ID ASC', 'SELECT Founded, School_ID, Location FROM university WHERE Enrollment = 91 GROUP BY Founded, School_ID, Location ORDER BY School_ID ASC;']], 'perpetrator': [['SELECT COUNT(DISTINCT d.Location), d.Date FROM perpetrator AS d WHERE  d.Killed = 13 GROUP BY d.Date HAVING COUNT(d.Year) = 93', 'SELECT COUNT(DISTINCT d.Location), d.Date FROM perpetrator AS d WHERE d.Killed = 13 GROUP BY d.Date, d.Location HAVING COUNT(DISTINCT d.Location) = 1;'], ['SELECT y.Name FROM people JOIN people AS y ON people.People_ID = y.People_ID WHERE Name IN (SELECT Name FROM people AS i WHERE  i.People_ID >= 19 LIMIT 9)', 'SELECT Name FROM people WHERE People_ID >= 19 LIMIT 9;'], ['SELECT people.People_ID FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID WHERE Height BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM people WHERE People_ID BETWEEN 1 AND 10 OR  Height = 26 AND perpetrator.Perpetrator_ID = People_ID) ORDER BY people.People_ID ASC', 'SELECT people.People_ID FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID WHERE Height BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM people p2 WHERE p2.Height = 26 AND p2.People_ID = people.People_ID) ORDER BY people.People_ID ASC'], ['SELECT COUNT(people.Weight), COUNT(DISTINCT v.Name), v.People_ID FROM people AS v JOIN people ON people.People_ID = v.People_ID WHERE v.Height BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM perpetrator WHERE  People_ID != 18 AND people.People_ID = People_ID) LIMIT 1', 'SELECT COUNT(p.Weight), COUNT(DISTINCT p.Name) FROM people AS p WHERE p.Height BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM perpetrator AS pr WHERE pr.People_ID = p.People_ID AND pr.People_ID != 18) LIMIT 1'], ['SELECT COUNT(DISTINCT Perpetrator_ID), Date, perpetrator.People_ID FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID WHERE  perpetrator.People_ID != 11 GROUP BY perpetrator.People_ID ORDER BY perpetrator.People_ID DESC', 'SELECT COUNT(DISTINCT perpetrator.Perpetrator_ID), perpetrator.Date, perpetrator.People_ID FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID WHERE perpetrator.People_ID != 11 GROUP BY perpetrator.People_ID, perpetrator.Date ORDER BY perpetrator.People_ID DESC;'], ['SELECT r.Height FROM people AS r JOIN people ON people.People_ID = r.People_ID WHERE r.Weight BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM perpetrator AS b WHERE  b.People_ID < 44 AND people.People_ID = b.People_ID LIMIT 4) LIMIT 7', 'SELECT r.Height FROM people AS r INNER JOIN people AS p ON p.People_ID = r.People_ID WHERE r.Weight BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM perpetrator AS b WHERE b.People_ID < 44 AND p.People_ID = b.People_ID LIMIT 4) LIMIT 7'], ['SELECT AVG(i.Weight) FROM people AS i JOIN people ON people.People_ID = i.People_ID WHERE  people.Weight != 53 OR EXISTS (SELECT * FROM perpetrator WHERE People_ID BETWEEN 1 AND 10 AND people.People_ID = People_ID) LIMIT 1', 'SELECT AVG(i.Weight) FROM people AS i WHERE i.Weight != 53 OR EXISTS (SELECT * FROM perpetrator AS p WHERE p.People_ID BETWEEN 1 AND 10 AND p.People_ID = i.People_ID)'], ['SELECT r.Height, r.Height, r.Name FROM people AS r WHERE  r.Weight = 6 GROUP BY r.Name', 'SELECT r.Height, r.Name FROM people AS r WHERE r.Weight = 6 GROUP BY r.Height, r.Name;']], 'assets_maintenance': [['SELECT COUNT(DISTINCT fault_description), fault_description FROM Fault_Log WHERE  fault_log_entry_id >= 56 LIMIT 8', 'SELECT COUNT(DISTINCT fault_description), fault_description FROM Fault_Log WHERE part_fault_id >= 56 LIMIT 8'], ['SELECT first_name FROM Maintenance_Contracts JOIN Assets JOIN Third_Party_Companies JOIN Maintenance_Engineers ON Assets.supplier_company_id = Third_Party_Companies.company_id AND Third_Party_Companies.company_id = Maintenance_Engineers.company_id AND Maintenance_Contracts.maintenance_contract_id = Assets.maintenance_contract_id WHERE  Maintenance_Contracts.maintenance_contract_id != 77', 'SELECT T4.first_name FROM Maintenance_Engineers AS T4 JOIN Third_Party_Companies AS T3 ON T4.company_id = T3.company_id JOIN Assets AS T2 ON T3.company_id = T2.supplier_company_id JOIN Maintenance_Contracts AS T1 ON T2.maintenance_contract_id = T1.maintenance_contract_id WHERE T1.maintenance_contract_id != 77;'], ['SELECT part_fault_id FROM Skills JOIN Skills_Required_To_Fix ON Skills.skill_id = Skills_Required_To_Fix.skill_id WHERE  Skills.skill_id >= 64 OR skill_id IN (SELECT skill_id FROM Skills_Required_To_Fix AS t WHERE  t.skill_id > 9) ORDER BY part_fault_id ASC LIMIT 3', 'SELECT T2.part_fault_id FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id JOIN Part_Faults AS T3 ON T2.part_fault_id = T3.part_fault_id WHERE T1.skill_id >= 64 OR T2.skill_id IN (SELECT skill_id FROM Skills_Required_To_Fix AS t WHERE t.skill_id > 9) ORDER BY T2.part_fault_id ASC LIMIT 3'], ['SELECT x.company_id FROM Third_Party_Companies AS x WHERE x.company_id BETWEEN 1 AND 10 AND  x.company_id >= 92', 'SELECT x.company_id FROM Third_Party_Companies AS x WHERE x.company_id >= 92;'], ['SELECT recorded_by_staff_id, fault_status FROM Assets JOIN Staff JOIN Fault_Log JOIN Engineer_Visits ON Assets.asset_id = Fault_Log.asset_id AND Fault_Log.recorded_by_staff_id = Staff.staff_id AND Engineer_Visits.contact_staff_id = Staff.staff_id WHERE Fault_Log.asset_id BETWEEN 1 AND 10 ORDER BY recorded_by_staff_id ASC', 'SELECT T1.recorded_by_staff_id, T4.fault_status FROM Assets AS T1 INNER JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id INNER JOIN Staff AS T3 ON T2.recorded_by_staff_id = T3.staff_id INNER JOIN Engineer_Visits AS T4 ON T3.staff_id = T4.contact_staff_id WHERE T2.asset_id BETWEEN 1 AND 10 ORDER BY T2.recorded_by_staff_id ASC;'], ['SELECT staff_id FROM Staff WHERE  staff_id >= 76 AND staff_id = (SELECT AVG(staff_id) FROM Staff AS l WHERE  l.staff_id < 25 LIMIT 7) LIMIT 10', 'SELECT staff_id FROM Staff WHERE staff_id >= 76 AND staff_id = (SELECT MAX(staff_id) FROM Staff AS l WHERE l.staff_id < 25 LIMIT 7) LIMIT 10']], 'election_representative': [['SELECT s.Representative_ID, s.State FROM representative AS s WHERE Lifespan NOT IN (SELECT Lifespan FROM representative WHERE  Representative_ID <= 13) GROUP BY s.State HAVING MIN(s.Representative_ID) <= 5 LIMIT 1', 'SELECT State FROM representative WHERE Representative_ID = (SELECT MIN(Representative_ID) FROM representative) LIMIT 1'], ['SELECT SUM(Election_ID) FROM representative JOIN election ON election.Representative_ID = representative.Representative_ID WHERE  Votes <= 34', 'SELECT SUM(election.Election_ID) FROM representative JOIN election ON election.Representative_ID = representative.Representative_ID WHERE election.Votes <= 34'], ['SELECT Votes, Seats FROM election WHERE  Votes != 96 GROUP BY Seats', 'SELECT Votes, Seats, Representative_ID FROM election WHERE Votes != 96 GROUP BY Representative_ID, Votes, Seats;'], ['SELECT COUNT(DISTINCT Seats), Party FROM representative JOIN election ON election.Representative_ID = representative.Representative_ID WHERE  Vote_Percent >= 9 GROUP BY Party', 'SELECT Party, COUNT(DISTINCT Seats) FROM representative JOIN election ON election.Representative_ID = representative.Representative_ID WHERE Vote_Percent >= 9 GROUP BY Party;'], ['SELECT y.Representative_ID, y.Representative_ID, y.Lifespan FROM representative AS y GROUP BY y.Lifespan HAVING COUNT(y.Representative_ID) <= 29 ORDER BY y.Representative_ID DESC', 'SELECT T2.Representative_ID, T2.Lifespan FROM election AS T1 INNER JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID GROUP BY T2.Lifespan, T2.Representative_ID HAVING COUNT(T1.Representative_ID) <= 29 ORDER BY T2.Representative_ID DESC;'], ['SELECT election.Representative_ID, State FROM representative JOIN election ON election.Representative_ID = representative.Representative_ID WHERE  Election_ID <= 50 AND Vote_Percent = (SELECT MAX(Vote_Percent) FROM election WHERE  Place <= 69) GROUP BY State HAVING COUNT(Vote_Percent) < 18', 'SELECT T1.Representative_ID, T2.State FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Election_ID <= 50 AND T1.Vote_Percent = (SELECT MAX(Vote_Percent) FROM election WHERE Place <= 69) GROUP BY T2.State HAVING COUNT(T1.Vote_Percent) < 18;'], ['SELECT Representative_ID, State FROM representative WHERE Party IN (SELECT Party FROM representative WHERE  Representative_ID > 25 LIMIT 10) GROUP BY State LIMIT 10', 'SELECT State, MIN(Representative_ID) AS Representative_ID FROM representative WHERE Party IN (SELECT Party FROM representative WHERE Representative_ID > 25 LIMIT 10) GROUP BY State LIMIT 10'], ['SELECT i.Representative_ID, i.Party FROM representative AS i WHERE Representative_ID IN (SELECT Representative_ID FROM representative WHERE  Representative_ID = 8) GROUP BY i.Party HAVING SUM(i.Representative_ID) < 46 ORDER BY i.Representative_ID DESC', 'SELECT i.Representative_ID, i.Party FROM representative AS i WHERE Representative_ID IN (SELECT Representative_ID FROM representative WHERE  Representative_ID = 8) GROUP BY i.Party HAVING COUNT(i.Representative_ID) < 46 ORDER BY i.Representative_ID DESC;'], ['SELECT h.Representative_ID, h.Party FROM representative AS h WHERE  h.Representative_ID >= 78 GROUP BY h.Party HAVING MAX(h.Representative_ID) <= 77', 'SELECT h.Party FROM representative AS h GROUP BY h.Party HAVING MAX(h.Representative_ID) <= 77'], ['SELECT MIN(r.Representative_ID), SUM(r.Representative_ID) FROM representative JOIN representative AS r ON representative.Representative_ID = r.Representative_ID WHERE r.Representative_ID BETWEEN 1 AND 10 AND  r.Representative_ID != 69', 'SELECT MIN(r.Representative_ID), COUNT(r.Representative_ID) FROM representative AS r WHERE r.Representative_ID BETWEEN 1 AND 10 AND r.Representative_ID != 69;'], ['SELECT w.Representative_ID FROM representative AS w', 'SELECT w.Representative_ID FROM representative AS w WHERE w.Name IS NOT NULL;']], 'baseball_1': [['SELECT COUNT(DISTINCT ipouts), manager.year FROM team JOIN manager ON manager.team_id = team.team_id WHERE e NOT IN (SELECT e FROM fielding_postseason AS j WHERE  j.year <= 59 LIMIT 5)', 'SELECT COUNT(DISTINCT T1.ipouts), T2.year FROM pitching AS T1 JOIN manager AS T2 ON T2.team_id = T1.team_id WHERE T1.player_id NOT IN (SELECT player_id FROM fielding_postseason AS T3 WHERE T3.year <= 59 LIMIT 5)'], ['SELECT era, lg_win FROM team JOIN manager ON manager.team_id = team.team_id WHERE  so <= 30', 'SELECT T1.era, T1.lg_win FROM team AS T1 JOIN manager AS T2 ON T1.team_id = T2.team_id WHERE T1.so <= 30'], ['SELECT birth_year FROM player_award JOIN player ON player_award.player_id = player.player_id WHERE  death_day >= 80 OR bats <= (SELECT SUM(bats) FROM player WHERE  birth_month >= 16) LIMIT 1', 'SELECT T1.birth_year FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T1.death_day >= 80 OR T1.bats <= (SELECT SUM(T3.bats) FROM player AS T3 WHERE T3.birth_month >= 16) LIMIT 1']], 'hospital_1': [['SELECT COUNT(DISTINCT BlockFloor), BlockCode FROM Block WHERE  BlockFloor > 51 GROUP BY BlockCode', 'SELECT COUNT(DISTINCT BlockCode), BlockFloor FROM Block WHERE BlockFloor > 51 GROUP BY BlockFloor;'], ['SELECT AssistingNurse, Name FROM Undergoes JOIN Procedures ON Undergoes.Procedures = Procedures.Code WHERE  Stay >= 75', 'SELECT T1.AssistingNurse, T2.Name FROM Undergoes AS T1 JOIN Procedures AS T2 ON T1.Procedures = T2.Code JOIN Stay AS T3 ON T1.Stay = T3.StayID WHERE DATEDIFF(T3.StayEnd, T3.StayStart) >= 75;'], ['SELECT e.ExaminationRoom, e.ExaminationRoom, e.Patient FROM Appointment AS e WHERE ExaminationRoom NOT IN (SELECT ExaminationRoom FROM Appointment AS z) GROUP BY e.Patient HAVING MAX(e.AppointmentID) < 12 ORDER BY e.ExaminationRoom ASC LIMIT 2', 'SELECT MAX(e.AppointmentID) AS Max_AppointmentID, e.ExaminationRoom, e.Patient FROM Appointment AS e GROUP BY e.ExaminationRoom, e.Patient HAVING MAX(e.AppointmentID) < 12 ORDER BY e.ExaminationRoom ASC LIMIT 2'], ['SELECT Phone, Physician.Name FROM Stay JOIN Physician JOIN Patient JOIN Undergoes ON Physician.EmployeeID = Undergoes.Physician AND Patient.PCP = Physician.EmployeeID AND Patient.SSN = Undergoes.Patient AND Stay.StayID = Undergoes.Stay WHERE PCP BETWEEN 1 AND 10', 'SELECT p.Phone, Phy.Name FROM Patient p JOIN Physician Phy ON p.PCP = Phy.EmployeeID JOIN Undergoes U ON Phy.EmployeeID = U.Physician AND p.SSN = U.Patient WHERE p.PCP BETWEEN 1 AND 10;'], ['SELECT COUNT(DISTINCT Treatment), COUNT(DISTINCT CertificationExpires), COUNT(DISTINCT Cost) FROM Trained_In JOIN Procedures ON Trained_In.Treatment = Procedures.Code WHERE  Code < 22', 'SELECT COUNT(DISTINCT T.CertificationDate) AS Treatment, COUNT(DISTINCT T.CertificationExpires), COUNT(DISTINCT P.Cost) FROM Trained_In T INNER JOIN Procedures P ON T.Treatment = P.Code WHERE P.Code < 22;'], ['SELECT MAX(a.EmployeeID), COUNT(DISTINCT Physician.Position), a.Position FROM Physician JOIN Physician AS a ON Physician.EmployeeID = a.EmployeeID WHERE Physician.SSN BETWEEN 1 AND 10 GROUP BY a.Position ORDER BY a.Position DESC', 'SELECT MAX(EmployeeID), COUNT(DISTINCT Position), Position FROM Physician WHERE SSN BETWEEN 1 AND 10 GROUP BY Position ORDER BY Position DESC'], ['SELECT COUNT(Appointment.Physician), COUNT(DISTINCT Prescribes.Patient) FROM Prescribes JOIN Appointment ON Prescribes.Appointment = Appointment.AppointmentID WHERE  Appointment > 95 AND PrepNurse >= (SELECT MAX(PrepNurse) FROM Appointment WHERE Physician BETWEEN 1 AND 10)', 'SELECT COUNT(Physician), COUNT(DISTINCT Prescribes.Patient) FROM Prescribes JOIN Appointment ON Prescribes.Appointment = Appointment.AppointmentID WHERE Appointment.AppointmentID > 95 AND PrepNurse >= (SELECT MAX(PrepNurse) FROM Appointment WHERE Physician BETWEEN 1 AND 10)'], ['SELECT MIN(u.EmployeeID), u.EmployeeID FROM Physician AS u', 'SELECT MIN(EmployeeID) AS Min_EmployeeID FROM Physician AS u;']], 'wine_1': [['SELECT COUNT(DISTINCT State), State, isAVA FROM appellations WHERE No BETWEEN 1 AND 10 OR  No < 3 GROUP BY isAVA', 'SELECT COUNT(DISTINCT State), State, isAVA FROM appellations WHERE No BETWEEN 1 AND 10 GROUP BY isAVA, State'], ['SELECT AVG(No), isAVA FROM appellations WHERE  No != 35', 'SELECT COUNT(*), isAVA FROM appellations WHERE No != 35'], ['SELECT COUNT(DISTINCT o.isAVA), appellations.State FROM appellations AS o JOIN appellations ON appellations.No = o.No WHERE  appellations.No > 59 GROUP BY appellations.State ORDER BY appellations.State DESC', 'SELECT COUNT(DISTINCT o.isAVA), a1.State FROM appellations AS o JOIN appellations AS a1 ON a1.No = o.No WHERE o.No > 59 GROUP BY a1.State ORDER BY a1.State DESC;'], ['SELECT a.No, a.No FROM appellations AS a WHERE  a.No >= 89 LIMIT 1', 'SELECT a.No FROM appellations AS a WHERE a.No >= 89 LIMIT 1'], ['SELECT COUNT(DISTINCT x.Grape), grapes.Color FROM grapes JOIN grapes AS x ON grapes.ID = x.ID WHERE  grapes.ID > 23 GROUP BY grapes.Color', 'SELECT COUNT(Grape), Color FROM grapes WHERE ID > 23 GROUP BY Color;'], ['SELECT MIN(j.No), j.No, j.County FROM appellations AS j JOIN appellations ON appellations.No = j.No WHERE appellations.No BETWEEN 1 AND 10 AND  j.No != 99 LIMIT 10', 'SELECT MIN(j.No), j.No, j.County FROM appellations AS j WHERE j.No BETWEEN 1 AND 10 AND  j.No != 99 LIMIT 10']], 'bbc_channels': [['SELECT MAX(a.Director_ID), a.Director_ID, a.Is_first_director FROM director_admin AS a WHERE  a.Channel_ID > 77 AND Channel_ID NOT IN (SELECT Channel_ID FROM channel WHERE  Channel_ID >= 68) GROUP BY a.Is_first_director', 'SELECT MAX(a.Director_ID), a.Is_first_director FROM director_admin AS a WHERE a.Channel_ID > 77 AND Channel_ID NOT IN (SELECT Channel_ID FROM channel WHERE Channel_ID >= 68) GROUP BY a.Is_first_director'], ['SELECT COUNT(DISTINCT Director_ID), Program_ID FROM program WHERE  Program_ID != 40', 'SELECT Program_ID, COUNT(DISTINCT Director_ID) FROM program WHERE Program_ID != 40 GROUP BY Program_ID;'], ['SELECT director.Name FROM director AS k JOIN director ON director.Director_ID = k.Director_ID ORDER BY director.Name ASC LIMIT 9', 'SELECT Name FROM director ORDER BY Name ASC LIMIT 9'], ['SELECT Channel_ID, Director_ID FROM program WHERE Start_Year BETWEEN 1 AND 10 OR Title IN (SELECT Title FROM program)', 'SELECT Channel_ID, Director_ID FROM program WHERE Start_Year BETWEEN 1 AND 10 OR Title IN (SELECT DISTINCT Title FROM program WHERE Start_Year > 10)'], ['SELECT COUNT(DISTINCT Channel_ID), Is_first_director, Is_first_director FROM director_admin WHERE Channel_ID BETWEEN 1 AND 10 ORDER BY Is_first_director DESC', 'SELECT COUNT(DISTINCT Channel_ID), Is_first_director FROM director_admin WHERE Channel_ID BETWEEN 1 AND 10 ORDER BY Is_first_director DESC'], ['SELECT program.Title FROM program JOIN program AS g ON program.Program_ID = g.Program_ID WHERE program.Program_ID BETWEEN 1 AND 10 AND  program.Channel_ID != 77 ORDER BY program.Title DESC', 'SELECT g.Title FROM program AS g JOIN program AS p ON g.Program_ID = p.Program_ID WHERE g.Program_ID BETWEEN 1 AND 10 AND g.Channel_ID != 77 ORDER BY g.Title DESC'], ['SELECT Program_ID FROM program WHERE Channel_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM director WHERE Director_ID BETWEEN 1 AND 10 AND  Director_ID >= 21 AND program.Program_ID = Director_ID)', 'SELECT Program_ID FROM program WHERE Channel_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM director WHERE Director_ID >= 21 AND program.Program_ID = Director_ID)'], ['SELECT AVG(Age), Director_ID, Name FROM director WHERE Age IN (SELECT Age FROM director AS t WHERE  t.Age = 89)', 'SELECT AVG(Age), Name FROM director WHERE Age = 89'], ['SELECT Name, Age FROM director WHERE  Director_ID < 44 GROUP BY Age ORDER BY Age ASC', 'SELECT Name, Age, COUNT(*) FROM director WHERE Director_ID < 44 GROUP BY Name, Age ORDER BY Age ASC;'], ['SELECT channel.Name, Digital_terrestrial_channel, Title FROM channel JOIN director_admin JOIN program JOIN director ON program.Channel_ID = channel.Channel_ID AND channel.Channel_ID = director_admin.Channel_ID AND director.Director_ID = program.Director_ID AND director_admin.Director_ID = director.Director_ID WHERE  Program_ID <= 35 GROUP BY Title ORDER BY channel.Name DESC', 'SELECT c.Name, c.Digital_terrestrial_channel, p.Title FROM channel c JOIN director_admin da ON c.Channel_ID = da.Channel_ID JOIN program p ON c.Channel_ID = p.Channel_ID AND da.Director_ID = p.Director_ID JOIN director d ON da.Director_ID = d.Director_ID WHERE p.Program_ID <= 35 GROUP BY c.Name, c.Digital_terrestrial_channel, p.Title ORDER BY c.Name DESC;'], ['SELECT COUNT(t.Channel_ID), channel.Name FROM channel JOIN channel AS t ON channel.Channel_ID = t.Channel_ID WHERE  channel.Channel_ID = 76 OR EXISTS (SELECT * FROM director_admin AS p WHERE  p.Channel_ID < 25 AND channel.Channel_ID = p.Channel_ID) GROUP BY channel.Name', 'SELECT COUNT(p.Channel_ID), c.Name FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID WHERE c.Channel_ID = 76 OR EXISTS (SELECT * FROM director_admin da JOIN program p2 ON da.Channel_ID = p2.Channel_ID WHERE p2.Channel_ID = c.Channel_ID AND p2.Channel_ID < 25) GROUP BY c.Name'], ['SELECT AVG(h.Channel_ID), h.Director_ID FROM program AS h WHERE  h.Channel_ID <= 74 ORDER BY h.Director_ID DESC LIMIT 2', 'SELECT AVG(h.Channel_ID), h.Director_ID FROM program AS h WHERE h.Channel_ID <= 74 GROUP BY h.Director_ID ORDER BY h.Director_ID DESC LIMIT 2;'], ['SELECT MIN(Channel_ID) FROM director_admin WHERE Channel_ID BETWEEN 1 AND 10 AND  Channel_ID = 49 LIMIT 7', 'SELECT MIN(Channel_ID) FROM director_admin WHERE Channel_ID = 49 LIMIT 1;'], ['SELECT MAX(director.Age) FROM director AS b JOIN director ON director.Director_ID = b.Director_ID WHERE  b.Director_ID >= 44', 'SELECT MAX(Age) FROM director WHERE Director_ID >= 44;'], ['SELECT u.Internet, u.Internet FROM channel AS u WHERE  u.Channel_ID < 65 ORDER BY u.Internet DESC', 'SELECT u.Internet FROM channel AS u WHERE u.Channel_ID < 65 ORDER BY u.Internet DESC']], 'epinions_1': [['SELECT x.u_id, x.name FROM useracct AS x WHERE u_id < (SELECT MAX(u_id) FROM useracct WHERE  u_id <= 55) GROUP BY x.name', 'SELECT x.u_id, x.name FROM useracct AS x WHERE x.u_id < (SELECT MAX(u_id) FROM useracct WHERE  u_id <= 55)'], ['SELECT MIN(a_id), AVG(i_id), a_id, u_id FROM review WHERE rank BETWEEN 1 AND 10 GROUP BY u_id ORDER BY a_id DESC', 'SELECT MIN(a_id), AVG(i_id), u_id FROM review WHERE rank BETWEEN 1 AND 10 GROUP BY u_id ORDER BY u_id DESC'], ['SELECT u_id, u_id, name FROM useracct WHERE  u_id = 24 GROUP BY name ORDER BY u_id DESC', 'SELECT u_id, name FROM useracct WHERE u_id = 24 ORDER BY u_id DESC'], ['SELECT COUNT(DISTINCT item.i_id), title, title FROM item JOIN review ON review.i_id = item.i_id WHERE  a_id > 22 ORDER BY title ASC', 'SELECT COUNT(DISTINCT item.i_id), item.title FROM item JOIN review ON review.i_id = item.i_id WHERE review.a_id > 22 GROUP BY item.title ORDER BY item.title ASC;'], ['SELECT MIN(x.rating), COUNT(DISTINCT x.i_id) FROM review AS x JOIN review ON review.a_id = x.a_id WHERE  x.rank = 31', 'SELECT MIN(x.rating), COUNT(DISTINCT x.i_id) FROM review AS x WHERE x.rank = 31'], ['SELECT AVG(target_u_id), AVG(source_u_id), name FROM trust JOIN useracct ON useracct.u_id = trust.source_u_id AND trust.target_u_id = useracct.u_id WHERE  u_id < 44 AND target_u_id IN (SELECT target_u_id FROM trust AS a WHERE  a.trust <= 44 LIMIT 1) ORDER BY name ASC', 'SELECT AVG(T1.target_u_id), AVG(T1.source_u_id), T2.name FROM trust AS T1 JOIN useracct AS T2 ON T2.u_id = T1.target_u_id WHERE T2.u_id < 44 AND T1.target_u_id IN (SELECT target_u_id FROM trust AS T3 WHERE T3.trust <= 44 LIMIT 1) ORDER BY T2.name ASC'], ['SELECT h.name FROM useracct AS h JOIN useracct ON useracct.u_id = h.u_id WHERE  h.u_id < 74 GROUP BY h.name HAVING COUNT(h.u_id) < 56 ORDER BY h.name DESC', 'SELECT name FROM useracct WHERE u_id < 74 GROUP BY name HAVING COUNT(u_id) < 56 ORDER BY name DESC;'], ['SELECT SUM(b.u_id) FROM useracct AS b JOIN useracct ON useracct.u_id = b.u_id WHERE b.u_id BETWEEN 1 AND 10 OR u_id IN (SELECT u_id FROM useracct AS d)', 'SELECT SUM(b.u_id) FROM useracct AS b JOIN useracct AS c ON c.u_id = b.u_id WHERE b.u_id BETWEEN 1 AND 10 OR c.u_id IN (SELECT u_id FROM useracct AS d)'], ['SELECT p.u_id, p.name FROM useracct AS p GROUP BY p.name HAVING SUM(p.u_id) < 2 ORDER BY p.name DESC', 'SELECT p.u_id, p.name FROM useracct AS p GROUP BY p.name HAVING COUNT(p.u_id) < 2 ORDER BY p.name DESC;'], ['SELECT COUNT(DISTINCT item.i_id), COUNT(DISTINCT item.i_id), COUNT(DISTINCT review.i_id) FROM item JOIN review ON review.i_id = item.i_id WHERE  review.i_id = 55 LIMIT 3', 'SELECT COUNT(DISTINCT item.i_id), COUNT(DISTINCT review.i_id) FROM item JOIN review ON review.i_id = item.i_id WHERE review.i_id = 55 LIMIT 1']], 'school_finance': [['SELECT Enrollment FROM School', 'SELECT S.Enrollment FROM School S INNER JOIN budget B ON S.School_id = CAST(B.School_id AS TEXT);'], ['SELECT total_budget_percent_invested, endowment.School_id FROM School JOIN budget JOIN endowment ON School.School_id = budget.School_id AND endowment.School_id = School.School_id WHERE  total_budget_percent_invested <= 23 OR EXISTS (SELECT * FROM School WHERE  Enrollment > 53 AND budget.School_id = School_id) ORDER BY total_budget_percent_invested ASC', 'SELECT total_budget_percent_invested, CAST(endowment.School_id AS number) AS School_id FROM School JOIN budget ON CAST(School.School_id AS number) = budget.School_id JOIN endowment ON CAST(School.School_id AS number) = CAST(endowment.School_id AS number) WHERE total_budget_percent_invested <= 23 OR EXISTS (SELECT * FROM School WHERE Enrollment > 53 AND CAST(budget.School_id AS number) = CAST(School.School_id AS number)) ORDER BY total_budget_percent_invested ASC'], ['SELECT MAX(b.endowment_id), endowment.donator_name FROM endowment AS b JOIN endowment ON endowment.endowment_id = b.endowment_id', 'SELECT T.endowment_id, T.donator_name FROM endowment AS T ORDER BY T.endowment_id DESC LIMIT 1;'], ['SELECT b.donator_name FROM endowment AS b JOIN endowment ON endowment.endowment_id = b.endowment_id WHERE donator_name >= (SELECT MIN(donator_name) FROM endowment WHERE School_id BETWEEN 1 AND 10) LIMIT 1', 'SELECT b.donator_name FROM endowment AS b JOIN endowment AS e ON e.endowment_id = b.endowment_id WHERE b.donator_name >= (SELECT MIN(donator_name) FROM endowment WHERE School_id BETWEEN 1 AND 10) LIMIT 1'], ['SELECT Enrollment FROM School WHERE  Enrollment < 70', 'SELECT Enrollment FROM School WHERE CAST(School_id AS number) IS NOT NULL AND Enrollment < 70'], ['SELECT COUNT(z.Budgeted), z.Budget_invested_percent FROM budget AS z', 'SELECT SUM(z.Budgeted), z.Budget_invested_percent FROM budget AS z']], 'race_track': [['SELECT MIN(Seating), Name FROM track WHERE Seating BETWEEN 1 AND 10 OR  Track_ID <= 43', 'SELECT MIN(Seating), Name FROM track WHERE Seating BETWEEN 1 AND 10 OR Track_ID <= 43;'], ['SELECT Race_ID FROM race WHERE Race_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM track AS y WHERE y.Seating BETWEEN 1 AND 10 AND race.Race_ID = y.Track_ID) LIMIT 7', 'SELECT Race_ID FROM race WHERE CAST(race.Track_ID AS NUMBER) BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM track AS y WHERE y.Seating BETWEEN 1 AND 10 AND CAST(race.Track_ID AS NUMBER) = y.Track_ID) LIMIT 7'], ['SELECT w.Date FROM race JOIN race AS w ON race.Race_ID = w.Race_ID LIMIT 1', 'SELECT Date FROM race LIMIT 1'], ['SELECT AVG(l.Seating), SUM(l.Seating), l.Track_ID, l.Seating FROM track AS l WHERE Name > (SELECT MAX(Name) FROM race AS g WHERE  g.Race_ID = 75 LIMIT 5) GROUP BY l.Seating LIMIT 3', 'SELECT AVG(l.Seating) AS avg_seating, SUM(l.Seating) AS sum_seating, l.Track_ID, l.Seating FROM track AS l WHERE l.Seating > (SELECT MAX(g.Seating) FROM track AS g) LIMIT 3'], ['SELECT Seating FROM race JOIN track ON race.Track_ID = track.Track_ID WHERE  Seating >= 53 AND EXISTS (SELECT * FROM race WHERE  Race_ID <= 68 AND track.Track_ID = Track_ID) GROUP BY Seating', 'SELECT T.Seating FROM race R JOIN track T ON CAST(R.Track_ID AS NUMBER) = T.Track_ID WHERE T.Seating >= 53 AND EXISTS (SELECT * FROM race WHERE Race_ID <= 68 AND CAST(Race.Track_ID AS NUMBER) = T.Track_ID) GROUP BY T.Seating'], ['SELECT COUNT(DISTINCT race.Name), Year_Opened FROM race JOIN track ON race.Track_ID = track.Track_ID WHERE Race_ID BETWEEN 1 AND 10', 'SELECT COUNT(DISTINCT race.Name), track.Year_Opened FROM race JOIN track ON CAST(track.Track_ID AS TEXT) = race.Track_ID WHERE race.Race_ID BETWEEN 1 AND 10'], ['SELECT MIN(Year_Opened), MAX(Year_Opened), SUM(Year_Opened) FROM track WHERE  Track_ID < 31 LIMIT 6', 'SELECT MIN(Year_Opened), MAX(Year_Opened), SUM(Year_Opened) FROM track WHERE Track_ID < 31'], ['SELECT COUNT(Year_Opened), COUNT(DISTINCT Year_Opened), Class FROM race JOIN track ON race.Track_ID = track.Track_ID WHERE  Seating = 38 LIMIT 3', 'SELECT COUNT(T2.Year_Opened), COUNT(DISTINCT T2.Year_Opened), T1.Class FROM race AS T1 JOIN track AS T2 ON CAST(T2.Track_ID AS TEXT) = T1.Track_ID WHERE T2.Seating = 38 GROUP BY T1.Class LIMIT 3;'], ['SELECT COUNT(Race_ID), COUNT(Year_Opened), COUNT(DISTINCT race.Name) FROM race JOIN track ON race.Track_ID = track.Track_ID WHERE  Race_ID <= 21', 'SELECT COUNT(race.Race_ID), COUNT(track.Year_Opened), COUNT(DISTINCT race.Name) FROM race JOIN track ON CAST(race.Track_ID AS number) = track.Track_ID WHERE race.Race_ID <= 21']], 'riding_club': [['SELECT MAX(Starting_year), Votes FROM player_coach JOIN player ON player.Player_ID = player_coach.Player_ID WHERE  Starting_year = 38 ORDER BY Votes DESC', 'SELECT pc.Starting_year, p.Votes FROM player_coach pc JOIN player p ON pc.Player_ID = p.Player_ID WHERE pc.Starting_year = 38 ORDER BY p.Votes DESC'], ['SELECT COUNT(DISTINCT club.Start_year), club.Club_name FROM club AS y JOIN club ON club.Club_ID = y.Club_ID WHERE  club.Club_ID < 6 ORDER BY club.Club_name DESC', 'SELECT COUNT(DISTINCT y.Start_year), y.Club_name FROM club AS y JOIN club AS z ON y.Club_ID = z.Club_ID WHERE z.Club_ID < 6 ORDER BY y.Club_name DESC'], ['SELECT MAX(player_coach.Starting_year) FROM player_coach JOIN player_coach AS f ON player_coach.Player_ID = f.Player_ID WHERE  player_coach.Starting_year >= 68', 'SELECT MAX(Starting_year) FROM player_coach WHERE Starting_year >= 68'], ['SELECT SUM(Club_ID), MAX(Club_ID), Club_ID, Region FROM club WHERE Club_name IN (SELECT Club_name FROM club AS a WHERE  a.Start_year = 86 LIMIT 3) GROUP BY Region ORDER BY Region ASC', 'SELECT SUM(Club_ID) AS total_club_id, MAX(Club_ID) AS max_club_id, Region FROM club WHERE Club_name IN (SELECT Club_name FROM club AS a WHERE a.Start_year = 86 LIMIT 3) GROUP BY Region ORDER BY Region ASC'], ['SELECT Rank FROM player WHERE Player_ID BETWEEN 1 AND 10 OR  Votes > 95 LIMIT 9', 'SELECT Player_ID FROM player WHERE Player_ID BETWEEN 1 AND 10 OR Votes > 95 LIMIT 9'], ['SELECT Club_name FROM match_result JOIN club ON club.Club_ID = match_result.Club_ID WHERE  match_result.Club_ID != 73 ORDER BY Club_name DESC LIMIT 5', 'SELECT Club_name FROM match_result JOIN club ON club.Club_ID = match_result.Club_ID WHERE match_result.Club_ID != 73 ORDER BY Club_name DESC LIMIT 5'], ['SELECT MIN(Player_ID), Sponsor_name FROM player WHERE  Player_ID = 23 ORDER BY Sponsor_name ASC', 'SELECT Sponsor_name FROM player WHERE Player_ID = 23 ORDER BY Sponsor_name ASC'], ['SELECT SUM(Club_ID), SUM(Start_year), Region FROM club WHERE  Start_year < 98', 'SELECT SUM(Club_ID), SUM(Start_year), Region FROM club WHERE Start_year < 98 GROUP BY Region;'], ['SELECT SUM(Starting_year), COUNT(DISTINCT player.Player_ID), coach.Rank FROM coach JOIN player_coach JOIN player ON player_coach.Coach_ID = coach.Coach_ID AND player.Player_ID = player_coach.Player_ID WHERE  coach.Rank < 12 GROUP BY coach.Rank LIMIT 9', 'SELECT SUM(player_coach.Starting_year), COUNT(DISTINCT player.Player_ID), coach.Rank FROM (coach JOIN player_coach ON coach.Coach_ID = player_coach.Coach_ID) JOIN player ON player.Player_ID = player_coach.Player_ID WHERE coach.Rank < 12 GROUP BY coach.Rank LIMIT 9;'], ['SELECT AVG(Player_ID), Player_name FROM player WHERE  Player_ID < 84 ORDER BY Player_name ASC', 'SELECT Player_name FROM player WHERE Player_ID < 84 ORDER BY Player_name ASC'], ['SELECT SUM(Club_ID), SUM(Rank) FROM coach WHERE  Coach_ID <= 54 AND Coach_name <= (SELECT MAX(Coach_name) FROM coach WHERE Rank BETWEEN 1 AND 10)', 'SELECT SUM(Club_ID), SUM(Rank) FROM coach WHERE Coach_ID <= 54 AND Coach_name IN (SELECT Coach_name FROM coach WHERE Rank BETWEEN 1 AND 10 ORDER BY Coach_name DESC LIMIT 1)'], ['SELECT n.Residence, n.Occupation FROM player AS n WHERE  n.Votes <= 8 OR Player_name >= (SELECT MAX(Player_name) FROM player WHERE Player_ID BETWEEN 1 AND 10 OR  Player_ID >= 41 LIMIT 5) GROUP BY n.Occupation HAVING COUNT(n.Votes) <= 63 ORDER BY n.Residence DESC', 'SELECT n.Residence, n.Occupation FROM player AS n WHERE  n.Votes <= 8 OR n.Player_name >= (SELECT MAX(Player_name) FROM player WHERE Player_ID BETWEEN 1 AND 10 OR  Player_ID >= 41) GROUP BY n.Occupation HAVING COUNT(n.Votes) <= 63 ORDER BY n.Player_name DESC'], ['SELECT SUM(Coach_ID) FROM coach WHERE Rank > (SELECT MIN(Rank) FROM coach WHERE  Club_ID > 23) LIMIT 9', 'SELECT SUM(Coach_ID) FROM coach WHERE coach.Rank > (SELECT MIN(coach.Rank) FROM coach WHERE  Club_ID > 23) LIMIT 9'], ['SELECT p.Residence FROM player AS p JOIN player ON player.Player_ID = p.Player_ID WHERE  p.Votes < 53', 'SELECT Residence FROM player WHERE Votes < 53;']], 'election': [['SELECT u.Party, u.Committee FROM election AS u WHERE u.Election_ID BETWEEN 1 AND 10', 'SELECT e.Party, e.Committee FROM election AS e WHERE e.Election_ID BETWEEN 1 AND 10;'], ['SELECT party.Party, Year, Lieutenant_Governor FROM election JOIN party ON party.Party_ID = election.Party WHERE  party.Party = 30 AND Year < (SELECT AVG(Year) FROM party WHERE  Year < 56) ORDER BY Lieutenant_Governor ASC', 'SELECT p.Party, p.Year, p.Lieutenant_Governor FROM party p WHERE p.Year < (SELECT AVG(Year) FROM party WHERE Year < 56) ORDER BY p.Lieutenant_Governor ASC'], ['SELECT Year, Party_ID, Lieutenant_Governor FROM party WHERE  Year > 90 GROUP BY Lieutenant_Governor HAVING AVG(Year) <= 9 LIMIT 4', 'SELECT Year, Party_ID, Lieutenant_Governor FROM party WHERE Year > 90 AND Lieutenant_Governor IS NOT NULL LIMIT 4'], ['SELECT s.Election_ID, election.District, s.Counties_Represented FROM election JOIN election AS s ON election.Election_ID = s.Election_ID WHERE  s.First_Elected > 99 GROUP BY s.Counties_Represented HAVING SUM(election.Election_ID) = 75 ORDER BY election.District DESC', 'SELECT e.Election_ID, c.County_name, e.Counties_Represented FROM election e JOIN county c ON e.District = c.County_Id WHERE e.First_Elected > 99 GROUP BY e.Counties_Represented, c.County_name ORDER BY c.County_name DESC;'], ['SELECT AVG(d.County_Id), d.County_Id, d.Zip_code FROM county AS d WHERE d.Population BETWEEN 1 AND 10 ORDER BY d.Zip_code ASC', 'SELECT AVG(d.Population), d.County_Id, d.Zip_code FROM county AS d WHERE d.Population BETWEEN 1000 AND 1000000 ORDER BY d.Zip_code ASC'], ['SELECT u.Election_ID FROM election AS u WHERE  u.First_Elected < 98', 'SELECT e.Election_ID FROM election AS e WHERE e.First_Elected < 98;'], ['SELECT County_name, County_name, Population FROM county WHERE  Population != 0 GROUP BY Population ORDER BY County_name ASC', 'SELECT County_name, Population FROM county WHERE Population != 0 GROUP BY County_name, Population ORDER BY County_name ASC;'], ['SELECT First_Elected, Delegate FROM election WHERE District BETWEEN 1 AND 10 AND  Election_ID < 22 ORDER BY Delegate DESC', 'SELECT First_Elected, Delegate FROM election WHERE District BETWEEN 1 AND 10 AND  Election_ID < 22 ORDER BY Delegate DESC'], ['SELECT COUNT(DISTINCT Zip_code), Committee, Counties_Represented FROM election JOIN county ON election.District = county.County_Id WHERE  First_Elected < 27 GROUP BY Counties_Represented HAVING SUM(County_Id) = 33 LIMIT 10', 'SELECT COUNT(DISTINCT county.Zip_code), election.Committee, election.Counties_Represented FROM election JOIN county ON election.District = county.County_Id WHERE election.First_Elected < 27 GROUP BY election.Counties_Represented, election.Committee LIMIT 10'], ['SELECT SUM(District), MAX(District) FROM election WHERE  District = 29', 'SELECT COUNT(*) FROM election WHERE District = 29;'], ['SELECT t.Year, t.Attorney_General FROM party AS t WHERE  t.Party_ID >= 97 GROUP BY t.Attorney_General LIMIT 1', 'SELECT Year, Attorney_General FROM party WHERE Party_ID >= 97 ORDER BY Year DESC LIMIT 1']], 'sakila_1': [['SELECT d.actor_id, d.last_name, d.first_name FROM actor AS d WHERE  d.actor_id > 78 GROUP BY d.first_name HAVING SUM(d.actor_id) < 16', 'SELECT d.actor_id, d.last_name, d.first_name FROM actor AS d WHERE  d.actor_id > 78 GROUP BY d.actor_id HAVING SUM(d.actor_id) < 16'], ['SELECT SUM(replacement_cost), SUM(replacement_cost), MIN(rental_rate), release_year FROM film WHERE  original_language_id != 50 GROUP BY release_year HAVING AVG(original_language_id) > 95', 'SELECT SUM(replacement_cost), MIN(rental_rate), EXTRACT(YEAR FROM release_year) AS release_year FROM film WHERE original_language_id != 50 AND original_language_id > 95 GROUP BY EXTRACT(YEAR FROM release_year)'], ['SELECT rental_duration, language.language_id, special_features FROM film JOIN film_category JOIN inventory JOIN language ON film.original_language_id = language.language_id AND film.film_id = film_category.film_id AND inventory.film_id = film.film_id AND language.language_id = film.language_id WHERE  language.language_id >= 20 GROUP BY special_features HAVING COUNT(film_category.film_id) <= 26', 'SELECT rental_duration, language.language_id, special_features FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN inventory ON film.film_id = inventory.film_id JOIN language ON film.original_language_id = language.language_id AND film.language_id = language.language_id WHERE language.language_id >= 20 GROUP BY special_features HAVING COUNT(film_category.film_id) <= 26'], ['SELECT SUM(t.language_id) FROM language AS t JOIN language ON language.language_id = t.language_id WHERE  t.language_id > 57 LIMIT 10', 'SELECT COUNT(t.language_id) FROM film AS t JOIN language ON t.language_id = language.language_id WHERE t.language_id > 57 LIMIT 10'], ['SELECT COUNT(category_id), film.language_id FROM film JOIN film_category JOIN language ON film.original_language_id = language.language_id AND film.film_id = film_category.film_id AND language.language_id = film.language_id WHERE category_id != (SELECT MIN(category_id) FROM film_category AS u WHERE  u.film_id = 44) ORDER BY film.language_id DESC', 'SELECT COUNT(fc.category_id), f.language_id FROM film f JOIN film_category fc ON f.film_id = fc.film_id JOIN language l ON f.original_language_id = l.language_id WHERE fc.category_id != (SELECT MIN(category_id) FROM film_category AS u WHERE  u.film_id = 44) ORDER BY f.language_id DESC'], ['SELECT SUM(language_id), name FROM language WHERE  language_id > 41', 'SELECT SUM(language_id), name FROM language WHERE language_id > 41'], ['SELECT COUNT(DISTINCT store_id), original_language_id FROM film JOIN inventory ON inventory.film_id = film.film_id WHERE  language_id = 80 AND language_id NOT IN (SELECT language_id FROM language) GROUP BY original_language_id', 'SELECT COUNT(DISTINCT store_id), original_language_id FROM film JOIN inventory ON inventory.film_id = film.film_id WHERE language_id = 80 GROUP BY original_language_id'], ['SELECT country_id, country_id FROM country WHERE country_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM city WHERE  city_id < 8 AND country.country_id = country_id) ORDER BY country_id DESC', 'SELECT country_id, country_id FROM country WHERE country_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM city WHERE  city_id < 8 AND country.country_id = city.country_id) ORDER BY country_id DESC'], ['SELECT MIN(category.category_id), u.name FROM category AS u JOIN category ON category.category_id = u.category_id WHERE u.category_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM film_category AS s WHERE s.film_id BETWEEN 1 AND 10 AND category.category_id = s.category_id) ORDER BY u.name DESC', 'SELECT MIN(T1.category_id), T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id WHERE T1.category_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM film_category AS s WHERE s.film_id BETWEEN 1 AND 10 AND T1.category_id = s.category_id) ORDER BY T1.name DESC'], ['SELECT COUNT(DISTINCT language.language_id), language.language_id FROM language AS j JOIN language ON language.language_id = j.language_id WHERE EXISTS (SELECT * FROM film WHERE language.language_id = language_id)', 'SELECT COUNT(DISTINCT language.language_id), language.language_id FROM language AS j JOIN language ON language.language_id = j.language_id WHERE EXISTS (SELECT * FROM film f WHERE f.language_id = j.language_id)'], ['SELECT SUM(u.category_id) FROM film_category AS u WHERE  u.category_id > 3', 'SELECT SUM(u.category_id) FROM film_category AS u WHERE u.category_id > 3']], 'product_catalog': [['SELECT s.attribute_id, s.attribute_id, s.attribute_name FROM Attribute_Definitions AS s WHERE  s.attribute_id >= 3 ORDER BY s.attribute_id DESC LIMIT 10', 'SELECT s.attribute_id, s.attribute_name FROM Attribute_Definitions AS s WHERE s.attribute_id >= 3 ORDER BY s.attribute_id DESC LIMIT 10'], ['SELECT COUNT(DISTINCT catalog_publisher), price_in_euros, attribute_value FROM Catalog_Contents_Additional_Attributes JOIN Catalogs JOIN Catalog_Contents JOIN Catalog_Structure ON Catalog_Structure.catalog_id = Catalogs.catalog_id AND Catalog_Structure.catalog_level_number = Catalog_Contents_Additional_Attributes.catalog_level_number AND Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number AND Catalog_Contents_Additional_Attributes.catalog_entry_id = Catalog_Contents.catalog_entry_id WHERE  next_entry_id >= 100 AND price_in_euros >= (SELECT SUM(price_in_euros) FROM Catalog_Contents WHERE  catalog_level_number != 86)', 'SELECT COUNT(DISTINCT Catalogs.catalog_publisher), Catalog_Contents.price_in_euros, Catalog_Contents_Additional_Attributes.attribute_value FROM Catalog_Contents_Additional_Attributes JOIN Catalogs JOIN Catalog_Contents JOIN Catalog_Structure ON Catalog_Structure.catalog_id = Catalogs.catalog_id AND Catalog_Structure.catalog_level_number = Catalog_Contents_Additional_Attributes.catalog_level_number AND Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number AND Catalog_Contents_Additional_Attributes.catalog_entry_id = Catalog_Contents.catalog_entry_id WHERE  Catalog_Contents.next_entry_id >= 100 AND Catalog_Contents.price_in_euros >= (SELECT SUM(price_in_euros) FROM Catalog_Contents WHERE  catalog_level_number != 86)'], ['SELECT COUNT(DISTINCT price_in_pounds), capacity FROM Catalog_Contents WHERE price_in_dollars BETWEEN 1 AND 10 OR  catalog_entry_id >= 72', 'SELECT COUNT(DISTINCT price_in_pounds), capacity FROM Catalog_Contents WHERE price_in_dollars BETWEEN 1 AND 10 OR catalog_entry_id >= 72 GROUP BY capacity;'], ['SELECT MIN(previous_entry_id), COUNT(DISTINCT price_in_dollars) FROM Catalog_Contents_Additional_Attributes JOIN Catalog_Contents JOIN Catalog_Structure ON Catalog_Structure.catalog_level_number = Catalog_Contents_Additional_Attributes.catalog_level_number AND Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number AND Catalog_Contents_Additional_Attributes.catalog_entry_id = Catalog_Contents.catalog_entry_id WHERE  attribute_id < 66', 'SELECT MIN(T2.previous_entry_id), COUNT(DISTINCT T2.price_in_dollars) FROM Catalog_Contents_Additional_Attributes AS T1 JOIN Catalog_Contents AS T2 JOIN Catalog_Structure AS T3 ON T3.catalog_level_number = T1.catalog_level_number AND T2.catalog_level_number = T3.catalog_level_number AND T1.catalog_entry_id = T2.catalog_entry_id WHERE  T1.attribute_id < 66'], ['SELECT v.catalog_level_name, v.catalog_level_name FROM Catalog_Structure AS v WHERE  v.catalog_level_number != 78 ORDER BY v.catalog_level_name DESC', 'SELECT v.catalog_level_name FROM Catalog_Structure AS v WHERE v.catalog_level_number != 78 ORDER BY v.catalog_level_name DESC'], ['SELECT MIN(catalog_level_number), COUNT(DISTINCT catalog_level_number), catalog_level_name, catalog_id FROM Catalog_Structure WHERE  catalog_id != 31 GROUP BY catalog_id', 'SELECT MIN(catalog_level_number), COUNT(DISTINCT catalog_level_number), catalog_level_name, catalog_id FROM Catalog_Structure WHERE catalog_id != 31 GROUP BY catalog_level_name, catalog_id;'], ['SELECT price_in_pounds, product_stock_number FROM Catalog_Contents JOIN Catalog_Structure ON Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number WHERE catalog_entry_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Catalog_Contents_Additional_Attributes WHERE  attribute_id > 74 AND Catalog_Contents.catalog_entry_id = catalog_entry_id LIMIT 7) LIMIT 3', 'SELECT price_in_pounds, product_stock_number FROM Catalog_Contents JOIN Catalog_Structure ON Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number WHERE catalog_entry_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Catalog_Contents_Additional_Attributes WHERE attribute_id > 74 AND Catalog_Contents.catalog_entry_id = Catalog_Contents_Additional_Attributes.catalog_entry_id LIMIT 7) LIMIT 3'], ['SELECT previous_entry_id, height, date_of_latest_revision FROM Catalogs JOIN Catalog_Contents JOIN Catalog_Structure ON Catalog_Structure.catalog_id = Catalogs.catalog_id AND Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number WHERE  Catalog_Contents.catalog_level_number != 14 GROUP BY date_of_latest_revision ORDER BY previous_entry_id DESC LIMIT 7', 'SELECT T3.previous_entry_id, T3.height, T1.date_of_latest_revision FROM Catalogs AS T1 JOIN Catalog_Structure AS T2 ON T2.catalog_id = T1.catalog_id JOIN Catalog_Contents AS T3 ON T3.catalog_level_number = T2.catalog_level_number WHERE T3.catalog_level_number != 14 GROUP BY T3.previous_entry_id, T3.height, T1.date_of_latest_revision ORDER BY T3.previous_entry_id DESC LIMIT 7;'], ['SELECT MAX(Catalog_Structure.catalog_level_number), Catalog_Structure.catalog_level_number FROM Catalog_Structure AS z JOIN Catalog_Structure ON Catalog_Structure.catalog_level_number = z.catalog_level_number WHERE  Catalog_Structure.catalog_id != 1 ORDER BY Catalog_Structure.catalog_level_number ASC', 'SELECT MAX(y.catalog_level_number), y.catalog_level_number FROM Catalog_Structure AS z JOIN Catalog_Structure AS y ON y.catalog_level_number = z.catalog_level_number WHERE y.catalog_id != 1 ORDER BY y.catalog_level_number ASC;']], 'customers_and_addresses': [['SELECT COUNT(DISTINCT customer_id), channel_code FROM Customer_Contact_Channels WHERE  customer_id > 66 ORDER BY channel_code ASC', 'SELECT COUNT(DISTINCT customer_id), channel_code FROM Customer_Contact_Channels WHERE customer_id > 66 ORDER BY channel_code ASC'], ['SELECT order_id FROM Order_Items WHERE  order_id < 54 ORDER BY order_id DESC LIMIT 5', 'SELECT order_id FROM Order_Items WHERE order_id < 54 ORDER BY order_id DESC LIMIT 5'], ['SELECT Products.product_id FROM Products AS n JOIN Products ON Products.product_id = n.product_id WHERE  n.product_id = 53 ORDER BY Products.product_id DESC', 'SELECT product_id FROM Products WHERE product_id = 53'], ['SELECT order_id FROM Customer_Orders WHERE  customer_id <= 25 ORDER BY order_id DESC LIMIT 5', 'SELECT order_id FROM Customer_Orders WHERE customer_id <= 25 ORDER BY order_id DESC LIMIT 5'], ['SELECT COUNT(DISTINCT b.state_province_county) FROM Addresses AS b WHERE b.address_id BETWEEN 1 AND 10 OR  b.address_id <= 66', 'SELECT COUNT(DISTINCT b.state_province_county) FROM Addresses AS b WHERE b.address_id BETWEEN 1 AND 10 OR  b.address_id = 66;'], ['SELECT a.customer_id, a.contact_number FROM Customer_Contact_Channels AS a WHERE a.customer_id BETWEEN 1 AND 10 OR channel_code IN (SELECT channel_code FROM Customer_Contact_Channels WHERE customer_id BETWEEN 1 AND 10)', 'SELECT a.customer_id, a.contact_number FROM Customer_Contact_Channels AS a WHERE a.customer_id BETWEEN 1 AND 10 OR a.channel_code IN (SELECT channel_code FROM Customer_Contact_Channels WHERE customer_id BETWEEN 1 AND 10);'], ['SELECT COUNT(f.address_id), COUNT(DISTINCT f.zip_postcode), f.address_content, f.city FROM Addresses AS f WHERE address_content IN (SELECT address_content FROM Addresses AS k) GROUP BY f.city', 'SELECT COUNT(f.address_id), COUNT(DISTINCT f.zip_postcode), f.address_content, f.city FROM Addresses AS f WHERE f.address_content IN (SELECT address_content FROM Addresses AS k GROUP BY k.address_content HAVING COUNT(k.address_content) > 1) GROUP BY f.city, f.address_content'], ['SELECT payment_method, customer_name, other_customer_details FROM Customers WHERE  customer_id < 76 LIMIT 5', 'SELECT payment_method, customer_name, other_customer_details FROM Customers WHERE customer_id < 76 LIMIT 5'], ['SELECT order_details FROM Customer_Orders WHERE  order_id <= 75 OR order_status IN (SELECT order_status FROM Customer_Orders AS e WHERE e.order_id BETWEEN 1 AND 10) ORDER BY order_details DESC', 'SELECT order_details FROM Customer_Orders WHERE order_id <= 75 OR order_status IN (SELECT order_status FROM Customer_Orders AS e WHERE e.order_id BETWEEN 1 AND 10) ORDER BY order_details DESC'], ['SELECT AVG(z.customer_id), COUNT(z.customer_id) FROM Customer_Contact_Channels AS z WHERE  z.customer_id > 52 LIMIT 3', 'SELECT AVG(z.customer_id), COUNT(z.customer_id) FROM Customer_Contact_Channels AS z WHERE z.customer_id > 52'], ['SELECT z.other_address_details FROM Addresses AS z WHERE  z.address_id >= 40 LIMIT 10', 'SELECT other_address_details FROM Addresses AS z WHERE  z.address_id >= 40 LIMIT 10']], 'book_review': [['SELECT Rating FROM review WHERE Review_ID BETWEEN 1 AND 10 GROUP BY Rating HAVING SUM(Rating) >= 34 LIMIT 2', 'SELECT Rating FROM review WHERE Review_ID BETWEEN 1 AND 10 GROUP BY Rating HAVING Rating >= 34 LIMIT 2'], ['SELECT MIN(Book_ID), Book_ID FROM book WHERE  Pages > 91 ORDER BY Book_ID DESC', 'SELECT MIN(Book_ID) FROM book WHERE Pages > 91'], ['SELECT MAX(Chapters), Book_ID FROM book WHERE  Pages < 21 ORDER BY Book_ID ASC', 'SELECT Book_ID, MAX(Chapters) FROM book WHERE Pages < 21 GROUP BY Book_ID ORDER BY Book_ID ASC'], ['SELECT Title FROM book WHERE  Chapters != 19 AND EXISTS (SELECT * FROM review AS n WHERE n.Rating BETWEEN 1 AND 10 AND book.Book_ID = n.Book_ID LIMIT 10) ORDER BY Title DESC', 'SELECT Title FROM book WHERE Chapters != 19 AND EXISTS (SELECT * FROM review AS n WHERE n.Rating BETWEEN 1 AND 10 AND book.Book_ID = n.Book_ID) ORDER BY Title DESC'], ['SELECT AVG(q.Review_ID), COUNT(DISTINCT review.Rating), COUNT(DISTINCT q.Review_ID), review.Rank FROM review AS q JOIN review ON review.Review_ID = q.Review_ID WHERE q.Book_ID BETWEEN 1 AND 10 AND  q.Readers_in_Million > 11 GROUP BY review.Rank HAVING AVG(review.Review_ID) > 32', 'SELECT AVG(Review_ID), COUNT(DISTINCT Rating), COUNT(DISTINCT Review_ID), Rank FROM review WHERE Book_ID BETWEEN 1 AND 10 AND Readers_in_Million > 11 GROUP BY Rank HAVING AVG(Review_ID) > 32'], ['SELECT book.Type FROM book AS y JOIN book ON book.Book_ID = y.Book_ID WHERE  book.Book_ID <= 35 OR Pages < (SELECT SUM(Pages) FROM book WHERE Chapters BETWEEN 1 AND 10 AND  Book_ID = 94 LIMIT 6) LIMIT 7', 'SELECT Type FROM book WHERE Book_ID <= 35 OR Pages < (SELECT SUM(Pages) FROM book WHERE Chapters BETWEEN 1 AND 10 AND Book_ID = 94) LIMIT 7'], ['SELECT COUNT(DISTINCT q.Rank), q.Rating FROM review AS q WHERE q.Book_ID BETWEEN 1 AND 10 GROUP BY q.Rating', 'SELECT q.Rating, COUNT(DISTINCT q.Rank) FROM review AS q WHERE q.Book_ID BETWEEN 1 AND 10 GROUP BY q.Rating'], ['SELECT COUNT(DISTINCT Audio), Audio FROM book WHERE EXISTS (SELECT * FROM review WHERE  Rating != 89 AND book.Book_ID = Book_ID) ORDER BY Audio DESC', 'SELECT COUNT(DISTINCT Audio), Audio FROM book WHERE EXISTS (SELECT * FROM review WHERE Rating != 89 AND book.Book_ID = review.Book_ID) ORDER BY Audio DESC'], ['SELECT COUNT(DISTINCT Chapters), Pages, Pages, Type FROM book WHERE  Chapters != 85 OR Book_ID NOT IN (SELECT Book_ID FROM review WHERE Rating BETWEEN 1 AND 10 LIMIT 3) GROUP BY Type', 'SELECT COUNT(DISTINCT Chapters), Pages, Type FROM book WHERE Chapters != 85 OR Book_ID NOT IN (SELECT Book_ID FROM review WHERE Rating BETWEEN 1 AND 10 LIMIT 3) GROUP BY Type, Pages;']], 'game_1': [['SELECT LName, Fname FROM Student GROUP BY Fname HAVING SUM(Major) <= 39 LIMIT 7', 'SELECT LName, Fname, SUM(Major) AS TotalMajor FROM Student GROUP BY LName, Fname HAVING SUM(Major) <= 39 LIMIT 7'], ['SELECT MAX(u.Advisor) FROM Student JOIN Student AS u ON Student.StuID = u.StuID', 'SELECT MAX(Advisor) FROM Student;'], ['SELECT Video_Games.GameID, GName FROM Plays_Games JOIN Video_Games ON Video_Games.GameID = Plays_Games.GameID WHERE StuID BETWEEN 1 AND 10 AND  Video_Games.GameID < 44', 'SELECT Video_Games.GameID, GName FROM Plays_Games JOIN Video_Games ON Video_Games.GameID = Plays_Games.GameID WHERE StuID BETWEEN 1 AND 10 AND Video_Games.GameID < 44'], ['SELECT b.GName, b.GType FROM Video_Games JOIN Video_Games AS b ON Video_Games.GameID = b.GameID', 'SELECT b.GName, b.GType FROM Plays_Games AS a JOIN Video_Games AS b ON a.GameID = b.GameID'], ['SELECT GName FROM Plays_Games JOIN Video_Games JOIN Student JOIN SportsInfo ON Plays_Games.StuID = Student.StuID AND Student.StuID = SportsInfo.StuID AND Video_Games.GameID = Plays_Games.GameID WHERE EXISTS (SELECT * FROM Plays_Games WHERE  StuID >= 95 AND Video_Games.GameID = GameID) ORDER BY GName DESC', 'SELECT GName FROM Video_Games WHERE GameID IN (SELECT GameID FROM Plays_Games WHERE StuID IN (SELECT StuID FROM Student WHERE StuID >= 95)) ORDER BY GName DESC'], ['SELECT COUNT(DISTINCT GameID), GameID FROM Video_Games WHERE  GameID = 61 ORDER BY GameID DESC', 'SELECT GameID FROM Video_Games WHERE GameID = 61'], ['SELECT LName, Sex, Advisor FROM Student WHERE  Age != 96 AND LName IN (SELECT LName FROM Student WHERE Age BETWEEN 1 AND 10 AND  StuID != 74) GROUP BY Advisor LIMIT 6', 'SELECT LName, Sex, Advisor FROM Student WHERE Age != 96 AND LName IN (SELECT LName FROM Student WHERE Age BETWEEN 1 AND 10 AND StuID != 74) GROUP BY LName, Sex, Advisor LIMIT 6']], 'storm_record': [['SELECT y.Name, y.Name, y.Dates_active FROM storm JOIN storm AS y ON storm.Storm_ID = y.Storm_ID WHERE Number_Deaths <= (SELECT MIN(Number_Deaths) FROM storm AS u WHERE u.Storm_ID BETWEEN 1 AND 10 LIMIT 2) GROUP BY y.Dates_active HAVING MAX(y.Number_Deaths) >= 13', 'SELECT Name, Dates_active FROM storm WHERE Number_Deaths >= (SELECT MIN(Number_Deaths) FROM storm WHERE Storm_ID BETWEEN 1 AND 10) AND Number_Deaths >= 13;'], ['SELECT z.Region_id FROM region AS z WHERE  z.Region_id = 28 LIMIT 1', 'SELECT Region_id FROM region AS z WHERE z.Region_id = 28 LIMIT 1'], ['SELECT z.Region_id, z.Region_id FROM region AS z WHERE  z.Region_id > 65 LIMIT 4', 'SELECT Region_id FROM region AS z WHERE Region_id > 65 LIMIT 4'], ['SELECT COUNT(Damage_millions_USD), COUNT(Number_Deaths) FROM storm WHERE EXISTS (SELECT * FROM affected_region AS n WHERE n.Number_city_affected BETWEEN 1 AND 10 AND storm.Storm_ID = n.Storm_ID)', 'SELECT COUNT(Damage_millions_USD), COUNT(Number_Deaths) FROM storm WHERE EXISTS (SELECT * FROM affected_region AS n WHERE n.Number_city_affected BETWEEN 1 AND 10 AND storm.Storm_ID = n.Storm_ID)'], ['SELECT COUNT(DISTINCT a.Damage_millions_USD), a.Name, storm.Name FROM storm AS a JOIN storm ON storm.Storm_ID = a.Storm_ID WHERE  a.Number_Deaths = 47', 'SELECT COUNT(DISTINCT Damage_millions_USD), Name FROM storm WHERE Number_Deaths = 47'], ['SELECT MIN(Number_Deaths), Number_city_affected, Name FROM storm JOIN affected_region ON affected_region.Storm_ID = storm.Storm_ID WHERE  Number_Deaths > 5 GROUP BY Name', 'SELECT MIN(T1.Number_Deaths), T2.Number_city_affected, T1.Name FROM storm T1 JOIN affected_region T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Number_Deaths > 5 GROUP BY T1.Name, T2.Number_city_affected;'], ['SELECT Region_code FROM region WHERE  Region_id != 23 ORDER BY Region_code ASC', 'SELECT Region_code FROM region WHERE Region_id != 23 ORDER BY Region_code ASC'], ['SELECT Region_id, Region_id FROM region WHERE  Region_id = 42', 'SELECT Region_id, Region_id FROM region WHERE  Region_id = 42']], 'csu_1': [['SELECT COUNT(m.Campus), COUNT(DISTINCT m.Campus) FROM faculty AS m WHERE  m.Faculty = 12', 'SELECT COUNT(f.Campus), COUNT(DISTINCT f.Campus) FROM faculty AS f WHERE f.Faculty = 12'], ['SELECT Graduate FROM discipline_enrollments', 'SELECT Graduate FROM discipline_enrollments WHERE Campus = 1;'], ['SELECT MIN(h.Year), COUNT(DISTINCT h.Year), h.County, h.Campus FROM Campuses AS h WHERE  h.Id <= 79 OR County <= (SELECT SUM(County) FROM Campuses AS m) GROUP BY h.Campus HAVING MIN(h.Year) = 16', 'SELECT MIN(h.Year), COUNT(DISTINCT h.Year), h.County, h.Campus FROM Campuses AS h WHERE h.Id <= 79 GROUP BY h.Campus, h.County HAVING MIN(h.Year) = 16'], ['SELECT AVG(v.Campus), MIN(v.Campus), v.Campus FROM degrees AS v WHERE  v.Campus >= 54 GROUP BY v.Campus', 'SELECT AVG(v.Degrees), MIN(v.Degrees), v.Campus FROM degrees AS v WHERE  v.Degrees >= 54 GROUP BY v.Campus'], ['SELECT Campus, Campus FROM csu_fees WHERE  Year = 70 ORDER BY Campus ASC LIMIT 10', 'SELECT CampusFee, Campus FROM csu_fees WHERE  Year = 70 ORDER BY Campus ASC LIMIT 10'], ['SELECT b.FTE_AY FROM enrollments AS b', 'SELECT b.FTE_AY FROM enrollments AS b'], ['SELECT t.Year FROM csu_fees AS t WHERE t.CampusFee BETWEEN 1 AND 10 OR Year >= (SELECT AVG(Year) FROM discipline_enrollments WHERE  Discipline > 86) GROUP BY t.Year', 'SELECT t.Year FROM csu_fees AS t WHERE t.CampusFee BETWEEN 1 AND 10 GROUP BY t.Year, t.CampusFee']], 'medicine_enzyme_interaction': [['SELECT enzyme_id FROM medicine JOIN medicine_enzyme_interaction ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE  medicine_id != 35 ORDER BY enzyme_id ASC', 'SELECT enzyme_id FROM medicine JOIN medicine_enzyme_interaction ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine_enzyme_interaction.medicine_id != 35 ORDER BY enzyme_id ASC'], ['SELECT interaction_type, interaction_type FROM medicine_enzyme_interaction WHERE  enzyme_id <= 84', 'SELECT interaction_type FROM medicine_enzyme_interaction WHERE enzyme_id <= 84;'], ['SELECT a.FDA_approved, a.name FROM medicine AS a WHERE  a.id > 66 ORDER BY a.FDA_approved DESC', "SELECT a.FDA_approved, a.name FROM medicine AS a WHERE a.id > 66 ORDER BY CASE WHEN a.FDA_approved = 'yes' THEN 1 ELSE 0 END DESC;"], ['SELECT COUNT(b.OMIM), COUNT(DISTINCT b.Product), b.Location FROM enzyme AS b WHERE b.id BETWEEN 1 AND 10', 'SELECT COUNT(b.OMIM), COUNT(DISTINCT b.Product), b.Location FROM enzyme AS b WHERE b.id BETWEEN 1 AND 10 GROUP BY b.Location;']], 'boat_1': [['SELECT name, name FROM Sailors WHERE name NOT IN (SELECT name FROM Boats WHERE  bid > 88) ORDER BY name DESC', 'SELECT name FROM Sailors WHERE name NOT IN (SELECT name FROM Boats WHERE bid > 88) ORDER BY name DESC;'], ['SELECT rating, rating FROM Sailors WHERE  rating <= 65 GROUP BY rating ORDER BY rating DESC', 'SELECT rating FROM Sailors WHERE rating <= 65 GROUP BY rating ORDER BY rating DESC;'], ['SELECT Boats.bid, m.color FROM Boats AS m JOIN Boats ON Boats.bid = m.bid WHERE  Boats.bid < 0 ORDER BY Boats.bid DESC', 'SELECT bid, color FROM Boats WHERE bid > 0 ORDER BY bid DESC;'], ['SELECT bid, name FROM Boats WHERE bid = (SELECT MAX(bid) FROM Reserves WHERE  bid = 66) GROUP BY name', 'SELECT bid, name FROM Boats WHERE bid = (SELECT MAX(bid) FROM Reserves)'], ['SELECT MAX(age), Boats.bid, Sailors.sid FROM Reserves JOIN Sailors JOIN Boats ON Reserves.bid = Boats.bid AND Sailors.sid = Reserves.sid WHERE Boats.bid BETWEEN 1 AND 10 AND  Reserves.sid >= 1', 'SELECT MAX(Sailors.age), Boats.bid, Sailors.sid FROM Reserves JOIN Sailors JOIN Boats ON Reserves.bid = Boats.bid AND Sailors.sid = Reserves.sid WHERE Boats.bid BETWEEN 1 AND 10 AND Reserves.sid >= 1'], ['SELECT name FROM Reserves JOIN Sailors ON Sailors.sid = Reserves.sid WHERE Reserves.sid BETWEEN 1 AND 10 AND sid NOT IN (SELECT sid FROM Reserves AS n WHERE  n.bid != 36 LIMIT 5) ORDER BY name DESC', 'SELECT T2.name FROM Reserves AS T1 JOIN Sailors AS T2 ON T1.sid = T2.sid WHERE T1.sid BETWEEN 1 AND 10 AND T1.sid NOT IN (SELECT T3.sid FROM Reserves AS T3 WHERE T3.bid != 36 LIMIT 5) ORDER BY T2.name DESC'], ['SELECT SUM(bid), COUNT(bid), day FROM Reserves WHERE  bid = 78 AND sid IN (SELECT sid FROM Reserves AS e WHERE e.bid BETWEEN 1 AND 10)', 'SELECT SUM(bid), COUNT(bid), day FROM Reserves WHERE  bid = 78 AND sid IN (SELECT sid FROM Reserves AS e WHERE e.bid BETWEEN 1 AND 10) GROUP BY day;'], ['SELECT COUNT(bid), bid FROM Boats WHERE  bid > 21 ORDER BY bid ASC', 'SELECT COUNT(bid), bid FROM Boats WHERE bid > 21 GROUP BY bid ORDER BY bid ASC;'], ['SELECT age, bid FROM Reserves JOIN Sailors ON Sailors.sid = Reserves.sid WHERE age BETWEEN 1 AND 10 OR sid = (SELECT AVG(sid) FROM Reserves WHERE  sid <= 7) LIMIT 4', 'SELECT T2.age, T1.bid FROM Reserves AS T1 JOIN Sailors AS T2 ON T1.sid = T2.sid WHERE T2.age BETWEEN 1 AND 100 OR T1.sid = (SELECT AVG(T1.sid) FROM Reserves AS T1 WHERE  T1.sid <= 7 AND T1.sid IN (SELECT sid FROM Sailors)) LIMIT 4'], ['SELECT COUNT(DISTINCT bid), COUNT(DISTINCT color), color FROM Boats', 'SELECT COUNT(DISTINCT bid), COUNT(DISTINCT color), color FROM Boats GROUP BY color;'], ['SELECT t.day FROM Reserves AS t WHERE t.sid BETWEEN 1 AND 10 AND sid IN (SELECT sid FROM Reserves AS r WHERE  r.bid >= 28)', 'SELECT t.day FROM Reserves AS t WHERE t.sid BETWEEN 1 AND 10 AND t.bid IN (SELECT bid FROM Reserves AS r WHERE r.bid >= 28)'], ['SELECT v.day, v.day FROM Reserves AS v WHERE  v.sid = 72', 'SELECT v.day FROM Reserves AS v WHERE  v.sid = 72'], ['SELECT h.bid, h.day FROM Reserves AS h', 'SELECT h.bid, h.day FROM Reserves AS h']], 'cre_Students_Information_Systems': [['SELECT SUM(student_id), event_id FROM Student_Events WHERE  event_id = 52 ORDER BY event_id ASC', 'SELECT COUNT(student_id), event_id FROM Student_Events WHERE event_id = 52 ORDER BY event_id ASC;'], ['SELECT student_id FROM Students WHERE  student_id > 6 OR EXISTS (SELECT * FROM Behaviour_Monitoring AS w WHERE  w.behaviour_monitoring_id > 37 AND Students.student_id = w.student_id LIMIT 4) ORDER BY student_id ASC', 'SELECT student_id FROM Students WHERE student_id > 6 OR EXISTS (SELECT * FROM Behaviour_Monitoring AS w WHERE w.behaviour_monitoring_id > 37 AND Students.student_id = w.student_id LIMIT 4) ORDER BY student_id ASC'], ['SELECT transcript_details, transcript_details, transcript_details, student_id FROM Transcripts WHERE student_id BETWEEN 1 AND 10 OR  student_id > 15 GROUP BY student_id HAVING AVG(transcript_id) >= 20', 'SELECT transcript_details, transcript_id, student_id FROM Transcripts WHERE student_id BETWEEN 1 AND 10 OR student_id > 15 GROUP BY transcript_details, student_id HAVING AVG(transcript_id) >= 20'], ['SELECT student_loan_id FROM Students JOIN Student_Loans JOIN Behaviour_Monitoring ON Behaviour_Monitoring.student_id = Students.student_id AND Student_Loans.student_id = Students.student_id WHERE Student_Loans.student_id BETWEEN 1 AND 10 OR  student_loan_id < 1', 'SELECT student_loan_id FROM Students JOIN Student_Loans ON Student_Loans.student_id = Students.student_id JOIN Behaviour_Monitoring ON Behaviour_Monitoring.student_id = Students.student_id WHERE Student_Loans.student_id BETWEEN 1 AND 10 OR Student_Loans.student_loan_id < 1;'], ['SELECT AVG(Students.student_id), behaviour_monitoring_id, Student_Loans.student_id FROM Students JOIN Achievements JOIN Behaviour_Monitoring JOIN Student_Loans ON Students.student_id = Achievements.student_id AND Behaviour_Monitoring.student_id = Students.student_id AND Student_Loans.student_id = Students.student_id GROUP BY Student_Loans.student_id', 'SELECT AVG(bm.behaviour_monitoring_id), bm.behaviour_monitoring_id, sl.student_id FROM Students s JOIN Achievements a ON s.student_id = a.student_id JOIN Behaviour_Monitoring bm ON s.student_id = bm.student_id JOIN Student_Loans sl ON s.student_id = sl.student_id GROUP BY sl.student_id, bm.behaviour_monitoring_id;'], ['SELECT MAX(Achievements.student_id), SUM(achievement_id), MAX(Achievements.student_id) FROM Students JOIN Achievements JOIN Student_Loans JOIN Ref_Achievement_Type ON Students.student_id = Achievements.student_id AND Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code AND Student_Loans.student_id = Students.student_id WHERE  Students.student_id <= 21', 'SELECT MAX(Achievements.achievement_id), SUM(Achievements.achievement_id) FROM Students JOIN Achievements ON Students.student_id = Achievements.student_id JOIN Student_Loans ON Students.student_id = Student_Loans.student_id JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code WHERE Students.student_id <= 21'], ['SELECT COUNT(DISTINCT m.date_to), m.address_id, m.student_address_id, m.student_id FROM Students_Addresses AS m WHERE  m.address_id != 16 GROUP BY m.student_id HAVING MIN(m.student_id) = 9 ORDER BY m.address_id DESC', 'SELECT COUNT(DISTINCT date_to), address_id, student_address_id, student_id FROM Students_Addresses AS m WHERE address_id != 16 GROUP BY student_id HAVING MIN(student_id) = 9 ORDER BY address_id DESC'], ['SELECT student_id, student_id FROM Transcripts WHERE transcript_id NOT IN (SELECT transcript_id FROM Transcripts AS a) ORDER BY student_id DESC', 'SELECT DISTINCT student_id FROM Transcripts ORDER BY student_id DESC;'], ['SELECT address_type_code, address_type_code, address_type_code, address_id FROM Students_Addresses WHERE student_id BETWEEN 1 AND 10 AND  student_address_id > 40 GROUP BY address_id', 'SELECT address_type_code, address_id FROM Students_Addresses WHERE student_id BETWEEN 1 AND 10 AND  student_address_id > 40'], ['SELECT COUNT(DISTINCT behaviour_monitoring_id), behaviour_monitoring_id FROM Students JOIN Achievements JOIN Behaviour_Monitoring JOIN Ref_Achievement_Type ON Students.student_id = Achievements.student_id AND Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code AND Behaviour_Monitoring.student_id = Students.student_id WHERE  behaviour_monitoring_id < 34 ORDER BY behaviour_monitoring_id DESC', 'SELECT COUNT(DISTINCT Behaviour_Monitoring.behaviour_monitoring_id), Behaviour_Monitoring.behaviour_monitoring_id FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id JOIN Achievements ON Students.student_id = Achievements.student_id JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code WHERE Behaviour_Monitoring.behaviour_monitoring_id < 34 ORDER BY Behaviour_Monitoring.behaviour_monitoring_id DESC'], ['SELECT COUNT(Behaviour_Monitoring.student_id), Students.student_id FROM Students JOIN Achievements JOIN Behaviour_Monitoring ON Students.student_id = Achievements.student_id AND Behaviour_Monitoring.student_id = Students.student_id WHERE Behaviour_Monitoring.student_id BETWEEN 1 AND 10 AND  behaviour_monitoring_id <= 91', 'SELECT COUNT(Behaviour_Monitoring.student_id), Students.student_id FROM Students JOIN Achievements ON Students.student_id = Achievements.student_id JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id WHERE Behaviour_Monitoring.student_id BETWEEN 1 AND 10 AND Behaviour_Monitoring.behaviour_monitoring_id <= 91'], ['SELECT MIN(Students.student_id), MAX(Achievements.student_id), Students.student_id FROM Students JOIN Achievements JOIN Student_Loans JOIN Ref_Achievement_Type ON Students.student_id = Achievements.student_id AND Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code AND Student_Loans.student_id = Students.student_id WHERE student_loan_id < (SELECT MIN(student_loan_id) FROM Student_Loans AS x WHERE  x.amount_of_loan < 39) ORDER BY Students.student_id DESC', 'SELECT MIN(Students.student_id), MAX(Achievements.student_id), Students.student_id FROM Students INNER JOIN Achievements ON Students.student_id = Achievements.student_id INNER JOIN Student_Loans ON Students.student_id = Student_Loans.student_id INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code WHERE student_loan_id < (SELECT MIN(student_loan_id) FROM Student_Loans AS x WHERE  x.amount_of_loan < 39) ORDER BY Students.student_id DESC'], ['SELECT y.teacher_details FROM Teachers AS y JOIN Teachers ON Teachers.teacher_id = y.teacher_id WHERE y.teacher_id BETWEEN 1 AND 10 OR  y.teacher_id >= 57 ORDER BY y.teacher_details DESC', 'SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.teacher_id BETWEEN 1 AND 10 OR T1.teacher_id >= 57 ORDER BY T1.teacher_details DESC']], 'cre_Theme_park': [['SELECT COUNT(DISTINCT Attraction_Type_Code), COUNT(DISTINCT Other_Details), How_to_Get_There, Name FROM Tourist_Attraction_Features JOIN Tourist_Attractions ON Tourist_Attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID WHERE  Feature_ID != 60 GROUP BY Name HAVING MAX(Tourist_Attraction_Features.Tourist_Attraction_ID) > 86 ORDER BY Name DESC', 'SELECT COUNT(DISTINCT TAF.Feature_ID), COUNT(DISTINCT TA.Attraction_Type_Code), TA.How_to_Get_There, TA.Name FROM Tourist_Attractions TA JOIN Tourist_Attraction_Features TAF ON TA.Tourist_Attraction_ID = TAF.Tourist_Attraction_ID WHERE TAF.Feature_ID != 60 GROUP BY TA.Attraction_Type_Code, TA.How_to_Get_There, TA.Name, TAF.Tourist_Attraction_ID HAVING MAX(TAF.Tourist_Attraction_ID) > 86 ORDER BY TA.Name DESC'], ['SELECT MAX(Staff.Tourist_Attraction_ID), g.Other_Details, Staff.Other_Details FROM Staff JOIN Staff AS g ON Staff.Staff_ID = g.Staff_ID WHERE  g.Staff_ID = 56 GROUP BY Staff.Other_Details HAVING MAX(Staff.Tourist_Attraction_ID) > 97 LIMIT 9', 'SELECT MAX(Tourist_Attraction_ID), Other_Details FROM Staff WHERE Staff_ID = 56 GROUP BY Other_Details HAVING MAX(Tourist_Attraction_ID) > 97 LIMIT 9'], ['SELECT COUNT(DISTINCT o.Feature_Details) FROM Features AS o LIMIT 5', 'SELECT COUNT(DISTINCT o.Feature_Details) FROM Features AS o ORDER BY o.Feature_ID LIMIT 5'], ['SELECT Royal_Family_ID, Royal_Family_ID FROM Royal_Family WHERE  Royal_Family_ID > 13', 'SELECT Royal_Family_ID, Royal_Family_Details FROM Royal_Family WHERE Royal_Family_ID > 13;'], ['SELECT o.Feature_ID, o.Feature_ID FROM Features AS o WHERE Feature_Details > (SELECT AVG(Feature_Details) FROM Features WHERE Feature_ID BETWEEN 1 AND 10 AND  Feature_ID >= 70 LIMIT 7)', 'SELECT Feature_ID FROM Features AS o WHERE LENGTH(Feature_Details) > (SELECT AVG(LENGTH(Feature_Details)) FROM Features WHERE Feature_ID BETWEEN 1 AND 10 AND Feature_ID >= 70 LIMIT 7)'], ['SELECT Locations.Location_ID, Tourist_Attractions.Tourist_Attraction_ID FROM Locations JOIN Tourist_Attraction_Features JOIN Ref_Attraction_Types JOIN Tourist_Attractions ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code AND Tourist_Attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID AND Locations.Location_ID = Tourist_Attractions.Location_ID WHERE  Feature_ID = 55', 'SELECT Locations.Location_ID, Tourist_Attractions.Tourist_Attraction_ID FROM Locations JOIN Tourist_Attractions ON Locations.Location_ID = Tourist_Attractions.Location_ID JOIN Tourist_Attraction_Features ON Tourist_Attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID JOIN Ref_Attraction_Types ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code WHERE Tourist_Attraction_Features.Feature_ID = 55'], ['SELECT Tourist_Attraction_ID, Tourist_Attraction_ID, Locations.Location_ID, Location_Name FROM Shops JOIN Locations JOIN Ref_Attraction_Types JOIN Tourist_Attractions ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code AND Locations.Location_ID = Tourist_Attractions.Location_ID AND Shops.Shop_ID = Tourist_Attractions.Tourist_Attraction_ID WHERE Tourist_Attractions.Location_ID BETWEEN 1 AND 10 AND  Locations.Location_ID < 74 GROUP BY Location_Name HAVING MIN(Locations.Location_ID) < 96 LIMIT 2', 'SELECT Tourist_Attraction_ID, Locations.Location_ID, Location_Name FROM Tourist_Attractions JOIN Locations ON Locations.Location_ID = Tourist_Attractions.Location_ID JOIN Ref_Attraction_Types ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code WHERE Tourist_Attractions.Location_ID BETWEEN 1 AND 10 AND  Locations.Location_ID < 74 GROUP BY Location_Name HAVING MIN(Locations.Location_ID) < 96 LIMIT 2'], ['SELECT Location_ID FROM Ref_Attraction_Types JOIN Tourist_Attractions ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code WHERE  Tourist_Attraction_ID <= 73', 'SELECT Tourist_Attractions.Location_ID FROM Ref_Attraction_Types JOIN Tourist_Attractions ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code WHERE Tourist_Attractions.Tourist_Attraction_ID <= 73;'], ['SELECT Royal_Family_Details, How_to_Get_There FROM Locations JOIN Ref_Attraction_Types JOIN Tourist_Attractions JOIN Royal_Family ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code AND Locations.Location_ID = Tourist_Attractions.Location_ID AND Royal_Family.Royal_Family_ID = Tourist_Attractions.Tourist_Attraction_ID ORDER BY How_to_Get_There ASC LIMIT 4', 'SELECT Locations.Location_Name, Tourist_Attractions.How_to_Get_There FROM Locations JOIN Tourist_Attractions ON Locations.Location_ID = Tourist_Attractions.Location_ID JOIN Ref_Attraction_Types ON Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code ORDER BY Tourist_Attractions.How_to_Get_There ASC LIMIT 4;']], 'flight_company': [['SELECT operate_company.id, Vehicle_Flight_number FROM flight JOIN airport JOIN operate_company ON flight.company_id = operate_company.id AND airport.id = flight.airport_id WHERE flight.id BETWEEN 1 AND 10 AND  company_id >= 63', 'SELECT operate_company.id, Vehicle_Flight_number FROM flight JOIN airport ON flight.airport_id = airport.id JOIN operate_company ON flight.company_id = operate_company.id WHERE flight.id BETWEEN 1 AND 10 AND flight.company_id >= 63;'], ['SELECT airport_id, operate_company.id FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE flight.id BETWEEN 1 AND 10 OR  airport_id != 12 ORDER BY operate_company.id ASC', 'SELECT flight.airport_id, operate_company.id FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE flight.id BETWEEN 1 AND 10 OR flight.airport_id != 12 ORDER BY operate_company.id ASC'], ['SELECT MAX(id), Type, name FROM operate_company ORDER BY name ASC LIMIT 7', 'SELECT MAX(id), Type, name FROM operate_company ORDER BY name ASC LIMIT 7'], ['SELECT COUNT(DISTINCT Principal_activities), Group_Equity_Shareholding FROM flight JOIN airport JOIN operate_company ON flight.company_id = operate_company.id AND airport.id = flight.airport_id WHERE  Altitude > 96 ORDER BY Group_Equity_Shareholding ASC LIMIT 1', 'SELECT COUNT(DISTINCT T2.Principal_activities), T2.Group_Equity_Shareholding FROM flight AS T1 JOIN operate_company AS T2 ON T1.company_id = T2.id JOIN airport AS T3 ON T3.id = T1.airport_id WHERE T1.Altitude > 96 GROUP BY T2.Group_Equity_Shareholding ORDER BY T2.Group_Equity_Shareholding ASC LIMIT 1'], ['SELECT COUNT(DISTINCT Pilot), Vehicle_Flight_number, Pilot FROM flight WHERE  Velocity > 94', 'SELECT COUNT(DISTINCT Pilot), Vehicle_Flight_number FROM flight WHERE Velocity > 94 GROUP BY Vehicle_Flight_number;'], ['SELECT MIN(id), ICAO FROM airport WHERE id BETWEEN 1 AND 10 AND  id >= 59 ORDER BY ICAO DESC', 'SELECT MIN(id), ICAO FROM airport WHERE id BETWEEN 1 AND 10 ORDER BY ICAO DESC;'], ['SELECT SUM(Altitude), Velocity, Vehicle_Flight_number FROM flight WHERE company_id BETWEEN 1 AND 10 AND  company_id >= 99 GROUP BY Vehicle_Flight_number ORDER BY Velocity ASC LIMIT 3', 'SELECT SUM(Altitude), Velocity, Vehicle_Flight_number FROM flight WHERE company_id BETWEEN 1 AND 10 OR company_id >= 99 GROUP BY Vehicle_Flight_number ORDER BY Velocity ASC LIMIT 3'], ['SELECT MIN(u.airport_id), u.id FROM flight AS u WHERE  u.company_id != 32', 'SELECT u.id, MIN(u.airport_id) AS min_airport_id FROM flight AS u WHERE u.company_id != 32 GROUP BY u.id;'], ['SELECT MIN(company_id), ICAO FROM flight JOIN airport ON airport.id = flight.airport_id WHERE  airport.id > 58', 'SELECT MIN(T2.company_id), T1.ICAO FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T1.id > 58'], ['SELECT id, name, IATA FROM airport WHERE  id != 36 GROUP BY IATA LIMIT 10', 'SELECT id, name, IATA FROM airport WHERE id != 36 GROUP BY id, name, IATA LIMIT 10'], ['SELECT flight.Velocity FROM flight JOIN flight AS o ON flight.id = o.id WHERE EXISTS (SELECT * FROM operate_company WHERE flight.id = id LIMIT 8) LIMIT 7', 'SELECT T1.Velocity FROM flight AS T1 JOIN operate_company AS T2 ON T1.company_id = T2.id LIMIT 7;'], ['SELECT id, City FROM airport WHERE  id != 42 GROUP BY City HAVING COUNT(id) = 71 ORDER BY id DESC LIMIT 2', 'SELECT MAX(id) AS id, City FROM airport WHERE id != 42 GROUP BY City HAVING COUNT(id) = 71 ORDER BY City DESC LIMIT 2;'], ['SELECT COUNT(DISTINCT Vehicle_Flight_number), Pilot, Altitude FROM flight GROUP BY Altitude HAVING AVG(company_id) = 45', 'SELECT COUNT(DISTINCT Vehicle_Flight_number), Pilot, Altitude FROM flight GROUP BY Altitude, Pilot HAVING AVG(company_id) = 45'], ['SELECT MIN(Velocity), Velocity FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE Group_Equity_Shareholding BETWEEN 1 AND 10 AND  operate_company.id <= 53 LIMIT 7', 'SELECT MIN(Velocity) FROM (SELECT Velocity FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE Group_Equity_Shareholding BETWEEN 1 AND 10 AND operate_company.id <= 53 ORDER BY Velocity LIMIT 7) AS subquery;'], ['SELECT x.id, x.Country FROM airport JOIN airport AS x ON airport.id = x.id WHERE ICAO IN (SELECT ICAO FROM airport AS c WHERE  c.id > 96 LIMIT 1)', 'SELECT id, Country FROM airport WHERE ICAO IN (SELECT ICAO FROM airport AS c WHERE c.id > 96 LIMIT 1)'], ['SELECT COUNT(Velocity), Pilot, airport_id FROM flight WHERE  Velocity > 22 GROUP BY airport_id', 'SELECT COUNT(Velocity), Pilot, airport_id FROM flight WHERE Velocity > 22 GROUP BY airport_id, Pilot;']], 'yelp': [['SELECT COUNT(b.id), COUNT(DISTINCT b.neighbourhood_name) FROM neighbourhood AS b WHERE  b.id != 80', 'SELECT COUNT(id), COUNT(DISTINCT neighbourhood_name) FROM neighbourhood WHERE id != 80'], ['SELECT category.category_name, category.business_id FROM category AS l JOIN category ON category.id = l.id WHERE  l.id <= 77 GROUP BY category.business_id', 'SELECT T1.category_name, T1.business_id FROM category AS T1 JOIN business AS T2 ON T1.business_id = T2.business_id WHERE T1.id <= 77 GROUP BY T1.business_id;'], ['SELECT AVG(id), MAX(id) FROM neighbourhood WHERE id BETWEEN 1 AND 10 AND  id > 37', 'SELECT AVG(id), MAX(id) FROM neighbourhood WHERE id BETWEEN 1 AND 10 OR id > 37;'], ['SELECT MAX(year), COUNT(DISTINCT tip_id), month FROM tip WHERE  tip_id = 56 GROUP BY month', 'SELECT MAX(tip.year), COUNT(DISTINCT tip_id), month FROM tip WHERE tip_id = 56 GROUP BY month'], ['SELECT COUNT(DISTINCT o.business_id), o.business_id FROM neighbourhood AS o WHERE  o.id <= 74 LIMIT 7', 'SELECT COUNT(DISTINCT o.business_id), o.business_id FROM neighbourhood AS o WHERE o.id <= 74 LIMIT 7'], ['SELECT tip_id, likes, text FROM tip WHERE year BETWEEN 1 AND 10 GROUP BY text LIMIT 1', 'SELECT tip_id, likes, text FROM tip WHERE year BETWEEN 1 AND 10 LIMIT 1'], ['SELECT COUNT(DISTINCT tip_id) FROM business JOIN checkin JOIN tip JOIN user ON business.business_id = tip.business_id AND user.user_id = tip.user_id AND checkin.business_id = business.business_id WHERE  is_open != 49', 'SELECT COUNT(DISTINCT tip.tip_id) FROM business JOIN checkin ON business.business_id = checkin.business_id JOIN tip ON business.business_id = tip.business_id JOIN user ON tip.user_id = user.user_id WHERE business.is_open != 0;'], ['SELECT COUNT(l.rating), l.text FROM review AS l WHERE l.year BETWEEN 1 AND 10 OR  l.rating = 31 ORDER BY l.text DESC LIMIT 8', 'SELECT COUNT(l.rating), l.text FROM review AS l WHERE l.year BETWEEN 1 AND 10 OR  l.rating = 5 ORDER BY l.text DESC LIMIT 8'], ['SELECT checkin.business_id FROM business JOIN checkin JOIN tip ON business.business_id = tip.business_id AND checkin.business_id = business.business_id WHERE EXISTS (SELECT * FROM user WHERE  uid >= 48 AND tip.tip_id = user_id) ORDER BY checkin.business_id DESC', 'SELECT checkin.business_id FROM business JOIN checkin ON business.business_id = checkin.business_id JOIN tip ON tip.business_id = business.business_id WHERE EXISTS (SELECT * FROM user WHERE  uid >= 48 AND tip.user_id = user.user_id) ORDER BY checkin.business_id DESC'], ['SELECT AVG(rating), COUNT(DISTINCT longitude) FROM business WHERE  bid < 41 LIMIT 8', 'SELECT AVG(business.rating), COUNT(DISTINCT business.longitude) FROM business WHERE business.bid < 41 LIMIT 8;'], ['SELECT bid, name FROM business JOIN checkin JOIN tip ON business.business_id = tip.business_id AND checkin.business_id = business.business_id WHERE rating BETWEEN 1 AND 10 OR  year < 71', 'SELECT T1.bid, T1.name FROM business AS T1 JOIN checkin AS T2 ON T1.business_id = T2.business_id JOIN tip AS T3 ON T1.business_id = T3.business_id WHERE T1.rating BETWEEN 1 AND 10 OR T3.year < 1971'], ['SELECT COUNT(DISTINCT rating), COUNT(DISTINCT text) FROM review WHERE rating BETWEEN 1 AND 10 AND  year < 50 LIMIT 2', 'SELECT COUNT(DISTINCT rating), COUNT(DISTINCT text) FROM review WHERE rating BETWEEN 1 AND 10 AND year < 50']], 'network_1': [['SELECT COUNT(DISTINCT f.friend_id), Friend.friend_id FROM Friend JOIN Friend AS f ON Friend.student_id = f.student_id WHERE  f.student_id >= 51 GROUP BY Friend.friend_id HAVING MAX(f.student_id) < 82', 'SELECT COUNT(DISTINCT f.friend_id), f.friend_id FROM Friend AS f WHERE f.student_id >= 51 AND f.student_id < 82 GROUP BY f.friend_id'], ['SELECT d.student_id, d.friend_id FROM Friend AS d WHERE  d.student_id = 13 GROUP BY d.friend_id HAVING MIN(d.student_id) >= 32 LIMIT 8', 'SELECT student_id, friend_id FROM Friend WHERE student_id = 13 GROUP BY student_id, friend_id HAVING MIN(student_id) >= 32 LIMIT 8'], ['SELECT COUNT(DISTINCT p.ID), p.name FROM Highschooler AS p WHERE  p.ID <= 9 GROUP BY p.name', 'SELECT COUNT(DISTINCT p.ID), p.name FROM Highschooler AS p WHERE  p.ID <= 9'], ['SELECT student_id, student_id, liked_id FROM Likes WHERE  student_id < 82 GROUP BY liked_id ORDER BY student_id ASC LIMIT 7', 'SELECT student_id, liked_id FROM Likes WHERE student_id < 82 GROUP BY liked_id ORDER BY MIN(student_id) ASC LIMIT 7'], ['SELECT MIN(ID), name, name FROM Highschooler WHERE  grade >= 88 GROUP BY name ORDER BY name ASC LIMIT 9', 'SELECT MIN(grade), name FROM Highschooler WHERE grade >= 88 GROUP BY name ORDER BY name ASC LIMIT 9'], ['SELECT MAX(Friend.student_id), x.friend_id FROM Friend JOIN Friend AS x ON Friend.student_id = x.student_id WHERE  x.friend_id <= 73 GROUP BY x.friend_id', 'SELECT student_id, MAX(friend_id) FROM Friend GROUP BY student_id HAVING MAX(friend_id) <= 73;'], ['SELECT SUM(ID), student_id FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id AND Likes.liked_id = Highschooler.ID WHERE  liked_id < 82', 'SELECT COUNT(*), H.name, H.ID FROM Highschooler H JOIN Likes ON H.ID = Likes.liked_id WHERE liked_id < 82 GROUP BY H.name, H.ID'], ['SELECT student_id FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE  friend_id != 36 ORDER BY student_id ASC', 'SELECT student_id FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE  friend_id != 36 ORDER BY student_id ASC'], ['SELECT MIN(ID) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id AND Likes.liked_id = Highschooler.ID WHERE  grade <= 39', 'SELECT MIN(ID) FROM Highschooler WHERE grade <= 9'], ['SELECT MAX(grade), grade, ID FROM Highschooler WHERE grade BETWEEN 1 AND 10 OR  ID > 25', 'SELECT MAX(grade) FROM Highschooler WHERE grade BETWEEN 1 AND 10 OR ID > 25;'], ['SELECT name, name FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE student_id NOT IN (SELECT student_id FROM Friend WHERE  friend_id <= 18)', 'SELECT H1.name, H2.name FROM Highschooler AS H1 JOIN Friend ON H1.ID = Friend.student_id JOIN Highschooler AS H2 ON Friend.friend_id = H2.ID WHERE H1.ID NOT IN (SELECT student_id FROM Friend WHERE friend_id <= 18)'], ['SELECT COUNT(DISTINCT p.grade), Highschooler.grade FROM Highschooler AS p JOIN Highschooler ON Highschooler.ID = p.ID WHERE  p.grade >= 52 GROUP BY Highschooler.grade HAVING MIN(p.grade) <= 24 ORDER BY Highschooler.grade DESC', 'SELECT COUNT(DISTINCT grade) FROM Highschooler WHERE grade >= 9 AND grade <= 12 ORDER BY grade DESC'], ['SELECT student_id, friend_id FROM Friend GROUP BY friend_id ORDER BY friend_id DESC', 'SELECT student_id, friend_id FROM Friend ORDER BY friend_id DESC;']], 'school_bus': [['SELECT l.Age FROM driver AS l WHERE l.Age BETWEEN 1 AND 10 AND  l.Age >= 77', 'SELECT l.Age FROM driver AS l WHERE l.Age BETWEEN 1 AND 10 OR l.Age >= 77;'], ['SELECT COUNT(DISTINCT Years_Working) FROM school_bus JOIN driver ON school_bus.Driver_ID = driver.Driver_ID WHERE Age NOT IN (SELECT Age FROM driver WHERE Age BETWEEN 1 AND 10 OR  Driver_ID != 100)', 'SELECT COUNT(DISTINCT Years_Working) FROM school_bus JOIN driver ON school_bus.Driver_ID = driver.Driver_ID WHERE (driver.Age < 1 OR driver.Age > 10) AND driver.Driver_ID = 100;'], ['SELECT MAX(Years_Working), School_ID, Home_city FROM school_bus JOIN driver ON school_bus.Driver_ID = driver.Driver_ID WHERE  School_ID < 70 ORDER BY School_ID DESC LIMIT 1', 'SELECT MAX(T1.Years_Working), T1.School_ID, T2.Home_city FROM school_bus AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE  T1.School_ID < 70 ORDER BY T1.School_ID DESC LIMIT 1'], ['SELECT COUNT(School_ID), COUNT(DISTINCT Grade), COUNT(DISTINCT Location) FROM school WHERE  School_ID != 60', 'SELECT COUNT(School_ID), COUNT(DISTINCT Grade), COUNT(DISTINCT Location) FROM school WHERE  School_ID != 60'], ['SELECT b.Driver_ID, b.Name FROM driver AS b WHERE  b.Driver_ID < 60 GROUP BY b.Name ORDER BY b.Driver_ID DESC', 'SELECT b.Driver_ID, b.Name FROM driver AS b WHERE  b.Driver_ID < 60 GROUP BY b.Driver_ID, b.Name ORDER BY b.Driver_ID DESC'], ['SELECT n.If_full_time FROM school_bus AS n WHERE n.Driver_ID BETWEEN 1 AND 10 AND  n.School_ID = 58 ORDER BY n.If_full_time DESC LIMIT 4', 'SELECT n.If_full_time FROM school_bus AS n WHERE n.Driver_ID BETWEEN 1 AND 10 AND n.School_ID = 58 ORDER BY n.School_ID DESC LIMIT 4'], ['SELECT b.Age, b.Age FROM driver AS b WHERE  b.Driver_ID >= 53 ORDER BY b.Age DESC', 'SELECT b.Age FROM driver AS b WHERE b.Driver_ID >= 53 ORDER BY b.Age DESC;'], ['SELECT COUNT(DISTINCT Name) FROM driver WHERE Age BETWEEN 1 AND 10 AND  Driver_ID < 1 LIMIT 5', 'SELECT COUNT(DISTINCT Name) FROM driver WHERE Age BETWEEN 1 AND 10;']], 'dorm_1': [['SELECT dorm_name, dorm_name FROM Dorm WHERE  student_capacity <= 70', 'SELECT dorm_name, student_capacity FROM Dorm WHERE student_capacity <= 70;'], ['SELECT COUNT(d.Age), d.Major FROM Student AS d WHERE d.Major BETWEEN 1 AND 10 OR StuID NOT IN (SELECT StuID FROM Student WHERE  Major = 94)', 'SELECT COUNT(d.Age), d.Major FROM Student AS d WHERE d.Major IN (SELECT Major FROM Student WHERE Major BETWEEN 1 AND 10) OR d.StuID NOT IN (SELECT StuID FROM Student WHERE  Major = 94)'], ['SELECT student_capacity, gender FROM Dorm WHERE  dormid >= 98 ORDER BY gender DESC', 'SELECT student_capacity, gender FROM Dorm WHERE dormid >= 98 ORDER BY student_capacity DESC;'], ['SELECT e.StuID FROM Student AS e', 'SELECT StuID FROM Student;'], ['SELECT Advisor, Fname FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid WHERE Age IN (SELECT Age FROM Student AS g WHERE  g.StuID >= 86 LIMIT 10)', 'SELECT Advisor, Fname FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid WHERE Student.StuID >= 86 OR Age IN (SELECT Age FROM Student AS g WHERE g.StuID < 86 LIMIT 10)'], ['SELECT d.room_number FROM Lives_in AS d WHERE  d.room_number = 74 ORDER BY d.room_number DESC', 'SELECT d.room_number FROM Lives_in AS d WHERE  d.room_number = 74 ORDER BY d.room_number DESC;'], ['SELECT amenid FROM Has_amenity WHERE dormid BETWEEN 1 AND 10 AND dormid <= (SELECT SUM(dormid) FROM Lives_in AS u WHERE  u.dormid >= 93 LIMIT 10) LIMIT 6', 'SELECT amenid FROM Has_amenity WHERE dormid BETWEEN 1 AND 10 AND dormid <= (SELECT MAX(dormid) FROM Lives_in WHERE dormid >= 93 LIMIT 10) LIMIT 6'], ['SELECT MIN(amenid) FROM Dorm_amenity WHERE  amenid > 2', 'SELECT MIN(amenid) FROM Dorm_amenity WHERE amenid > 2'], ['SELECT dormid, Age FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid WHERE Age != (SELECT SUM(Age) FROM Student AS g LIMIT 9) ORDER BY dormid ASC', 'SELECT Lives_in.dormid, Student.Age FROM Student JOIN Lives_in ON Student.StuID = Lives_in.stuid ORDER BY Lives_in.dormid ASC;'], ['SELECT dorm_name FROM Dorm WHERE  dormid = 98 ORDER BY dorm_name ASC', 'SELECT dorm_name FROM Dorm WHERE  dormid = 98 ORDER BY dorm_name ASC']], 'vehicle_rent': [['SELECT name, name, membership_credit FROM Discount WHERE  membership_credit >= 55 GROUP BY membership_credit LIMIT 8', 'SELECT name, membership_credit FROM Discount WHERE membership_credit >= 55 LIMIT 8'], ['SELECT AVG(vehicles_id), AVG(vehicles_id) FROM Customers JOIN Renting_history ON Renting_history.customer_id = Customers.id WHERE  Customers.id <= 39 LIMIT 3', 'SELECT AVG(Renting_history.total_hours) AS average_hours FROM Customers JOIN Renting_history ON Renting_history.customer_id = Customers.id WHERE  Customers.id <= 39 LIMIT 3'], ['SELECT AVG(g.membership_credit), g.id FROM Discount JOIN Discount AS g ON Discount.id = g.id WHERE  g.membership_credit != 73', 'SELECT AVG(membership_credit) FROM Discount WHERE membership_credit != 73'], ['SELECT SUM(u.age), u.id, u.membership_credit FROM Customers AS u WHERE u.id BETWEEN 1 AND 10 GROUP BY u.membership_credit HAVING AVG(u.id) > 95 LIMIT 2', 'SELECT SUM(C.age), C.id, C.membership_credit FROM Customers AS C WHERE C.id BETWEEN 1 AND 10 GROUP BY C.membership_credit HAVING AVG(C.id) > 5 LIMIT 2'], ['SELECT membership_credit FROM Discount JOIN Renting_history ON Renting_history.discount_id = Discount.id WHERE  customer_id <= 2', 'SELECT membership_credit FROM Discount JOIN Renting_history ON Renting_history.discount_id = Discount.id JOIN Customers ON Renting_history.customer_id = Customers.id WHERE Customers.id <= 2;'], ['SELECT COUNT(DISTINCT j.membership_credit), j.name, j.name FROM Discount AS j WHERE  j.membership_credit >= 76 ORDER BY j.name DESC', 'SELECT COUNT(DISTINCT j.membership_credit), j.name FROM Discount AS j WHERE  j.membership_credit >= 76 ORDER BY j.name DESC'], ['SELECT COUNT(DISTINCT y.vehicles_id), y.total_hours, y.discount_id FROM Renting_history AS y GROUP BY y.discount_id HAVING SUM(y.total_hours) < 91 ORDER BY y.total_hours DESC', 'SELECT COUNT(DISTINCT y.vehicles_id), SUM(y.total_hours) AS total_hours, y.discount_id FROM Renting_history AS y GROUP BY y.discount_id HAVING SUM(y.total_hours) < 91 ORDER BY SUM(y.total_hours) DESC'], ['SELECT MIN(customer_id), vehicles_id FROM Renting_history', 'SELECT MIN(customer_id), vehicles_id FROM Renting_history GROUP BY vehicles_id;'], ['SELECT MIN(Combined_fuel_economy_rate), Type_of_powertrain, Notes FROM Vehicles GROUP BY Notes', 'SELECT MIN(Combined_fuel_economy_rate), Type_of_powertrain, Notes FROM Vehicles GROUP BY Type_of_powertrain, Notes;'], ['SELECT i.id, i.name FROM Vehicles AS i WHERE i.Combined_fuel_economy_rate BETWEEN 1 AND 10 GROUP BY i.name', 'SELECT i.id, i.name FROM Vehicles AS i WHERE i.Combined_fuel_economy_rate BETWEEN 1 AND 10'], ['SELECT t.name, t.name FROM Discount AS t WHERE t.membership_credit BETWEEN 1 AND 10 AND  t.id >= 20 GROUP BY t.name LIMIT 7', 'SELECT t.name, COUNT(t.name) FROM Discount AS t WHERE t.membership_credit BETWEEN 1 AND 10 AND  t.id >= 20 GROUP BY t.name LIMIT 7'], ['SELECT MAX(age), COUNT(membership_credit), age FROM Customers GROUP BY age', 'SELECT age, MAX(membership_credit), COUNT(membership_credit) FROM Customers GROUP BY age;']], 'poker_player': [['SELECT MIN(p.Height), p.People_ID, p.Name FROM people AS p WHERE  p.People_ID != 73 GROUP BY p.Name ORDER BY p.People_ID DESC', 'SELECT MIN(p.Height), p.People_ID, p.Name FROM people AS p WHERE p.People_ID != 73 GROUP BY p.People_ID, p.Name ORDER BY p.People_ID DESC'], ['SELECT Money_Rank, Final_Table_Made FROM poker_player WHERE  Final_Table_Made <= 46 GROUP BY Final_Table_Made HAVING MIN(Final_Table_Made) < 52', 'SELECT Money_Rank, Final_Table_Made FROM poker_player WHERE Final_Table_Made <= 46 GROUP BY Final_Table_Made HAVING MIN(Final_Table_Made) > 0 AND MIN(Final_Table_Made) < 52;'], ['SELECT COUNT(DISTINCT Height), Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE  people.People_ID >= 26 LIMIT 3', 'SELECT COUNT(DISTINCT people.Height), people.Nationality FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE  people.People_ID >= 26 GROUP BY people.Nationality LIMIT 3'], ['SELECT COUNT(Earnings), Money_Rank FROM poker_player WHERE Best_Finish BETWEEN 1 AND 10 OR  People_ID < 13 GROUP BY Money_Rank HAVING COUNT(Best_Finish) > 24', 'SELECT Money_Rank, COUNT(Earnings) FROM poker_player WHERE Best_Finish BETWEEN 1 AND 10 OR People_ID < 13 GROUP BY Money_Rank HAVING COUNT(Earnings) > 24;'], ['SELECT MAX(people.Height), people.Name FROM people AS c JOIN people ON people.People_ID = c.People_ID WHERE people.People_ID BETWEEN 1 AND 10 OR  c.People_ID >= 95 ORDER BY people.Name DESC', 'SELECT Name, Height FROM people WHERE Height = ( SELECT MAX(Height) FROM people )'], ['SELECT people.Nationality, c.Birth_Date FROM people AS c JOIN people ON people.People_ID = c.People_ID WHERE  c.Height >= 73 GROUP BY c.Birth_Date ORDER BY c.Birth_Date DESC', 'SELECT p.Nationality, p.Birth_Date FROM people AS p JOIN poker_player AS pp ON p.People_ID = pp.People_ID WHERE p.Height >= 73 GROUP BY p.Birth_Date ORDER BY p.Birth_Date DESC;'], ['SELECT AVG(Earnings), MAX(Earnings), MIN(Height) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.People_ID BETWEEN 1 AND 10 AND  poker_player.People_ID > 42 LIMIT 9', 'SELECT AVG(Earnings), MAX(Earnings), MIN(Height) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE poker_player.People_ID BETWEEN 1 AND 10 LIMIT 9'], ['SELECT people.People_ID, people.Name, people.Height FROM people AS p JOIN people ON people.People_ID = p.People_ID WHERE  people.People_ID <= 83 GROUP BY people.Height HAVING MIN(p.People_ID) <= 93', 'SELECT People_ID, Name, Height FROM people WHERE People_ID <= 83 GROUP BY Height HAVING MIN(People_ID) <= 93;'], ['SELECT MAX(Earnings), COUNT(DISTINCT Poker_Player_ID) FROM poker_player WHERE  People_ID > 8 OR Money_Rank IN (SELECT Money_Rank FROM poker_player WHERE Money_Rank BETWEEN 1 AND 10 LIMIT 9) LIMIT 1', 'SELECT MAX(Earnings), COUNT(DISTINCT Poker_Player_ID) FROM poker_player WHERE People_ID > 8 OR Money_Rank IN (SELECT Money_Rank FROM poker_player WHERE Money_Rank BETWEEN 1 AND 10 LIMIT 9)'], ['SELECT Birth_Date FROM people ORDER BY Birth_Date ASC', 'SELECT Birth_Date FROM people ORDER BY STR_TO_DATE(Birth_Date, "%Y-%m-%d") ASC;'], ['SELECT COUNT(DISTINCT Earnings), Birth_Date, poker_player.People_ID FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE Earnings BETWEEN 1 AND 10 OR  Poker_Player_ID = 67 GROUP BY poker_player.People_ID LIMIT 6', 'SELECT COUNT(DISTINCT pp.Earnings) AS distinct_earnings, p.Birth_Date, pp.People_ID FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE pp.Earnings BETWEEN 1 AND 10 OR pp.Poker_Player_ID = 67 GROUP BY p.Birth_Date, pp.People_ID LIMIT 6'], ['SELECT SUM(Poker_Player_ID), Money_Rank FROM poker_player WHERE People_ID BETWEEN 1 AND 10 LIMIT 2', 'SELECT COUNT(Poker_Player_ID), Money_Rank FROM poker_player WHERE People_ID BETWEEN 1 AND 10 LIMIT 2']], 'aircraft': [['SELECT AVG(r.International_Passengers), r.Freight_Metric_Tonnes, r.Domestic_Passengers FROM airport AS r WHERE  r.International_Passengers <= 68 GROUP BY r.Domestic_Passengers HAVING MIN(r.Aircraft_Movements) = 87 ORDER BY r.Freight_Metric_Tonnes ASC', 'SELECT AVG(r.International_Passengers), r.Freight_Metric_Tonnes, r.Domestic_Passengers FROM airport AS r WHERE  r.International_Passengers <= 68 GROUP BY r.Freight_Metric_Tonnes, r.Domestic_Passengers HAVING MIN(r.Aircraft_Movements) = 87 ORDER BY r.Freight_Metric_Tonnes ASC'], ['SELECT COUNT(DISTINCT match.Location), h.Round FROM match AS h JOIN match ON match.Round = h.Round WHERE match.Round BETWEEN 1 AND 10', 'SELECT COUNT(DISTINCT h.Location), h.Round FROM match AS h JOIN match AS m ON h.Round = m.Round WHERE h.Round BETWEEN 1 AND 10'], ['SELECT z.Max_disk_Loading FROM aircraft AS z WHERE z.Aircraft_ID BETWEEN 1 AND 10 AND  z.Aircraft_ID > 63', 'SELECT Max_disk_Loading FROM aircraft WHERE Aircraft_ID BETWEEN 1 AND 10 OR Aircraft_ID > 63;'], ['SELECT Date FROM match WHERE Round BETWEEN 1 AND 10 AND  Round < 21', 'SELECT Date FROM match WHERE Round BETWEEN 1 AND 10;'], ['SELECT a.Airport_Name FROM airport AS a WHERE Airport_ID IN (SELECT Airport_ID FROM airport AS l WHERE  l.Airport_ID <= 77)', 'SELECT a.Airport_Name FROM airport AS a WHERE a.Airport_ID <= 77'], ['SELECT MAX(Pilot_Id), Pilot_Id FROM pilot WHERE  Age < 47', 'SELECT MAX(Pilot_Id) FROM pilot WHERE Age < 47;'], ['SELECT Aircraft_ID FROM aircraft WHERE  Aircraft_ID > 94 ORDER BY Aircraft_ID DESC LIMIT 1', 'SELECT Aircraft_ID FROM aircraft WHERE  Aircraft_ID > 94 ORDER BY Aircraft_ID DESC LIMIT 1'], ['SELECT m.Age, m.Name FROM pilot AS m WHERE Age >= (SELECT AVG(Age) FROM pilot WHERE  Pilot_Id != 0 LIMIT 2) LIMIT 8', 'SELECT m.Age, m.Name FROM pilot AS m WHERE Age >= (SELECT AVG(Age) FROM pilot WHERE  Pilot_Id != 0) LIMIT 8'], ['SELECT MIN(Pilot_Id), Name FROM pilot', 'SELECT Name, MIN(Pilot_Id) FROM pilot GROUP BY Name;']], 'aan_1': [['SELECT year, name, Paper.paper_id FROM Citation JOIN Author_list JOIN Affiliation JOIN Paper ON Author_list.affiliation_id = Affiliation.affiliation_id AND Author_list.paper_id = Paper.paper_id AND Paper.paper_id = Citation.cited_paper_id AND Citation.paper_id = Paper.paper_id WHERE  Affiliation.affiliation_id > 30 ORDER BY name ASC', 'SELECT P.year, A.name, P.paper_id FROM Citation C JOIN Paper P ON C.paper_id = P.paper_id JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id JOIN Affiliation Af ON AL.affiliation_id = Af.affiliation_id WHERE Af.affiliation_id > 30 ORDER BY A.name ASC'], ['SELECT COUNT(DISTINCT paper_id), paper_id, year FROM Paper WHERE  year = 53 GROUP BY year', 'SELECT COUNT(DISTINCT paper_id), paper_id, year FROM Paper WHERE year = 1953 GROUP BY year;'], ['SELECT address FROM Affiliation WHERE EXISTS (SELECT * FROM Author_list WHERE  affiliation_id > 14 AND Affiliation.affiliation_id = affiliation_id LIMIT 4) LIMIT 3', 'SELECT address FROM Affiliation WHERE EXISTS (SELECT * FROM Author_list WHERE Author_list.affiliation_id > 14 AND Affiliation.affiliation_id = Author_list.affiliation_id LIMIT 4) LIMIT 3'], ['SELECT AVG(Author_list.author_id), Author.author_id FROM Author_list JOIN Author JOIN Affiliation JOIN Paper ON Author_list.affiliation_id = Affiliation.affiliation_id AND Author_list.paper_id = Paper.paper_id AND Author.author_id = Author_list.author_id WHERE year BETWEEN 1 AND 10 AND  Author.author_id < 32', 'SELECT Author.author_id, AVG(Author_list.author_id) FROM Author_list JOIN Author JOIN Affiliation JOIN Paper ON Author_list.affiliation_id = Affiliation.affiliation_id AND Author_list.paper_id = Paper.paper_id AND Author.author_id = Author_list.author_id WHERE Paper.year BETWEEN 1 AND 10 AND Author.author_id < 32 GROUP BY Author.author_id;'], ['SELECT author_id, paper_id FROM Author_list WHERE affiliation_id BETWEEN 1 AND 10 OR affiliation_id <= (SELECT MAX(affiliation_id) FROM Author_list WHERE  affiliation_id > 6) ORDER BY paper_id ASC', 'SELECT author_id, paper_id FROM Author_list WHERE affiliation_id BETWEEN 1 AND 10 OR affiliation_id <= (SELECT MAX(affiliation_id) FROM Author_list WHERE affiliation_id > 6) ORDER BY author_id ASC;'], ['SELECT w.cited_paper_id, w.cited_paper_id FROM Citation AS w LIMIT 2', 'SELECT w.cited_paper_id FROM Citation AS w LIMIT 2'], ['SELECT Citation.paper_id FROM Citation JOIN Paper ON Paper.paper_id = Citation.cited_paper_id AND Citation.paper_id = Paper.paper_id WHERE year BETWEEN 1 AND 10', 'SELECT Citation.paper_id FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id WHERE Paper.year BETWEEN 1 AND 10'], ['SELECT r.affiliation_id, r.author_id FROM Author_list AS r WHERE  r.author_id < 100 GROUP BY r.author_id HAVING MIN(r.affiliation_id) > 74', 'SELECT r.affiliation_id, r.author_id FROM Author_list AS r WHERE  r.author_id < 100 GROUP BY r.affiliation_id, r.author_id HAVING MIN(r.affiliation_id) > 74'], ['SELECT title, title FROM Paper WHERE  year = 21', 'SELECT title FROM Paper WHERE year = 21'], ['SELECT affiliation_id, author_id FROM Author_list WHERE  author_id != 48 GROUP BY author_id', 'SELECT affiliation_id FROM Author_list WHERE author_id != 48 GROUP BY affiliation_id;'], ['SELECT year FROM Citation JOIN Paper ON Paper.paper_id = Citation.cited_paper_id AND Citation.paper_id = Paper.paper_id WHERE  year >= 34 ORDER BY year ASC', 'SELECT year FROM Citation JOIN Paper ON Paper.paper_id = Citation.cited_paper_id WHERE year >= 34 ORDER BY year ASC'], ['SELECT MIN(Author_list.author_id), email FROM Citation JOIN Author_list JOIN Author JOIN Paper ON Author_list.paper_id = Paper.paper_id AND Paper.paper_id = Citation.cited_paper_id AND Citation.paper_id = Paper.paper_id AND Author.author_id = Author_list.author_id WHERE EXISTS (SELECT * FROM Author_list AS z WHERE Author.author_id = z.author_id) GROUP BY email HAVING MIN(affiliation_id) < 62', 'SELECT MIN(Author_list.author_id), email FROM Citation JOIN Author_list ON Citation.paper_id = CAST(Author_list.paper_id AS TEXT) JOIN Author ON Author.author_id = Author_list.author_id JOIN Paper ON Paper.paper_id = CAST(Author_list.paper_id AS TEXT) WHERE EXISTS (SELECT * FROM Author_list AS z WHERE Author.author_id = z.author_id) GROUP BY email HAVING MIN(Author_list.affiliation_id) < 62'], ['SELECT name, address FROM Affiliation WHERE affiliation_id BETWEEN 1 AND 10 AND  affiliation_id >= 3 GROUP BY address', 'SELECT name, address FROM Affiliation WHERE affiliation_id BETWEEN 3 AND 10 GROUP BY address;'], ['SELECT Affiliation.affiliation_id FROM Author_list JOIN Author JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id AND Author.author_id = Author_list.author_id WHERE  Author_list.author_id >= 26 ORDER BY Affiliation.affiliation_id ASC', 'SELECT A.affiliation_id FROM Author_list AS ALIST JOIN Author AS A JOIN Affiliation AS AF ON ALIST.affiliation_id = AF.affiliation_id AND A.author_id = ALIST.author_id WHERE A.author_id >= 26 ORDER BY AF.affiliation_id ASC;'], ['SELECT year FROM Citation JOIN Author_list JOIN Author JOIN Paper ON Author_list.paper_id = Paper.paper_id AND Paper.paper_id = Citation.cited_paper_id AND Citation.paper_id = Paper.paper_id AND Author.author_id = Author_list.author_id WHERE year NOT IN (SELECT year FROM Paper AS r WHERE  r.year = 34) GROUP BY year ORDER BY year ASC LIMIT 6', 'SELECT T1.year FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.cited_paper_id JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id JOIN Author AS T4 ON T3.author_id = T4.author_id WHERE T1.year != 34 GROUP BY T1.year ORDER BY T1.year ASC LIMIT 6']], 'club_leader': [['SELECT r.Year_Join FROM club_leader AS r WHERE  r.Member_ID != 94', 'SELECT r.Year_Join FROM club_leader AS r WHERE r.Member_ID IN (SELECT Member_ID FROM member) AND r.Member_ID != 94;'], ['SELECT Member_ID, Year_Join FROM club_leader JOIN club ON club.Club_ID = club_leader.Club_ID WHERE  club_leader.Club_ID = 49 LIMIT 3', 'SELECT T1.Member_ID, T1.Year_Join FROM club_leader AS T1 WHERE T1.Club_ID = 49 LIMIT 3'], ['SELECT COUNT(DISTINCT member.Member_ID), Year_Join, Year_Join FROM member JOIN club_leader ON club_leader.Member_ID = member.Member_ID WHERE  member.Member_ID <= 95', 'SELECT COUNT(DISTINCT member.Member_ID), Year_Join FROM member JOIN club_leader ON club_leader.Member_ID = member.Member_ID WHERE member.Member_ID <= 95'], ['SELECT COUNT(member.Member_ID), club_leader.Club_ID, club.Club_ID, club_leader.Member_ID FROM member JOIN club JOIN club_leader ON club_leader.Member_ID = member.Member_ID AND club.Club_ID = club_leader.Club_ID WHERE Age BETWEEN 1 AND 10 AND  member.Member_ID <= 48 GROUP BY club_leader.Member_ID', 'SELECT COUNT(member.Member_ID), club_leader.Club_ID, club.Club_ID, club_leader.Member_ID FROM member JOIN club JOIN club_leader ON club_leader.Member_ID = member.Member_ID AND club.Club_ID = club_leader.Club_ID WHERE Age BETWEEN 1 AND 10 AND  member.Member_ID <= 48 GROUP BY club_leader.Member_ID'], ['SELECT COUNT(club_leader.Club_ID), AVG(club_leader.Club_ID), Age FROM member JOIN club JOIN club_leader ON club_leader.Member_ID = member.Member_ID AND club.Club_ID = club_leader.Club_ID WHERE  club.Club_ID >= 36 GROUP BY Age ORDER BY Age ASC LIMIT 10', 'SELECT COUNT(club_leader.Club_ID), AVG(club_leader.Club_ID), member.Age FROM member JOIN club_leader ON club_leader.Member_ID = member.Member_ID JOIN club ON club.Club_ID = club_leader.Club_ID WHERE club.Club_ID >= 36 GROUP BY member.Age ORDER BY member.Age ASC LIMIT 10;']], 'dog_kennels': [['SELECT Sizes.size_description, n.size_description FROM Sizes AS n JOIN Sizes ON Sizes.size_code = n.size_code', 'SELECT s1.size_description, s2.size_description FROM Sizes AS s1 JOIN Sizes AS s2 ON s1.size_code = s2.size_code'], ['SELECT city, treatment_type_code FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id WHERE treatment_id BETWEEN 1 AND 10 OR  treatment_id <= 37 ORDER BY city DESC', 'SELECT p.city, t.treatment_type_code FROM Professionals p JOIN Treatments t ON t.professional_id = p.professional_id WHERE t.treatment_id BETWEEN 1 AND 10 OR t.treatment_id <= 37 ORDER BY p.city DESC'], ['SELECT dog_id, gender, last_name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id AND Owners.owner_id = Dogs.owner_id WHERE  Owners.owner_id <= 41 GROUP BY last_name HAVING SUM(Dogs.owner_id) < 97 ORDER BY dog_id ASC LIMIT 7', 'SELECT dog_id, gender, last_name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.owner_id <= 41 GROUP BY last_name HAVING SUM(Dogs.owner_id) < 97 ORDER BY dog_id ASC LIMIT 7'], ['SELECT dog_id, Sizes.size_code, gender FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE owner_id BETWEEN 1 AND 10 AND owner_id NOT IN (SELECT owner_id FROM Owners AS y) ORDER BY gender ASC', 'SELECT dog_id, Sizes.size_code, gender FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE owner_id BETWEEN 1 AND 10 ORDER BY gender ASC'], ['SELECT size_description, abandoned_yn FROM Dogs JOIN Treatments JOIN Breeds JOIN Sizes ON Dogs.size_code = Sizes.size_code AND Dogs.dog_id = Treatments.dog_id AND Breeds.breed_code = Dogs.breed_code WHERE treatment_id BETWEEN 1 AND 10 OR breed_code NOT IN (SELECT breed_code FROM Breeds AS h)', 'SELECT T1.size_description, T2.abandoned_yn FROM Sizes AS T1 JOIN Dogs AS T2 ON T1.size_code = T2.size_code JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id WHERE T3.treatment_id BETWEEN 1 AND 10'], ['SELECT SUM(owner_id), COUNT(treatment_id), AVG(professional_id) FROM Dogs JOIN Treatments JOIN Breeds JOIN Sizes ON Dogs.size_code = Sizes.size_code AND Dogs.dog_id = Treatments.dog_id AND Breeds.breed_code = Dogs.breed_code', 'SELECT SUM(T1.owner_id), COUNT(T3.treatment_id), AVG(T3.professional_id) FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id INNER JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id INNER JOIN Breeds AS T4 ON T2.breed_code = T4.breed_code INNER JOIN Sizes AS T5 ON T2.size_code = T5.size_code'], ['SELECT COUNT(DISTINCT t.street), t.owner_id, t.street FROM Owners AS t WHERE t.owner_id BETWEEN 1 AND 10 AND city NOT IN (SELECT city FROM Owners AS v WHERE  v.owner_id <= 19) GROUP BY t.street HAVING SUM(t.owner_id) >= 49 ORDER BY t.owner_id DESC', 'SELECT COUNT(DISTINCT t.street), t.owner_id, t.street FROM Owners AS t WHERE t.owner_id BETWEEN 1 AND 10 AND city NOT IN (SELECT city FROM Owners AS v WHERE  v.owner_id <= 19) GROUP BY t.street, t.owner_id HAVING SUM(t.owner_id) >= 49 ORDER BY t.owner_id DESC'], ['SELECT treatment_type_code, date_of_treatment FROM Treatments WHERE  dog_id = 12 AND EXISTS (SELECT * FROM Treatment_Types AS e WHERE Treatments.treatment_id = e.treatment_type_code LIMIT 1) GROUP BY date_of_treatment HAVING SUM(professional_id) >= 84 LIMIT 3', 'SELECT treatment_type_code, date_of_treatment FROM Treatments WHERE dog_id = 12 AND treatment_type_code IN (SELECT treatment_type_code FROM Treatment_Types) GROUP BY treatment_type_code, date_of_treatment HAVING SUM(cost_of_treatment) >= 84 ORDER BY date_of_treatment LIMIT 3'], ['SELECT dog_id, Owners.owner_id FROM Dogs JOIN Owners JOIN Sizes ON Dogs.owner_id = Owners.owner_id AND Dogs.size_code = Sizes.size_code AND Owners.owner_id = Dogs.owner_id ORDER BY Owners.owner_id DESC LIMIT 6', 'SELECT dog_id, Owners.owner_id FROM Dogs JOIN Owners JOIN Sizes ON Dogs.owner_id = Owners.owner_id AND Dogs.size_code = Sizes.size_code ORDER BY Owners.owner_id DESC LIMIT 6'], ['SELECT Professionals.professional_id, role_code FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id WHERE  Professionals.professional_id = 25 AND state NOT IN (SELECT state FROM Owners WHERE owner_id BETWEEN 1 AND 10 OR  owner_id < 11) GROUP BY role_code ORDER BY Professionals.professional_id ASC LIMIT 8', 'SELECT T2.professional_id, T2.role_code FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id WHERE T2.professional_id = 25 AND T2.state NOT IN (SELECT state FROM Owners WHERE owner_id BETWEEN 1 AND 10 OR owner_id < 11) GROUP BY T2.role_code ORDER BY T2.professional_id ASC LIMIT 8'], ['SELECT treatment_type_code, treatment_type_code FROM Dogs JOIN Treatments JOIN Sizes ON Dogs.size_code = Sizes.size_code AND Dogs.dog_id = Treatments.dog_id WHERE  Dogs.dog_id = 20 ORDER BY treatment_type_code ASC', 'SELECT T.treatment_type_code FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Sizes S ON D.size_code = S.size_code WHERE D.dog_id = 20 ORDER BY T.treatment_type_code ASC'], ['SELECT SUM(dog_id) FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE  owner_id = 38', 'SELECT SUM(dog_id) FROM Dogs JOIN Sizes ON Dogs.size_code = Sizes.size_code WHERE Dogs.owner_id = 38'], ['SELECT COUNT(dog_id) FROM Dogs JOIN Owners JOIN Sizes ON Dogs.owner_id = Owners.owner_id AND Dogs.size_code = Sizes.size_code AND Owners.owner_id = Dogs.owner_id WHERE  Owners.owner_id <= 89', 'SELECT COUNT(dog_id) FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.owner_id <= 89'], ['SELECT dog_id, abandoned_yn FROM Dogs GROUP BY abandoned_yn HAVING AVG(owner_id) = 5 LIMIT 1', 'SELECT MIN(dog_id), abandoned_yn FROM Dogs GROUP BY abandoned_yn HAVING AVG(owner_id) = 5 LIMIT 1']], 'cre_Drama_Workshop_Groups': [['SELECT Invoice_Items.Product_ID, Invoice_Items.Order_ID, Invoice_Items.Order_Item_ID FROM Invoice_Items JOIN Invoice_Items AS t ON Invoice_Items.Invoice_Item_ID = t.Invoice_Item_ID WHERE Invoice_Items.Order_ID BETWEEN 1 AND 10 OR Order_Item_ID = (SELECT SUM(Order_Item_ID) FROM Invoices) GROUP BY Invoice_Items.Order_Item_ID ORDER BY Invoice_Items.Product_ID DESC', 'SELECT Invoice_Items.Product_ID, Invoice_Items.Order_ID, Invoice_Items.Order_Item_ID FROM Invoice_Items WHERE Invoice_Items.Order_ID BETWEEN 1 AND 10 GROUP BY Invoice_Items.Order_Item_ID ORDER BY Invoice_Items.Product_ID DESC'], ['SELECT AVG(w.Order_ID), w.Product_ID FROM Order_Items AS w WHERE  w.Order_ID < 48 LIMIT 6', 'SELECT AVG(w.Order_Quantity), w.Product_ID FROM Order_Items AS w WHERE  w.Order_ID < 48 LIMIT 6'], ['SELECT n.Address_ID, Stores.Marketing_Region_Code FROM Stores AS n JOIN Stores ON Stores.Store_ID = n.Store_ID WHERE Store_ID NOT IN (SELECT Store_ID FROM Stores AS a)', 'SELECT n.Address_ID, n.Marketing_Region_Code FROM Stores AS n WHERE n.Store_ID NOT IN (SELECT Store_ID FROM Customer_Orders)'], ['SELECT COUNT(Workshop_Group_ID), Workshop_Group_ID FROM Addresses JOIN Drama_Workshop_Groups ON Drama_Workshop_Groups.Address_ID = Addresses.Address_ID WHERE EXISTS (SELECT * FROM Stores WHERE Address_ID BETWEEN 1 AND 10 AND Addresses.Address_ID = Address_ID LIMIT 9) ORDER BY Workshop_Group_ID DESC', 'SELECT COUNT(Workshop_Group_ID), Workshop_Group_ID FROM Addresses JOIN Drama_Workshop_Groups ON Drama_Workshop_Groups.Address_ID = Addresses.Address_ID WHERE EXISTS (SELECT * FROM Stores WHERE Address_ID BETWEEN 1 AND 10 AND Addresses.Address_ID = Stores.Address_ID LIMIT 9) ORDER BY Workshop_Group_ID DESC'], ['SELECT COUNT(Clients.Address_ID), u.Customer_Email_Address FROM Clients AS u JOIN Clients ON Clients.Client_ID = u.Client_ID WHERE Customer_Name IN (SELECT Customer_Name FROM Clients AS d) GROUP BY u.Customer_Email_Address ORDER BY u.Customer_Email_Address ASC', 'SELECT COUNT(u.Address_ID), u.Customer_Email_Address FROM Clients AS u GROUP BY u.Customer_Email_Address ORDER BY u.Customer_Email_Address ASC']], 'flight_2': [['SELECT COUNT(DISTINCT t.uid) FROM airlines AS t WHERE t.uid BETWEEN 1 AND 10 AND  t.uid > 49', 'SELECT COUNT(DISTINCT t.uid) FROM airlines AS t WHERE t.uid > 49;'], ['SELECT COUNT(DISTINCT q.Airline), q.DestAirport FROM flights AS q WHERE  q.FlightNo = 52 ORDER BY q.DestAirport ASC', 'SELECT COUNT(DISTINCT f.Airline), f.DestAirport FROM flights AS f WHERE f.FlightNo = 52 ORDER BY f.DestAirport ASC;'], ['SELECT City, Country FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode AND airports.AirportCode = flights.SourceAirport WHERE  FlightNo >= 54', 'SELECT T1.City AS SourceCity, T1.Country AS SourceCountry, T2.City AS DestCity, T2.Country AS DestCountry FROM airports T1 JOIN flights ON T1.AirportCode = flights.SourceAirport JOIN airports T2 ON flights.DestAirport = T2.AirportCode WHERE flights.FlightNo >= 54'], ['SELECT SourceAirport FROM flights WHERE  Airline <= 79 ORDER BY SourceAirport ASC', 'SELECT SourceAirport FROM flights WHERE Airline <= 79 ORDER BY SourceAirport ASC'], ['SELECT Airline, AirportName FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode AND airports.AirportCode = flights.SourceAirport WHERE  FlightNo < 70 ORDER BY Airline ASC', 'SELECT T2.Airline, T3.AirportName FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid JOIN airports AS T3 ON T1.DestAirport = T3.AirportCode WHERE T1.FlightNo < 70 ORDER BY T2.Airline ASC;'], ['SELECT COUNT(DISTINCT uid), uid, Abbreviation FROM airlines WHERE  uid = 17 GROUP BY Abbreviation ORDER BY Abbreviation DESC LIMIT 4', 'SELECT Abbreviation FROM airlines WHERE uid = 17;'], ['SELECT AVG(Airline), FlightNo FROM flights WHERE  FlightNo >= 51 GROUP BY FlightNo ORDER BY FlightNo ASC', 'SELECT AVG(FlightNo), Airline FROM flights WHERE FlightNo >= 51 GROUP BY Airline ORDER BY Airline ASC'], ['SELECT uid, Airline FROM airlines WHERE uid BETWEEN 1 AND 10 GROUP BY Airline', 'SELECT uid, Airline FROM airlines WHERE uid BETWEEN 1 AND 10 GROUP BY Airline'], ['SELECT COUNT(DISTINCT l.SourceAirport), l.SourceAirport FROM flights AS l WHERE l.Airline BETWEEN 1 AND 10 OR FlightNo NOT IN (SELECT FlightNo FROM flights WHERE  Airline >= 44)', 'SELECT COUNT(DISTINCT l.SourceAirport), l.SourceAirport FROM flights AS l WHERE l.Airline BETWEEN 1 AND 10 OR l.FlightNo NOT IN (SELECT MIN(FlightNo) FROM flights WHERE  Airline >= 44) GROUP BY l.SourceAirport;'], ['SELECT Airline, CountryAbbrev FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode AND airports.AirportCode = flights.SourceAirport WHERE Airline BETWEEN 1 AND 10 AND  FlightNo < 54', 'SELECT T1.Airline, T2.CountryAbbrev AS DestCountry, T3.CountryAbbrev AS SourceCountry FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T1.Airline BETWEEN 1 AND 10 AND T1.FlightNo < 54'], ['SELECT y.uid, y.uid, y.uid FROM airlines AS y WHERE uid NOT IN (SELECT uid FROM airlines WHERE  uid >= 1 LIMIT 6) ORDER BY y.uid ASC', 'SELECT y.uid FROM airlines AS y WHERE uid NOT IN (SELECT uid FROM airlines WHERE  uid >= 1 LIMIT 6) ORDER BY y.uid ASC'], ['SELECT SUM(FlightNo) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode AND airports.AirportCode = flights.SourceAirport WHERE  FlightNo != 60 LIMIT 10', 'SELECT SUM(FlightNo) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE FlightNo != 60 LIMIT 10']], 'customers_and_orders': [['SELECT n.address_id, n.address_details, n.address_details FROM Addresses AS n GROUP BY n.address_details', 'SELECT MIN(n.address_id), n.address_details FROM Addresses AS n GROUP BY n.address_details;'], ['SELECT COUNT(DISTINCT customer_address), customer_number FROM Products JOIN Customers JOIN Customer_Orders JOIN Order_Items ON Customer_Orders.customer_id = Customers.customer_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.product_id = Products.product_id WHERE Customer_Orders.order_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Customer_Orders WHERE Customers.customer_id = customer_id) LIMIT 5', 'SELECT T1.customer_address, T1.customer_number FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Products AS T4 ON T3.product_id = T4.product_id WHERE T2.order_id BETWEEN 1 AND 10 GROUP BY T1.customer_address, T1.customer_number'], ['SELECT Customer_Orders.customer_id FROM Customer_Orders JOIN Customer_Orders AS r ON Customer_Orders.order_id = r.order_id ORDER BY Customer_Orders.customer_id DESC', 'SELECT T1.customer_id FROM Customer_Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id ORDER BY T1.customer_id DESC'], ['SELECT AVG(Products.product_id) FROM Products JOIN Customers JOIN Customer_Orders JOIN Order_Items ON Customer_Orders.customer_id = Customers.customer_id AND Customer_Orders.order_id = Order_Items.order_id AND Order_Items.product_id = Products.product_id LIMIT 2', 'SELECT AVG(Products.product_id) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Customer_Orders.order_id = Order_Items.order_id JOIN Customers ON Customers.customer_id = Customer_Orders.customer_id LIMIT 1'], ['SELECT address_id, address_id, address_details FROM Addresses WHERE address_id BETWEEN 1 AND 10 OR address_id <= (SELECT AVG(address_id) FROM Addresses AS j LIMIT 10) ORDER BY address_details ASC', 'SELECT address_id, address_details FROM Addresses WHERE address_id BETWEEN 1 AND 10 OR address_id <= (SELECT AVG(address_id) FROM Addresses) ORDER BY address_details ASC'], ['SELECT AVG(i.customer_id), MIN(i.address_id), i.payment_method_code, i.customer_number FROM Customers AS i WHERE  i.address_id >= 54 GROUP BY i.customer_number HAVING SUM(i.customer_id) >= 40 ORDER BY i.customer_number DESC', 'SELECT AVG(i.customer_id), MIN(i.address_id), i.payment_method_code, i.customer_number FROM Customers AS i WHERE  i.address_id >= 54 GROUP BY i.payment_method_code, i.customer_number HAVING AVG(i.customer_id) >= 40 ORDER BY AVG(i.customer_id) DESC'], ['SELECT customer_name, customer_name, customer_email FROM Customers WHERE address_id BETWEEN 1 AND 10 ORDER BY customer_name ASC', 'SELECT customer_name, customer_email FROM Customers WHERE address_id BETWEEN 1 AND 10 ORDER BY customer_name ASC'], ['SELECT COUNT(order_item_id), Order_Items.product_id FROM Products JOIN Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id AND Order_Items.product_id = Products.product_id WHERE Order_Items.product_id BETWEEN 1 AND 10 ORDER BY Order_Items.product_id ASC', 'SELECT COUNT(order_item_id), Order_Items.product_id FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Customer_Orders.order_id = Order_Items.order_id WHERE Order_Items.product_id BETWEEN 1 AND 10 ORDER BY Order_Items.product_id ASC'], ['SELECT m.customer_phone, m.customer_email FROM Customers AS m WHERE m.customer_id BETWEEN 1 AND 10 AND  m.address_id != 45 GROUP BY m.customer_email HAVING MIN(m.address_id) <= 62 ORDER BY m.customer_email DESC', 'SELECT m.customer_phone, m.customer_email FROM Customers AS m WHERE m.customer_id BETWEEN 1 AND 10 AND m.address_id != 45 GROUP BY m.customer_email, m.customer_phone HAVING MIN(m.address_id) <= 62 ORDER BY m.customer_email DESC'], ['SELECT MIN(product_price), COUNT(DISTINCT product_price) FROM Products JOIN Order_Items ON Order_Items.product_id = Products.product_id WHERE  order_item_id > 22', 'SELECT MIN(T1.product_price), COUNT(DISTINCT T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T2.product_id = T1.product_id WHERE T2.order_item_id > 22;'], ['SELECT COUNT(DISTINCT order_status_code), customer_id FROM Customer_Orders WHERE customer_id BETWEEN 1 AND 10 OR  customer_id > 51', 'SELECT customer_id, COUNT(DISTINCT order_status_code) FROM Customer_Orders WHERE customer_id BETWEEN 1 AND 10 OR customer_id > 51 GROUP BY customer_id;'], ['SELECT address_id, customer_address FROM Customers WHERE customer_id < (SELECT MIN(customer_id) FROM Customers AS j WHERE j.customer_id BETWEEN 1 AND 10) GROUP BY customer_address LIMIT 3', 'SELECT address_id, customer_address FROM Customers WHERE customer_id < (SELECT MIN(customer_id) FROM Customers AS j WHERE j.customer_id BETWEEN 1 AND 10) LIMIT 3'], ['SELECT Order_Items.order_id, Customer_Orders.order_id FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id WHERE  customer_id != 54', 'SELECT order_id FROM Customer_Orders WHERE customer_id != 54'], ['SELECT h.order_id, h.order_date FROM Customer_Orders AS h WHERE customer_id <= (SELECT MIN(customer_id) FROM Customers AS g) GROUP BY h.order_date', 'SELECT h.order_id, h.order_date FROM Customer_Orders AS h WHERE h.customer_id <= (SELECT MIN(customer_id) FROM Customers AS g)'], ['SELECT product_id, product_price, product_name FROM Products GROUP BY product_name HAVING SUM(product_price) < 99', 'SELECT product_name, SUM(product_price) as total_price FROM Products GROUP BY product_name HAVING SUM(product_price) < 99']], 'pets_1': [['SELECT StuID, city_code FROM Student WHERE  StuID != 84 AND EXISTS (SELECT * FROM Has_Pet AS i WHERE  i.PetID < 98 AND Student.StuID = i.StuID) GROUP BY city_code HAVING MAX(Age) = 100 LIMIT 6', 'SELECT StuID, city_code FROM Student WHERE StuID != 84 AND EXISTS (SELECT 1 FROM Has_Pet WHERE Has_Pet.StuID = Student.StuID AND PetID < 98) GROUP BY city_code HAVING MAX(Age) = 100 LIMIT 6'], ['SELECT StuID, PetType FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE  Pets.PetID = 98 ORDER BY PetType DESC LIMIT 6', 'SELECT StuID, PetType FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetID = 98 ORDER BY PetType DESC LIMIT 6 OFFSET 0'], ['SELECT COUNT(DISTINCT r.city_code), r.Advisor, r.Sex, r.LName FROM Student AS r WHERE r.Age BETWEEN 1 AND 10 GROUP BY r.LName HAVING SUM(r.Age) > 100 LIMIT 3', 'SELECT COUNT(DISTINCT r.city_code), r.Advisor, r.Sex, r.LName FROM Student AS r WHERE r.Age BETWEEN 1 AND 10 GROUP BY r.LName, r.Advisor, r.Sex HAVING SUM(r.Age) > 100 ORDER BY SUM(r.Age) DESC LIMIT 3'], ['SELECT s.StuID FROM Student JOIN Student AS s ON Student.StuID = s.StuID WHERE  Student.StuID > 97 AND LName < (SELECT MAX(LName) FROM Student AS k LIMIT 4)', 'SELECT s.StuID FROM Student AS s WHERE s.StuID > 97 AND s.LName < (SELECT MIN(LName) FROM (SELECT LName FROM Student ORDER BY LName DESC LIMIT 4) AS subquery)'], ['SELECT city_code FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE  Student.StuID <= 100', 'SELECT DISTINCT city_code FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet) AND StuID <= 100'], ['SELECT MIN(Student.Age), AVG(Student.StuID), MAX(i.Major), Student.LName FROM Student AS i JOIN Student ON Student.StuID = i.StuID WHERE  i.StuID != 33 GROUP BY Student.LName HAVING COUNT(i.StuID) = 88 ORDER BY Student.LName ASC LIMIT 1', 'SELECT MIN(Student.Age), AVG(Student.StuID), Student.LName FROM Student AS i JOIN Student ON Student.StuID = i.StuID WHERE  i.StuID != 33 GROUP BY Student.LName HAVING COUNT(i.StuID) = 88 ORDER BY Student.LName ASC LIMIT 1'], ['SELECT COUNT(Age), Advisor FROM Student WHERE Fname NOT IN (SELECT Fname FROM Student AS j WHERE  j.StuID = 75)', 'SELECT Advisor, COUNT(Age) FROM Student WHERE Fname NOT IN (SELECT Fname FROM Student AS j WHERE j.StuID = 75) GROUP BY Advisor;'], ['SELECT COUNT(Major) FROM Has_Pet JOIN Student JOIN Pets ON Has_Pet.StuID = Student.StuID AND Pets.PetID = Has_Pet.PetID WHERE Age BETWEEN 1 AND 10 AND  Has_Pet.PetID <= 60', 'SELECT COUNT(DISTINCT T1.Major) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Age BETWEEN 1 AND 10 AND T2.PetID <= 60'], ['SELECT AVG(Age) FROM Student WHERE Major NOT IN (SELECT Major FROM Student AS j)', 'SELECT AVG(Age) FROM Student WHERE Major NOT IN (SELECT Major FROM Student GROUP BY Major HAVING COUNT(Major) = 1)'], ['SELECT AVG(weight), weight FROM Pets WHERE pet_age IN (SELECT pet_age FROM Pets)', 'SELECT AVG(weight) FROM Pets WHERE pet_age IN (SELECT pet_age FROM Pets)'], ['SELECT n.PetType, n.PetType FROM Pets AS n WHERE  n.pet_age > 79 AND PetID IN (SELECT PetID FROM Pets AS e WHERE e.weight BETWEEN 1 AND 10 AND  e.PetID <= 23)', 'SELECT DISTINCT n.PetType FROM Pets AS n WHERE  n.pet_age > 79 AND n.PetID IN (SELECT e.PetID FROM Pets AS e WHERE e.weight BETWEEN 1 AND 10 AND  e.PetID <= 23)']], 'cinema': [['SELECT Openning_year, Name FROM cinema WHERE Capacity >= (SELECT SUM(Capacity) FROM cinema WHERE  Openning_year < 95) GROUP BY Openning_year HAVING SUM(Openning_year) < 66 LIMIT 7', 'SELECT AVG(Openning_year), Name FROM cinema WHERE Capacity >= (SELECT MAX(Capacity) FROM cinema WHERE Openning_year < 95) GROUP BY Name, Openning_year LIMIT 7'], ['SELECT COUNT(DISTINCT Openning_year), Location FROM cinema WHERE  Cinema_ID != 88', 'SELECT COUNT(DISTINCT Openning_year), Location FROM cinema WHERE Cinema_ID != 88 GROUP BY Location;'], ['SELECT Film_ID FROM film WHERE Number_in_season BETWEEN 1 AND 10 AND Directed_by IN (SELECT Directed_by FROM film AS s WHERE  s.Film_ID < 79)', 'SELECT Film_ID FROM film WHERE Number_in_season BETWEEN 1 AND 10 AND Directed_by IN (SELECT Directed_by FROM film AS s WHERE  s.Film_ID < 79)'], ['SELECT COUNT(Cinema_ID), Capacity, Openning_year FROM cinema WHERE  Openning_year < 33 GROUP BY Openning_year', 'SELECT COUNT(*), Capacity, Openning_year FROM cinema WHERE Openning_year < 33 GROUP BY Openning_year, Capacity;'], ['SELECT r.Title FROM film AS r WHERE  r.Film_ID < 33 ORDER BY r.Title ASC', 'SELECT Title FROM film WHERE Film_ID < 33 ORDER BY Title ASC'], ['SELECT Location, Location FROM cinema WHERE  Capacity = 35 LIMIT 4', 'SELECT Location FROM cinema WHERE Capacity = 35 LIMIT 4'], ['SELECT COUNT(DISTINCT Capacity) FROM schedule JOIN cinema ON schedule.Cinema_ID = cinema.Cinema_ID WHERE  schedule.Cinema_ID >= 30', 'SELECT COUNT(DISTINCT T.Capacity) FROM cinema AS T INNER JOIN schedule AS S ON T.Cinema_ID = S.Cinema_ID WHERE T.Cinema_ID >= 30'], ['SELECT SUM(Cinema_ID), Location FROM cinema WHERE  Cinema_ID != 70 OR EXISTS (SELECT * FROM schedule WHERE Film_ID BETWEEN 1 AND 10 AND  Cinema_ID >= 80 AND cinema.Cinema_ID = Cinema_ID) GROUP BY Location HAVING COUNT(Openning_year) > 52', 'SELECT COUNT(*), Location FROM cinema WHERE Cinema_ID != 70 OR EXISTS (SELECT * FROM schedule WHERE Film_ID BETWEEN 1 AND 10 AND Cinema_ID >= 80 AND cinema.Cinema_ID = schedule.Cinema_ID) GROUP BY Location HAVING COUNT(DISTINCT Openning_year) > 52'], ['SELECT cinema.Name FROM cinema AS u JOIN cinema ON cinema.Cinema_ID = u.Cinema_ID WHERE  cinema.Capacity = 8 LIMIT 10', 'SELECT Name FROM cinema WHERE Capacity = 8 LIMIT 10'], ['SELECT q.Openning_year FROM cinema AS q JOIN cinema ON cinema.Cinema_ID = q.Cinema_ID WHERE Name NOT IN (SELECT Name FROM cinema AS b) ORDER BY q.Openning_year ASC', 'SELECT DISTINCT q.Openning_year FROM cinema AS q ORDER BY q.Openning_year ASC'], ['SELECT MIN(c.Openning_year), COUNT(DISTINCT c.Capacity) FROM cinema AS c WHERE  c.Cinema_ID = 61', 'SELECT IFNULL(MIN(c.Openning_year), 0), IFNULL(COUNT(DISTINCT c.Capacity), 0) FROM cinema AS c WHERE c.Cinema_ID = 61']], 'local_govt_in_alabama': [['SELECT COUNT(DISTINCT c.Participant_Details) FROM Participants AS c WHERE  c.Participant_ID < 59 LIMIT 4', 'SELECT COUNT(DISTINCT Participant_Details) FROM Participants WHERE Participant_ID < 59 LIMIT 4'], ['SELECT Event_Details, Events.Service_ID FROM Participants JOIN Events JOIN Services JOIN Participants_in_Events ON Events.Service_ID = Services.Service_ID AND Participants_in_Events.Event_ID = Events.Event_ID AND Participants.Participant_ID = Participants_in_Events.Participant_ID WHERE  Events.Event_ID >= 28 GROUP BY Events.Service_ID', 'SELECT Event_Details, Events.Service_ID FROM Participants JOIN Participants_in_Events ON Participants.Participant_ID = Participants_in_Events.Participant_ID JOIN Events ON Participants_in_Events.Event_ID = Events.Event_ID JOIN Services ON Events.Service_ID = Services.Service_ID WHERE Events.Event_ID >= 28 GROUP BY Events.Service_ID'], ['SELECT SUM(Events.Event_ID), COUNT(DISTINCT Services.Service_ID) FROM Events JOIN Services JOIN Participants_in_Events ON Events.Service_ID = Services.Service_ID AND Participants_in_Events.Event_ID = Events.Event_ID WHERE  Participants_in_Events.Event_ID < 22 LIMIT 1', 'SELECT COUNT(Events.Event_ID), COUNT(DISTINCT Services.Service_ID) FROM Events JOIN Services JOIN Participants_in_Events ON Events.Service_ID = Services.Service_ID AND Participants_in_Events.Event_ID = Events.Event_ID WHERE Participants_in_Events.Event_ID < 22'], ['SELECT SUM(Service_ID), Event_Details, Event_Details FROM Events WHERE  Service_ID <= 79 GROUP BY Event_Details LIMIT 2', 'SELECT SUM(Service_ID), Event_Details FROM Events WHERE Service_ID <= 79 GROUP BY Event_Details LIMIT 2'], ['SELECT Participant_ID, Event_Details FROM Events JOIN Participants_in_Events ON Participants_in_Events.Event_ID = Events.Event_ID WHERE Participant_ID BETWEEN 1 AND 10 ORDER BY Participant_ID ASC LIMIT 1', 'SELECT T1.Participant_ID, T2.Event_Details FROM Participants_in_Events AS T1 JOIN Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Participant_ID BETWEEN 1 AND 10 ORDER BY T1.Participant_ID ASC LIMIT 1']], 'county_public_safety': [['SELECT SUM(Multiracial), Asian FROM county_public_safety JOIN city ON city.County_ID = county_public_safety.County_ID WHERE city.County_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM county_public_safety WHERE Case_burden BETWEEN 1 AND 10 AND city.City_ID = County_ID LIMIT 4) LIMIT 4', 'SELECT SUM(T2.Multiracial), T2.Asian FROM county_public_safety AS T1 JOIN city AS T2 ON T2.County_ID = T1.County_ID WHERE T1.County_ID BETWEEN 1 AND 10 OR (T1.Case_burden BETWEEN 1 AND 10) LIMIT 4'], ['SELECT MAX(Case_burden) FROM county_public_safety WHERE  County_ID >= 78 LIMIT 4', 'SELECT Case_burden FROM (SELECT Case_burden FROM county_public_safety WHERE County_ID >= 78 ORDER BY Case_burden DESC) LIMIT 4;'], ['SELECT COUNT(DISTINCT City_ID), COUNT(DISTINCT Asian), Police_force FROM county_public_safety JOIN city ON city.County_ID = county_public_safety.County_ID WHERE Residents_per_officer IN (SELECT Residents_per_officer FROM county_public_safety WHERE County_ID BETWEEN 1 AND 10)', 'SELECT COUNT(DISTINCT T1.County_ID) AS County_ID_count, COUNT(DISTINCT T2.Asian) AS Asian_count FROM county_public_safety T1 JOIN city T2 ON T2.County_ID = T1.County_ID WHERE T1.Residents_per_officer IN (SELECT Residents_per_officer FROM county_public_safety WHERE County_ID BETWEEN 1 AND 10) GROUP BY T1.Police_force'], ['SELECT MIN(Police_officers), MIN(County_ID), Police_force FROM county_public_safety WHERE EXISTS (SELECT * FROM city AS p WHERE  p.City_ID > 69 AND county_public_safety.County_ID = p.County_ID) ORDER BY Police_force ASC', '\n    SELECT County_ID, Police_officers, Police_force \n    FROM county_public_safety \n    WHERE County_ID IN (\n        SELECT County_ID \n        FROM city \n        WHERE City_ID > 69\n    ) \n    ORDER BY Police_force ASC, Police_officers ASC'], ['SELECT Asian, Black, Amerindian FROM city WHERE  White <= 69 AND EXISTS (SELECT * FROM county_public_safety AS t WHERE t.Crime_rate BETWEEN 1 AND 10 OR  t.County_ID > 58 AND city.City_ID = t.County_ID LIMIT 5) GROUP BY Amerindian HAVING MAX(Hispanic) >= 65 LIMIT 6', 'SELECT Amerindian, MAX(Asian) AS max_Asian, MAX(Black) AS max_Black, MAX(Hispanic) AS max_Hispanic FROM city WHERE White <= 69 AND EXISTS (SELECT * FROM county_public_safety AS t WHERE (t.Crime_rate BETWEEN 1 AND 10 OR t.County_ID > 58) AND city.City_ID = t.County_ID) GROUP BY Amerindian HAVING MAX(Hispanic) >= 65 LIMIT 6'], ['SELECT county_public_safety.Police_officers, county_public_safety.Name FROM county_public_safety JOIN county_public_safety AS i ON county_public_safety.County_ID = i.County_ID WHERE county_public_safety.County_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM city WHERE  County_ID > 23 AND county_public_safety.County_ID = County_ID LIMIT 4)', 'SELECT county_public_safety.Police_officers, county_public_safety.Name FROM county_public_safety WHERE county_public_safety.County_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM city WHERE city.County_ID > 23 AND city.County_ID = county_public_safety.County_ID LIMIT 4)'], ['SELECT COUNT(DISTINCT Police_officers), Population, Police_officers FROM county_public_safety WHERE  County_ID >= 24 GROUP BY Police_officers LIMIT 9', 'SELECT COUNT(DISTINCT Police_officers), Population, SUM(Police_officers) AS Total_Police_officers FROM county_public_safety WHERE County_ID >= 24 GROUP BY Population LIMIT 9'], ['SELECT MIN(p.Multiracial), COUNT(DISTINCT p.City_ID) FROM city AS p JOIN city ON city.City_ID = p.City_ID WHERE p.Amerindian BETWEEN 1 AND 10 AND  p.City_ID != 5', 'SELECT MIN(p.Multiracial), COUNT(DISTINCT p.City_ID) FROM city AS p JOIN county_public_safety AS c ON c.County_ID = p.County_ID WHERE p.Amerindian BETWEEN 1 AND 10 AND p.City_ID != 5'], ['SELECT COUNT(e.Asian), e.Name FROM city AS e WHERE e.Asian BETWEEN 1 AND 10 AND  e.Asian < 21 GROUP BY e.Name HAVING MIN(e.Asian) >= 22', 'SELECT COUNT(e.Asian), e.Name FROM city AS e WHERE e.Asian BETWEEN 1 AND 10 AND e.Asian < 21 GROUP BY e.Name HAVING MAX(e.Asian) < 22'], ['SELECT Crime_rate, Case_burden, Amerindian, city.Name FROM county_public_safety JOIN city ON city.County_ID = county_public_safety.County_ID WHERE Hispanic BETWEEN 1 AND 10 GROUP BY city.Name', 'SELECT Crime_rate, Case_burden, Amerindian, city.Name FROM county_public_safety JOIN city ON county_public_safety.County_ID = city.County_ID WHERE city.Hispanic BETWEEN 1 AND 10 GROUP BY city.Name, Crime_rate, Case_burden, Amerindian;'], ['SELECT MIN(z.Asian), z.City_ID, z.Amerindian FROM city AS z WHERE  z.Asian <= 73 GROUP BY z.Amerindian ORDER BY z.City_ID DESC', 'SELECT MIN(z.Asian), z.City_ID, z.Amerindian FROM city AS z WHERE  z.Asian <= 73 GROUP BY z.Amerindian, z.City_ID ORDER BY z.City_ID DESC'], ['SELECT v.Crime_rate FROM county_public_safety AS v WHERE  v.Police_officers != 30 OR Police_force IN (SELECT Police_force FROM county_public_safety WHERE  County_ID >= 86) ORDER BY v.Crime_rate ASC LIMIT 9', 'SELECT v.Crime_rate FROM county_public_safety AS v WHERE v.Police_officers != 30 OR v.Police_force IN (SELECT Police_force FROM county_public_safety WHERE County_ID >= 86) ORDER BY v.Crime_rate ASC LIMIT 9'], ['SELECT Population, Asian FROM county_public_safety JOIN city ON city.County_ID = county_public_safety.County_ID WHERE Black BETWEEN 1 AND 10 AND  Population >= 36 GROUP BY Asian HAVING SUM(White) <= 52', 'SELECT county_public_safety.Population, city.Asian FROM county_public_safety JOIN city ON city.County_ID = county_public_safety.County_ID WHERE city.Black BETWEEN 1 AND 10 AND county_public_safety.Population >= 36 GROUP BY county_public_safety.Population, city.Asian HAVING SUM(city.White) <= 52'], ['SELECT Crime_rate FROM county_public_safety WHERE County_ID BETWEEN 1 AND 10 OR  Crime_rate != 38 LIMIT 6', 'SELECT Crime_rate FROM county_public_safety WHERE County_ID BETWEEN 1 AND 10 AND Crime_rate != 38 LIMIT 6']], 'college_3': [['SELECT lettergrade FROM Gradeconversion', 'SELECT DISTINCT lettergrade FROM Gradeconversion;']], 'phone_1': [['SELECT COUNT(Hardware_colours), Pixels, map FROM screen_mode WHERE EXISTS (SELECT * FROM phone AS p WHERE screen_mode.Graphics_mode = p.screen_mode) GROUP BY map', 'SELECT COUNT(DISTINCT Hardware_colours), Pixels, map FROM screen_mode WHERE EXISTS (SELECT * FROM phone AS p WHERE screen_mode.Graphics_mode = p.screen_mode) GROUP BY Pixels, map'], ['SELECT v.Slots, v.WiFi FROM chip_model AS v WHERE v.ROM_MiB BETWEEN 1 AND 10 OR WiFi IN (SELECT WiFi FROM chip_model) LIMIT 9', 'SELECT v.Slots, v.WiFi FROM chip_model AS v WHERE v.ROM_MiB BETWEEN 1 AND 10 OR v.WiFi IN (SELECT DISTINCT t.WiFi FROM chip_model AS t) LIMIT 9'], ['SELECT COUNT(DISTINCT Accreditation_type), Type FROM phone JOIN chip_model JOIN screen_mode ON phone.chip_model = chip_model.Model_name AND screen_mode.Graphics_mode = phone.screen_mode WHERE  Launch_year <= 9', 'SELECT COUNT(DISTINCT Accreditation_type), Type FROM phone INNER JOIN chip_model ON phone.chip_model = chip_model.Model_name INNER JOIN screen_mode ON CAST(phone.screen_mode AS number) = screen_mode.Graphics_mode WHERE CAST(phone.screen_mode AS number) IS NOT NULL AND chip_model.Launch_year <= 9'], ['SELECT COUNT(RAM_MiB), COUNT(DISTINCT ROM_MiB), Slots, Launch_year FROM chip_model WHERE  Launch_year <= 67 GROUP BY Launch_year ORDER BY Slots ASC', 'SELECT COUNT(RAM_MiB), COUNT(DISTINCT ROM_MiB), Slots, Launch_year FROM chip_model WHERE  Launch_year <= 67 GROUP BY Slots, Launch_year ORDER BY Launch_year ASC;'], ['SELECT Date FROM phone JOIN screen_mode ON screen_mode.Graphics_mode = phone.screen_mode WHERE  Hardware_colours = 20 ORDER BY Date DESC LIMIT 2', 'SELECT T1.Date FROM phone AS T1 JOIN screen_mode AS T2 ON CAST(T1.screen_mode AS number) = T2.Graphics_mode WHERE T2.Hardware_colours = 20 ORDER BY T1.Date DESC LIMIT 2;'], ['SELECT ROM_MiB, Date, Accreditation_level FROM phone JOIN chip_model ON phone.chip_model = chip_model.Model_name WHERE  RAM_MiB <= 17 GROUP BY Accreditation_level', 'SELECT cm.ROM_MiB, p.Date, p.Accreditation_level FROM phone p JOIN chip_model cm ON p.chip_model = cm.Model_name WHERE cm.RAM_MiB <= 17 GROUP BY p.Accreditation_level, p.Date, cm.ROM_MiB;'], ['SELECT Company_name FROM phone JOIN screen_mode ON screen_mode.Graphics_mode = phone.screen_mode WHERE Graphics_mode BETWEEN 1 AND 10 LIMIT 2', 'SELECT T1.Company_name FROM phone AS T1 JOIN screen_mode AS T2 ON T1.screen_mode = T2.Graphics_mode::text WHERE T2.Graphics_mode BETWEEN 1 AND 10 LIMIT 2'], ['SELECT MIN(l.RAM_MiB), l.Slots FROM chip_model AS l WHERE  l.Launch_year >= 14 ORDER BY l.Slots ASC LIMIT 8', 'SELECT MIN(l.RAM_MiB), l.Slots FROM chip_model AS l WHERE  l.Launch_year >= 14 ORDER BY l.RAM_MiB ASC LIMIT 8'], ['SELECT Model_name, Model_name, Launch_year FROM chip_model WHERE  RAM_MiB >= 29 GROUP BY Launch_year', 'SELECT Model_name, Launch_year FROM chip_model WHERE RAM_MiB >= 29 GROUP BY Model_name, Launch_year;']], 'book_2': [['SELECT AVG(Issues), Title, Writer FROM book GROUP BY Writer HAVING AVG(Issues) < 76', 'SELECT AVG(Issues), Title, Writer FROM book GROUP BY Writer, Title HAVING AVG(Issues) < 76;'], ['SELECT COUNT(DISTINCT Book_ID), COUNT(DISTINCT Issues), COUNT(DISTINCT Writer) FROM book WHERE  Book_ID != 96 AND EXISTS (SELECT * FROM publication WHERE book.Book_ID = Book_ID) LIMIT 10', 'SELECT COUNT(DISTINCT Book_ID), COUNT(DISTINCT Issues), COUNT(DISTINCT Writer) FROM book WHERE Book_ID != 96 AND EXISTS (SELECT * FROM publication WHERE book.Book_ID = publication.Book_ID) LIMIT 10'], ['SELECT Book_ID, Publisher FROM publication WHERE  Book_ID >= 5 GROUP BY Publisher ORDER BY Book_ID DESC', 'SELECT Publisher FROM publication WHERE Book_ID >= 5 GROUP BY Publisher ORDER BY MIN(Book_ID) DESC;'], ['SELECT COUNT(DISTINCT publication.Book_ID), Price FROM book JOIN publication ON publication.Book_ID = book.Book_ID WHERE book.Book_ID BETWEEN 1 AND 10 OR Book_ID IN (SELECT Book_ID FROM book AS e WHERE  e.Issues < 15 LIMIT 9) ORDER BY Price DESC LIMIT 8', 'SELECT COUNT(DISTINCT publication.Book_ID), Price FROM book JOIN publication ON publication.Book_ID = book.Book_ID WHERE book.Book_ID BETWEEN 1 AND 10 OR book.Book_ID IN (SELECT e.Book_ID FROM book AS e WHERE e.Issues < 15 LIMIT 9) ORDER BY Price DESC LIMIT 8'], ['SELECT SUM(book.Book_ID), COUNT(DISTINCT Publication_Date), Writer, Publisher FROM book JOIN publication ON publication.Book_ID = book.Book_ID WHERE  publication.Book_ID = 9 GROUP BY Publisher HAVING COUNT(Price) <= 5 ORDER BY Writer DESC', 'SELECT COUNT(book.Book_ID), COUNT(DISTINCT publication.Publication_Date), book.Writer, publication.Publisher FROM book JOIN publication ON publication.Book_ID = book.Book_ID WHERE publication.Book_ID = 9 GROUP BY book.Writer, publication.Publisher HAVING COUNT(DISTINCT publication.Price) <= 5 ORDER BY book.Writer DESC;'], ['SELECT MAX(publication.Book_ID), COUNT(DISTINCT Price), Publication_ID FROM book JOIN publication ON publication.Book_ID = book.Book_ID WHERE Price BETWEEN 1 AND 10 AND  book.Book_ID <= 51 LIMIT 5', 'SELECT MAX(p.Book_ID), COUNT(DISTINCT p.Price), p.Publication_ID FROM book b JOIN publication p ON p.Book_ID = b.Book_ID WHERE p.Price BETWEEN 1 AND 10 AND  b.Book_ID <= 51 LIMIT 5'], ['SELECT AVG(y.Book_ID), y.Publication_Date, y.Publisher, y.Price FROM publication AS y WHERE  y.Book_ID > 39 OR Price < (SELECT SUM(Price) FROM publication AS u WHERE  u.Publication_ID >= 75) GROUP BY y.Price HAVING MAX(y.Book_ID) > 61 ORDER BY y.Price DESC', 'SELECT AVG(y.Book_ID), y.Publication_Date, y.Publisher, y.Price FROM publication AS y WHERE y.Book_ID > 39 OR Price < (SELECT SUM(Price) FROM publication AS u WHERE u.Publication_ID >= 75) GROUP BY y.Publication_Date, y.Publisher, y.Price HAVING AVG(y.Book_ID) > 61 ORDER BY y.Price DESC;'], ['SELECT Title, Publication_Date FROM book JOIN publication ON publication.Book_ID = book.Book_ID GROUP BY Publication_Date ORDER BY Publication_Date ASC', 'SELECT Title, Publication_Date FROM book JOIN publication ON publication.Book_ID = book.Book_ID GROUP BY Title, Publication_Date ORDER BY Publication_Date ASC;'], ['SELECT AVG(x.Issues), COUNT(x.Issues), COUNT(DISTINCT x.Writer), x.Title FROM book AS x WHERE x.Issues BETWEEN 1 AND 10 AND  x.Book_ID >= 88 GROUP BY x.Title HAVING COUNT(x.Book_ID) >= 76', 'SELECT x.Title, AVG(x.Issues) AS Average_Issues, COUNT(x.Issues) AS Issues_Count, COUNT(DISTINCT x.Writer) AS Unique_Writers FROM book AS x WHERE x.Issues BETWEEN 1 AND 10 AND x.Book_ID >= 88 GROUP BY x.Title HAVING COUNT(x.Title) >= 76'], ['SELECT Book_ID, Issues FROM book WHERE  Issues >= 19 OR Title IN (SELECT Title FROM book AS t WHERE  t.Issues < 61)', 'SELECT Book_ID, Issues FROM book WHERE Issues >= 19;'], ['SELECT COUNT(DISTINCT q.Publisher), q.Publisher, q.Price FROM publication AS q WHERE  q.Price >= 47 GROUP BY q.Price ORDER BY q.Price ASC', 'SELECT COUNT(DISTINCT Publisher), AVG(Price) FROM publication WHERE Price >= 47 ORDER BY Price ASC'], ['SELECT MIN(publication.Book_ID), COUNT(DISTINCT publication.Publication_ID), e.Publisher FROM publication AS e JOIN publication ON publication.Publication_ID = e.Publication_ID GROUP BY e.Publisher HAVING COUNT(e.Book_ID) <= 1', 'SELECT MIN(p.Book_ID), COUNT(DISTINCT p.Publication_ID), p.Publisher FROM publication AS p GROUP BY p.Publisher HAVING COUNT(p.Book_ID) <= 1'], ['SELECT COUNT(publication.Publication_ID), c.Book_ID FROM publication AS c JOIN publication ON publication.Publication_ID = c.Publication_ID WHERE  c.Book_ID > 59 LIMIT 9', 'SELECT COUNT(c.Publication_ID), c.Book_ID FROM publication AS c WHERE c.Book_ID > 59 LIMIT 9']], 'soccer_1': [['SELECT name FROM Country WHERE  id < 50 GROUP BY name HAVING MAX(id) = 55', 'SELECT name FROM Country WHERE id = (SELECT MAX(id) FROM Country WHERE id < 50);'], ['SELECT y.player_api_id, y.weight FROM Player AS y WHERE  y.id > 55 GROUP BY y.weight HAVING SUM(y.id) <= 82 ORDER BY y.player_api_id ASC', 'SELECT y.player_api_id, y.weight FROM Player AS y WHERE y.id > 55 GROUP BY y.player_api_id, y.weight HAVING SUM(y.id) <= 82 ORDER BY y.player_api_id ASC'], ['SELECT COUNT(DISTINCT League.id), country_id, country_id FROM League JOIN Country ON League.country_id = Country.id WHERE League.id BETWEEN 1 AND 10 OR  Country.id = 65 GROUP BY country_id ORDER BY country_id DESC', 'SELECT COUNT(DISTINCT League.id), country_id FROM League JOIN Country ON League.country_id = Country.id WHERE League.id BETWEEN 1 AND 10 OR  Country.id = 65 GROUP BY country_id ORDER BY country_id DESC'], ['SELECT SUM(country_id), League.name FROM League JOIN Country ON League.country_id = Country.id WHERE EXISTS (SELECT * FROM Country AS i WHERE  i.id >= 42 AND League.id = i.id) GROUP BY League.name HAVING SUM(Country.id) < 64 LIMIT 8', 'SELECT SUM(League.country_id) AS sum_country_id, League.name FROM League JOIN Country ON League.country_id = Country.id WHERE EXISTS (SELECT * FROM Country AS i WHERE  i.id >= 42 AND League.id = i.id) GROUP BY League.name HAVING SUM(League.country_id) < 64 LIMIT 8'], ['SELECT u.long_passing, u.player_api_id FROM Player_Attributes AS u WHERE u.long_passing BETWEEN 1 AND 10 GROUP BY u.player_api_id HAVING MIN(u.sliding_tackle) = 19 LIMIT 5', 'SELECT u.long_passing, u.player_api_id FROM Player_Attributes AS u WHERE u.long_passing BETWEEN 1 AND 10 AND u.sliding_tackle = (SELECT MIN(sliding_tackle) FROM Player_Attributes) GROUP BY u.player_api_id LIMIT 5'], ['SELECT COUNT(DISTINCT s.country_id), League.id FROM League JOIN League AS s ON League.id = s.id WHERE  s.country_id > 92 LIMIT 5', 'SELECT COUNT(DISTINCT country_id), id FROM League WHERE country_id > 92 LIMIT 5;'], ['SELECT team_long_name, team_long_name FROM Team WHERE  team_fifa_api_id > 57', 'SELECT team_long_name FROM Team WHERE team_fifa_api_id > 57;'], ['SELECT q.birthday, q.player_name FROM Player AS q WHERE  q.weight = 58 OR birthday NOT IN (SELECT birthday FROM Player WHERE height BETWEEN 1 AND 10) GROUP BY q.player_name HAVING AVG(q.player_fifa_api_id) > 48', 'SELECT q.birthday, q.player_name FROM Player AS q WHERE  q.weight = 58 OR q.birthday NOT IN (SELECT p.birthday FROM Player AS p WHERE p.height BETWEEN 1 AND 10) GROUP BY q.player_name HAVING AVG(q.player_fifa_api_id) > 48']], 'course_teach': [['SELECT teacher.Teacher_ID, Grade FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE  Course_ID >= 34 GROUP BY Grade', 'SELECT teacher.Teacher_ID, course_arrange.Course_ID, Grade FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE course_arrange.Course_ID >= 34 GROUP BY teacher.Teacher_ID, course_arrange.Course_ID, Grade;'], ['SELECT a.Hometown, a.Name FROM teacher AS a WHERE  a.Teacher_ID <= 28 GROUP BY a.Name HAVING AVG(a.Teacher_ID) <= 98', 'SELECT a.Hometown, a.Name FROM teacher AS a WHERE a.Teacher_ID <= 28'], ['SELECT SUM(Teacher_ID), Teacher_ID FROM teacher', 'SELECT SUM(Teacher_ID) FROM teacher;'], ['SELECT COUNT(DISTINCT course.Course_ID), COUNT(DISTINCT Grade), Grade FROM course_arrange JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE  Teacher_ID > 8', 'SELECT COUNT(DISTINCT course.Course_ID), COUNT(DISTINCT course_arrange.Grade), course_arrange.Grade FROM course_arrange JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course_arrange.Teacher_ID > 8 GROUP BY course_arrange.Grade'], ['SELECT u.Grade FROM course_arrange AS u WHERE  u.Teacher_ID = 98 GROUP BY u.Grade LIMIT 2', 'SELECT DISTINCT u.Grade FROM course_arrange AS u WHERE u.Teacher_ID = 98 LIMIT 2;'], ['SELECT COUNT(DISTINCT Hometown), COUNT(DISTINCT teacher.Teacher_ID) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE  Grade <= 4', 'SELECT COUNT(DISTINCT teacher.Hometown), COUNT(DISTINCT teacher.Teacher_ID) FROM course_arrange JOIN teacher ON course_arrange.Teacher_ID = teacher.Teacher_ID WHERE Grade <= 4'], ['SELECT COUNT(DISTINCT Age), Teacher_ID FROM teacher WHERE  Teacher_ID > 43 OR EXISTS (SELECT * FROM course_arrange AS d WHERE  d.Teacher_ID >= 3 AND teacher.Teacher_ID = d.Teacher_ID)', 'SELECT Teacher_ID, COUNT(DISTINCT Age) FROM teacher WHERE Teacher_ID > 43 OR EXISTS (SELECT * FROM course_arrange AS d WHERE d.Teacher_ID >= 3 AND teacher.Teacher_ID = d.Teacher_ID) GROUP BY Teacher_ID;']], 'e_learning': [['SELECT course_id, course_description FROM Courses WHERE subject_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Subjects AS d WHERE  d.subject_id != 50 AND Courses.course_id = d.subject_id LIMIT 3)', 'SELECT course_id, course_description FROM Courses WHERE subject_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Subjects AS d WHERE  d.subject_id != 50 AND Courses.subject_id = d.subject_id)'], ['SELECT COUNT(DISTINCT j.date_of_registration), Students.student_id, j.personal_name FROM Students JOIN Students AS j ON Students.student_id = j.student_id WHERE j.student_id BETWEEN 1 AND 10 OR  j.student_id <= 1 ORDER BY Students.student_id ASC LIMIT 7', 'SELECT COUNT(DISTINCT j.date_of_registration), Students.student_id, j.personal_name FROM Students JOIN Students AS j ON Students.student_id = j.student_id WHERE (j.student_id BETWEEN 1 AND 10) OR j.student_id <= 1 ORDER BY Students.student_id ASC LIMIT 7'], ['SELECT MAX(Course_Authors_and_Tutors.author_id), Courses.author_id FROM Course_Authors_and_Tutors JOIN Subjects JOIN Courses ON Courses.subject_id = Subjects.subject_id AND Course_Authors_and_Tutors.author_id = Courses.author_id WHERE  course_id != 12 ORDER BY Courses.author_id ASC', 'SELECT MAX(Courses.author_id) FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id JOIN Subjects ON Courses.subject_id = Subjects.subject_id WHERE Courses.course_id != 12'], ['SELECT MAX(q.course_id) FROM Courses AS q WHERE  q.course_id != 12 LIMIT 3', 'SELECT course_id FROM Courses WHERE course_id != 12 ORDER BY course_id DESC LIMIT 3'], ['SELECT course_name, family_name FROM Students JOIN Student_Course_Enrolment JOIN Student_Tests_Taken JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id AND Student_Course_Enrolment.student_id = Students.student_id AND Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id WHERE Student_Course_Enrolment.course_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Student_Tests_Taken AS i WHERE  i.registration_id = 18 AND Student_Course_Enrolment.registration_id = i.registration_id LIMIT 2) ORDER BY course_name ASC LIMIT 8', 'SELECT T1.course_name, T4.family_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Student_Tests_Taken AS T3 ON T2.registration_id = T3.registration_id JOIN Students AS T4 ON T2.student_id = T4.student_id WHERE T2.course_id BETWEEN 1 AND 10 OR T2.registration_id IN (SELECT registration_id FROM Student_Tests_Taken WHERE registration_id = 18) ORDER BY T1.course_name ASC LIMIT 8'], ['SELECT SUM(subject_id), subject_name FROM Subjects WHERE  subject_id < 99', 'SELECT subject_id, subject_name FROM Subjects WHERE subject_id < 99 ORDER BY subject_id'], ['SELECT student_id, student_id FROM Students WHERE date_of_latest_logon NOT IN (SELECT date_of_latest_logon FROM Students AS n WHERE  n.student_id <= 37) ORDER BY student_id DESC LIMIT 4', 'SELECT student_id FROM Students WHERE date_of_latest_logon NOT IN (SELECT date_of_latest_logon FROM Students AS n WHERE  n.student_id <= 37) ORDER BY student_id DESC LIMIT 4'], ['SELECT Courses.author_id FROM Course_Authors_and_Tutors JOIN Student_Course_Enrolment JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id AND Course_Authors_and_Tutors.author_id = Courses.author_id WHERE  subject_id != 57 GROUP BY Courses.author_id HAVING MAX(Student_Course_Enrolment.course_id) = 96 ORDER BY Courses.author_id ASC', 'SELECT Courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id WHERE Courses.subject_id != 57 GROUP BY Courses.author_id HAVING MAX(Student_Course_Enrolment.course_id) = 96 ORDER BY Courses.author_id ASC'], ['SELECT personal_name, family_name FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id WHERE  Course_Authors_and_Tutors.author_id <= 8 ORDER BY personal_name DESC', 'SELECT T1.personal_name, T1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.author_id <= 8 ORDER BY T1.personal_name DESC'], ['SELECT COUNT(DISTINCT z.gender_mf), Course_Authors_and_Tutors.login_name, z.password FROM Course_Authors_and_Tutors JOIN Course_Authors_and_Tutors AS z ON Course_Authors_and_Tutors.author_id = z.author_id GROUP BY z.password ORDER BY z.password DESC', 'SELECT COUNT(DISTINCT z.gender_mf), Course_Authors_and_Tutors.login_name, z.password FROM Course_Authors_and_Tutors JOIN Course_Authors_and_Tutors AS z ON Course_Authors_and_Tutors.author_id = z.author_id GROUP BY Course_Authors_and_Tutors.login_name, z.password ORDER BY z.password DESC'], ['SELECT COUNT(Student_Course_Enrolment.course_id), student_id FROM Student_Course_Enrolment JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id', 'SELECT COUNT(Student_Course_Enrolment.course_id), student_id FROM Student_Course_Enrolment JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY student_id;'], ['SELECT COUNT(DISTINCT b.course_name), b.subject_id FROM Courses AS b WHERE b.author_id BETWEEN 1 AND 10 GROUP BY b.subject_id HAVING MAX(b.course_id) > 95 ORDER BY b.subject_id DESC', 'SELECT COUNT(DISTINCT course_name), subject_id FROM Courses WHERE author_id BETWEEN 1 AND 10 GROUP BY subject_id HAVING MAX(course_id) > 95 ORDER BY subject_id DESC'], ['SELECT course_name, course_name FROM Courses WHERE  author_id >= 51 ORDER BY course_name DESC', 'SELECT course_name FROM Courses WHERE author_id >= 51 ORDER BY course_name DESC;'], ['SELECT test_result, test_result FROM Student_Tests_Taken JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id WHERE Student_Tests_Taken.registration_id BETWEEN 1 AND 10', 'SELECT test_result FROM Student_Tests_Taken JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id WHERE Student_Tests_Taken.registration_id BETWEEN 1 AND 10'], ['SELECT password, password FROM Students WHERE  student_id = 67 AND EXISTS (SELECT * FROM Student_Course_Enrolment AS g WHERE Students.student_id = g.student_id) LIMIT 8', 'SELECT password FROM Students WHERE student_id = 67 AND EXISTS (SELECT * FROM Student_Course_Enrolment AS g WHERE Students.student_id = g.student_id) LIMIT 1;']], 'pilot_record': [['SELECT Fleet_Series, Powertrain FROM aircraft WHERE  Order_Year >= 35 ORDER BY Powertrain DESC', 'SELECT Fleet_Series, Powertrain FROM aircraft WHERE Order_Year >= 35 ORDER BY Powertrain ASC;'], ['SELECT aircraft.Aircraft_ID, aircraft.Aircraft_ID, Record_ID FROM pilot_record JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID WHERE  aircraft.Aircraft_ID != 92', 'SELECT aircraft.Aircraft_ID, Record_ID FROM pilot_record JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID WHERE aircraft.Aircraft_ID != 92;'], ['SELECT MAX(l.Rank), l.Nationality FROM pilot AS l WHERE  l.Rank = 48', 'SELECT MAX(l.Rank), l.Nationality FROM pilot AS l GROUP BY l.Nationality'], ['SELECT b.Nationality, b.Position, b.Join_Year FROM pilot AS b WHERE b.Age BETWEEN 1 AND 10 GROUP BY b.Join_Year', 'SELECT Nationality, Position, Join_Year FROM pilot WHERE Age BETWEEN 1 AND 10 GROUP BY Nationality, Position, Join_Year'], ['SELECT COUNT(DISTINCT n.Fleet_Series), COUNT(DISTINCT n.Order_Year) FROM aircraft AS n WHERE  n.Aircraft_ID = 36', 'SELECT COUNT(DISTINCT Fleet_Series), COUNT(DISTINCT Order_Year) FROM aircraft WHERE Aircraft_ID = 36;'], ['SELECT MAX(Join_Year), Nationality, Position FROM pilot WHERE  Join_Year >= 79', 'SELECT MAX(Join_Year) AS Max_Join_Year, Nationality, Position FROM pilot WHERE Join_Year >= 1979 GROUP BY Nationality, Position;']], 'region_building': [['SELECT Completed_Year, Name, Number_of_Stories FROM building WHERE Building_ID BETWEEN 1 AND 10 AND Building_ID != (SELECT MAX(Building_ID) FROM building AS l WHERE l.Completed_Year BETWEEN 1 AND 10) GROUP BY Number_of_Stories HAVING AVG(Number_of_Stories) < 63 LIMIT 2', 'SELECT Completed_Year, Name, Number_of_Stories FROM building WHERE Building_ID BETWEEN 1 AND 10 AND Building_ID != (SELECT MAX(Building_ID) FROM building AS l WHERE l.Completed_Year BETWEEN 1 AND 10) GROUP BY Completed_Year, Name, Number_of_Stories HAVING Number_of_Stories < 63 LIMIT 2'], ['SELECT SUM(n.Building_ID), n.Address, n.Address, building.Completed_Year FROM building AS n JOIN building ON building.Building_ID = n.Building_ID WHERE Address IN (SELECT Address FROM building WHERE Building_ID BETWEEN 1 AND 10) GROUP BY building.Completed_Year', 'SELECT n.Address, SUM(n.Number_of_Stories), n.Completed_Year FROM building AS n WHERE n.Building_ID BETWEEN 1 AND 10 GROUP BY n.Address, n.Completed_Year;'], ['SELECT COUNT(DISTINCT Region_ID), COUNT(DISTINCT Capital), Name, Capital FROM region WHERE  Region_ID <= 47 GROUP BY Capital LIMIT 3', 'SELECT COUNT(DISTINCT Region_ID), COUNT(DISTINCT Capital), Name, Capital FROM region WHERE Region_ID <= 47 GROUP BY Capital, Name LIMIT 3'], ['SELECT Building_ID, Name, Name FROM building ORDER BY Name DESC', 'SELECT Building_ID, Name FROM building ORDER BY Name DESC;'], ['SELECT Capital FROM region WHERE Area BETWEEN 1 AND 10 AND  Area = 13', 'SELECT Capital FROM region WHERE Area = 13;'], ['SELECT MAX(Region_ID), MAX(Area) FROM region WHERE Region_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM building AS b WHERE  b.Building_ID < 19 AND region.Region_ID = b.Region_ID LIMIT 8)', 'SELECT MAX(Region_ID), MAX(Area) FROM region WHERE Region_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM building AS b WHERE b.Building_ID < 19 AND region.Region_ID = b.Region_ID)'], ['SELECT z.Region_ID, z.Number_of_Stories, building.Number_of_Stories FROM building AS z JOIN building ON building.Building_ID = z.Building_ID WHERE  building.Number_of_Stories < 0 GROUP BY z.Number_of_Stories HAVING MIN(building.Region_ID) >= 71 LIMIT 7', 'SELECT z.Region_ID, z.Number_of_Stories, building.Number_of_Stories FROM building AS z JOIN building AS t ON t.Building_ID = z.Building_ID WHERE  t.Number_of_Stories < 0 GROUP BY z.Region_ID, z.Number_of_Stories HAVING MIN(z.Region_ID) >= 71 LIMIT 7'], ['SELECT COUNT(l.Area), AVG(l.Region_ID), l.Name FROM region AS l WHERE l.Population BETWEEN 1 AND 10 AND  l.Population != 89 ORDER BY l.Name DESC', 'SELECT COUNT(l.Area), AVG(l.Population), l.Name FROM region AS l WHERE l.Population BETWEEN 1 AND 10 AND  l.Population != 89 GROUP BY l.Name, l.Area ORDER BY l.Name DESC'], ['SELECT SUM(Area), Name, Capital FROM region WHERE EXISTS (SELECT * FROM building WHERE  Number_of_Stories != 26 AND region.Region_ID = Region_ID) LIMIT 9', 'SELECT SUM(T1.Area), T2.Name, T2.Capital FROM region AS T1 INNER JOIN building AS T2 ON T1.Region_ID = T2.Region_ID WHERE T2.Number_of_Stories != 26 GROUP BY T2.Name, T2.Capital LIMIT 9;'], ['SELECT z.Capital, z.Name FROM region AS z JOIN region ON region.Region_ID = z.Region_ID WHERE z.Region_ID BETWEEN 1 AND 10 GROUP BY z.Name HAVING COUNT(z.Area) > 70', 'SELECT z.Capital, z.Name FROM region AS z JOIN building ON building.Region_ID = z.Region_ID WHERE z.Region_ID BETWEEN 1 AND 10 GROUP BY z.Name HAVING COUNT(building.Number_of_Stories) > 70'], ['SELECT n.Name, n.Region_ID FROM building AS n WHERE n.Number_of_Stories BETWEEN 1 AND 10 AND Completed_Year >= (SELECT MIN(Completed_Year) FROM building WHERE  Region_ID >= 21) GROUP BY n.Region_ID', 'SELECT n.Name, n.Region_ID FROM building AS n WHERE n.Number_of_Stories BETWEEN 1 AND 10 AND Completed_Year >= (SELECT MIN(Completed_Year) FROM building WHERE Region_ID >= 21);'], ['SELECT w.Building_ID FROM building AS w', 'SELECT w.Building_ID FROM building AS w WHERE Number_of_Stories > 10;'], ['SELECT Building_ID, Address, Address FROM building WHERE  Building_ID >= 11', 'SELECT Building_ID, Address FROM building WHERE Building_ID >= 11;'], ['SELECT COUNT(DISTINCT e.Population) FROM region AS e WHERE e.Area BETWEEN 1 AND 10 AND  e.Area > 84 LIMIT 6', 'SELECT COUNT(DISTINCT r.Population) FROM region AS r WHERE r.Area BETWEEN 1 AND 10 OR r.Area > 84 LIMIT 6']], 'musical': [['SELECT Musical_ID, Year, Nominee FROM musical WHERE  Musical_ID < 16 ORDER BY Year ASC LIMIT 7', 'SELECT Musical_ID, Year, Nominee FROM musical WHERE Musical_ID < 16 ORDER BY Year ASC LIMIT 7']], 'art_1': [['SELECT fname, lname FROM Artists WHERE artistID BETWEEN 1 AND 10 GROUP BY lname HAVING SUM(deathYear) < 69', 'SELECT fname, lname FROM Artists WHERE artistID BETWEEN 1 AND 10 AND deathYear < 1969 GROUP BY lname, fname'], ['SELECT painterID, Sculptures.title, mediumOn FROM Artists JOIN Sculptures JOIN Paintings ON Artists.artistID = Paintings.painterID AND Sculptures.sculptorID = Artists.artistID WHERE  artistID < 16 ORDER BY painterID ASC LIMIT 9', 'SELECT P.painterID, P.title, P.mediumOn FROM Artists AS A JOIN Paintings AS P ON A.artistID = P.painterID WHERE A.artistID < 16 ORDER BY P.painterID ASC LIMIT 9'], ['SELECT fname, deathYear FROM Artists WHERE birthYear BETWEEN 1 AND 10 OR  artistID < 14 GROUP BY deathYear ORDER BY fname ASC LIMIT 7', 'SELECT fname, deathYear FROM Artists WHERE birthYear BETWEEN 1 AND 10 OR artistID < 14 GROUP BY fname, deathYear ORDER BY fname ASC LIMIT 7'], ['SELECT MIN(deathYear), artistID FROM Artists JOIN Sculptures ON Sculptures.sculptorID = Artists.artistID WHERE  sculptureID = 58', 'SELECT MIN(deathYear), artistID FROM Artists JOIN Sculptures ON Sculptures.sculptorID = Artists.artistID WHERE Sculptures.sculptureID = 58'], ['SELECT deathYear FROM Artists WHERE  artistID > 12 OR lname IN (SELECT lname FROM Artists WHERE  deathYear >= 37)', 'SELECT deathYear FROM Artists WHERE artistID > 12 OR lname IN (SELECT lname FROM Artists WHERE deathYear >= 1937)'], ['SELECT title FROM Paintings WHERE  year >= 20 ORDER BY title DESC', 'SELECT title FROM Paintings WHERE year >= 1900 ORDER BY year ASC;'], ['SELECT SUM(paintingID), width_mm, location FROM Paintings WHERE  paintingID <= 84 OR year = (SELECT SUM(year) FROM Sculptures) GROUP BY location HAVING COUNT(paintingID) < 84 ORDER BY location DESC', 'SELECT COUNT(paintingID), width_mm, location FROM Paintings WHERE paintingID <= 84 OR year = (SELECT AVG(year) FROM Sculptures) GROUP BY location, width_mm HAVING COUNT(paintingID) < 84 ORDER BY location DESC'], ['SELECT COUNT(v.painterID), v.year, v.painterID FROM Paintings AS v GROUP BY v.painterID ORDER BY v.year ASC', 'SELECT COUNT(v.paintingID), v.year, v.painterID FROM Paintings AS v GROUP BY v.painterID, v.year ORDER BY v.year ASC'], ['SELECT COUNT(sculptorID), sculptureID, lname FROM Artists JOIN Sculptures ON Sculptures.sculptorID = Artists.artistID WHERE  sculptureID < 32 GROUP BY lname LIMIT 7', 'SELECT COUNT(sculptureID), sculptureID, lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE sculptureID < 32 GROUP BY lname LIMIT 7'], ['SELECT medium, title FROM Paintings WHERE  width_mm > 48 GROUP BY title HAVING COUNT(height_mm) >= 79', 'SELECT medium, title FROM Paintings WHERE width_mm > 48 GROUP BY title, medium HAVING COUNT(height_mm) >= 79;'], ['SELECT artistID FROM Artists JOIN Sculptures JOIN Paintings ON Artists.artistID = Paintings.painterID AND Sculptures.sculptorID = Artists.artistID WHERE EXISTS (SELECT * FROM Artists AS b WHERE Sculptures.sculptureID = b.artistID) LIMIT 5', 'SELECT T1.artistID FROM Artists AS T1 JOIN Sculptures AS T2 ON T2.sculptorID = T1.artistID JOIN Paintings AS T3 ON T3.painterID = T1.artistID LIMIT 5'], ['SELECT deathYear, lname FROM Artists JOIN Sculptures JOIN Paintings ON Artists.artistID = Paintings.painterID AND Sculptures.sculptorID = Artists.artistID WHERE  deathYear <= 100 GROUP BY lname HAVING SUM(birthYear) <= 41 LIMIT 4', 'SELECT T1.deathYear, T1.lname FROM Artists AS T1 LEFT JOIN Paintings AS T2 ON T1.artistID = T2.painterID LEFT JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID WHERE T1.deathYear <= 100 GROUP BY T1.lname, T1.deathYear, T1.artistID HAVING MIN(T1.birthYear) <= 41 LIMIT 4'], ['SELECT COUNT(year), MIN(birthYear) FROM Artists JOIN Sculptures ON Sculptures.sculptorID = Artists.artistID WHERE fname != (SELECT MIN(fname) FROM Artists AS k WHERE  k.deathYear < 99) LIMIT 10', 'SELECT COUNT(S.year), MIN(A.birthYear) FROM Artists A JOIN Sculptures S ON S.sculptorID = A.artistID WHERE A.birthYear != (SELECT MIN(birthYear) FROM Artists AS k WHERE k.deathYear < 99)'], ['SELECT COUNT(Paintings.height_mm), AVG(o.painterID), o.width_mm FROM Paintings AS o JOIN Paintings ON Paintings.paintingID = o.paintingID WHERE  Paintings.paintingID > 98 GROUP BY o.width_mm', 'SELECT COUNT(o.height_mm), o.painterID, o.width_mm FROM Paintings AS o WHERE o.paintingID > 98 GROUP BY o.width_mm, o.painterID']], 'twitter_1': [['SELECT COUNT(f2), COUNT(DISTINCT email) FROM follows JOIN user_profiles ON follows.f1 = user_profiles.uid WHERE  f2 = 63', 'SELECT COUNT(*), COUNT(DISTINCT email) FROM follows JOIN user_profiles ON follows.f1 = user_profiles.uid WHERE f2 = 63;'], ['SELECT b.followers FROM user_profiles AS b WHERE  b.partitionid < 47 GROUP BY b.followers HAVING MIN(b.partitionid) = 83', 'SELECT b.followers FROM user_profiles AS b WHERE  b.partitionid = 83 GROUP BY b.followers'], ['SELECT SUM(user_profiles.partitionid), a.email FROM user_profiles AS a JOIN user_profiles ON user_profiles.uid = a.uid WHERE name IN (SELECT name FROM user_profiles AS a WHERE a.partitionid BETWEEN 1 AND 10 OR  a.uid <= 24)', 'SELECT a.email, (SELECT SUM(b.partitionid) FROM user_profiles AS b WHERE b.name = a.name) AS partitionid_sum FROM user_profiles AS a WHERE a.name IN (SELECT name FROM user_profiles AS c WHERE c.partitionid BETWEEN 1 AND 10 OR  c.uid <= 24)'], ['SELECT COUNT(DISTINCT tweets.uid), tweets.text FROM tweets JOIN tweets AS z ON tweets.id = z.id WHERE id > (SELECT AVG(id) FROM tweets AS l WHERE  l.uid > 39 LIMIT 1) ORDER BY tweets.text DESC', 'SELECT COUNT(DISTINCT tweets.uid), tweets.text FROM tweets WHERE id > (SELECT AVG(id) FROM tweets WHERE uid > 39 LIMIT 1) ORDER BY tweets.text DESC;'], ['SELECT MIN(d.f2), d.f2 FROM follows AS d WHERE  d.f1 < 97 GROUP BY d.f2 LIMIT 4', 'SELECT MIN(d.f2), d.f2 FROM follows AS d WHERE  d.f1 < 97 GROUP BY d.f2 ORDER BY MIN(d.f2) LIMIT 4'], ['SELECT id, createdate FROM follows JOIN tweets JOIN user_profiles ON user_profiles.uid = tweets.uid AND follows.f1 = user_profiles.uid WHERE  tweets.uid > 79 GROUP BY createdate HAVING SUM(f2) >= 72 LIMIT 1', 'SELECT T1.id, T2.createdate FROM follows AS T1 JOIN tweets AS T2 ON T1.f1 = T2.uid JOIN user_profiles AS T3 ON T3.uid = T2.uid WHERE T2.uid > 79 GROUP BY T2.createdate HAVING SUM(T1.f2) >= 72 LIMIT 1'], ['SELECT COUNT(DISTINCT tweets.uid), COUNT(DISTINCT id) FROM tweets JOIN user_profiles ON user_profiles.uid = tweets.uid WHERE  id = 54', 'SELECT COUNT(DISTINCT tweets.uid), COUNT(DISTINCT tweets.id) FROM tweets JOIN user_profiles ON user_profiles.uid = tweets.uid WHERE tweets.uid = 54;'], ['SELECT SUM(user_profiles.uid) FROM tweets JOIN user_profiles ON user_profiles.uid = tweets.uid WHERE followers BETWEEN 1 AND 10 OR  user_profiles.uid <= 70', 'SELECT COUNT(user_profiles.uid) FROM tweets JOIN user_profiles ON user_profiles.uid = tweets.uid WHERE followers BETWEEN 1 AND 10 OR user_profiles.uid <= 70'], ['SELECT COUNT(i.followers) FROM user_profiles JOIN user_profiles AS i ON user_profiles.uid = i.uid WHERE  user_profiles.followers > 65', 'SELECT COUNT(uid) FROM user_profiles WHERE followers > 65;'], ['SELECT AVG(followers), COUNT(DISTINCT f2), f1 FROM follows JOIN user_profiles ON follows.f1 = user_profiles.uid WHERE partitionid BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM follows AS e WHERE  e.f2 = 27 AND user_profiles.uid = e.f1 LIMIT 6) ORDER BY f1 DESC', 'SELECT AVG(T2.followers), COUNT(DISTINCT T2.uid), T2.uid \n        FROM follows AS T1 \n        JOIN user_profiles AS T2 ON T1.f1 = T2.uid \n        WHERE T2.partitionid BETWEEN 1 AND 10 \n        OR T2.uid IN (SELECT T1.f1 FROM follows AS T1 WHERE T1.f2 = 27 LIMIT 6) \n        ORDER BY T2.uid DESC'], ['SELECT followers, name, email FROM follows JOIN user_profiles ON follows.f1 = user_profiles.uid WHERE  partitionid > 16', 'SELECT T1.followers, T1.name, T1.email FROM user_profiles AS T1 INNER JOIN follows AS T2 ON T1.uid = T2.f1 WHERE T1.partitionid > 16'], ['SELECT m.text, m.createdate FROM tweets AS m WHERE  m.uid = 15 AND id IN (SELECT id FROM tweets AS v WHERE v.uid BETWEEN 1 AND 10) GROUP BY m.createdate ORDER BY m.createdate DESC', 'SELECT m.text, m.createdate FROM tweets AS m WHERE  m.uid = 15 AND id IN (SELECT id FROM tweets AS v WHERE v.uid BETWEEN 1 AND 10) GROUP BY m.uid, m.text, m.createdate ORDER BY m.createdate DESC'], ['SELECT h.id, h.text FROM tweets AS h GROUP BY h.text ORDER BY h.text ASC', 'SELECT h.id, h.text FROM tweets AS h GROUP BY h.id, h.text ORDER BY h.text ASC']], 'phone_market': [['SELECT COUNT(DISTINCT market.Market_ID), COUNT(DISTINCT District), Memory_in_G, District FROM phone JOIN phone_market JOIN market ON phone_market.Phone_ID = phone.Phone_ID AND market.Market_ID = phone_market.Market_ID WHERE market.Market_ID BETWEEN 1 AND 10 AND  market.Market_ID >= 25 GROUP BY District', 'SELECT COUNT(DISTINCT T3.Market_ID), COUNT(DISTINCT T3.District), T1.Memory_in_G, T3.District FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T3.Market_ID BETWEEN 1 AND 10 GROUP BY T3.District, T3.Market_ID, T1.Memory_in_G'], ['SELECT AVG(Num_of_employees), COUNT(Num_of_employees) FROM market WHERE  Ranking < 29', 'SELECT AVG(Num_of_employees), COUNT(Num_of_employees) FROM market WHERE Ranking < 29'], ['SELECT District, District FROM market WHERE  Num_of_employees < 0 ORDER BY District ASC', 'SELECT District FROM market WHERE Num_of_employees < 0 ORDER BY District ASC;'], ['SELECT COUNT(phone.Phone_ID), phone.Phone_ID FROM phone JOIN phone_market ON phone_market.Phone_ID = phone.Phone_ID WHERE Price BETWEEN 1 AND 10 OR  Price != 95 ORDER BY phone.Phone_ID DESC', 'SELECT COUNT(phone.Phone_ID), phone.Phone_ID FROM phone JOIN phone_market ON CAST(phone.Phone_ID AS TEXT) = phone_market.Phone_ID WHERE Price BETWEEN 1 AND 10 OR Price != 95 ORDER BY phone.Phone_ID DESC;'], ['SELECT e.Memory_in_G FROM phone AS e WHERE  e.Price >= 37 AND Name = (SELECT AVG(Name) FROM phone AS m WHERE m.Memory_in_G BETWEEN 1 AND 10 AND  m.Phone_ID > 12)', 'SELECT e.Memory_in_G FROM phone AS e WHERE e.Price >= 37 AND e.Price = (SELECT AVG(Price) FROM phone AS m WHERE m.Memory_in_G BETWEEN 1 AND 10 AND m.Phone_ID > 12)'], ['SELECT COUNT(DISTINCT phone.Phone_ID) FROM phone JOIN phone_market ON phone_market.Phone_ID = phone.Phone_ID WHERE  Price = 46', 'SELECT COUNT(DISTINCT CAST(phone.Phone_ID AS text)) FROM phone JOIN phone_market ON phone_market.Phone_ID = CAST(phone.Phone_ID AS text) WHERE  Price = 46'], ['SELECT Num_of_employees, District FROM phone_market JOIN market ON market.Market_ID = phone_market.Market_ID WHERE  Num_of_shops < 52 GROUP BY District', 'SELECT T1.Num_of_employees, T1.District FROM market AS T1 INNER JOIN phone_market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Num_of_shops < 52 GROUP BY T1.District, T1.Num_of_employees'], ['SELECT u.Name, u.Memory_in_G FROM phone AS u GROUP BY u.Memory_in_G ORDER BY u.Memory_in_G ASC LIMIT 4', 'SELECT u.Name, u.Memory_in_G FROM phone AS u GROUP BY u.Name, u.Memory_in_G ORDER BY u.Memory_in_G ASC LIMIT 4;']], 'candidate_poll': [['SELECT COUNT(DISTINCT Consider_rate), Consider_rate, Unsure_rate FROM candidate WHERE  Candidate_ID > 59 GROUP BY Unsure_rate HAVING MAX(Consider_rate) > 86 ORDER BY Unsure_rate ASC', 'SELECT COUNT(DISTINCT Consider_rate), Consider_rate, Unsure_rate FROM candidate WHERE Candidate_ID > 59 GROUP BY Consider_rate, Unsure_rate ORDER BY Unsure_rate ASC'], ['SELECT COUNT(DISTINCT Consider_rate), Poll_Source, Sex FROM people JOIN candidate ON candidate.People_ID = people.People_ID LIMIT 6', 'SELECT COUNT(DISTINCT T.Consider_rate), T.Poll_Source, T.Sex FROM (SELECT c.Consider_rate, c.Poll_Source, p.Sex FROM candidate c JOIN people p ON c.People_ID = p.People_ID) T GROUP BY T.Poll_Source, T.Sex LIMIT 6'], ['SELECT d.Date, d.Date, d.People_ID FROM candidate AS d WHERE  d.People_ID = 58 GROUP BY d.People_ID LIMIT 5', 'SELECT Date, People_ID FROM candidate AS d WHERE d.People_ID = 58 LIMIT 5'], ['SELECT candidate.Poll_Source, candidate.Poll_Source FROM candidate AS f JOIN candidate ON candidate.Candidate_ID = f.Candidate_ID WHERE  candidate.Candidate_ID > 79 OR EXISTS (SELECT * FROM people WHERE People_ID BETWEEN 1 AND 10 AND candidate.Candidate_ID = People_ID)', 'SELECT f.Poll_Source, c.Poll_Source FROM candidate AS f JOIN candidate AS c ON c.Candidate_ID = f.Candidate_ID WHERE f.Candidate_ID > 79 OR EXISTS (SELECT * FROM people WHERE People_ID BETWEEN 1 AND 10 AND f.Candidate_ID = People_ID)'], ['SELECT COUNT(DISTINCT candidate.Support_rate), candidate.Candidate_ID FROM candidate AS u JOIN candidate ON candidate.Candidate_ID = u.Candidate_ID WHERE  candidate.Consider_rate = 79', 'SELECT COUNT(DISTINCT Support_rate) FROM candidate WHERE Consider_rate = 79;'], ['SELECT g.People_ID, g.Date_of_Birth FROM people AS g WHERE Weight IN (SELECT Weight FROM people AS e) GROUP BY g.Date_of_Birth ORDER BY g.People_ID DESC LIMIT 10', 'SELECT g.People_ID, g.Date_of_Birth FROM people AS g WHERE g.Weight IN (SELECT Weight FROM people AS e) ORDER BY g.People_ID DESC LIMIT 10;'], ['SELECT COUNT(DISTINCT c.Name), c.Weight FROM people AS c WHERE  c.Height > 94', 'SELECT COUNT(DISTINCT p.Name), p.Weight FROM people AS p WHERE p.Height > 94'], ['SELECT AVG(o.Unsure_rate), SUM(o.Consider_rate), SUM(o.Oppose_rate) FROM candidate AS o WHERE o.Consider_rate BETWEEN 1 AND 10 OR Poll_Source IN (SELECT Poll_Source FROM candidate WHERE  Candidate_ID = 76 LIMIT 1)', 'SELECT AVG(o.Unsure_rate), SUM(o.Consider_rate), SUM(o.Oppose_rate) FROM candidate AS o WHERE o.Consider_rate BETWEEN 1 AND 10 OR o.Poll_Source IN (SELECT Poll_Source FROM candidate WHERE Candidate_ID = 76 LIMIT 1)'], ['SELECT SUM(candidate.Oppose_rate), candidate.Candidate_ID FROM candidate AS g JOIN candidate ON candidate.Candidate_ID = g.Candidate_ID', 'SELECT SUM(Oppose_rate), Candidate_ID FROM candidate GROUP BY Candidate_ID;'], ['SELECT COUNT(DISTINCT Weight), Height FROM people', 'SELECT COUNT(DISTINCT Weight) FROM people;'], ['SELECT MIN(people.People_ID), b.Height FROM people AS b JOIN people ON people.People_ID = b.People_ID WHERE  b.Height <= 46 LIMIT 10', 'SELECT MIN(People_ID), Height FROM people WHERE Height <= 46 LIMIT 10']], 'planet_1': [['SELECT COUNT(DISTINCT Name), Name FROM Client WHERE  AccountNumber <= 99 LIMIT 7', 'SELECT Name, COUNT(DISTINCT Name) AS client_count FROM Client WHERE AccountNumber <= 99 GROUP BY Name LIMIT 7'], ['SELECT Name, Name FROM Planet WHERE Coordinates BETWEEN 1 AND 10', 'SELECT Name FROM Planet WHERE Coordinates BETWEEN 1 AND 10'], ['SELECT SUM(Manager), Manager FROM Shipment WHERE  Planet <= 99 GROUP BY Manager HAVING COUNT(Manager) < 53', 'SELECT COUNT(Manager), Manager FROM Shipment WHERE Planet <= 99 GROUP BY Manager HAVING COUNT(Manager) < 53'], ['SELECT COUNT(DISTINCT Remarks), COUNT(DISTINCT Salary), Manager FROM Employee JOIN Shipment ON Employee.EmployeeID = Shipment.Manager WHERE  Manager >= 86', 'SELECT COUNT(DISTINCT Employee.Remarks), COUNT(DISTINCT Employee.Salary), Shipment.Manager FROM Employee JOIN Shipment ON Employee.EmployeeID = Shipment.Manager WHERE  Shipment.Manager >= 86'], ['SELECT Name FROM Planet WHERE PlanetID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Shipment AS o WHERE  o.ShipmentID >= 28 AND Planet.PlanetID = o.Planet) ORDER BY Name DESC LIMIT 5', 'SELECT p.Name FROM Planet AS p WHERE p.PlanetID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Shipment AS o WHERE  o.ShipmentID >= 28 AND p.PlanetID = o.Planet) ORDER BY p.Name DESC LIMIT 5'], ['SELECT COUNT(DISTINCT Planet.Coordinates), Planet.Name, h.Coordinates FROM Planet JOIN Planet AS h ON Planet.PlanetID = h.PlanetID WHERE  h.PlanetID >= 48 GROUP BY h.Coordinates HAVING SUM(h.Coordinates) = 6', 'SELECT COUNT(DISTINCT h.Coordinates), h.Coordinates FROM Planet AS h WHERE h.PlanetID >= 48 GROUP BY h.Coordinates HAVING COUNT(h.Coordinates) = 6']], 'tracking_orders': [['SELECT order_id FROM Orders WHERE customer_id BETWEEN 1 AND 10 AND  customer_id = 12 LIMIT 5', 'SELECT order_id FROM Orders WHERE customer_id = 12 LIMIT 5'], ['SELECT MAX(Customers.customer_id), customer_name FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE  order_id < 7 ORDER BY customer_name ASC', 'SELECT MAX(Orders.order_id), customer_name FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE Orders.order_id < 7 GROUP BY customer_name ORDER BY customer_name ASC'], ['SELECT invoice_details, invoice_date FROM Invoices WHERE  invoice_number != 30 GROUP BY invoice_date', 'SELECT invoice_date, GROUP_CONCAT(invoice_details) FROM Invoices WHERE invoice_number != 30 GROUP BY invoice_date;'], ['SELECT COUNT(Shipment_Items.shipment_id), COUNT(DISTINCT Shipments.shipment_id), COUNT(DISTINCT Shipment_Items.order_item_id) FROM Shipment_Items JOIN Order_Items JOIN Shipments JOIN Orders ON Orders.order_id = Shipments.order_id AND Order_Items.order_item_id = Shipment_Items.order_item_id AND Shipment_Items.shipment_id = Shipments.shipment_id WHERE Order_Items.order_id BETWEEN 1 AND 10 OR order_item_id IN (SELECT order_item_id FROM Order_Items)', 'SELECT COUNT(Shipment_Items.shipment_id), COUNT(DISTINCT Shipments.shipment_id), COUNT(DISTINCT Shipment_Items.order_item_id) FROM Shipment_Items JOIN Order_Items ON Shipment_Items.order_item_id = Order_Items.order_item_id JOIN Shipments ON Shipments.shipment_id = Shipment_Items.shipment_id JOIN Orders ON Orders.order_id = Shipments.order_id WHERE Orders.order_id BETWEEN 1 AND 10 OR Order_Items.order_item_id IN (SELECT order_item_id FROM Order_Items)'], ['SELECT COUNT(DISTINCT invoice_date), invoice_number FROM Invoices WHERE  invoice_number <= 70', 'SELECT invoice_number, COUNT(DISTINCT invoice_date) FROM Invoices WHERE invoice_number <= 70 GROUP BY invoice_number;'], ['SELECT MAX(o.customer_id), o.customer_details FROM Customers AS o WHERE  o.customer_id > 59 ORDER BY o.customer_details ASC', 'SELECT MAX(o.customer_id) AS max_customer_id FROM Customers AS o WHERE  o.customer_id > 59'], ['SELECT SUM(h.shipment_id), h.shipment_id FROM Shipments AS h WHERE  h.invoice_number != 14 ORDER BY h.shipment_id ASC LIMIT 10', 'SELECT COUNT(h.shipment_id), h.shipment_id FROM Shipments AS h WHERE  h.invoice_number != 14 ORDER BY h.shipment_id ASC LIMIT 10'], ['SELECT COUNT(DISTINCT shipment_date), Shipment_Items.shipment_id FROM Shipments JOIN Shipment_Items ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE  order_item_id < 43', 'SELECT COUNT(DISTINCT shipment_date), Shipment_Items.shipment_id FROM Shipments JOIN Shipment_Items ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Shipment_Items.order_item_id < 43'], ['SELECT MIN(invoice_number) FROM Invoices WHERE  invoice_number = 23 LIMIT 2', 'SELECT MIN(invoice_number) FROM Invoices'], ['SELECT shipment_id, order_id, shipment_tracking_number FROM Shipments WHERE  order_id > 53 GROUP BY shipment_tracking_number HAVING MAX(invoice_number) = 9 ORDER BY order_id DESC', 'SELECT shipment_id, order_id, shipment_tracking_number FROM Shipments WHERE  order_id > 53 GROUP BY order_id, shipment_tracking_number HAVING MAX(invoice_number) = 9 ORDER BY order_id DESC'], ['SELECT COUNT(product_id) FROM Products WHERE product_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Order_Items WHERE  order_id = 39 AND Products.product_id = product_id)', 'SELECT COUNT(product_id) FROM Products WHERE product_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Order_Items WHERE order_id = 39 AND Order_Items.product_id = Products.product_id)'], ['SELECT COUNT(DISTINCT product_name), COUNT(DISTINCT product_details), product_name FROM Products WHERE  product_id <= 79 GROUP BY product_name ORDER BY product_name ASC', 'SELECT product_name, COUNT(DISTINCT product_details) as details_count FROM Products WHERE product_id <= 79 GROUP BY product_name ORDER BY product_name ASC'], ['SELECT order_item_id, other_shipment_details FROM Shipments JOIN Shipment_Items ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE  order_id > 4 OR invoice_number IN (SELECT invoice_number FROM Shipments WHERE  order_id > 53) ORDER BY other_shipment_details ASC', 'SELECT order_item_id, other_shipment_details FROM Shipments JOIN Shipment_Items ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE  Shipments.order_id IN (SELECT order_id FROM Orders WHERE order_id > 4) OR invoice_number IN (SELECT invoice_number FROM Shipments WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id > 53)) ORDER BY other_shipment_details ASC'], ['SELECT MIN(x.customer_id), x.customer_id, Customers.customer_name FROM Customers AS x JOIN Customers ON Customers.customer_id = x.customer_id WHERE customer_id <= (SELECT MAX(customer_id) FROM Customers WHERE  customer_id <= 27)', 'SELECT customer_id, customer_name FROM Customers WHERE customer_id <= 27'], ['SELECT SUM(customer_id), MAX(customer_id) FROM Customers WHERE  customer_id <= 39 LIMIT 10', 'SELECT COUNT(customer_id), MAX(customer_id) FROM Customers WHERE customer_id <= 39 LIMIT 10'], ['SELECT product_id, order_item_status FROM Order_Items WHERE  order_item_id < 88 GROUP BY order_item_status HAVING MAX(product_id) >= 10 ORDER BY product_id ASC', 'SELECT product_id, order_item_status FROM Order_Items WHERE  order_item_id < 88 GROUP BY order_item_status HAVING MAX(product_id) >= 10 ORDER BY MAX(product_id) ASC']], 'tv_shows': [['SELECT COUNT(ID) FROM city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID WHERE tv_show_ID BETWEEN 1 AND 10 OR City NOT IN (SELECT City FROM city_channel WHERE ID BETWEEN 1 AND 10 OR  ID <= 79)', 'SELECT COUNT(tv_show_ID) FROM city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID WHERE tv_show_ID BETWEEN 1 AND 10 OR City NOT IN (SELECT City FROM city_channel WHERE ID BETWEEN 1 AND 10 OR  ID <= 79)'], ['SELECT q.tv_show_ID, q.Is_free FROM city_channel_tv_show AS q WHERE  q.tv_show_ID > 21 GROUP BY q.Is_free HAVING SUM(q.tv_show_ID) = 1 ORDER BY q.tv_show_ID DESC LIMIT 7', 'SELECT q.tv_show_ID, q.Is_free FROM city_channel_tv_show AS q WHERE  q.tv_show_ID > 21 GROUP BY q.Is_free ORDER BY q.tv_show_ID DESC LIMIT 7'], ['SELECT COUNT(DISTINCT Sub_tittle), Sub_tittle FROM tv_show WHERE  tv_show_ID > 75 GROUP BY Sub_tittle', 'SELECT COUNT(DISTINCT Sub_tittle) AS count, Sub_tittle FROM tv_show WHERE tv_show_ID > 75 GROUP BY Sub_tittle'], ['SELECT SUM(tv_show.tv_show_ID), City_channel_ID, Sub_tittle FROM tv_show JOIN city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID AND city_channel_tv_show.tv_show_ID = tv_show.tv_show_ID WHERE  Owned_Since < 42', 'SELECT COUNT(tv_show.tv_show_ID), city_channel_tv_show.City_channel_ID, tv_show.Sub_tittle FROM tv_show JOIN city_channel_tv_show ON tv_show.tv_show_ID = city_channel_tv_show.tv_show_ID JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID WHERE city_channel.Owned_Since < 42 GROUP BY city_channel_tv_show.City_channel_ID, tv_show.Sub_tittle'], ['SELECT Is_online, Radio_ID FROM city_channel_radio WHERE Radio_ID BETWEEN 1 AND 10 OR  Radio_ID > 34 GROUP BY Radio_ID', 'SELECT Is_online, Radio_ID FROM city_channel_radio WHERE Radio_ID BETWEEN 1 AND 10 OR Radio_ID > 34 GROUP BY Radio_ID, Is_online'], ['SELECT MAX(City_channel_ID), Is_online FROM tv_show JOIN city_channel_tv_show ON city_channel_tv_show.tv_show_ID = tv_show.tv_show_ID WHERE  City_channel_ID > 90 AND Is_free >= (SELECT MAX(Is_free) FROM city_channel_tv_show AS g WHERE g.City_channel_ID BETWEEN 1 AND 10 OR  g.tv_show_ID != 83) ORDER BY Is_online ASC', 'SELECT MAX(T1.ID), T3.Is_online FROM city_channel AS T1 JOIN city_channel_tv_show AS T2 ON T1.ID = T2.City_channel_ID JOIN tv_show AS T3 ON T2.tv_show_ID = T3.tv_show_ID WHERE T1.ID > 90 AND T2.Is_free >= (SELECT MAX(T2.Is_free) FROM city_channel_tv_show AS T2 JOIN city_channel AS T1 ON T1.ID = T2.City_channel_ID WHERE T1.ID BETWEEN 1 AND 10 OR T2.tv_show_ID != 83) ORDER BY T3.Is_online ASC'], ['SELECT City_channel_ID, City_channel_ID, RnaG_MHz FROM radio JOIN city_channel_radio ON city_channel_radio.Radio_ID = radio.Radio_ID WHERE radio.Radio_ID BETWEEN 1 AND 10 OR City_channel_ID >= (SELECT MAX(City_channel_ID) FROM city_channel_tv_show AS y) ORDER BY City_channel_ID DESC', 'SELECT City_channel_ID, RnaG_MHz FROM city_channel_radio JOIN radio ON city_channel_radio.Radio_ID = radio.Radio_ID WHERE radio.Radio_ID BETWEEN 1 AND 10 ORDER BY City_channel_ID DESC'], ['SELECT ID, Affiliation FROM tv_show JOIN city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID AND city_channel_tv_show.tv_show_ID = tv_show.tv_show_ID WHERE  Owned_Since <= 87 GROUP BY Affiliation HAVING AVG(tv_show.tv_show_ID) <= 65 LIMIT 3', 'SELECT T3.ID, T3.Affiliation FROM tv_show AS T1 JOIN city_channel_tv_show AS T2 ON T1.tv_show_ID = T2.tv_show_ID JOIN city_channel AS T3 ON T3.ID = T2.City_channel_ID WHERE T3.Owned_Since <= 87 GROUP BY T3.Affiliation HAVING AVG(T1.tv_show_ID) <= 65 LIMIT 3'], ['SELECT MIN(Radio_ID), COUNT(DISTINCT RnaG_MHz), Radio_ID, Radio_MHz FROM radio GROUP BY Radio_MHz HAVING MIN(Radio_ID) >= 66 ORDER BY Radio_ID ASC', 'SELECT MIN(Radio_ID), COUNT(DISTINCT RnaG_MHz), Radio_ID, Radio_MHz FROM radio GROUP BY Radio_MHz HAVING MIN(Radio_ID) >= 66 ORDER BY Radio_ID ASC'], ['SELECT Radio_MHz FROM radio JOIN city_channel_radio ON city_channel_radio.Radio_ID = radio.Radio_ID WHERE EXISTS (SELECT * FROM city_channel_radio WHERE  Radio_ID <= 68 AND radio.Radio_ID = Radio_ID) ORDER BY Radio_MHz ASC LIMIT 6', "SELECT CAST(REPLACE(radio.Radio_MHz, ',', '.') AS REAL) AS Radio_MHz FROM radio JOIN city_channel_radio ON city_channel_radio.Radio_ID = radio.Radio_ID WHERE radio.Radio_ID <= 68 ORDER BY Radio_MHz ASC LIMIT 6"], ['SELECT t.City_channel_ID, t.Is_free, t.Is_online FROM city_channel_tv_show AS t WHERE  t.City_channel_ID > 94 GROUP BY t.Is_online ORDER BY t.Is_online DESC', 'SELECT City_channel_ID, Is_free, COUNT(Is_online) as online_count FROM city_channel_tv_show WHERE City_channel_ID > 94 GROUP BY City_channel_ID, Is_free ORDER BY Is_free DESC'], ['SELECT COUNT(DISTINCT tv_show_ID), tv_show_ID FROM city_channel_tv_show WHERE  tv_show_ID > 56 AND tv_show_ID NOT IN (SELECT tv_show_ID FROM tv_show LIMIT 3) GROUP BY tv_show_ID ORDER BY tv_show_ID ASC LIMIT 10', 'SELECT COUNT(DISTINCT tv_show_ID) FROM city_channel_tv_show WHERE tv_show_ID > 56 AND tv_show_ID NOT IN (SELECT tv_show_ID FROM tv_show LIMIT 3) ORDER BY tv_show_ID ASC LIMIT 10'], ['SELECT SUM(e.Owned_Since), e.Owned_Since, e.Station_name FROM city_channel AS e WHERE  e.Owned_Since = 95 ORDER BY e.Owned_Since DESC LIMIT 7', 'SELECT SUM(e.Owned_Since), e.Station_name FROM city_channel AS e WHERE  e.Owned_Since = 95 GROUP BY e.Station_name ORDER BY SUM(e.Owned_Since) DESC LIMIT 7'], ['SELECT COUNT(DISTINCT City), City FROM city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID WHERE  tv_show_ID < 14 GROUP BY City', 'SELECT COUNT(DISTINCT city_channel.City), city_channel.City FROM city_channel_tv_show JOIN city_channel ON city_channel.ID = city_channel_tv_show.City_channel_ID WHERE tv_show_ID < 14 GROUP BY city_channel.City'], ['SELECT MAX(Radio_ID), MIN(City_channel_ID), MAX(City_channel_ID) FROM city_channel_radio WHERE EXISTS (SELECT * FROM radio AS y WHERE y.Radio_ID BETWEEN 1 AND 10 AND  y.Radio_ID >= 14 AND city_channel_radio.City_channel_ID = y.Radio_ID)', 'SELECT MAX(Radio_ID), MIN(City_channel_ID), MAX(City_channel_ID) FROM city_channel_radio WHERE EXISTS (SELECT * FROM radio AS y WHERE y.Radio_ID BETWEEN 1 AND 10 AND city_channel_radio.City_channel_ID = y.Radio_ID)']], 'tracking_software_problems': [['SELECT AVG(problem_id), other_log_details FROM Problem_Log WHERE problem_log_id BETWEEN 1 AND 10 AND  assigned_to_staff_id >= 99 ORDER BY other_log_details ASC', 'SELECT AVG(problem_log_id), other_log_details FROM Problem_Log WHERE problem_log_id BETWEEN 1 AND 10 AND assigned_to_staff_id >= 99 GROUP BY other_log_details ORDER BY other_log_details ASC'], ['SELECT COUNT(DISTINCT log_entry_fix), problem_id FROM Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id WHERE assigned_to_staff_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Staff WHERE  staff_id != 79 AND Problem_Log.problem_log_id = staff_id) GROUP BY problem_id', 'SELECT COUNT(DISTINCT log_entry_fix), problem_id, assigned_to_staff_id FROM Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id WHERE assigned_to_staff_id BETWEEN 1 AND 10 OR assigned_to_staff_id != 79 GROUP BY problem_id, assigned_to_staff_id'], ['SELECT y.product_name FROM Product AS y JOIN Product ON Product.product_id = y.product_id WHERE Product.product_id BETWEEN 1 AND 10', 'SELECT y.product_name FROM Product AS y JOIN Product AS z ON y.product_id = z.product_id WHERE y.product_id BETWEEN 1 AND 10'], ['SELECT problem_category_description, log_entry_description FROM Product JOIN Problems JOIN Problem_Log JOIN Problem_Category_Codes ON Problems.problem_id = Problem_Log.problem_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code AND Product.product_id = Problems.product_id WHERE Problems.problem_id BETWEEN 1 AND 10 AND log_entry_fix != (SELECT AVG(log_entry_fix) FROM Problem_Log WHERE problem_id BETWEEN 1 AND 10) GROUP BY log_entry_description LIMIT 3', 'SELECT problem_category_description, log_entry_description FROM Product JOIN Problems ON Product.product_id = Problems.product_id JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id JOIN Problem_Category_Codes ON Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE Problems.problem_id BETWEEN 1 AND 10 AND log_entry_fix != (SELECT log_entry_fix FROM Problem_Log WHERE problem_id BETWEEN 1 AND 10 ORDER BY log_entry_date DESC LIMIT 1) GROUP BY log_entry_description LIMIT 3'], ['SELECT COUNT(DISTINCT product_id), Problems.problem_id FROM Problems JOIN Problem_Log JOIN Problem_Category_Codes ON Problems.problem_id = Problem_Log.problem_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE  product_id != 4 ORDER BY Problems.problem_id ASC', 'SELECT COUNT(DISTINCT product_id), Problems.problem_id FROM Problems JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id WHERE Problems.product_id != 4 ORDER BY Problems.problem_id ASC'], ['SELECT MIN(reported_by_staff_id), staff_first_name FROM Problems JOIN Staff ON Problems.reported_by_staff_id = Staff.staff_id AND Problems.closure_authorised_by_staff_id = Staff.staff_id WHERE  staff_id > 6 ORDER BY staff_first_name ASC', 'SELECT MIN(T1.reported_by_staff_id), T2.staff_first_name FROM Problems AS T1 JOIN Staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_id > 6 ORDER BY T2.staff_first_name ASC'], ['SELECT problem_log_id, staff_last_name, log_entry_fix, Problem_Log.problem_category_code FROM Problem_Category_Codes JOIN Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE  assigned_to_staff_id = 30 GROUP BY Problem_Log.problem_category_code HAVING MAX(assigned_to_staff_id) >= 61 ORDER BY problem_log_id DESC', 'SELECT problem_log_id, staff_last_name, log_entry_fix, Problem_Log.problem_category_code FROM Problem_Category_Codes JOIN Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE assigned_to_staff_id = 30 GROUP BY Problem_Log.problem_category_code ORDER BY problem_log_id DESC'], ['SELECT COUNT(DISTINCT closure_authorised_by_staff_id), COUNT(DISTINCT problem_category_description), log_entry_fix FROM Problems JOIN Problem_Log JOIN Problem_Category_Codes ON Problems.problem_id = Problem_Log.problem_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE  assigned_to_staff_id < 13 LIMIT 10', 'SELECT COUNT(DISTINCT T3.closure_authorised_by_staff_id), COUNT(DISTINCT T1.problem_category_description), T2.log_entry_fix FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 JOIN Problems AS T3 ON T1.problem_category_code = T2.problem_category_code AND T3.problem_id = T2.problem_id WHERE T2.assigned_to_staff_id < 13 LIMIT 10'], ['SELECT Problem_Log.problem_status_code FROM Problems JOIN Problem_Log JOIN Problem_Category_Codes JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code AND Problems.problem_id = Problem_Log.problem_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE  assigned_to_staff_id >= 48', 'SELECT Problem_Log.problem_status_code FROM Problems JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code WHERE Problem_Log.assigned_to_staff_id >= 48'], ['SELECT c.product_id, c.product_id, c.product_name FROM Product AS c', 'SELECT c.product_id, c.product_name FROM Product AS c;'], ['SELECT SUM(closure_authorised_by_staff_id), MIN(problem_id), problem_description FROM Problems WHERE  closure_authorised_by_staff_id >= 88 GROUP BY problem_description LIMIT 2', 'SELECT closure_authorised_by_staff_id, MIN(problem_id), problem_description FROM Problems WHERE closure_authorised_by_staff_id >= 88 GROUP BY closure_authorised_by_staff_id, problem_description LIMIT 2'], ['SELECT MAX(assigned_to_staff_id), Problem_Log.problem_status_code, other_log_details FROM Problem_Log JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code WHERE  problem_id >= 99 LIMIT 3', 'SELECT MAX(assigned_to_staff_id), Problem_Log.problem_status_code, other_log_details FROM Problem_Log JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code WHERE  Problem_Log.problem_log_id >= 99 LIMIT 3'], ['SELECT COUNT(g.product_id), g.product_details FROM Product AS g JOIN Product ON Product.product_id = g.product_id WHERE Product.product_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Problems WHERE reported_by_staff_id BETWEEN 1 AND 10 AND Product.product_id = product_id) GROUP BY g.product_details ORDER BY g.product_details ASC', 'SELECT COUNT(p.product_id), p.product_details FROM Product AS p JOIN Problems ON p.product_id = Problems.product_id WHERE p.product_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Staff WHERE Staff.staff_id BETWEEN 1 AND 10 AND Problems.reported_by_staff_id = Staff.staff_id) GROUP BY p.product_details ORDER BY p.product_details ASC']], 'allergy_1': [['SELECT COUNT(StuID), COUNT(DISTINCT AllergyType), AllergyType FROM Allergy_Type JOIN Has_Allergy ON Has_Allergy.Allergy = Allergy_Type.Allergy WHERE  StuID >= 18 GROUP BY AllergyType HAVING COUNT(StuID) > 34', 'SELECT COUNT(ha.StuID), COUNT(DISTINCT at.AllergyType), at.AllergyType FROM Allergy_Type at JOIN Has_Allergy ha ON at.Allergy = ha.Allergy JOIN Student s ON ha.StuID = s.StuID WHERE s.Age >= 18 GROUP BY at.AllergyType HAVING COUNT(ha.StuID) > 34'], ['SELECT AVG(StuID), StuID, Allergy FROM Has_Allergy WHERE  StuID = 77 GROUP BY Allergy ORDER BY StuID DESC LIMIT 1', 'SELECT Allergy FROM Has_Allergy WHERE StuID = 77'], ['SELECT x.StuID, x.StuID, x.Allergy FROM Has_Allergy AS x WHERE  x.StuID != 84 LIMIT 10', 'SELECT DISTINCT x.StuID, x.Allergy FROM Has_Allergy AS x WHERE  x.StuID != 84 LIMIT 10'], ['SELECT StuID, StuID, Allergy FROM Has_Allergy WHERE  StuID <= 29 OR StuID NOT IN (SELECT StuID FROM Student AS s WHERE  s.Age < 94) GROUP BY Allergy HAVING SUM(StuID) < 26 LIMIT 6', 'SELECT StuID, Allergy FROM Has_Allergy WHERE StuID <= 29 OR StuID NOT IN (SELECT StuID FROM Student AS s WHERE  s.Age < 94) GROUP BY Allergy HAVING COUNT(StuID) < 26 LIMIT 6'], ['SELECT Sex FROM Student JOIN Has_Allergy ON Student.StuID = Has_Allergy.StuID WHERE  Advisor > 1 ORDER BY Sex ASC', 'SELECT T2.Sex FROM Has_Allergy AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Advisor > 1 ORDER BY T2.Sex ASC;']], 'voter_2': [['SELECT President_Vote, Fname FROM Voting_record JOIN Student ON Voting_record.Class_Senator_Vote = Student.StuID AND Voting_record.Treasurer_Vote = Student.StuID AND Voting_record.Vice_President_Vote = Student.StuID AND Voting_record.StuID = Student.StuID AND Student.StuID = Voting_record.President_Vote WHERE Advisor BETWEEN 1 AND 10 OR StuID >= (SELECT MAX(StuID) FROM Voting_record WHERE  Secretary_Vote != 69) LIMIT 7', 'SELECT T1.President_Vote, T2.Fname FROM Voting_record AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Advisor BETWEEN 1 AND 10 OR T1.StuID >= (SELECT MAX(StuID) FROM Voting_record WHERE Secretary_Vote != 69) LIMIT 7'], ['SELECT Age, city_code FROM Student WHERE Sex >= (SELECT AVG(Sex) FROM Student AS x WHERE  x.StuID <= 76) ORDER BY Age DESC', 'SELECT Age, city_code FROM Student WHERE Sex = (SELECT Sex FROM Student AS x WHERE x.StuID <= 76 ORDER BY x.StuID DESC LIMIT 1) ORDER BY Age DESC;'], ['SELECT AVG(Major), Sex FROM Student WHERE  Age <= 45', 'SELECT AVG(Major), Sex FROM Student WHERE  Age <= 45 GROUP BY Sex;'], ['SELECT MAX(Advisor), LName FROM Student WHERE Advisor BETWEEN 1 AND 10 AND Advisor < (SELECT AVG(Advisor) FROM Student WHERE StuID BETWEEN 1 AND 10)', 'SELECT MAX(StuID), LName FROM Student WHERE Advisor BETWEEN 1 AND 10 AND Advisor < (SELECT AVG(Advisor) FROM Student WHERE StuID BETWEEN 1 AND 10)'], ['SELECT COUNT(DISTINCT Election_Cycle), COUNT(DISTINCT Class_Senator_Vote) FROM Voting_record WHERE  Class_Senator_Vote > 11 LIMIT 4', 'SELECT COUNT(DISTINCT Election_Cycle), COUNT(DISTINCT Class_Senator_Vote) FROM Voting_record WHERE Class_Senator_Vote > 11'], ['SELECT AVG(StuID), Fname, Fname FROM Student WHERE StuID BETWEEN 1 AND 10 OR Advisor NOT IN (SELECT Advisor FROM Student WHERE  Advisor <= 88)', 'SELECT AVG(StuID) AS avg_StuID, LName, Fname FROM Student WHERE StuID BETWEEN 1 AND 10 OR Advisor NOT IN (SELECT Advisor FROM Student WHERE Advisor <= 88) GROUP BY LName, Fname;'], ['SELECT Advisor FROM Student WHERE  Age <= 89 OR EXISTS (SELECT * FROM Voting_record WHERE  Class_President_Vote = 73 AND Student.StuID = Vice_President_Vote LIMIT 2)', 'SELECT Advisor FROM Student WHERE Age <= 89 OR EXISTS (SELECT * FROM Voting_record WHERE Class_President_Vote = 73 AND Voting_record.StuID = Student.StuID LIMIT 1)']], 'customers_campaigns_ecommerce': [['SELECT product_category, product_name FROM Products WHERE product_id BETWEEN 1 AND 10 OR product_id NOT IN (SELECT product_id FROM Order_Items WHERE product_id BETWEEN 1 AND 10) GROUP BY product_name LIMIT 5', 'SELECT product_category, product_name FROM Products WHERE product_id BETWEEN 1 AND 10 OR product_id NOT IN (SELECT product_id FROM Order_Items WHERE product_id BETWEEN 1 AND 10)'], ['SELECT SUM(product_id), COUNT(DISTINCT product_category), product_category FROM Products WHERE  product_id >= 44', 'SELECT product_category, COUNT(DISTINCT product_id) FROM Products WHERE product_id >= 44 GROUP BY product_category;'], ['SELECT COUNT(DISTINCT item_id), order_item_status_code FROM Products JOIN Order_Items ON Order_Items.product_id = Products.product_id WHERE product_id NOT IN (SELECT product_id FROM Products WHERE product_id BETWEEN 1 AND 10) LIMIT 2', 'SELECT COUNT(DISTINCT order_items.item_id), order_items.order_item_status_code FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_id NOT IN (SELECT product_id FROM Products WHERE product_id BETWEEN 1 AND 10) GROUP BY order_items.order_item_status_code LIMIT 2'], ['SELECT COUNT(Premises.premise_id), Premises.premise_details FROM Premises AS b JOIN Premises ON Premises.premise_id = b.premise_id WHERE  b.premise_id = 0 GROUP BY Premises.premise_details HAVING MIN(b.premise_id) <= 56', 'SELECT COUNT(DISTINCT Premises.premise_id), Premises.premise_details FROM Premises GROUP BY Premises.premise_details HAVING MIN(Premises.premise_id) <= 56'], ['SELECT AVG(Customers.customer_id), Mailshot_Customers.customer_id FROM Mailshot_Customers JOIN Customers ON Customers.customer_id = Mailshot_Customers.customer_id WHERE  mailshot_id < 72 LIMIT 8', 'SELECT COUNT(Mailshot_Customers.customer_id), Mailshot_Customers.customer_id FROM Mailshot_Customers JOIN Customers ON Customers.customer_id = Mailshot_Customers.customer_id WHERE  mailshot_id < 72 GROUP BY Mailshot_Customers.customer_id LIMIT 8'], ['SELECT SUM(i.mailshot_id), COUNT(DISTINCT i.mailshot_id), i.mailshot_name FROM Mailshot_Campaigns AS i WHERE  i.mailshot_id <= 68 GROUP BY i.mailshot_name ORDER BY i.mailshot_name ASC', 'SELECT MAX(i.mailshot_id), COUNT(DISTINCT i.mailshot_id), i.mailshot_name FROM Mailshot_Campaigns AS i WHERE i.mailshot_id <= 68 GROUP BY i.mailshot_name ORDER BY i.mailshot_name ASC'], ['SELECT product_id FROM Products WHERE product_name NOT IN (SELECT product_name FROM Products AS g)', 'SELECT product_id FROM Products WHERE product_category NOT IN (SELECT product_category FROM Mailshot_Campaigns);'], ['SELECT customer_id, outcome_code, outcome_code FROM Mailshot_Customers WHERE  customer_id > 36', 'SELECT customer_id, outcome_code FROM Mailshot_Customers WHERE customer_id > 36'], ['SELECT SUM(mailshot_id), mailshot_id FROM Mailshot_Customers JOIN Customers ON Customers.customer_id = Mailshot_Customers.customer_id WHERE  mailshot_id = 62 AND customer_name IN (SELECT customer_name FROM Customers LIMIT 1) ORDER BY mailshot_id ASC', 'SELECT COUNT(mailshot_id), mailshot_id FROM Mailshot_Customers JOIN Customers ON Customers.customer_id = Mailshot_Customers.customer_id WHERE mailshot_id = 62 AND customer_name IN (SELECT customer_name FROM Customers LIMIT 1) ORDER BY mailshot_id ASC'], ['SELECT COUNT(DISTINCT payment_method), customer_id FROM Customers WHERE  customer_id >= 18 LIMIT 5', 'SELECT COUNT(DISTINCT payment_method), customer_id FROM Customers LIMIT 5'], ['SELECT product_name, product_name, product_category FROM Products GROUP BY product_category', 'SELECT product_name, product_category FROM Products GROUP BY product_name, product_category;']], 'car_racing': [['SELECT Driver_ID FROM team_driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM team_driver AS q LIMIT 10) GROUP BY Driver_ID ORDER BY Driver_ID DESC LIMIT 8', 'SELECT Driver_ID FROM team_driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM team_driver AS q LIMIT 10) GROUP BY Driver_ID ORDER BY Driver_ID DESC LIMIT 8'], ['SELECT v.Team_ID, team.Manager FROM team JOIN team AS v ON team.Team_ID = v.Team_ID WHERE  v.Team_ID >= 58 ORDER BY team.Manager DESC', 'SELECT t.Team_ID, t.Manager FROM team AS t JOIN team_driver AS td ON t.Team_ID = td.Team_ID WHERE t.Team_ID >= 58 ORDER BY t.Manager DESC;'], ['SELECT y.Country_Id, y.Country_Id FROM country AS y WHERE Official_native_language NOT IN (SELECT Official_native_language FROM country AS t WHERE t.Country_Id BETWEEN 1 AND 10 LIMIT 7) LIMIT 3', 'SELECT y.Country_Id, y.Country FROM country AS y WHERE Official_native_language NOT IN (SELECT Official_native_language FROM country AS t WHERE t.Country_Id BETWEEN 1 AND 10 LIMIT 7) LIMIT 3'], ['SELECT COUNT(Age), team_driver.Driver_ID FROM team_driver JOIN driver ON team_driver.Driver_ID = driver.Driver_ID WHERE  team_driver.Driver_ID >= 68', 'SELECT COUNT(driver.Age), team_driver.Driver_ID FROM team_driver JOIN driver ON team_driver.Driver_ID = driver.Driver_ID WHERE driver.Driver_ID >= 68'], ['SELECT country.Country_Id, z.Official_native_language FROM country AS z JOIN country ON country.Country_Id = z.Country_Id WHERE  country.Country_Id <= 18', 'SELECT Country_Id, Official_native_language FROM country WHERE Country_Id <= 18;'], ['SELECT SUM(n.Country_Id), n.Country_Id, n.Country FROM country AS n WHERE  n.Country_Id >= 80 GROUP BY n.Country HAVING AVG(n.Country_Id) < 46', 'SELECT COUNT(n.Country_Id), n.Country_Id, n.Country FROM country AS n WHERE  n.Country_Id >= 80 GROUP BY n.Country HAVING AVG(n.Country_Id) < 46']], 'cre_Docs_and_Epenses': [['SELECT m.Project_ID FROM Projects AS m JOIN Projects ON Projects.Project_ID = m.Project_ID WHERE  m.Project_ID <= 84', 'SELECT Project_ID FROM Projects WHERE Project_ID <= 84;'], ['SELECT Documents.Document_ID, Document_Type_Code FROM Documents_with_Expenses JOIN Documents JOIN Projects ON Documents.Project_ID = Projects.Project_ID AND Documents_with_Expenses.Document_ID = Documents.Document_ID GROUP BY Document_Type_Code', 'SELECT D.Document_ID, D.Document_Type_Code FROM Documents D JOIN Documents_with_Expenses DE ON D.Document_ID = DE.Document_ID GROUP BY D.Document_Type_Code'], ['SELECT Accounts.Statement_ID, Document_Name FROM Documents JOIN Statements JOIN Accounts ON Documents.Document_ID = Statements.Statement_ID AND Statements.Statement_ID = Accounts.Statement_ID WHERE  Statements.Statement_ID < 25 ORDER BY Document_Name DESC LIMIT 5', 'SELECT Accounts.Statement_ID, Document_Name FROM Documents JOIN Accounts ON Documents.Document_ID = Accounts.Statement_ID JOIN Statements ON Accounts.Statement_ID = Statements.Statement_ID WHERE Statements.Statement_ID < 25 ORDER BY Document_Name DESC LIMIT 5'], ['SELECT Projects.Project_ID, Document_Type_Code FROM Documents JOIN Projects ON Documents.Project_ID = Projects.Project_ID WHERE  Documents.Project_ID != 23 GROUP BY Document_Type_Code', 'SELECT Projects.Project_ID, Document_Type_Code FROM Documents JOIN Projects ON Documents.Project_ID = Projects.Project_ID WHERE Documents.Project_ID != 23 GROUP BY Projects.Project_ID, Document_Type_Code;'], ['SELECT v.Document_Description, v.Other_Details FROM Documents JOIN Documents AS v ON Documents.Document_ID = v.Document_ID WHERE  v.Project_ID = 98 AND EXISTS (SELECT * FROM Projects AS c WHERE  c.Project_ID > 59 AND Documents.Document_ID = c.Project_ID LIMIT 2)', 'SELECT d.Document_Description, d.Other_Details FROM Documents d WHERE d.Project_ID = 98 AND EXISTS (SELECT * FROM Projects c WHERE c.Project_ID > 59 AND c.Project_ID = d.Project_ID)'], ['SELECT Project_ID, Project_Details FROM Projects WHERE Project_ID BETWEEN 1 AND 10 GROUP BY Project_Details HAVING AVG(Project_ID) = 13', 'SELECT Project_ID, Project_Details FROM Projects WHERE Project_ID BETWEEN 1 AND 10 GROUP BY Project_Details HAVING COUNT(Project_ID) = 5'], ['SELECT Other_Details, Document_Name, Document_Type_Code FROM Documents WHERE Project_ID BETWEEN 1 AND 10 AND Document_Type_Code IN (SELECT Document_Type_Code FROM Documents AS n WHERE n.Document_ID BETWEEN 1 AND 10) GROUP BY Document_Type_Code', 'SELECT Other_Details, Document_Name, Document_Type_Code FROM Documents WHERE Project_ID BETWEEN 1 AND 10 AND Document_Type_Code IN (SELECT Document_Type_Code FROM Documents AS n WHERE n.Document_ID BETWEEN 1 AND 10)'], ['SELECT AVG(Accounts.Statement_ID), COUNT(Statements.Statement_ID) FROM Statements JOIN Accounts ON Statements.Statement_ID = Accounts.Statement_ID WHERE Accounts.Statement_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Statements AS r WHERE r.Statement_ID BETWEEN 1 AND 10 AND Accounts.Account_ID = r.Statement_ID)', 'SELECT AVG(Statements.Statement_ID), COUNT(Statements.Statement_ID) FROM Statements JOIN Accounts ON Statements.Statement_ID = Accounts.Statement_ID WHERE Accounts.Statement_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Statements AS r WHERE r.Statement_ID BETWEEN 1 AND 10 AND Accounts.Account_ID = r.Account_ID)'], ['SELECT COUNT(DISTINCT j.Document_ID), j.Budget_Type_Code, j.Document_Details FROM Documents_with_Expenses AS j WHERE  j.Document_ID > 29 GROUP BY j.Document_Details', 'SELECT COUNT(DISTINCT j.Document_ID), j.Budget_Type_Code, j.Document_Details FROM Documents_with_Expenses AS j WHERE j.Document_ID > 29 GROUP BY j.Budget_Type_Code, j.Document_Details;'], ['SELECT COUNT(DISTINCT f.Project_Details), f.Project_ID, f.Project_Details FROM Projects AS f WHERE  f.Project_ID < 67 GROUP BY f.Project_Details', 'SELECT COUNT(DISTINCT f.Project_Details), f.Project_ID, f.Project_Details FROM Projects AS f WHERE f.Project_ID < 67 GROUP BY f.Project_ID, f.Project_Details;'], ['SELECT Documents.Document_ID, w.Other_Details, w.Document_Name FROM Documents JOIN Documents AS w ON Documents.Document_ID = w.Document_ID WHERE w.Project_ID BETWEEN 1 AND 10 OR  Documents.Project_ID >= 97 GROUP BY w.Document_Name LIMIT 9', 'SELECT Documents.Document_ID, Documents.Other_Details, Documents.Document_Name FROM Documents WHERE Documents.Project_ID BETWEEN 1 AND 10 OR Documents.Project_ID >= 97 GROUP BY Documents.Document_Name LIMIT 9'], ['SELECT a.Document_ID, a.Document_Date FROM Documents AS a WHERE Project_ID IN (SELECT Project_ID FROM Projects) GROUP BY a.Document_Date', 'SELECT a.Document_ID, a.Document_Date FROM Documents AS a WHERE Project_ID IN (SELECT Project_ID FROM Projects)'], ['SELECT MAX(Documents_with_Expenses.Document_ID), COUNT(DISTINCT Document_Description), Documents.Document_ID FROM Documents_with_Expenses JOIN Documents JOIN Ref_Budget_Codes JOIN Ref_Document_Types ON Documents_with_Expenses.Document_ID = Documents.Document_ID AND Ref_Document_Types.Document_Type_Code = Documents.Document_Type_Code AND Ref_Budget_Codes.Budget_Type_Code = Documents_with_Expenses.Budget_Type_Code WHERE Document_Name NOT IN (SELECT Document_Name FROM Documents WHERE Document_ID BETWEEN 1 AND 10)', 'SELECT MAX(DwE.Document_ID), COUNT(DISTINCT D.Document_Description), D.Document_ID FROM Documents_with_Expenses DwE JOIN Documents D ON DwE.Document_ID = D.Document_ID JOIN Ref_Budget_Codes RBC ON DwE.Budget_Type_Code = RBC.Budget_Type_Code JOIN Ref_Document_Types RDT ON D.Document_Type_Code = RDT.Document_Type_Code WHERE D.Document_Name NOT IN (SELECT Document_Name FROM Documents WHERE Document_ID BETWEEN 1 AND 10);']], 'student_transcripts_tracking': [['SELECT other_details, other_details FROM Sections WHERE course_id BETWEEN 1 AND 10 AND  course_id <= 6', 'SELECT other_details FROM Sections WHERE course_id BETWEEN 1 AND 10'], ['SELECT MIN(x.course_id), COUNT(DISTINCT x.course_id) FROM Courses AS x JOIN Courses ON Courses.course_id = x.course_id WHERE  Courses.course_id = 68 LIMIT 1', 'SELECT 1 FROM Courses WHERE course_id = 68 LIMIT 1;'], ['SELECT SUM(course_id), Student_Enrolment_Courses.student_enrolment_id FROM Transcript_Contents JOIN Student_Enrolment_Courses JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id AND Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE  degree_program_id > 0 ORDER BY Student_Enrolment_Courses.student_enrolment_id ASC LIMIT 10', 'SELECT SUM(Course_ID), Student_Enrolment_Courses.student_enrolment_id FROM Transcript_Contents JOIN Student_Enrolment_Courses JOIN Student_Enrolment ON Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id AND Student_Enrolment_Courses.student_course_id = Transcript_Contents.student_course_id WHERE degree_program_id > 0 ORDER BY Student_Enrolment_Courses.student_enrolment_id ASC LIMIT 10'], ['SELECT MAX(b.student_id), b.other_details FROM Student_Enrolment AS b WHERE other_details IN (SELECT other_details FROM Semesters WHERE semester_id BETWEEN 1 AND 10 AND  semester_id <= 9)', 'SELECT MAX(b.student_enrolment_id), b.other_details FROM Student_Enrolment AS b WHERE other_details IN (SELECT other_details FROM Semesters WHERE semester_id BETWEEN 1 AND 10 AND semester_id <= 9)'], ['SELECT MAX(semester_id), degree_summary_description, department_id FROM Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE EXISTS (SELECT * FROM Student_Enrolment WHERE  degree_program_id != 20 AND Degree_Programs.degree_program_id = degree_program_id) GROUP BY department_id LIMIT 1', 'SELECT MAX(T1.semester_id), T2.degree_summary_description, T2.department_id FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE EXISTS (SELECT * FROM Student_Enrolment WHERE degree_program_id != 20 AND degree_program_id = T2.degree_program_id) GROUP BY T2.department_id, T2.degree_summary_description LIMIT 1'], ['SELECT student_id, Degree_Programs.department_id, course_id FROM Student_Enrolment_Courses JOIN Student_Enrolment JOIN Degree_Programs JOIN Departments ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id AND Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id AND Degree_Programs.department_id = Departments.department_id WHERE  student_id > 46 GROUP BY course_id HAVING MIN(student_course_id) = 75', 'SELECT S.student_id, DP.department_id, SEC.course_id FROM Students S JOIN Student_Enrolment SE ON S.student_id = SE.student_id JOIN Degree_Programs DP ON SE.degree_program_id = DP.degree_program_id JOIN Student_Enrolment_Courses SEC ON SE.student_enrolment_id = SEC.student_enrolment_id JOIN Departments D ON DP.department_id = D.department_id WHERE S.student_id > 46 GROUP BY SEC.course_id HAVING MIN(SEC.student_course_id) = 75'], ['SELECT degree_summary_name, Degree_Programs.other_details FROM Semesters JOIN Student_Enrolment JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id AND Semesters.semester_id = Student_Enrolment.semester_id WHERE  Degree_Programs.degree_program_id != 69 GROUP BY Degree_Programs.other_details HAVING AVG(student_enrolment_id) >= 33 ORDER BY degree_summary_name DESC LIMIT 10', 'SELECT degree_summary_name, Degree_Programs.other_details FROM Semesters INNER JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id INNER JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_program_id != 69 GROUP BY degree_summary_name, Degree_Programs.other_details HAVING AVG(Student_Enrolment.student_enrolment_id) >= 33 ORDER BY degree_summary_name DESC LIMIT 10'], ['SELECT f.semester_id, f.semester_id FROM Semesters AS f WHERE semester_name < (SELECT SUM(semester_name) FROM Semesters AS z WHERE  z.semester_id = 26)', 'SELECT f.semester_id, f.semester_name FROM Semesters AS f WHERE f.semester_name < (SELECT MIN(z.semester_name) FROM Semesters AS z WHERE  z.semester_id = 26)'], ['SELECT Addresses.other_address_details, h.other_address_details FROM Addresses AS h JOIN Addresses ON Addresses.address_id = h.address_id WHERE  Addresses.address_id != 45 GROUP BY h.other_address_details ORDER BY h.other_address_details ASC', 'SELECT h2.other_address_details, h1.other_address_details FROM Addresses AS h1 JOIN Addresses AS h2 ON h2.address_id = h1.address_id WHERE h2.address_id != 45 GROUP BY h1.other_address_details ORDER BY h1.other_address_details ASC']], 'icfp_1': [['SELECT instID, country FROM Inst WHERE instID IN (SELECT instID FROM Authorship AS a WHERE  a.authOrder = 42)', 'SELECT instID, country FROM Inst AS i INNER JOIN Authorship AS a ON i.instID = a.instID WHERE a.authOrder = 42'], ['SELECT MIN(paperID), paperID FROM Papers WHERE  paperID != 49', 'SELECT MIN(paperID), paperID FROM Papers WHERE  paperID != 49'], ['SELECT paperID, paperID FROM Papers WHERE  paperID >= 47 ORDER BY paperID DESC LIMIT 1', 'SELECT paperID FROM Papers WHERE paperID >= 47 ORDER BY paperID DESC LIMIT 1'], ['SELECT title FROM Authors JOIN Papers JOIN Authorship ON Authorship.paperID = Papers.paperID AND Authorship.authID = Authors.authID WHERE Authorship.authID BETWEEN 1 AND 10 OR  Authorship.authID >= 39 LIMIT 6', 'SELECT DISTINCT T1.title FROM Papers AS T1 INNER JOIN Authorship AS T2 ON T1.paperID = T2.paperID INNER JOIN Authors AS T3 ON T2.authID = T3.authID WHERE T2.authID BETWEEN 1 AND 10 OR T2.authID >= 39 LIMIT 6'], ['SELECT g.instID, g.authID FROM Authorship AS g WHERE  g.paperID >= 15 ORDER BY g.instID ASC', 'SELECT g.instID, g.authID FROM Authorship AS g WHERE g.paperID >= 15 ORDER BY g.instID ASC'], ['SELECT paperID FROM Papers WHERE  paperID = 64 AND paperID > (SELECT MAX(paperID) FROM Authorship AS m)', 'SELECT paperID FROM Papers WHERE paperID > (SELECT MAX(paperID) FROM Authorship)'], ['SELECT e.fname, e.lname FROM Authors AS e WHERE lname != (SELECT MAX(lname) FROM Authors WHERE  authID > 90) LIMIT 4', 'SELECT fname, lname FROM Authors WHERE lname != (SELECT lname FROM Authors ORDER BY lname DESC LIMIT 1) LIMIT 4;'], ['SELECT title, title, title FROM Papers WHERE paperID BETWEEN 1 AND 10 AND  paperID > 85 GROUP BY title HAVING MAX(paperID) = 76 ORDER BY title DESC LIMIT 5', 'SELECT title FROM Papers WHERE paperID BETWEEN 1 AND 10 OR paperID > 85 GROUP BY title HAVING MAX(paperID) = 76 ORDER BY title DESC LIMIT 5'], ['SELECT MIN(instID), instID, instID, country FROM Inst WHERE instID BETWEEN 1 AND 10 OR  instID = 28 GROUP BY country ORDER BY instID DESC', 'SELECT MIN(instID) AS min_instID, country FROM Inst WHERE instID BETWEEN 1 AND 10 OR instID = 28 GROUP BY country ORDER BY MIN(instID) DESC'], ['SELECT name FROM Inst JOIN Authors JOIN Papers JOIN Authorship ON Authorship.paperID = Papers.paperID AND Authorship.authID = Authors.authID AND Inst.instID = Authorship.instID WHERE Authorship.paperID BETWEEN 1 AND 10 AND  Authorship.instID < 97 ORDER BY name ASC', 'SELECT I.name FROM Authors AS A JOIN Authorship AS Au ON A.authID = Au.authID JOIN Papers AS P ON Au.paperID = P.paperID JOIN Inst AS I ON Au.instID = I.instID WHERE Au.paperID BETWEEN 1 AND 10 AND Au.instID < 97 ORDER BY I.name ASC;'], ['SELECT Papers.paperID, title FROM Papers JOIN Authorship ON Authorship.paperID = Papers.paperID WHERE  instID > 67 ORDER BY Papers.paperID DESC', 'SELECT Papers.paperID, title FROM Papers JOIN Authorship ON Authorship.paperID = Papers.paperID WHERE Authorship.instID > 67 ORDER BY Papers.paperID DESC'], ['SELECT MAX(Authorship.instID), country FROM Inst JOIN Authors JOIN Authorship ON Authorship.authID = Authors.authID AND Inst.instID = Authorship.instID WHERE Authorship.authID BETWEEN 1 AND 10 OR  Authors.authID < 54 LIMIT 6', 'SELECT MAX(Authorship.instID), Inst.country FROM Authorship JOIN Authors ON Authorship.authID = Authors.authID JOIN Inst ON Inst.instID = Authorship.instID WHERE Authorship.authID BETWEEN 1 AND 10 OR Authors.authID < 54 LIMIT 6'], ['SELECT MIN(paperID), paperID FROM Papers WHERE  paperID != 52 ORDER BY paperID DESC', 'SELECT MIN(paperID) FROM Papers WHERE paperID != 52'], ['SELECT MIN(f.paperID), f.paperID FROM Papers AS f WHERE  f.paperID < 87', 'SELECT MIN(f.paperID) FROM Papers AS f WHERE f.paperID < 87;']], 'apartment_rentals': [['SELECT building_phone, building_full_name FROM Apartment_Buildings WHERE  building_id < 69 GROUP BY building_full_name', 'SELECT building_phone, building_full_name FROM Apartment_Buildings WHERE building_id < 69 GROUP BY building_phone, building_full_name;'], ['SELECT COUNT(DISTINCT d.booking_status_code), d.guest_id, d.booking_status_code, d.booking_start_date FROM Apartment_Bookings AS d WHERE d.apt_id BETWEEN 1 AND 10 OR  d.guest_id != 100 GROUP BY d.booking_start_date', 'SELECT COUNT(DISTINCT d.booking_status_code), d.guest_id, d.booking_status_code, d.booking_start_date FROM Apartment_Bookings AS d WHERE d.apt_id BETWEEN 1 AND 10 OR  d.guest_id != 100 GROUP BY d.booking_start_date, d.guest_id, d.booking_status_code'], ['SELECT Apartment_Bookings.apt_id, View_Unit_Status.apt_id FROM View_Unit_Status JOIN Apartment_Bookings ON View_Unit_Status.apt_booking_id = Apartment_Bookings.apt_booking_id WHERE View_Unit_Status.apt_booking_id BETWEEN 1 AND 10 AND apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities) ORDER BY Apartment_Bookings.apt_id DESC LIMIT 7', 'SELECT T1.apt_id, T2.apt_id FROM View_Unit_Status AS T1 JOIN Apartment_Bookings AS T2 ON T1.apt_booking_id = T2.apt_booking_id WHERE T1.apt_booking_id BETWEEN 1 AND 10 AND T2.apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities) ORDER BY T2.apt_id DESC LIMIT 7'], ['SELECT guest_last_name, gender_code FROM Guests WHERE EXISTS (SELECT * FROM Apartment_Bookings AS a WHERE a.guest_id BETWEEN 1 AND 10 AND  a.apt_id < 61 AND Guests.guest_id = a.guest_id) GROUP BY guest_last_name HAVING MIN(guest_id) < 77 ORDER BY gender_code ASC LIMIT 4', 'SELECT guest_last_name, gender_code FROM Guests WHERE EXISTS (SELECT * FROM Apartment_Bookings AS a WHERE a.guest_id BETWEEN 1 AND 10 AND  a.apt_id < 61 AND a.guest_id = Guests.guest_id) GROUP BY guest_last_name, gender_code HAVING MIN(guest_id) < 77 ORDER BY gender_code ASC LIMIT 4'], ['SELECT SUM(guest_id), COUNT(DISTINCT guest_last_name), guest_id FROM Guests WHERE  guest_id != 63', 'SELECT SUM(guest_id), COUNT(DISTINCT guest_last_name) FROM Guests WHERE  guest_id != 63'], ['SELECT facility_code FROM Apartment_Facilities WHERE apt_id BETWEEN 1 AND 10 OR apt_id IN (SELECT apt_id FROM Apartment_Facilities AS c) ORDER BY facility_code ASC', 'SELECT facility_code FROM Apartment_Facilities WHERE apt_id BETWEEN 1 AND 10 ORDER BY facility_code ASC'], ['SELECT Apartment_Facilities.apt_id FROM Apartment_Facilities JOIN Apartments ON Apartment_Facilities.apt_id = Apartments.apt_id WHERE EXISTS (SELECT * FROM Apartment_Buildings WHERE  building_id > 54 AND Apartments.apt_id = building_id)', 'SELECT Apartment_Facilities.apt_id FROM Apartment_Facilities JOIN Apartments ON Apartment_Facilities.apt_id = Apartments.apt_id WHERE EXISTS (SELECT * FROM Apartment_Buildings WHERE Apartment_Buildings.building_id > 54 AND Apartment_Buildings.building_id = Apartments.building_id)'], ['SELECT building_description FROM View_Unit_Status JOIN Apartments JOIN Apartment_Bookings JOIN Apartment_Buildings ON Apartments.building_id = Apartment_Buildings.building_id AND Apartments.apt_id = View_Unit_Status.apt_id AND View_Unit_Status.apt_booking_id = Apartment_Bookings.apt_booking_id WHERE EXISTS (SELECT * FROM Apartment_Facilities WHERE  apt_id = 26 AND Apartments.apt_id = apt_id)', 'SELECT T1.building_description FROM Apartment_Buildings AS T1 INNER JOIN Apartments AS T2 ON T1.building_id = T2.building_id INNER JOIN Apartment_Bookings AS T3 ON T3.apt_id = T2.apt_id INNER JOIN View_Unit_Status AS T4 ON T4.apt_booking_id = T3.apt_booking_id WHERE T4.apt_id = 26 AND EXISTS (SELECT * FROM Apartment_Facilities AS T5 WHERE T5.apt_id = 26)'], ['SELECT o.bathroom_count FROM Apartments AS o WHERE apt_number IN (SELECT apt_number FROM Apartments) ORDER BY o.bathroom_count DESC', 'SELECT o.bathroom_count FROM Apartments AS o ORDER BY o.bathroom_count DESC']], 'party_people': [['SELECT Minister FROM party_events JOIN party ON party.Party_ID = party_events.Party_ID WHERE  Region_ID <= 79 ORDER BY Minister ASC', 'SELECT Minister FROM party_events JOIN party ON party.Party_ID = party_events.Party_ID WHERE party.Region_ID <= 79 ORDER BY Minister ASC;'], ['SELECT n.Member_ID, n.In_office FROM member AS n WHERE  n.Member_ID >= 18 GROUP BY n.In_office', 'SELECT n.Member_ID, n.In_office FROM member AS n WHERE n.Member_ID >= 18'], ['SELECT COUNT(DISTINCT party.Party_ID), party.Region_ID FROM party AS g JOIN party ON party.Party_ID = g.Party_ID GROUP BY party.Region_ID HAVING SUM(g.Party_ID) <= 15', 'SELECT COUNT(DISTINCT p1.Party_ID), p1.Region_ID FROM party AS p1 GROUP BY p1.Region_ID HAVING COUNT(p1.Party_ID) <= 15'], ['SELECT AVG(Region_ID), Region_ID, Region_ID FROM region WHERE Region_ID BETWEEN 1 AND 10 OR  Region_ID <= 57 LIMIT 1', 'SELECT Region_ID FROM region WHERE Region_ID BETWEEN 1 AND 10 OR Region_ID <= 57 LIMIT 1'], ['SELECT Region_ID, Region_ID FROM region WHERE  Region_ID = 66 LIMIT 4', 'SELECT Region_ID FROM region WHERE Region_ID = 66 LIMIT 4'], ['SELECT Party_ID, Took_office FROM party WHERE Region_ID BETWEEN 1 AND 10 OR Party_name > (SELECT SUM(Party_name) FROM party AS b WHERE b.Party_ID BETWEEN 1 AND 10) GROUP BY Took_office HAVING COUNT(Party_ID) < 66 LIMIT 1', 'SELECT Party_ID, Took_office FROM party WHERE Region_ID BETWEEN 1 AND 10 GROUP BY Party_ID, Took_office HAVING COUNT(Party_ID) < 66'], ['SELECT Region_ID, party_events.Party_ID, Party_name FROM party_events JOIN party ON party.Party_ID = party_events.Party_ID WHERE  party.Party_ID = 55', 'SELECT Region_ID, party_events.Party_ID, Party_name FROM party_events JOIN party ON party.Party_ID = party_events.Party_ID WHERE party.Party_ID = 55'], ['SELECT MIN(party.Region_ID), COUNT(party.Region_ID) FROM party AS n JOIN party ON party.Party_ID = n.Party_ID WHERE  n.Region_ID != 59', 'SELECT MIN(T1.Region_ID), COUNT(T1.Region_ID) FROM party AS T1 WHERE T1.Region_ID != 59;'], ['SELECT Region_ID FROM party_events JOIN party ON party.Party_ID = party_events.Party_ID WHERE  Region_ID = 88', 'SELECT T1.Region_ID FROM party AS T1 JOIN party_events AS T2 ON T1.Party_ID = T2.Party_ID WHERE T1.Region_ID = 88;'], ['SELECT MIN(Party_ID), Event_ID FROM party_events WHERE Party_ID BETWEEN 1 AND 10 OR Party_ID = (SELECT AVG(Party_ID) FROM party WHERE Region_ID BETWEEN 1 AND 10 OR  Party_ID >= 4 LIMIT 5) LIMIT 6', 'SELECT MIN(Party_ID), Event_ID FROM party_events WHERE Party_ID BETWEEN 1 AND 10 OR Party_ID = (SELECT ROUND(AVG(Party_ID)) FROM party WHERE Region_ID BETWEEN 1 AND 10 OR Party_ID >= 4) LIMIT 6'], ['SELECT MAX(Party_ID), MIN(Region_ID), Region_ID FROM party WHERE  Region_ID >= 69 GROUP BY Region_ID HAVING MIN(Party_ID) > 33 ORDER BY Region_ID DESC', 'SELECT MIN(Party_ID), Region_ID FROM party WHERE Region_ID >= 69 GROUP BY Region_ID HAVING MIN(Party_ID) > 33 ORDER BY Region_ID DESC']], 'car_1': [['SELECT h.Weight FROM cars_data AS h WHERE  h.Weight = 91 AND Weight = (SELECT MAX(Weight) FROM cars_data AS b) GROUP BY h.Weight HAVING MIN(h.Cylinders) < 93', 'SELECT h.Weight FROM cars_data AS h WHERE h.Weight = 91 AND Weight = (SELECT MAX(Weight) FROM cars_data AS b)'], ['SELECT v.MPG FROM cars_data AS v WHERE  v.Accelerate = 96 ORDER BY v.MPG DESC', 'SELECT CAST(v.MPG AS number) FROM cars_data AS v WHERE v.Accelerate = 96 ORDER BY CAST(v.MPG AS number) DESC'], ['SELECT CountryName FROM countries WHERE Continent BETWEEN 1 AND 10 AND  CountryId != 65 ORDER BY CountryName DESC', 'SELECT CountryName FROM countries WHERE Continent NOT IN (1, 10) AND CountryId != 65 ORDER BY CountryName DESC'], ['SELECT m.MakeId, m.MakeId, m.Model FROM car_names AS m WHERE  m.MakeId >= 31 GROUP BY m.Model HAVING SUM(m.MakeId) > 54', 'SELECT m.MakeId, m.Model FROM car_names AS m WHERE  m.MakeId >= 31 GROUP BY m.Model HAVING SUM(m.MakeId) > 54'], ['SELECT Horsepower FROM car_names JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE EXISTS (SELECT * FROM cars_data AS m WHERE  m.Accelerate > 59 AND car_names.MakeId = m.Id)', 'SELECT c.Horsepower FROM car_names AS n JOIN cars_data AS c ON c.Id = n.MakeId WHERE c.Accelerate > 59'], ['SELECT f.ContId, f.Continent FROM continents AS f WHERE  f.ContId >= 4 OR Continent IN (SELECT Continent FROM countries) GROUP BY f.Continent ORDER BY f.ContId ASC', 'SELECT f.ContId, f.Continent FROM continents AS f WHERE  f.ContId >= 4 OR f.ContId IN (SELECT Continent FROM countries) GROUP BY f.ContId ORDER BY f.ContId ASC'], ['SELECT COUNT(DISTINCT x.Cylinders), cars_data.Id FROM cars_data AS x JOIN cars_data ON cars_data.Id = x.Id WHERE  cars_data.Accelerate != 56', 'SELECT COUNT(DISTINCT Cylinders) FROM cars_data WHERE Accelerate != 56 GROUP BY Id'], ['SELECT AVG(d.Id), COUNT(DISTINCT d.Country) FROM car_makers AS d WHERE  d.Id <= 41', 'SELECT AVG(d.Id), COUNT(DISTINCT d.Country) FROM car_makers AS d WHERE  d.Id <= 41'], ['SELECT COUNT(DISTINCT Model), Make FROM car_names WHERE  MakeId <= 28', 'SELECT Make, COUNT(DISTINCT Model) FROM car_names WHERE MakeId <= 28 GROUP BY Make;'], ['SELECT CountryId FROM countries WHERE CountryId BETWEEN 1 AND 10 AND  Continent > 24 ORDER BY CountryId DESC LIMIT 3', 'SELECT CountryId FROM countries WHERE CountryId BETWEEN 1 AND 10 ORDER BY CountryId DESC LIMIT 3'], ['SELECT AVG(h.Id), h.Id, h.FullName, h.Maker FROM car_makers AS h WHERE FullName IN (SELECT FullName FROM car_makers WHERE  Id > 32) GROUP BY h.Maker HAVING MAX(h.Id) > 31', 'SELECT MAX(h.Id), h.Id, h.FullName, h.Maker FROM car_makers AS h WHERE FullName IN (SELECT FullName FROM car_makers WHERE  Id > 32) GROUP BY h.Maker, h.Id, h.FullName HAVING MAX(h.Id) > 31'], ['SELECT COUNT(DISTINCT k.Make), k.MakeId FROM car_names AS k WHERE  k.MakeId != 38 LIMIT 8', 'SELECT COUNT(DISTINCT k.Make), k.MakeId FROM car_names AS k WHERE  k.MakeId != 38 LIMIT 8']], 'small_bank_1': [['SELECT COUNT(DISTINCT name), custid, name FROM ACCOUNTS GROUP BY name HAVING SUM(custid) > 91 ORDER BY custid DESC LIMIT 4', 'SELECT COUNT(DISTINCT name), custid FROM ACCOUNTS GROUP BY custid HAVING COUNT(DISTINCT name) > 1 ORDER BY custid DESC LIMIT 4;'], ['SELECT MIN(ACCOUNTS.custid), name, name FROM SAVINGS JOIN ACCOUNTS ON ACCOUNTS.custid = SAVINGS.custid WHERE SAVINGS.custid BETWEEN 1 AND 10 AND name NOT IN (SELECT name FROM ACCOUNTS AS g LIMIT 4) LIMIT 1', 'SELECT MIN(ACCOUNTS.custid), name FROM SAVINGS JOIN ACCOUNTS ON ACCOUNTS.custid = SAVINGS.custid WHERE SAVINGS.custid BETWEEN 1 AND 10 AND name NOT IN (SELECT name FROM ACCOUNTS AS g LIMIT 4) LIMIT 1'], ['SELECT SUM(a.custid), SUM(a.balance), a.balance FROM SAVINGS AS a WHERE  a.custid > 5 GROUP BY a.balance', 'SELECT SUM(a.custid), SUM(a.balance) FROM SAVINGS AS a WHERE  a.custid > 5 GROUP BY a.balance'], ['SELECT MAX(custid), balance FROM SAVINGS WHERE  custid >= 8 GROUP BY balance ORDER BY balance ASC LIMIT 8', 'SELECT custid, balance FROM SAVINGS WHERE custid >= 8 ORDER BY balance ASC LIMIT 8'], ['SELECT SAVINGS.custid FROM SAVINGS JOIN ACCOUNTS ON ACCOUNTS.custid = SAVINGS.custid WHERE  balance = 9 ORDER BY SAVINGS.custid DESC', 'SELECT SAVINGS.custid FROM SAVINGS JOIN ACCOUNTS ON ACCOUNTS.custid = SAVINGS.custid WHERE SAVINGS.balance = 9 ORDER BY SAVINGS.custid DESC;'], ['SELECT COUNT(DISTINCT name), name, name FROM ACCOUNTS WHERE custid BETWEEN 1 AND 10 AND custid >= (SELECT AVG(custid) FROM CHECKING AS p WHERE p.balance BETWEEN 1 AND 10) LIMIT 1', 'SELECT name FROM ACCOUNTS WHERE custid BETWEEN 1 AND 10 AND custid >= (SELECT AVG(custid) FROM CHECKING AS p WHERE p.balance BETWEEN 1 AND 10) LIMIT 1'], ['SELECT name FROM CHECKING JOIN SAVINGS JOIN ACCOUNTS ON ACCOUNTS.custid = SAVINGS.custid AND CHECKING.custid = ACCOUNTS.custid WHERE  SAVINGS.balance != 56 ORDER BY name DESC', 'SELECT name FROM ACCOUNTS JOIN SAVINGS ON ACCOUNTS.custid = SAVINGS.custid JOIN CHECKING ON ACCOUNTS.custid = CHECKING.custid WHERE SAVINGS.balance != 56 ORDER BY name DESC;'], ['SELECT COUNT(custid), custid FROM ACCOUNTS WHERE EXISTS (SELECT * FROM CHECKING WHERE  balance != 23 AND ACCOUNTS.custid = custid)', 'SELECT COUNT(custid), custid FROM ACCOUNTS WHERE EXISTS (SELECT * FROM CHECKING WHERE balance != 23 AND ACCOUNTS.custid = CHECKING.custid) GROUP BY custid;']], 'geo': [['SELECT length, length FROM river WHERE  length != 10 ORDER BY length DESC', 'SELECT river.length, river.length FROM river WHERE river.length != 10 ORDER BY river.length DESC;'], ['SELECT COUNT(DISTINCT capital), state_name FROM state WHERE  population > 3', 'SELECT state_name, COUNT(DISTINCT capital) FROM state WHERE population > 3 GROUP BY state_name;'], ['SELECT COUNT(DISTINCT population), country_name FROM city WHERE population BETWEEN 1 AND 10 LIMIT 10', 'SELECT COUNT(DISTINCT population), country_name FROM city WHERE population BETWEEN 10000 AND 10000000 LIMIT 10']], 'network_2': [['SELECT year FROM PersonFriend WHERE year BETWEEN 1 AND 10 AND friend <= (SELECT SUM(friend) FROM PersonFriend)', 'SELECT year FROM PersonFriend WHERE year BETWEEN 1 AND 10 AND friend IN (SELECT friend FROM PersonFriend GROUP BY friend HAVING COUNT(friend) <= 1)'], ['SELECT COUNT(year), year FROM PersonFriend WHERE  year = 91', 'SELECT COUNT(year) AS count, year FROM PersonFriend WHERE year = 91;'], ['SELECT AVG(age), MIN(age), age FROM Person WHERE age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM PersonFriend WHERE  year < 99 AND Person.name = friend) ORDER BY age DESC', 'SELECT AVG(T1.age) as avg_age, MIN(T1.age) as min_age FROM Person T1 WHERE T1.age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM PersonFriend T2 WHERE T2.year < 99 AND T1.name = T2.friend) ORDER BY T1.age DESC'], ['SELECT j.age, j.age FROM Person AS j', 'SELECT j.age FROM Person AS j;'], ['SELECT MIN(Person.age), u.job FROM Person AS u JOIN Person ON Person.name = u.name WHERE  u.age >= 3', 'SELECT u.job, MIN(u.age) as min_age FROM Person AS u GROUP BY u.job HAVING MIN(u.age) >= 3;'], ['SELECT COUNT(DISTINCT Person.gender) FROM Person JOIN Person AS x ON Person.name = x.name WHERE  Person.age < 31', 'SELECT COUNT(DISTINCT gender) FROM Person WHERE age < 31;'], ['SELECT COUNT(c.age), c.job FROM Person AS c JOIN Person ON Person.name = c.name WHERE  c.age = 33', 'SELECT COUNT(name), job FROM Person WHERE age = 33 GROUP BY job;'], ['SELECT SUM(age), COUNT(DISTINCT city), gender FROM Person WHERE  age != 94 GROUP BY gender ORDER BY gender ASC LIMIT 5', 'SELECT gender, SUM(age), COUNT(DISTINCT city) FROM Person WHERE age != 94 GROUP BY gender ORDER BY gender ASC LIMIT 5;'], ['SELECT s.city FROM Person AS s WHERE  s.age >= 21 LIMIT 2', 'SELECT P.city FROM Person AS P WHERE  P.age >= 21 LIMIT 2'], ['SELECT age FROM Person WHERE age BETWEEN 1 AND 10 ORDER BY age ASC', 'SELECT age FROM Person WHERE age BETWEEN 1 AND 10 ORDER BY age ASC'], ['SELECT COUNT(DISTINCT o.job), o.job FROM Person AS o WHERE city NOT IN (SELECT city FROM Person AS x WHERE x.age BETWEEN 1 AND 10)', 'SELECT o.job, COUNT(o.job) FROM Person AS o WHERE o.city NOT IN (SELECT x.city FROM Person AS x WHERE x.age BETWEEN 1 AND 10) GROUP BY o.job;'], ['SELECT SUM(age), age, city FROM Person WHERE city IN (SELECT city FROM Person AS h WHERE h.age BETWEEN 1 AND 10) GROUP BY city', 'SELECT SUM(age) AS total_age, city FROM Person WHERE city IN (SELECT city FROM Person AS h WHERE h.age BETWEEN 1 AND 10) GROUP BY city;'], ['SELECT Person.name, PersonFriend.name FROM PersonFriend JOIN Person ON PersonFriend.friend = Person.name AND Person.name = PersonFriend.name WHERE year BETWEEN 1 AND 10 ORDER BY PersonFriend.name ASC', 'SELECT P1.name, P2.name FROM Person AS P1 JOIN PersonFriend AS PF ON P1.name = PF.name JOIN Person AS P2 ON PF.friend = P2.name WHERE PF.year BETWEEN 1 AND 10 ORDER BY P2.name ASC;']], 'party_host': [['SELECT SUM(Host_ID), Name, Age FROM host WHERE Host_ID BETWEEN 1 AND 10 AND  Host_ID <= 32 ORDER BY Age DESC', 'SELECT COUNT(*), Name FROM host WHERE Host_ID BETWEEN 1 AND 32 ORDER BY Name DESC;'], ['SELECT Number_of_hosts, First_year FROM party_host JOIN party ON party_host.Party_ID = party.Party_ID WHERE  Host_ID >= 79 ORDER BY Number_of_hosts ASC LIMIT 2', 'SELECT T1.Number_of_hosts, T1.First_year FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T2.Host_ID = T3.Host_ID WHERE T3.Host_ID >= 79 ORDER BY T1.Number_of_hosts ASC LIMIT 2;'], ['SELECT COUNT(DISTINCT Last_year), Party_ID, First_year FROM party WHERE  Number_of_hosts != 43 GROUP BY First_year', 'SELECT COUNT(DISTINCT Last_year), Party_ID, First_year FROM party WHERE Number_of_hosts != 43 GROUP BY Party_ID, First_year;'], ['SELECT COUNT(DISTINCT Party_Theme) FROM party WHERE  Party_ID <= 7', 'SELECT COUNT(DISTINCT Party_Theme) FROM party WHERE Party_ID <= 7'], ['SELECT Host_ID, Nationality FROM host WHERE Nationality NOT IN (SELECT Nationality FROM host AS d WHERE  d.Host_ID >= 73) GROUP BY Nationality ORDER BY Host_ID DESC', 'SELECT Host_ID, Nationality FROM host WHERE Nationality NOT IN (SELECT Nationality FROM host AS d WHERE  d.Host_ID >= 73) GROUP BY Nationality ORDER BY Host_ID DESC'], ['SELECT Age FROM host WHERE Host_ID BETWEEN 1 AND 10 OR  Host_ID != 32 ORDER BY Age ASC LIMIT 3', 'SELECT Age FROM host WHERE Host_ID BETWEEN 1 AND 10 OR Host_ID != 32 ORDER BY LENGTH(Age) ASC LIMIT 3']], 'institution_sports': [['SELECT COUNT(DISTINCT m.Nickname), m.Joined FROM Championship AS m', 'SELECT COUNT(DISTINCT m.Nickname), m.Joined FROM Championship AS m GROUP BY m.Joined'], ['SELECT Nickname, Nickname FROM Championship WHERE  Institution_ID > 82 ORDER BY Nickname ASC', 'SELECT Nickname FROM Championship WHERE Institution_ID > 82 ORDER BY Nickname ASC;'], ['SELECT SUM(Capacity), Enrollment FROM institution WHERE Enrollment BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Championship WHERE  Number_of_Championships >= 73 AND institution.Institution_ID = Institution_ID) ORDER BY Enrollment DESC', 'SELECT SUM(Capacity), Enrollment FROM institution WHERE Enrollment BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Championship WHERE  Number_of_Championships >= 73 AND institution.Institution_ID = Championship.Institution_ID) ORDER BY Enrollment DESC'], ['SELECT AVG(s.Joined), COUNT(DISTINCT s.Nickname), s.Nickname, s.Number_of_Championships FROM Championship AS s WHERE s.Institution_ID BETWEEN 1 AND 10 GROUP BY s.Number_of_Championships HAVING COUNT(s.Number_of_Championships) < 33 ORDER BY s.Number_of_Championships DESC', 'SELECT AVG(c.Joined) AS Joined_Avg, COUNT(DISTINCT c.Nickname), c.Nickname, c.Number_of_Championships FROM Championship AS c WHERE c.Institution_ID BETWEEN 1 AND 10 GROUP BY c.Number_of_Championships, c.Nickname HAVING COUNT(c.Number_of_Championships) < 33 ORDER BY c.Number_of_Championships DESC'], ['SELECT COUNT(DISTINCT Team), Province, Affiliation FROM institution WHERE  Capacity >= 67 GROUP BY Affiliation HAVING MAX(Institution_ID) > 74 ORDER BY Province ASC', 'SELECT COUNT(DISTINCT Team), Province, Affiliation FROM institution WHERE Capacity >= 67 GROUP BY Province, Affiliation ORDER BY Province ASC;'], ['SELECT Name, Name, Enrollment FROM institution WHERE City IN (SELECT City FROM institution AS q WHERE  q.Institution_ID <= 41) GROUP BY Enrollment HAVING AVG(Institution_ID) >= 6', 'SELECT Name, Enrollment FROM institution WHERE City IN (SELECT City FROM institution AS q WHERE  q.Institution_ID <= 41) GROUP BY Name, Enrollment HAVING Enrollment >= 6'], ['SELECT Championship.Institution_ID, s.Number_of_Championships FROM Championship JOIN Championship AS s ON Championship.Institution_ID = s.Institution_ID WHERE  Championship.Joined < 31 GROUP BY s.Number_of_Championships LIMIT 1', 'SELECT c1.Institution_ID, c2.Number_of_Championships FROM Championship AS c1 JOIN Championship AS c2 ON c1.Institution_ID = c2.Institution_ID WHERE c1.Joined < 2021 GROUP BY c2.Number_of_Championships LIMIT 1;'], ['SELECT AVG(Championship.Number_of_Championships), Championship.Nickname FROM Championship AS m JOIN Championship ON Championship.Institution_ID = m.Institution_ID WHERE  m.Joined > 61 AND Institution_ID > (SELECT MAX(Institution_ID) FROM institution WHERE  Institution_ID < 53)', 'SELECT AVG(T1.Number_of_Championships), T1.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Joined > 61 AND T2.Institution_ID > (SELECT MAX(Institution_ID) FROM institution WHERE Institution_ID < 53)'], ['SELECT AVG(Enrollment), Endowment FROM institution WHERE Founded BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Championship AS a WHERE a.Joined BETWEEN 1 AND 10 AND institution.Institution_ID = a.Institution_ID LIMIT 2)', 'SELECT AVG(Enrollment) AS avg_enrollment, Endowment FROM institution WHERE Founded BETWEEN 1 AND 10 GROUP BY Endowment'], ['SELECT MIN(h.Capacity), AVG(h.Institution_ID) FROM institution AS h', 'SELECT MIN(h.Capacity), AVG(h.Enrollment) FROM institution AS h;'], ['SELECT COUNT(DISTINCT Institution_ID) FROM Championship WHERE Institution_ID != (SELECT SUM(Institution_ID) FROM institution AS s WHERE  s.Enrollment < 94 LIMIT 10)', 'SELECT COUNT(DISTINCT Institution_ID) FROM Championship WHERE Institution_ID NOT IN (SELECT Institution_ID FROM institution AS s WHERE  s.Enrollment < 94)'], ['SELECT i.Nickname FROM Championship AS i JOIN Championship ON Championship.Institution_ID = i.Institution_ID ORDER BY i.Nickname DESC', 'SELECT c1.Nickname FROM Championship AS c1 JOIN Championship AS c2 ON c2.Institution_ID = c1.Institution_ID ORDER BY c1.Nickname DESC;']], 'cre_Doc_Tracking_DB': [['SELECT MIN(Destroyed_by_Employee_ID), COUNT(DISTINCT Actual_Destruction_Date), Document_Name, All_Documents.Other_Details FROM Documents_to_be_Destroyed JOIN All_Documents ON Documents_to_be_Destroyed.Document_ID = All_Documents.Document_ID GROUP BY All_Documents.Other_Details', 'SELECT MIN(Destroyed_by_Employee_ID), COUNT(DISTINCT Actual_Destruction_Date), Document_Name, All_Documents.Other_Details FROM Documents_to_be_Destroyed JOIN All_Documents ON Documents_to_be_Destroyed.Document_ID = All_Documents.Document_ID GROUP BY Document_Name, All_Documents.Other_Details'], ['SELECT Day_Number, Documents_to_be_Destroyed.Other_Details FROM Document_Locations JOIN Ref_Calendar JOIN Documents_to_be_Destroyed JOIN Employees ON Ref_Calendar.Calendar_Date = Documents_to_be_Destroyed.Actual_Destruction_Date AND Documents_to_be_Destroyed.Destruction_Authorised_by_Employee_ID = Employees.Employee_ID AND Document_Locations.Date_in_Location_From = Ref_Calendar.Calendar_Date AND Employees.Employee_ID = Documents_to_be_Destroyed.Destroyed_by_Employee_ID LIMIT 4', 'SELECT T2.Day_Number, T4.Other_Details FROM Document_Locations AS T1 JOIN Documents_to_be_Destroyed AS T3 ON T1.Document_ID = T3.Document_ID JOIN Ref_Calendar AS T2 ON T2.Calendar_Date = T1.Date_in_Location_From JOIN Employees AS T5 ON T5.Employee_ID = T3.Destruction_Authorised_by_Employee_ID AND T5.Employee_ID = T3.Destroyed_by_Employee_ID JOIN Documents_to_be_Destroyed AS T4 ON T4.Document_ID = T3.Document_ID WHERE T3.Actual_Destruction_Date = T2.Calendar_Date LIMIT 4'], ['SELECT Document_ID, Document_ID, Other_Details FROM All_Documents WHERE Date_Stored IN (SELECT Date_Stored FROM All_Documents WHERE  Document_ID >= 29) GROUP BY Other_Details HAVING COUNT(Document_ID) <= 58', 'SELECT Document_ID, Other_Details FROM All_Documents WHERE Date_Stored IN (SELECT Date_Stored FROM All_Documents WHERE Document_ID >= 29 GROUP BY Date_Stored) GROUP BY Other_Details HAVING COUNT(Document_ID) <= 58'], ['SELECT Document_ID, Document_ID FROM All_Documents WHERE Document_ID BETWEEN 1 AND 10 AND  Document_ID >= 55', 'SELECT Document_ID FROM All_Documents WHERE Document_ID >= 55'], ['SELECT MIN(Day_Number), Day_Number FROM Ref_Calendar WHERE Day_Number BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Documents_to_be_Destroyed WHERE  Document_ID > 66 AND Ref_Calendar.Calendar_Date = Actual_Destruction_Date) GROUP BY Day_Number', 'SELECT MIN(Day_Number) FROM Ref_Calendar WHERE Day_Number BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Documents_to_be_Destroyed WHERE Document_ID > 66 AND Ref_Calendar.Calendar_Date = Actual_Destruction_Date)'], ['SELECT COUNT(DISTINCT All_Documents.Other_Details), All_Documents.Document_Description FROM All_Documents AS a JOIN All_Documents ON All_Documents.Document_ID = a.Document_ID WHERE  a.Document_ID < 78 GROUP BY All_Documents.Document_Description HAVING MAX(a.Document_ID) = 64 ORDER BY All_Documents.Document_Description DESC', 'SELECT COUNT(DISTINCT a.Other_Details), a.Document_Description FROM All_Documents AS a WHERE a.Document_ID < 78 GROUP BY a.Document_Description HAVING MAX(a.Document_ID) = 64 ORDER BY a.Document_Description DESC;'], ['SELECT a.Employee_ID, a.Role_Code FROM Employees AS a WHERE a.Employee_ID BETWEEN 1 AND 10 OR Other_Details != (SELECT SUM(Other_Details) FROM Documents_to_be_Destroyed WHERE  Destroyed_by_Employee_ID >= 4) ORDER BY a.Employee_ID ASC', 'SELECT a.Employee_ID, a.Role_Code FROM Employees AS a WHERE a.Employee_ID BETWEEN 1 AND 10 OR CAST(a.Other_Details AS REAL) != (SELECT SUM(CAST(Other_Details AS REAL)) FROM Documents_to_be_Destroyed WHERE Destroyed_by_Employee_ID >= 4) ORDER BY a.Employee_ID ASC'], ['SELECT AVG(Document_ID), COUNT(DISTINCT Document_Type_Description), Document_Description FROM Ref_Document_Types JOIN All_Documents ON All_Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code GROUP BY Document_Description HAVING MIN(Document_ID) = 27', 'SELECT AVG(Document_ID), COUNT(DISTINCT Document_Type_Description), Document_Description FROM Ref_Document_Types JOIN All_Documents ON All_Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code GROUP BY Document_Description HAVING MIN(Document_ID) = 27'], ['SELECT Other_Details, Destroyed_by_Employee_ID FROM Ref_Calendar JOIN Documents_to_be_Destroyed ON Ref_Calendar.Calendar_Date = Documents_to_be_Destroyed.Actual_Destruction_Date GROUP BY Destroyed_by_Employee_ID LIMIT 8', 'SELECT T1.Other_Details, T1.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed AS T1 JOIN Ref_Calendar AS T2 ON T1.Actual_Destruction_Date = T2.Calendar_Date GROUP BY T1.Other_Details, T1.Destroyed_by_Employee_ID LIMIT 8'], ['SELECT SUM(Destruction_Authorised_by_Employee_ID), Destruction_Authorised_by_Employee_ID FROM Roles JOIN Documents_to_be_Destroyed JOIN Employees ON Documents_to_be_Destroyed.Destruction_Authorised_by_Employee_ID = Employees.Employee_ID AND Employees.Role_Code = Roles.Role_Code AND Employees.Employee_ID = Documents_to_be_Destroyed.Destroyed_by_Employee_ID WHERE Destruction_Authorised_by_Employee_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Employees WHERE  Employee_ID < 10 AND Documents_to_be_Destroyed.Document_ID = Employee_ID) ORDER BY Destruction_Authorised_by_Employee_ID ASC', 'SELECT Destruction_Authorised_by_Employee_ID, COUNT(*) AS count FROM Documents_to_be_Destroyed WHERE Destruction_Authorised_by_Employee_ID BETWEEN 1 AND 10 GROUP BY Destruction_Authorised_by_Employee_ID ORDER BY Destruction_Authorised_by_Employee_ID ASC;'], ['SELECT All_Documents.Document_ID, Document_Type_Code, Document_Description FROM All_Documents JOIN Document_Locations ON All_Documents.Document_ID = Document_Locations.Document_ID WHERE  Document_Locations.Document_ID < 36 GROUP BY Document_Description HAVING MAX(All_Documents.Document_ID) > 7', 'SELECT All_Documents.Document_ID, Document_Type_Code, Document_Description FROM All_Documents JOIN Document_Locations ON All_Documents.Document_ID = Document_Locations.Document_ID WHERE  Document_Locations.Document_ID < 36 GROUP BY Document_Description HAVING MAX(All_Documents.Document_ID) > 7']], 'body_builder': [['SELECT AVG(v.People_ID), COUNT(DISTINCT people.Height), v.Birth_Date FROM people AS v JOIN people ON people.People_ID = v.People_ID WHERE  people.Height > 56 GROUP BY v.Birth_Date HAVING MIN(v.People_ID) > 79 ORDER BY v.Birth_Date ASC', 'SELECT AVG(T1.People_ID), COUNT(DISTINCT T1.Height), T1.Birth_Date FROM people AS T1 GROUP BY T1.Birth_Date HAVING MIN(T1.People_ID) > 79 AND MAX(T1.Height) > 56 ORDER BY T1.Birth_Date ASC'], ['SELECT COUNT(Weight), COUNT(Weight), MIN(Weight), Birth_Place FROM people WHERE  People_ID < 15 OR Weight >= (SELECT AVG(Weight) FROM people AS o WHERE  o.Weight = 10 LIMIT 10) GROUP BY Birth_Place HAVING COUNT(Weight) > 21', 'SELECT COUNT(Weight), MIN(Weight), Birth_Place FROM people WHERE People_ID < 15 OR Weight >= (SELECT AVG(Weight) FROM people AS o WHERE o.Weight = 10) GROUP BY Birth_Place HAVING COUNT(Weight) > 21'], ['SELECT SUM(s.Height), MAX(s.Weight), s.Weight FROM people AS s WHERE  s.Weight < 77 GROUP BY s.Weight ORDER BY s.Weight ASC', 'SELECT SUM(s.Height), MAX(s.Weight) FROM people AS s WHERE s.Weight < 77'], ['SELECT w.People_ID, w.Weight FROM people AS w WHERE w.People_ID BETWEEN 1 AND 10 AND  w.People_ID <= 69 GROUP BY w.Weight LIMIT 9', 'SELECT w.People_ID, w.Weight FROM people AS w WHERE w.People_ID BETWEEN 1 AND 10 AND  w.People_ID <= 69 GROUP BY w.People_ID, w.Weight LIMIT 9'], ['SELECT body_builder.People_ID FROM body_builder AS d JOIN body_builder ON body_builder.Body_Builder_ID = d.Body_Builder_ID WHERE  d.Body_Builder_ID >= 21', 'SELECT d.People_ID FROM body_builder AS d JOIN body_builder AS t ON d.Body_Builder_ID = t.Body_Builder_ID WHERE  d.Body_Builder_ID >= 21'], ['SELECT AVG(Height), Name, Name FROM people WHERE  Weight >= 44', 'SELECT AVG(Height), Name FROM people WHERE Weight >= 44;'], ['SELECT COUNT(DISTINCT body_builder.Body_Builder_ID), o.Snatch, body_builder.Clean_Jerk FROM body_builder AS o JOIN body_builder ON body_builder.Body_Builder_ID = o.Body_Builder_ID GROUP BY body_builder.Clean_Jerk HAVING AVG(o.Clean_Jerk) < 89', 'SELECT COUNT(DISTINCT t1.Body_Builder_ID), t1.Snatch, t1.Clean_Jerk FROM body_builder AS t1 GROUP BY t1.Snatch, t1.Clean_Jerk HAVING AVG(t1.Clean_Jerk) < 89'], ['SELECT SUM(j.Weight), j.Birth_Date, j.Height FROM people AS j WHERE  j.People_ID > 63 GROUP BY j.Height HAVING SUM(j.Weight) <= 85', 'SELECT SUM(j.Weight), j.Birth_Date, j.Height FROM people AS j WHERE  j.People_ID > 63 GROUP BY j.Height, j.Birth_Date HAVING SUM(j.Weight) <= 85'], ['SELECT SUM(z.People_ID), z.Height FROM people AS z WHERE  z.Weight <= 35 GROUP BY z.Height HAVING MIN(z.Height) <= 80 ORDER BY z.Height DESC LIMIT 8', 'SELECT COUNT(z.People_ID), z.Height FROM people AS z WHERE z.Weight <= 35 GROUP BY z.Height HAVING MIN(z.Height) <= 80 ORDER BY z.Height DESC LIMIT 8'], ['SELECT COUNT(DISTINCT Total), Clean_Jerk, Birth_Date FROM people JOIN body_builder ON body_builder.People_ID = people.People_ID WHERE  Total >= 99', 'SELECT COUNT(DISTINCT body_builder.Total), body_builder.Clean_Jerk, people.Birth_Date FROM people JOIN body_builder ON body_builder.People_ID = people.People_ID WHERE body_builder.Total >= 99 GROUP BY body_builder.Clean_Jerk, people.Birth_Date;'], ['SELECT AVG(Height), Weight, Birth_Place FROM people', 'SELECT AVG(Height), AVG(Weight), Birth_Place FROM people GROUP BY Birth_Place;'], ['SELECT COUNT(body_builder.People_ID), body_builder.Snatch FROM body_builder AS r JOIN body_builder ON body_builder.Body_Builder_ID = r.Body_Builder_ID WHERE  body_builder.Total > 81 GROUP BY body_builder.Snatch HAVING MIN(r.Snatch) <= 86 ORDER BY body_builder.Snatch ASC', 'SELECT COUNT(body_builder.People_ID), body_builder.Snatch FROM body_builder WHERE body_builder.Total > 81 GROUP BY body_builder.Snatch HAVING MIN(body_builder.Snatch) <= 86 ORDER BY body_builder.Snatch ASC']], 'document_management': [['SELECT MIN(image_id), section_title FROM Documents JOIN Document_Sections JOIN Document_Sections_Images ON Document_Sections.document_code = Documents.document_code AND Document_Sections.section_id = Document_Sections_Images.section_id WHERE  Document_Sections.section_id = 97', 'SELECT MIN(T1.image_id), T2.section_title FROM Images AS T1 JOIN Document_Sections_Images AS T3 ON T3.image_id = T1.image_id JOIN Document_Sections AS T2 ON T2.section_id = T3.section_id JOIN Documents AS T4 ON T4.document_code = T2.document_code WHERE T2.section_id = 97'], ['SELECT section_title, section_title FROM Document_Sections JOIN Images JOIN Document_Sections_Images ON Document_Sections.section_id = Document_Sections_Images.section_id AND Document_Sections_Images.image_id = Images.image_id WHERE  section_sequence > 77 AND document_code IN (SELECT document_code FROM Documents WHERE access_count BETWEEN 1 AND 10)', 'SELECT DISTINCT T1.section_title FROM Document_Sections AS T1 INNER JOIN Document_Sections_Images AS T2 ON T1.section_id = T2.section_id INNER JOIN Images AS T3 ON T2.image_id = T3.image_id WHERE T1.section_sequence > 77 AND T1.document_code IN (SELECT document_code FROM Documents WHERE access_count BETWEEN 1 AND 10)'], ['SELECT Documents.document_structure_code FROM Documents JOIN Document_Structures ON Documents.document_structure_code = Document_Structures.document_structure_code WHERE access_count BETWEEN 1 AND 10 AND  access_count >= 82', 'SELECT Documents.document_structure_code FROM Documents JOIN Document_Structures ON Documents.document_structure_code = Document_Structures.document_structure_code WHERE access_count BETWEEN 1 AND 10'], ['SELECT COUNT(m.section_id), m.section_id FROM Document_Sections AS m WHERE m.section_sequence BETWEEN 1 AND 10 AND  m.section_id >= 33 LIMIT 9', 'SELECT COUNT(m.section_id), m.section_id FROM Document_Sections AS m WHERE m.section_sequence BETWEEN 1 AND 10 AND  m.section_id >= 33 ORDER BY m.section_id LIMIT 9;'], ['SELECT MAX(access_count), access_count FROM Documents JOIN Document_Structures ON Documents.document_structure_code = Document_Structures.document_structure_code WHERE  access_count > 97 ORDER BY access_count ASC', 'SELECT MAX(access_count), access_count FROM Documents JOIN Document_Structures ON Documents.document_structure_code = Document_Structures.document_structure_code WHERE access_count > 97 ORDER BY access_count ASC'], ['SELECT t.functional_area_code, t.functional_area_code FROM Document_Functional_Areas AS t ORDER BY t.functional_area_code ASC', 'SELECT t.functional_area_code FROM Document_Functional_Areas AS t ORDER BY t.functional_area_code ASC'], ['SELECT Users.user_id FROM Users AS u JOIN Users ON Users.user_id = u.user_id WHERE  u.user_id != 97', 'SELECT user_id FROM Users WHERE user_id != 97;'], ['SELECT AVG(image_id), image_name FROM Images WHERE image_id BETWEEN 1 AND 10 GROUP BY image_name', 'SELECT image_name, AVG(image_id) FROM Images WHERE image_id BETWEEN 1 AND 10 GROUP BY image_name;'], ['SELECT COUNT(DISTINCT image_name), image_id FROM Images WHERE  image_id != 1', 'SELECT COUNT(DISTINCT image_name) FROM Images WHERE image_id != 1;'], ['SELECT access_count, section_code FROM Documents JOIN Document_Sections JOIN Document_Functional_Areas ON Documents.document_code = Document_Functional_Areas.document_code AND Document_Sections.document_code = Documents.document_code WHERE  access_count > 35 ORDER BY access_count ASC', 'SELECT T3.access_count, T2.section_code FROM Document_Sections AS T1 JOIN Document_Sections AS T2 ON T1.section_id = T2.section_id JOIN Documents AS T3 ON T2.document_code = T3.document_code JOIN Document_Functional_Areas AS T4 ON T1.section_id = T4.section_id WHERE T3.access_count > 35 ORDER BY T3.access_count ASC'], ['SELECT image_alt_text, image_alt_text, image_alt_text FROM Document_Sections_Images JOIN Images ON Document_Sections_Images.image_id = Images.image_id WHERE Document_Sections_Images.image_id BETWEEN 1 AND 10 AND  section_id != 51', 'SELECT T1.image_alt_text FROM Document_Sections_Images AS T2 JOIN Images AS T1 ON T2.image_id = T1.image_id WHERE T2.image_id BETWEEN 1 AND 10 AND T2.section_id != 51'], ['SELECT COUNT(DISTINCT i.section_sequence) FROM Document_Sections AS i WHERE  i.section_id != 2', 'SELECT COUNT(DISTINCT section_sequence) FROM Document_Sections WHERE section_id != 2']], 'chinook_1': [['SELECT COUNT(DISTINCT PlaylistTrack.PlaylistId), TrackId FROM PlaylistTrack JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE  TrackId >= 64 GROUP BY TrackId', 'SELECT COUNT(DISTINCT PlaylistTrack.PlaylistId) FROM PlaylistTrack JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId WHERE PlaylistTrack.TrackId >= 64 GROUP BY PlaylistTrack.PlaylistId'], ['SELECT UnitPrice, TrackId FROM Track JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId WHERE GenreId < (SELECT MAX(GenreId) FROM Genre WHERE GenreId BETWEEN 1 AND 10 LIMIT 4) ORDER BY UnitPrice DESC LIMIT 9', 'SELECT T1.UnitPrice, T1.TrackId FROM InvoiceLine AS T1 JOIN Track AS T2 ON T1.TrackId = T2.TrackId JOIN MediaType AS T3 ON T2.MediaTypeId = T3.MediaTypeId WHERE T2.GenreId < (SELECT MAX(GenreId) FROM Genre WHERE GenreId BETWEEN 1 AND 10) ORDER BY T1.UnitPrice DESC LIMIT 9'], ['SELECT COUNT(DISTINCT Title), AlbumId, Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE EXISTS (SELECT * FROM Track WHERE Milliseconds BETWEEN 1 AND 10 AND Album.AlbumId = AlbumId) GROUP BY Title HAVING SUM(AlbumId) = 33', 'SELECT COUNT(DISTINCT Title), AlbumId, Title FROM Album JOIN Artist ON Album.ArtistId = Artist.ArtistId WHERE EXISTS (SELECT * FROM Track WHERE Milliseconds BETWEEN 1 AND 10 AND Album.AlbumId = Track.AlbumId) GROUP BY AlbumId, Title HAVING COUNT(AlbumId) = 33'], ['SELECT ArtistId, Genre.GenreId, UnitPrice FROM Genre JOIN Track JOIN MediaType JOIN Album ON Track.MediaTypeId = MediaType.MediaTypeId AND Track.AlbumId = Album.AlbumId AND Genre.GenreId = Track.GenreId WHERE  Milliseconds >= 9 GROUP BY UnitPrice ORDER BY ArtistId ASC LIMIT 5', 'SELECT T.GenreId, A.ArtistId, IL.UnitPrice FROM Genre AS G JOIN Track AS T ON G.GenreId = T.GenreId JOIN Album AS AL ON T.AlbumId = AL.AlbumId JOIN Artist AS A ON AL.ArtistId = A.ArtistId JOIN InvoiceLine AS IL ON T.TrackId = IL.TrackId WHERE T.Milliseconds >= 9 GROUP BY IL.UnitPrice ORDER BY A.ArtistId ASC LIMIT 5'], ['SELECT COUNT(Artist.ArtistId), Track.Name FROM Genre JOIN Track JOIN Artist JOIN Album ON Track.AlbumId = Album.AlbumId AND Album.ArtistId = Artist.ArtistId AND Genre.GenreId = Track.GenreId ORDER BY Track.Name ASC', 'SELECT COUNT(Track.TrackId), Track.Name FROM Genre JOIN Track ON Genre.GenreId = Track.GenreId JOIN Album ON Track.AlbumId = Album.AlbumId JOIN Artist ON Album.ArtistId = Artist.ArtistId ORDER BY Track.Name ASC;'], ['SELECT COUNT(DISTINCT InvoiceId), InvoiceId, Total FROM Invoice WHERE  Total != 27 GROUP BY Total', 'SELECT COUNT(DISTINCT InvoiceId), Total FROM Invoice WHERE  Total != 27 GROUP BY Total;'], ['SELECT MAX(f.GenreId), COUNT(DISTINCT f.GenreId), f.Name FROM Genre AS f WHERE f.GenreId BETWEEN 1 AND 10 AND Name NOT IN (SELECT Name FROM Playlist WHERE PlaylistId BETWEEN 1 AND 10 AND  PlaylistId > 5 LIMIT 4) GROUP BY f.Name HAVING MIN(f.GenreId) < 56', 'SELECT MAX(f.GenreId), COUNT(DISTINCT f.GenreId), f.Name FROM Genre AS f WHERE f.GenreId BETWEEN 1 AND 10 AND Name NOT IN (SELECT Name FROM Playlist WHERE PlaylistId BETWEEN 1 AND 10 LIMIT 4) GROUP BY f.Name HAVING MIN(f.GenreId) < 56'], ['SELECT MAX(Total), COUNT(DISTINCT BillingPostalCode), BillingPostalCode FROM Invoice WHERE  InvoiceId < 7 OR EXISTS (SELECT * FROM InvoiceLine WHERE TrackId BETWEEN 1 AND 10 AND  InvoiceLineId != 2 AND Invoice.InvoiceId = InvoiceId) GROUP BY BillingPostalCode HAVING AVG(Total) = 47', 'SELECT MAX(Total), COUNT(DISTINCT BillingPostalCode), BillingPostalCode FROM Invoice WHERE  InvoiceId < 7 OR EXISTS (SELECT * FROM InvoiceLine WHERE TrackId BETWEEN 1 AND 10 AND  InvoiceLineId != 2 AND Invoice.InvoiceId = InvoiceLine.InvoiceId) GROUP BY BillingPostalCode HAVING AVG(Total) = 47'], ['SELECT a.Phone FROM Employee AS a WHERE  a.ReportsTo = 1 GROUP BY a.Phone HAVING SUM(a.ReportsTo) <= 9 ORDER BY a.Phone ASC', 'SELECT Phone FROM Employee WHERE ReportsTo = 1 ORDER BY Phone ASC'], ['SELECT Playlist.PlaylistId FROM Playlist JOIN Playlist AS h ON Playlist.PlaylistId = h.PlaylistId WHERE Name <= (SELECT AVG(Name) FROM Genre) ORDER BY Playlist.PlaylistId DESC', 'SELECT Playlist.PlaylistId FROM Playlist JOIN Playlist AS h ON Playlist.PlaylistId = h.PlaylistId WHERE LENGTH(Playlist.Name) <= (SELECT AVG(LENGTH(Name)) FROM Genre) ORDER BY Playlist.PlaylistId DESC'], ['SELECT CustomerId, InvoiceId, BillingPostalCode FROM Invoice WHERE  Total = 83 GROUP BY BillingPostalCode ORDER BY BillingPostalCode ASC LIMIT 10', 'SELECT CustomerId, InvoiceId, BillingPostalCode FROM Invoice WHERE Total = 83 GROUP BY CustomerId, InvoiceId, BillingPostalCode ORDER BY BillingPostalCode ASC LIMIT 10'], ['SELECT MIN(SupportRepId), SupportRepId FROM Customer WHERE  SupportRepId <= 15', 'SELECT MIN(SupportRepId) AS min_support_rep_id FROM Customer WHERE SupportRepId <= 15'], ['SELECT CustomerId, Company FROM Customer WHERE  CustomerId != 32 GROUP BY Company ORDER BY CustomerId DESC', 'SELECT CustomerId, Company FROM Customer WHERE CustomerId != 32 GROUP BY CustomerId, Company ORDER BY CustomerId DESC'], ['SELECT MAX(w.TrackId), w.InvoiceId, w.InvoiceId FROM InvoiceLine AS w WHERE w.UnitPrice BETWEEN 1 AND 10 AND  w.UnitPrice < 99 GROUP BY w.InvoiceId ORDER BY w.InvoiceId ASC', 'SELECT MAX(w.TrackId), w.InvoiceId FROM InvoiceLine AS w WHERE w.UnitPrice BETWEEN 1 AND 10 AND  w.UnitPrice < 99 GROUP BY w.InvoiceId ORDER BY w.InvoiceId ASC'], ['SELECT Track.Name, MediaTypeId FROM Track JOIN Artist JOIN Album ON Track.AlbumId = Album.AlbumId AND Album.ArtistId = Artist.ArtistId WHERE  Track.AlbumId = 73 OR UnitPrice NOT IN (SELECT UnitPrice FROM Track AS b) GROUP BY MediaTypeId ORDER BY Track.Name DESC', 'SELECT T1.Name, T3.MediaTypeId FROM Track AS T1 JOIN Album AS T2 ON T1.AlbumId = T2.AlbumId JOIN MediaType AS T3 ON T3.MediaTypeId = T1.MediaTypeId WHERE T1.AlbumId = 73 ORDER BY T1.Name DESC'], ['SELECT COUNT(DISTINCT u.PlaylistId), COUNT(DISTINCT Playlist.Name), Playlist.Name, u.Name FROM Playlist AS u JOIN Playlist ON Playlist.PlaylistId = u.PlaylistId WHERE  Playlist.PlaylistId < 34 OR PlaylistId IN (SELECT PlaylistId FROM PlaylistTrack AS l WHERE  l.TrackId >= 93) GROUP BY u.Name HAVING SUM(Playlist.PlaylistId) <= 53 ORDER BY Playlist.Name ASC', 'SELECT COUNT(DISTINCT p.PlaylistId), COUNT(DISTINCT p.Name), p.Name, p.Name FROM Playlist AS p WHERE p.PlaylistId < 34 OR p.PlaylistId IN (SELECT PlaylistId FROM PlaylistTrack AS l WHERE l.TrackId >= 93) GROUP BY p.Name ORDER BY p.Name ASC'], ['SELECT Name FROM Artist WHERE  ArtistId < 31 AND EXISTS (SELECT * FROM Album WHERE  AlbumId != 15 AND Artist.ArtistId = ArtistId LIMIT 6) ORDER BY Name ASC', 'SELECT Name FROM Artist WHERE ArtistId < 31 AND EXISTS (SELECT * FROM Album WHERE AlbumId != 15 AND Album.ArtistId = Artist.ArtistId) ORDER BY Name ASC'], ['SELECT SUM(MediaType.MediaTypeId), Track.Name, GenreId FROM Track JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId WHERE  Bytes > 70 AND TrackId IN (SELECT TrackId FROM InvoiceLine AS g) GROUP BY GenreId HAVING SUM(MediaType.MediaTypeId) > 53 ORDER BY Track.Name DESC', 'SELECT COUNT(Track.TrackId), Track.Name, Track.GenreId FROM Track JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId WHERE Track.Bytes > 70 AND Track.TrackId IN (SELECT TrackId FROM InvoiceLine WHERE Quantity > 1) GROUP BY Track.GenreId HAVING COUNT(Track.TrackId) > 53 ORDER BY Track.Name DESC'], ['SELECT r.Title, r.Title FROM Album AS r WHERE  r.AlbumId != 76 LIMIT 3', 'SELECT r.Title FROM Album AS r WHERE r.AlbumId != 76 LIMIT 3']], 'gas_company': [['SELECT MIN(Rank), station_company.Company_ID FROM company JOIN station_company ON station_company.Company_ID = company.Company_ID LIMIT 7', 'SELECT MIN(T1.Rank), T1.Company_ID FROM company AS T1 INNER JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID LIMIT 7'], ['SELECT COUNT(DISTINCT company.Market_Value), company.Market_Value FROM company AS k JOIN company ON company.Company_ID = k.Company_ID WHERE  company.Market_Value < 13 ORDER BY company.Market_Value ASC', 'SELECT COUNT(DISTINCT Market_Value), Market_Value FROM company WHERE Market_Value < 13 ORDER BY Market_Value ASC;'], ['SELECT MIN(Rank_of_the_Year), Open_Year FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID WHERE gas_station.Station_ID BETWEEN 1 AND 10 OR  Open_Year > 30 ORDER BY Open_Year DESC', 'SELECT MIN(T1.Rank_of_the_Year), T2.Open_Year FROM station_company AS T1 INNER JOIN gas_station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T2.Station_ID BETWEEN 1 AND 10 OR T2.Open_Year > 30 ORDER BY T2.Open_Year DESC'], ['SELECT Station_ID FROM station_company WHERE  Rank_of_the_Year != 83 OR Station_ID NOT IN (SELECT Station_ID FROM gas_station AS c WHERE c.Open_Year BETWEEN 1 AND 10)', 'SELECT Station_ID FROM station_company WHERE Rank_of_the_Year != 83 OR Station_ID NOT IN (SELECT sc.Station_ID FROM gas_station AS g JOIN station_company AS sc ON g.Station_ID = sc.Station_ID WHERE g.Open_Year BETWEEN 1 AND 10)'], ['SELECT gas_station.Station_ID FROM gas_station JOIN company JOIN station_company ON station_company.Company_ID = company.Company_ID AND gas_station.Station_ID = station_company.Station_ID WHERE Sales_billion BETWEEN 1 AND 10 ORDER BY gas_station.Station_ID ASC', 'SELECT T1.Station_ID FROM gas_station AS T1 INNER JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID INNER JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Sales_billion BETWEEN 1 AND 10 ORDER BY T1.Station_ID ASC'], ['SELECT COUNT(DISTINCT Profits_billion), Sales_billion FROM company JOIN station_company ON station_company.Company_ID = company.Company_ID WHERE Profits_billion BETWEEN 1 AND 10 OR  Station_ID < 41 GROUP BY Sales_billion LIMIT 7', 'SELECT COUNT(DISTINCT Profits_billion), Sales_billion FROM company JOIN station_company ON station_company.Company_ID = company.Company_ID WHERE Profits_billion BETWEEN 1 AND 10 OR Profits_billion > 10 GROUP BY Sales_billion LIMIT 7'], ['SELECT COUNT(DISTINCT Representative_Name), Open_Year, Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID GROUP BY Manager_Name HAVING SUM(Rank_of_the_Year) > 38', 'SELECT COUNT(DISTINCT Representative_Name), Open_Year, Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID GROUP BY Open_Year, Manager_Name HAVING SUM(Rank_of_the_Year) > 38'], ['SELECT Main_Industry, Assets_billion FROM company JOIN station_company ON station_company.Company_ID = company.Company_ID GROUP BY Assets_billion LIMIT 3', 'SELECT Main_Industry, AVG(Assets_billion) FROM company JOIN station_company ON station_company.Company_ID = company.Company_ID GROUP BY Main_Industry LIMIT 3;'], ['SELECT AVG(i.Rank), MAX(i.Market_Value), COUNT(DISTINCT i.Profits_billion), i.Rank FROM company AS i WHERE i.Market_Value BETWEEN 1 AND 10 GROUP BY i.Rank HAVING COUNT(i.Company_ID) > 60 LIMIT 4', 'SELECT AVG(i.Rank), MAX(i.Market_Value), COUNT(DISTINCT i.Profits_billion) FROM company AS i WHERE i.Market_Value BETWEEN 1 AND 10 GROUP BY i.Rank HAVING COUNT(i.Company_ID) > 60 LIMIT 4']], 'cre_Doc_Control_Systems': [['SELECT other_details, address_details FROM Ref_Document_Types JOIN Documents JOIN Addresses JOIN Documents_Mailed ON Documents.document_type_code = Ref_Document_Types.document_type_code AND Documents.document_id = Documents_Mailed.document_id AND Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE  mailed_to_address_id != 11', 'SELECT T1.other_details, T3.address_details FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Documents_Mailed AS T4 ON T2.document_id = T4.document_id JOIN Addresses AS T3 ON T4.mailed_to_address_id = T3.address_id WHERE T4.mailed_to_address_id != 11'], ['SELECT COUNT(DISTINCT f.mailing_date), Documents_Mailed.mailed_to_address_id FROM Documents_Mailed AS f JOIN Documents_Mailed ON Documents_Mailed.document_id = f.document_id WHERE  f.document_id = 78 GROUP BY Documents_Mailed.mailed_to_address_id HAVING SUM(Documents_Mailed.mailed_to_address_id) = 83 ORDER BY Documents_Mailed.mailed_to_address_id DESC', 'SELECT COUNT(DISTINCT mailing_date), mailed_to_address_id FROM Documents_Mailed WHERE document_id = 78 GROUP BY mailed_to_address_id ORDER BY mailed_to_address_id DESC'], ['SELECT document_id FROM Draft_Copies WHERE copy_number BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Circulation_History WHERE  document_id <= 45 AND Draft_Copies.document_id = document_id) ORDER BY document_id DESC', 'SELECT document_id FROM Draft_Copies WHERE copy_number BETWEEN 1 AND 10 AND EXISTS (SELECT 1 FROM Circulation_History ch WHERE ch.document_id = Draft_Copies.document_id AND ch.document_id <= 45) ORDER BY document_id DESC'], ['SELECT AVG(document_id), other_details FROM Documents WHERE  document_id != 64 ORDER BY other_details ASC LIMIT 5', 'SELECT AVG(document_id), other_details FROM Documents WHERE document_id != 64 GROUP BY other_details ORDER BY other_details ASC LIMIT 5'], ['SELECT COUNT(Draft_Copies.document_id), Draft_Copies.document_id, Document_Drafts.draft_number FROM Draft_Copies JOIN Document_Drafts ON Document_Drafts.draft_number = Draft_Copies.draft_number WHERE EXISTS (SELECT * FROM Circulation_History AS x WHERE  x.draft_number = 5 AND Draft_Copies.document_id = x.document_id LIMIT 6) GROUP BY Document_Drafts.draft_number LIMIT 5', 'SELECT COUNT(Draft_Copies.document_id), Draft_Copies.document_id, Document_Drafts.draft_number FROM Draft_Copies JOIN Document_Drafts ON Document_Drafts.document_id = Draft_Copies.document_id WHERE EXISTS (SELECT * FROM Circulation_History AS x WHERE  x.draft_number = 5 AND Draft_Copies.document_id = x.document_id AND Draft_Copies.draft_number = x.draft_number) GROUP BY Draft_Copies.document_id, Document_Drafts.draft_number LIMIT 5'], ['SELECT draft_number FROM Roles JOIN Circulation_History JOIN Employees ON Circulation_History.employee_id = Employees.employee_id AND Employees.role_code = Roles.role_code WHERE role_code NOT IN (SELECT role_code FROM Employees WHERE  employee_id = 90 LIMIT 3)', 'SELECT T1.draft_number FROM Document_Drafts AS T1 JOIN Circulation_History AS T2 ON T1.document_id = T2.document_id AND T1.draft_number = T2.draft_number JOIN Employees AS T3 ON T2.employee_id = T3.employee_id JOIN Roles AS T4 ON T3.role_code = T4.role_code WHERE T4.role_code NOT IN (SELECT role_code FROM Employees WHERE employee_id = 90 LIMIT 3)'], ['SELECT COUNT(DISTINCT z.document_id), z.draft_number FROM Circulation_History AS z WHERE draft_number NOT IN (SELECT draft_number FROM Circulation_History AS d WHERE  d.document_id = 22 LIMIT 7) GROUP BY z.draft_number HAVING SUM(z.employee_id) = 37', 'SELECT COUNT(DISTINCT z.document_id), z.draft_number FROM Circulation_History AS z WHERE draft_number NOT IN (SELECT draft_number FROM Circulation_History AS d WHERE  d.document_id = 22 LIMIT 7) GROUP BY z.draft_number HAVING COUNT(z.employee_id) = 37']], 'railway': [['SELECT MAX(manager.Manager_ID), Name FROM railway_manage JOIN manager ON manager.Manager_ID = railway_manage.Manager_ID WHERE  railway_manage.Manager_ID < 79 GROUP BY Name', 'SELECT MAX(T1.Manager_ID), T2.Name FROM railway_manage AS T1 JOIN manager AS T2 ON T1.Manager_ID = T2.Manager_ID WHERE T1.Manager_ID < 79 GROUP BY T2.Name'], ['SELECT Railway, manager.Name, manager.Name FROM railway_manage JOIN railway JOIN manager JOIN train ON railway.Railway_ID = train.Railway_ID AND railway_manage.Railway_ID = railway.Railway_ID AND manager.Manager_ID = railway_manage.Manager_ID WHERE  railway_manage.Railway_ID < 52', 'SELECT railway.Railway, manager.Name FROM railway JOIN railway_manage ON railway.Railway_ID = railway_manage.Railway_ID JOIN manager ON railway_manage.Manager_ID = manager.Manager_ID WHERE railway_manage.Railway_ID < 52'], ['SELECT AVG(i.Train_ID), i.Name FROM train AS i WHERE  i.Railway_ID != 39 GROUP BY i.Name HAVING AVG(i.Railway_ID) <= 42 ORDER BY i.Name DESC', 'SELECT COUNT(i.Train_ID), i.Name FROM train AS i WHERE i.Railway_ID != 39 GROUP BY i.Name HAVING AVG(i.Railway_ID) <= 42 ORDER BY i.Name DESC'], ['SELECT MIN(Railway_ID), Railway_ID, Train_ID, Name FROM train WHERE Railway_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM railway AS h WHERE  h.Railway_ID < 36 AND train.Train_ID = h.Railway_ID) GROUP BY Name HAVING AVG(Train_ID) < 58 LIMIT 8', 'SELECT MIN(Train_ID), Name FROM train WHERE Railway_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM railway AS h WHERE  h.Railway_ID < 36 AND train.Railway_ID = h.Railway_ID) GROUP BY Name HAVING AVG(Train_ID) < 58 LIMIT 8'], ['SELECT Level, Name FROM manager WHERE  Age > 20 GROUP BY Name HAVING MIN(Manager_ID) <= 46 LIMIT 1', 'SELECT Level, Name, MIN(Manager_ID) FROM manager WHERE Age > 20 GROUP BY Level, Name HAVING MIN(Manager_ID) <= 46 LIMIT 1'], ['SELECT MAX(Manager_ID), Manager_ID FROM railway_manage JOIN railway JOIN train ON railway.Railway_ID = train.Railway_ID AND railway_manage.Railway_ID = railway.Railway_ID WHERE  Manager_ID != 35', 'SELECT MAX(T1.Manager_ID), T1.Manager_ID FROM railway_manage AS T1 JOIN railway AS T2 ON T1.Railway_ID = T2.Railway_ID JOIN manager AS T3 ON T1.Manager_ID = T3.Manager_ID WHERE T3.Manager_ID != 35'], ['SELECT Railway_ID, Manager_ID FROM railway_manage WHERE Railway_ID BETWEEN 1 AND 10 AND  Railway_ID = 67 GROUP BY Manager_ID HAVING COUNT(Manager_ID) <= 57 LIMIT 4', 'SELECT Railway_ID, Manager_ID FROM railway_manage WHERE Railway_ID BETWEEN 1 AND 10 GROUP BY Manager_ID HAVING COUNT(Manager_ID) <= 57 LIMIT 4'], ['SELECT AVG(train.Railway_ID), train.Railway_ID FROM railway JOIN train ON railway.Railway_ID = train.Railway_ID WHERE  railway.Railway_ID != 99', 'SELECT AVG(train.Railway_ID) FROM railway JOIN train ON railway.Railway_ID = train.Railway_ID WHERE railway.Railway_ID != 99'], ['SELECT o.Manager_ID FROM manager AS o WHERE Country = (SELECT MAX(Country) FROM manager WHERE  Age != 88 LIMIT 6)', 'SELECT o.Manager_ID FROM manager AS o WHERE Country = (SELECT Country FROM manager GROUP BY Country ORDER BY COUNT(Manager_ID) DESC LIMIT 1)'], ['SELECT m.Country, m.Country FROM manager AS m WHERE  m.Age = 35 LIMIT 10', 'SELECT m.Country FROM manager AS m WHERE m.Age = 35 LIMIT 10'], ['SELECT Railway_ID, From_Year FROM railway_manage JOIN manager ON manager.Manager_ID = railway_manage.Manager_ID WHERE Age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM railway_manage AS u WHERE  u.Manager_ID < 35 AND manager.Manager_ID = u.Manager_ID) ORDER BY From_Year ASC LIMIT 5', 'SELECT railway_manage.Railway_ID, CAST(railway_manage.From_Year AS NUMBER) AS From_Year FROM railway_manage JOIN manager ON manager.Manager_ID = railway_manage.Manager_ID WHERE manager.Age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM railway_manage AS u WHERE  u.Manager_ID < 35 AND manager.Manager_ID = u.Manager_ID) ORDER BY CAST(railway_manage.From_Year AS NUMBER) ASC LIMIT 5'], ['SELECT COUNT(DISTINCT railway_manage.Railway_ID), Working_year_starts FROM railway_manage JOIN railway JOIN manager ON railway_manage.Railway_ID = railway.Railway_ID AND manager.Manager_ID = railway_manage.Manager_ID WHERE Level IN (SELECT Level FROM manager AS e WHERE  e.Manager_ID > 11 LIMIT 3)', 'SELECT COUNT(DISTINCT railway_manage.Railway_ID), manager.Working_year_starts FROM railway_manage JOIN railway JOIN manager ON railway_manage.Railway_ID = railway.Railway_ID AND manager.Manager_ID = railway_manage.Manager_ID WHERE manager.Level IN (SELECT Level FROM manager AS e WHERE  e.Manager_ID > 11 LIMIT 3)'], ['SELECT Railway_ID, Arrival FROM train WHERE  Railway_ID < 0 GROUP BY Arrival HAVING COUNT(Train_ID) > 68 ORDER BY Railway_ID DESC LIMIT 10', 'SELECT Railway_ID, Arrival, COUNT(Train_ID) FROM train WHERE Railway_ID < 0 GROUP BY Railway_ID, Arrival HAVING COUNT(Train_ID) > 68 ORDER BY Railway_ID DESC LIMIT 10'], ['SELECT manager.Age, o.Name FROM manager JOIN manager AS o ON manager.Manager_ID = o.Manager_ID WHERE  o.Age < 5', 'SELECT Age, Name FROM manager WHERE Age < 5;'], ['SELECT SUM(Train_ID), ObjectNumber, Age FROM railway_manage JOIN railway JOIN manager JOIN train ON railway.Railway_ID = train.Railway_ID AND railway_manage.Railway_ID = railway.Railway_ID AND manager.Manager_ID = railway_manage.Manager_ID WHERE  railway_manage.Manager_ID < 46 GROUP BY Age ORDER BY ObjectNumber DESC', 'SELECT COUNT(train.Train_ID), railway.ObjectNumber, manager.Age FROM railway_manage JOIN railway ON railway_manage.Railway_ID = railway.Railway_ID JOIN manager ON manager.Manager_ID = railway_manage.Manager_ID JOIN train ON railway.Railway_ID = train.Railway_ID WHERE railway_manage.Manager_ID < 46 GROUP BY railway.ObjectNumber, manager.Age ORDER BY railway.ObjectNumber DESC']], 'mountain_photos': [['SELECT c.mountain_id, c.id, c.color FROM photos AS c WHERE c.id BETWEEN 1 AND 10 AND  c.id <= 92 GROUP BY c.color ORDER BY c.mountain_id ASC', 'SELECT c.color FROM photos AS c WHERE c.id BETWEEN 1 AND 10 AND  c.id <= 92 GROUP BY c.color ORDER BY c.color ASC'], ['SELECT COUNT(DISTINCT brand), brand, name, max_aperture FROM camera_lens GROUP BY max_aperture HAVING MAX(max_aperture) > 1', 'SELECT COUNT(DISTINCT brand), brand, name, max_aperture FROM camera_lens GROUP BY brand, name, max_aperture HAVING max_aperture > 1'], ['SELECT mountain_id, photos.name, max_aperture FROM camera_lens JOIN photos ON camera_lens.id = photos.camera_lens_id WHERE  camera_lens.id > 70 GROUP BY max_aperture', 'SELECT T2.mountain_id, T2.name, T1.max_aperture FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.id > 70 GROUP BY T1.max_aperture, T2.mountain_id, T2.name;'], ['SELECT m.Country FROM mountain AS m WHERE Prominence NOT IN (SELECT Prominence FROM mountain WHERE  Height > 4)', 'SELECT Country FROM mountain WHERE Prominence NOT IN (SELECT Prominence FROM mountain WHERE Height > 4)'], ['SELECT Range, name FROM mountain WHERE Height BETWEEN 1 AND 10 AND Country != (SELECT MIN(Country) FROM mountain AS k) GROUP BY name HAVING MAX(Prominence) <= 48 ORDER BY Range ASC', 'SELECT Range, name FROM mountain WHERE Height BETWEEN 1 AND 10 AND Country NOT IN (SELECT Country FROM mountain ORDER BY Country LIMIT 1) GROUP BY name, Range HAVING MAX(Prominence) <= 48 ORDER BY Range ASC'], ['SELECT photos.mountain_id, r.mountain_id FROM photos AS r JOIN photos ON photos.id = r.id GROUP BY r.mountain_id ORDER BY r.mountain_id ASC', 'SELECT T1.mountain_id, T2.mountain_id FROM photos AS T1 JOIN photos AS T2 ON T1.mountain_id = T2.mountain_id GROUP BY T2.mountain_id ORDER BY T2.mountain_id ASC'], ['SELECT id, name FROM mountain WHERE id BETWEEN 1 AND 10 GROUP BY name', 'SELECT id, name FROM mountain WHERE id BETWEEN 1 AND 10;'], ['SELECT COUNT(DISTINCT color) FROM mountain JOIN camera_lens JOIN photos ON photos.mountain_id = mountain.id AND camera_lens.id = photos.camera_lens_id WHERE photos.id BETWEEN 1 AND 10 OR  camera_lens_id >= 32', 'SELECT COUNT(DISTINCT color) FROM mountain JOIN photos ON mountain.id = photos.mountain_id JOIN camera_lens ON camera_lens.id = photos.camera_lens_id WHERE photos.id BETWEEN 1 AND 10 OR photos.camera_lens_id >= 32'], ['SELECT COUNT(DISTINCT mountain.Prominence), d.Prominence FROM mountain AS d JOIN mountain ON mountain.id = d.id WHERE  mountain.id > 74 OR Range NOT IN (SELECT Range FROM mountain WHERE  Prominence <= 24) LIMIT 2', 'SELECT COUNT(DISTINCT m1.Prominence), m2.Prominence FROM mountain AS m1 JOIN mountain AS m2 ON m1.id = m2.id WHERE m1.id > 74 OR m2.Range NOT IN (SELECT Range FROM mountain WHERE Prominence <= 24) LIMIT 2'], ['SELECT SUM(id) FROM camera_lens WHERE  id = 11', 'SELECT id FROM camera_lens WHERE id = 11;'], ['SELECT COUNT(a.Prominence), a.Range FROM mountain AS a WHERE  a.id != 31 ORDER BY a.Range ASC', 'SELECT COUNT(a.Prominence), a.Range FROM mountain AS a WHERE a.id != 31 GROUP BY a.Range ORDER BY a.Range ASC;'], ['SELECT Country FROM mountain JOIN camera_lens JOIN photos ON photos.mountain_id = mountain.id AND camera_lens.id = photos.camera_lens_id WHERE  mountain_id >= 41', 'SELECT T1.Country FROM mountain AS T1 JOIN photos AS T2 ON T2.mountain_id = T1.id JOIN camera_lens AS T3 ON T3.id = T2.camera_lens_id WHERE T1.id >= 41'], ['SELECT mountain.name, camera_lens_id FROM mountain JOIN camera_lens JOIN photos ON photos.mountain_id = mountain.id AND camera_lens.id = photos.camera_lens_id WHERE name = (SELECT MIN(name) FROM mountain WHERE  Prominence >= 29) GROUP BY camera_lens_id HAVING SUM(Prominence) = 8', 'SELECT mountain.name, camera_lens.id FROM mountain JOIN photos ON photos.mountain_id = mountain.id JOIN camera_lens ON camera_lens.id = photos.camera_lens_id WHERE mountain.name = (SELECT name FROM mountain WHERE Prominence >= 29 ORDER BY name ASC LIMIT 1) GROUP BY camera_lens.id'], ['SELECT MIN(focal_length_mm) FROM mountain JOIN camera_lens JOIN photos ON photos.mountain_id = mountain.id AND camera_lens.id = photos.camera_lens_id WHERE mountain.id BETWEEN 1 AND 10 OR  mountain.id >= 39', 'SELECT MIN(T3.focal_length_mm) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.id BETWEEN 1 AND 10 OR T1.id >= 39']], 'cre_Doc_Template_Mgt': [['SELECT Paragraph_ID, Paragraph_ID, Other_Details FROM Paragraphs WHERE Paragraph_ID BETWEEN 1 AND 10 AND  Paragraph_ID > 23 GROUP BY Other_Details HAVING SUM(Paragraph_ID) > 81', 'SELECT MIN(Paragraph_ID) AS Min_Paragraph_ID, MAX(Paragraph_ID) AS Max_Paragraph_ID, Other_Details FROM Paragraphs WHERE Paragraph_ID BETWEEN 1 AND 10 OR Paragraph_ID > 23 GROUP BY Other_Details HAVING SUM(Paragraph_ID) > 81;'], ['SELECT Ref_Template_Types.Template_Type_Code, Template_Details FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Template_ID BETWEEN 1 AND 10 GROUP BY Template_Details', 'SELECT Ref_Template_Types.Template_Type_Code, Template_Details FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Template_ID BETWEEN 1 AND 10 GROUP BY Ref_Template_Types.Template_Type_Code, Template_Details;'], ['SELECT u.Template_Type_Code, u.Template_Type_Code FROM Ref_Template_Types AS u JOIN Ref_Template_Types ON Ref_Template_Types.Template_Type_Code = u.Template_Type_Code WHERE EXISTS (SELECT * FROM Templates WHERE Ref_Template_Types.Template_Type_Code = Template_Type_Code)', 'SELECT Template_Type_Code FROM Ref_Template_Types WHERE EXISTS (SELECT * FROM Templates WHERE Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code)'], ['SELECT COUNT(Version_Number), Template_Type_Description, Version_Number FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE  Template_ID > 24 AND EXISTS (SELECT * FROM Documents AS p WHERE p.Document_ID BETWEEN 1 AND 10 AND Templates.Template_ID = p.Template_ID LIMIT 7) GROUP BY Version_Number HAVING AVG(Version_Number) > 61 ORDER BY Template_Type_Description DESC', 'SELECT COUNT(Templates.Version_Number), Ref_Template_Types.Template_Type_Description, Templates.Version_Number FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_ID > 24 AND Documents.Document_ID BETWEEN 1 AND 10 GROUP BY Templates.Version_Number, Ref_Template_Types.Template_Type_Description HAVING AVG(Templates.Version_Number) > 61 ORDER BY Ref_Template_Types.Template_Type_Description DESC'], ['SELECT SUM(Paragraphs.Document_ID), z.Paragraph_Text, z.Paragraph_Text FROM Paragraphs JOIN Paragraphs AS z ON Paragraphs.Paragraph_ID = z.Paragraph_ID WHERE  Paragraphs.Document_ID = 83 LIMIT 7', 'SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = 83 LIMIT 7'], ['SELECT Templates.Template_Type_Code FROM Documents JOIN Paragraphs JOIN Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code AND Documents.Template_ID = Templates.Template_ID AND Paragraphs.Document_ID = Documents.Document_ID WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID BETWEEN 1 AND 10)', 'SELECT T.Template_Type_Code FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Paragraphs P ON P.Document_ID = D.Document_ID JOIN Ref_Template_Types RT ON T.Template_Type_Code = RT.Template_Type_Code WHERE T.Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID BETWEEN 1 AND 10)'], ['SELECT s.Template_ID, s.Version_Number FROM Templates AS s WHERE  s.Template_ID <= 34 OR Date_Effective_To IN (SELECT Date_Effective_To FROM Templates) GROUP BY s.Version_Number ORDER BY s.Template_ID DESC', 'SELECT s.Template_ID, s.Version_Number FROM Templates AS s WHERE s.Template_ID <= 34 OR s.Date_Effective_To IN (SELECT Date_Effective_To FROM Templates) GROUP BY s.Template_ID, s.Version_Number ORDER BY s.Template_ID DESC'], ['SELECT AVG(Document_ID), SUM(Document_ID) FROM Documents WHERE Document_Name IN (SELECT Document_Name FROM Documents AS l WHERE  l.Template_ID > 26 LIMIT 2) LIMIT 7', 'SELECT AVG(Template_ID), SUM(Document_ID) FROM Documents WHERE Document_Name IN (SELECT Document_Name FROM Documents AS l WHERE  l.Template_ID > 26 LIMIT 2) LIMIT 7'], ['SELECT MAX(Paragraph_ID), Template_ID FROM Documents JOIN Paragraphs ON Paragraphs.Document_ID = Documents.Document_ID WHERE Paragraph_ID BETWEEN 1 AND 10 AND  Template_ID > 91 GROUP BY Template_ID', 'SELECT MAX(P.Paragraph_ID), D.Template_ID FROM Documents D JOIN Paragraphs P ON D.Document_ID = P.Document_ID WHERE P.Paragraph_ID BETWEEN 1 AND 10 AND D.Template_ID > 91 GROUP BY D.Template_ID'], ['SELECT Documents.Document_Name FROM Documents JOIN Documents AS q ON Documents.Document_ID = q.Document_ID WHERE  Documents.Template_ID <= 12 AND EXISTS (SELECT * FROM Paragraphs WHERE Documents.Document_ID = Document_ID) LIMIT 6', 'SELECT Documents.Document_Name FROM Documents WHERE Documents.Template_ID <= 12 AND EXISTS (SELECT * FROM Paragraphs WHERE Documents.Document_ID = Paragraphs.Document_ID) LIMIT 6']], 'music_1': [['SELECT COUNT(DISTINCT genre_is) FROM song JOIN artist ON artist.artist_name = song.artist_name WHERE resolution BETWEEN 1 AND 10 OR  resolution >= 81 LIMIT 1', 'SELECT COUNT(DISTINCT genre_is) FROM song JOIN artist ON artist.artist_name = song.artist_name WHERE (resolution BETWEEN 1 AND 10) OR resolution >= 81 LIMIT 1'], ['SELECT COUNT(DISTINCT a.releasedate), a.rating, a.rating FROM song AS a WHERE a.resolution BETWEEN 1 AND 10 AND  a.f_id <= 50', 'SELECT COUNT(DISTINCT a.releasedate), a.rating FROM song AS a WHERE a.resolution BETWEEN 1 AND 10 AND a.f_id <= 50'], ['SELECT files.f_id, artist.artist_name FROM files JOIN song JOIN artist JOIN genre ON artist.preferred_genre = genre.g_name AND artist.artist_name = song.artist_name AND song.genre_is = genre.g_name AND files.artist_name = artist.artist_name WHERE  files.f_id <= 78', 'SELECT files.f_id, artist.artist_name FROM files JOIN artist ON files.artist_name = artist.artist_name JOIN song ON song.artist_name = artist.artist_name JOIN genre ON artist.preferred_genre = genre.g_name AND song.genre_is = genre.g_name WHERE files.f_id <= 78;'], ['SELECT languages, g_name FROM files JOIN song JOIN artist JOIN genre ON artist.preferred_genre = genre.g_name AND artist.artist_name = song.artist_name AND song.genre_is = genre.g_name AND files.artist_name = artist.artist_name WHERE  files.f_id > 49', 'SELECT T4.languages, T1.g_name FROM genre AS T1 JOIN song AS T2 ON T1.g_name = T2.genre_is JOIN artist AS T3 ON T2.artist_name = T3.artist_name AND T3.preferred_genre = T1.g_name JOIN files AS T4 ON T3.artist_name = T4.artist_name WHERE T4.f_id > 49;'], ['SELECT artist.artist_name FROM files JOIN song JOIN artist ON artist.artist_name = song.artist_name AND files.artist_name = artist.artist_name', 'SELECT artist.artist_name FROM artist JOIN files ON files.artist_name = artist.artist_name JOIN song ON song.artist_name = artist.artist_name AND song.f_id = files.f_id;']], 'game_injury': [['SELECT AVG(b.Season), b.Season FROM game AS b WHERE  b.stadium_id = 39', 'SELECT AVG(b.Season) AS average_season FROM game AS b WHERE b.stadium_id = 39'], ['SELECT Competition FROM stadium JOIN game ON game.stadium_id = stadium.id WHERE Home_Games BETWEEN 1 AND 10 GROUP BY Competition HAVING AVG(Average_Attendance) >= 70 ORDER BY Competition ASC', 'SELECT T1.Competition FROM (SELECT stadium.id, game.Competition, stadium.Home_Games, stadium.Average_Attendance FROM stadium JOIN game ON game.stadium_id = stadium.id) AS T1 WHERE T1.Home_Games BETWEEN 1 AND 10 GROUP BY T1.Competition HAVING AVG(T1.Average_Attendance) >= 70 ORDER BY T1.Competition ASC'], ['SELECT s.name, s.name FROM stadium AS s WHERE  s.Total_Attendance != 28', 'SELECT s.name FROM stadium AS s WHERE s.Total_Attendance != 28;'], ['SELECT MIN(Home_Games), name, Capacity_Percentage FROM stadium WHERE id BETWEEN 1 AND 10 OR Home_Games < (SELECT AVG(Home_Games) FROM stadium AS q WHERE  q.id <= 19) GROUP BY Capacity_Percentage', 'SELECT MIN(Home_Games), name, Capacity_Percentage FROM stadium WHERE id BETWEEN 1 AND 10 OR Home_Games < (SELECT AVG(Home_Games) FROM stadium AS q WHERE  q.id <= 19) GROUP BY Capacity_Percentage, name'], ['SELECT AVG(stadium_id), AVG(game_id), COUNT(DISTINCT Home_team) FROM game JOIN injury_accident ON injury_accident.game_id = game.id WHERE  Season >= 30 LIMIT 5', 'SELECT AVG(game.stadium_id), AVG(game.id), COUNT(DISTINCT game.Home_team) FROM game JOIN injury_accident ON injury_accident.game_id = game.id WHERE  game.Season >= 30 LIMIT 5'], ['SELECT Away_team, Home_team FROM stadium JOIN game ON game.stadium_id = stadium.id WHERE  Season > 47 AND EXISTS (SELECT * FROM game WHERE stadium.id = stadium_id) GROUP BY Home_team HAVING SUM(Average_Attendance) < 48', 'SELECT g.Home_team, g.Away_team FROM stadium s JOIN game g ON g.stadium_id = s.id WHERE g.Season > 47 GROUP BY g.Home_team, g.Away_team HAVING COUNT(g.Home_team) < 48'], ['SELECT name, name, Average_Attendance FROM stadium WHERE EXISTS (SELECT * FROM game WHERE Season BETWEEN 1 AND 10 AND  stadium_id >= 12 AND stadium.id = stadium_id) GROUP BY Average_Attendance HAVING AVG(Average_Attendance) = 8', 'SELECT name, Average_Attendance FROM stadium WHERE EXISTS (SELECT * FROM game WHERE Season BETWEEN 1 AND 10 AND stadium_id >= 12 AND stadium.id = stadium_id) GROUP BY Average_Attendance HAVING Average_Attendance = 8'], ['SELECT COUNT(DISTINCT Competition), COUNT(DISTINCT game_id), Player FROM game JOIN injury_accident ON injury_accident.game_id = game.id WHERE  Season >= 47 LIMIT 5', 'SELECT COUNT(DISTINCT T1.Competition), COUNT(DISTINCT T1.id) as count_game_id, T2.Player FROM game T1 JOIN injury_accident T2 ON T2.game_id = T1.id WHERE T1.Season >= 47 GROUP BY T2.Player LIMIT 5'], ['SELECT game.id, Home_Games FROM stadium JOIN game JOIN injury_accident ON game.stadium_id = stadium.id AND injury_accident.game_id = game.id WHERE Away_team IN (SELECT Away_team FROM game WHERE Season BETWEEN 1 AND 10 OR  Season != 34 LIMIT 1) ORDER BY Home_Games DESC', 'SELECT T1.id, T2.Home_Games FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T3.game_id = T1.id WHERE T1.Away_team IN (SELECT Away_team FROM game WHERE Season BETWEEN 1 AND 10 OR  Season != 34 LIMIT 1) ORDER BY T2.Home_Games DESC'], ['SELECT Number_of_matches, Injury FROM injury_accident WHERE EXISTS (SELECT * FROM game AS g WHERE injury_accident.id = g.stadium_id) GROUP BY Injury LIMIT 10', 'SELECT Injury, COUNT(*) as Number_of_matches FROM injury_accident WHERE EXISTS (SELECT * FROM game AS g WHERE injury_accident.game_id = g.id) GROUP BY Injury LIMIT 10'], ['SELECT MAX(q.Capacity_Percentage), COUNT(DISTINCT q.name), q.Total_Attendance FROM stadium AS q WHERE  q.Capacity_Percentage <= 6 GROUP BY q.Total_Attendance ORDER BY q.Total_Attendance DESC', 'SELECT MAX(q.Capacity_Percentage), COUNT(DISTINCT q.name), q.Total_Attendance FROM stadium AS q WHERE q.Capacity_Percentage <= 6 GROUP BY q.Total_Attendance ORDER BY q.Total_Attendance DESC'], ['SELECT MAX(injury_accident.id), injury_accident.Injury FROM injury_accident JOIN injury_accident AS s ON injury_accident.id = s.id WHERE EXISTS (SELECT * FROM game AS d WHERE  d.Season <= 27 AND injury_accident.id = d.stadium_id)', 'SELECT MAX(i.id), i.Injury FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.Season <= 27'], ['SELECT Competition FROM game JOIN injury_accident ON injury_accident.game_id = game.id WHERE EXISTS (SELECT * FROM stadium WHERE game.id = id LIMIT 6) GROUP BY Competition ORDER BY Competition ASC LIMIT 5', 'SELECT Competition FROM game JOIN injury_accident ON injury_accident.game_id = game.id WHERE EXISTS (SELECT * FROM stadium WHERE game.stadium_id = stadium.id) GROUP BY Competition ORDER BY Competition ASC LIMIT 5']], 'customer_deliveries': [['SELECT COUNT(address_id), address_details FROM Addresses WHERE address_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Delivery_Route_Locations AS c WHERE Addresses.address_id = c.location_address_id) ORDER BY address_details DESC', 'SELECT COUNT(address_id), address_details FROM Addresses WHERE address_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Delivery_Route_Locations AS c WHERE Addresses.address_id = c.location_address_id) ORDER BY address_details DESC'], ['SELECT l.actual_order_id, l.product_id FROM Actual_Order_Products AS l WHERE  l.actual_order_id >= 56 GROUP BY l.product_id', 'SELECT l.actual_order_id, l.product_id FROM Actual_Order_Products AS l WHERE  l.actual_order_id >= 56 GROUP BY l.product_id'], ['SELECT COUNT(DISTINCT regular_order_id), COUNT(DISTINCT distributer_id), regular_order_id FROM Regular_Orders WHERE  regular_order_id > 51', 'SELECT COUNT(DISTINCT regular_order_id), COUNT(DISTINCT distributer_id) FROM Regular_Orders WHERE regular_order_id > 51;'], ['SELECT route_name, other_route_details FROM Delivery_Routes GROUP BY route_name', 'SELECT route_name, other_route_details FROM Delivery_Routes GROUP BY route_name, other_route_details;'], ['SELECT COUNT(DISTINCT product_name), product_name, product_description FROM Products WHERE  product_price <= 69 GROUP BY product_description HAVING SUM(product_price) < 35 LIMIT 3', 'SELECT COUNT(DISTINCT product_name), product_name, product_description FROM Products WHERE product_price <= 69 GROUP BY product_description HAVING COUNT(product_name) < 35 LIMIT 3'], ['SELECT COUNT(DISTINCT truck_details), COUNT(DISTINCT truck_licence_number), truck_licence_number FROM Trucks WHERE  truck_id = 71 ORDER BY truck_licence_number ASC', 'SELECT COUNT(DISTINCT truck_details), COUNT(DISTINCT truck_licence_number), truck_licence_number FROM Trucks WHERE truck_id = 71 GROUP BY truck_licence_number ORDER BY truck_licence_number ASC;'], ['SELECT MAX(truck_id), truck_id FROM Trucks WHERE  truck_id > 9', 'SELECT MAX(truck_id) FROM Trucks WHERE truck_id > 9;'], ['SELECT MAX(employee_id), location_code FROM Trucks JOIN Order_Deliveries JOIN Employees ON Order_Deliveries.driver_employee_id = Employees.employee_id AND Trucks.truck_id = Order_Deliveries.truck_id WHERE truck_details = (SELECT MAX(truck_details) FROM Trucks AS v)', 'SELECT MAX(E.driver_employee_id), T.truck_details, O.location_code FROM Order_Deliveries O JOIN Trucks T ON O.truck_id = T.truck_id JOIN Employees E ON O.driver_employee_id = E.employee_id WHERE T.truck_details = (SELECT MAX(truck_details) FROM Trucks)'], ['SELECT address_type, customer_name FROM Customer_Addresses JOIN Customers ON Customers.customer_id = Customer_Addresses.customer_id WHERE  Customer_Addresses.customer_id = 36 GROUP BY customer_name', 'SELECT address_type, customer_name FROM Customer_Addresses JOIN Customers ON Customers.customer_id = Customer_Addresses.customer_id WHERE Customer_Addresses.customer_id = 36 GROUP BY address_type, customer_name'], ['SELECT Regular_Order_Products.regular_order_id, order_status_code FROM Regular_Order_Products JOIN Customers JOIN Actual_Orders JOIN Regular_Orders ON Regular_Orders.distributer_id = Customers.customer_id AND Regular_Orders.regular_order_id = Actual_Orders.regular_order_id AND Regular_Order_Products.regular_order_id = Regular_Orders.regular_order_id WHERE  Regular_Orders.regular_order_id <= 22', 'SELECT Regular_Order_Products.regular_order_id, Actual_Orders.order_status_code FROM Regular_Order_Products JOIN Regular_Orders ON Regular_Order_Products.regular_order_id = Regular_Orders.regular_order_id JOIN Actual_Orders ON Regular_Orders.regular_order_id = Actual_Orders.regular_order_id JOIN Customers ON Regular_Orders.distributer_id = Customers.customer_id WHERE Regular_Orders.regular_order_id <= 22;'], ['SELECT COUNT(DISTINCT location_name), location_code FROM Delivery_Route_Locations WHERE route_id BETWEEN 1 AND 10 OR route_id IN (SELECT route_id FROM Delivery_Routes AS v) ORDER BY location_code DESC', 'SELECT COUNT(DISTINCT location_name), location_code FROM Delivery_Route_Locations WHERE route_id BETWEEN 1 AND 10 OR route_id IN (SELECT route_id FROM Delivery_Routes) ORDER BY location_code DESC;'], ['SELECT actual_order_id FROM Delivery_Route_Locations JOIN Order_Deliveries ON Delivery_Route_Locations.location_code = Order_Deliveries.location_code WHERE  driver_employee_id <= 68 LIMIT 10', 'SELECT T2.actual_order_id FROM Delivery_Route_Locations AS T1 JOIN Order_Deliveries AS T2 ON T1.location_code = T2.location_code WHERE T2.driver_employee_id <= 68 LIMIT 10'], ['SELECT Actual_Order_Products.actual_order_id, order_status_code FROM Actual_Order_Products JOIN Actual_Orders ON Actual_Orders.actual_order_id = Actual_Order_Products.actual_order_id WHERE  Actual_Orders.actual_order_id != 80 ORDER BY Actual_Order_Products.actual_order_id ASC LIMIT 4', 'SELECT Actual_Order_Products.actual_order_id, order_status_code FROM Actual_Order_Products JOIN Actual_Orders ON Actual_Orders.actual_order_id = Actual_Order_Products.actual_order_id WHERE  Actual_Orders.actual_order_id != 80 ORDER BY Actual_Orders.actual_order_id ASC LIMIT 4'], ['SELECT product_name FROM Actual_Order_Products JOIN Products ON Actual_Order_Products.product_id = Products.product_id WHERE EXISTS (SELECT * FROM Actual_Order_Products WHERE  actual_order_id = 73 AND Products.product_id = product_id) ORDER BY product_name ASC', 'SELECT T1.product_name FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE EXISTS (SELECT 1 FROM Actual_Order_Products WHERE actual_order_id = 73 AND T1.product_id = product_id) ORDER BY T1.product_name ASC']], 'theme_gallery': [['SELECT MIN(h.Exhibition_ID), h.Date FROM exhibition_record AS h WHERE  h.Exhibition_ID >= 61 OR Date IN (SELECT Date FROM exhibition_record WHERE  Exhibition_ID = 71) GROUP BY h.Date ORDER BY h.Date ASC', 'SELECT MIN(h.Date) AS min_date FROM exhibition_record AS h WHERE h.Exhibition_ID >= 61 OR h.Exhibition_ID = 71'], ['SELECT Theme, Theme, Ticket_Price FROM exhibition GROUP BY Ticket_Price LIMIT 6', 'SELECT Theme, COUNT(Ticket_Price) AS Ticket_Price FROM exhibition GROUP BY Theme ORDER BY Theme LIMIT 6'], ['SELECT AVG(Age), SUM(exhibition.Exhibition_ID), COUNT(DISTINCT exhibition.Exhibition_ID) FROM exhibition JOIN artist JOIN exhibition_record ON exhibition.Artist_ID = artist.Artist_ID AND exhibition_record.Exhibition_ID = exhibition.Exhibition_ID WHERE  Age >= 28', 'SELECT AVG(artist.Age), SUM(exhibition.Exhibition_ID), COUNT(DISTINCT exhibition.Exhibition_ID) FROM exhibition JOIN artist ON exhibition.Artist_ID = artist.Artist_ID JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE artist.Age >= 28;'], ['SELECT c.Exhibition_ID, c.Exhibition_ID, c.Date FROM exhibition_record AS c WHERE c.Attendance BETWEEN 1 AND 10 GROUP BY c.Date ORDER BY c.Exhibition_ID ASC LIMIT 5', 'SELECT c.Exhibition_ID, c.Date FROM exhibition_record AS c WHERE c.Attendance BETWEEN 1 AND 10 GROUP BY c.Date ORDER BY c.Exhibition_ID ASC LIMIT 5'], ['SELECT SUM(Exhibition_ID), Attendance, Date FROM exhibition_record WHERE Exhibition_ID IN (SELECT Exhibition_ID FROM exhibition LIMIT 3) GROUP BY Date HAVING MAX(Exhibition_ID) < 9', 'SELECT MAX(Exhibition_ID), MAX(Attendance), Date FROM exhibition_record WHERE Exhibition_ID IN (SELECT Exhibition_ID FROM exhibition LIMIT 3) GROUP BY Date HAVING MAX(Exhibition_ID) < 9;'], ['SELECT Country, Name, Year_Join FROM exhibition JOIN artist ON exhibition.Artist_ID = artist.Artist_ID WHERE EXISTS (SELECT * FROM exhibition_record AS i WHERE exhibition.Exhibition_ID = i.Exhibition_ID) GROUP BY Year_Join ORDER BY Year_Join ASC', 'SELECT a.Country, a.Name, a.Year_Join FROM exhibition e JOIN artist a ON e.Artist_ID = a.Artist_ID WHERE EXISTS (SELECT * FROM exhibition_record AS i WHERE e.Exhibition_ID = i.Exhibition_ID) GROUP BY a.Year_Join ORDER BY a.Year_Join ASC'], ['SELECT MIN(c.Attendance), c.Attendance FROM exhibition_record AS c WHERE c.Exhibition_ID BETWEEN 1 AND 10 AND  c.Attendance > 82', 'SELECT MIN(c.Attendance) FROM exhibition_record AS c WHERE c.Exhibition_ID BETWEEN 1 AND 10 AND c.Attendance > 82;'], ['SELECT SUM(s.Artist_ID), COUNT(DISTINCT s.Year) FROM exhibition AS s WHERE  s.Exhibition_ID != 93', 'SELECT SUM(s.Ticket_Price), COUNT(DISTINCT s.Year) FROM exhibition AS s WHERE s.Exhibition_ID != 93;'], ['SELECT y.Year, y.Theme, y.Artist_ID FROM exhibition AS y WHERE y.Artist_ID BETWEEN 1 AND 10 AND Exhibition_ID = (SELECT MIN(Exhibition_ID) FROM exhibition AS b WHERE  b.Year <= 81 LIMIT 6) GROUP BY y.Artist_ID ORDER BY y.Year ASC LIMIT 2', 'SELECT T1.Year, T1.Theme, T1.Artist_ID FROM exhibition AS T1 INNER JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Artist_ID BETWEEN 1 AND 10 AND T1.Year = (SELECT MIN(T1.Year) FROM exhibition AS T1 INNER JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Artist_ID BETWEEN 1 AND 10) ORDER BY T1.Year ASC LIMIT 2'], ['SELECT Country, Name FROM exhibition JOIN artist JOIN exhibition_record ON exhibition.Artist_ID = artist.Artist_ID AND exhibition_record.Exhibition_ID = exhibition.Exhibition_ID WHERE  exhibition_record.Exhibition_ID != 81', 'SELECT exhibition.Country, artist.Name FROM exhibition INNER JOIN artist ON exhibition.Artist_ID = artist.Artist_ID INNER JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Exhibition_ID != 81'], ['SELECT exhibition.Theme, k.Artist_ID FROM exhibition AS k JOIN exhibition ON exhibition.Exhibition_ID = k.Exhibition_ID WHERE  exhibition.Artist_ID = 49 GROUP BY k.Artist_ID ORDER BY k.Artist_ID DESC LIMIT 1', 'SELECT Theme FROM exhibition WHERE Artist_ID = 49 ORDER BY Artist_ID DESC LIMIT 1'], ['SELECT SUM(Year_Join), Age FROM artist WHERE Year_Join BETWEEN 1 AND 10 OR Country IN (SELECT Country FROM artist WHERE  Year_Join < 2 LIMIT 6) GROUP BY Age LIMIT 6', 'SELECT AVG(Year_Join), Age FROM artist WHERE Year_Join BETWEEN 1 AND 10 OR Country IN (SELECT Country FROM artist WHERE  Year_Join < 2 LIMIT 6) GROUP BY Age LIMIT 6'], ['SELECT Age, Exhibition_ID, Theme FROM exhibition JOIN artist ON exhibition.Artist_ID = artist.Artist_ID WHERE  exhibition.Artist_ID < 51 GROUP BY Theme HAVING MAX(Year) < 75 ORDER BY Theme ASC LIMIT 6', 'SELECT T1.Age, T2.Exhibition_ID, T2.Theme FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Artist_ID < 51 AND T2.Year = (SELECT MAX(T3.Year) FROM exhibition AS T3 WHERE T3.Theme = T2.Theme) GROUP BY T1.Age, T2.Exhibition_ID, T2.Theme ORDER BY T2.Theme ASC LIMIT 6'], ['SELECT COUNT(exhibition.Exhibition_ID), Attendance FROM exhibition JOIN artist JOIN exhibition_record ON exhibition.Artist_ID = artist.Artist_ID AND exhibition_record.Exhibition_ID = exhibition.Exhibition_ID WHERE  exhibition.Exhibition_ID = 43 AND Exhibition_ID NOT IN (SELECT Exhibition_ID FROM exhibition WHERE  Exhibition_ID >= 31) LIMIT 8', 'SELECT COUNT(exhibition.Exhibition_ID), Attendance FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition.Exhibition_ID = 43 LIMIT 1'], ['SELECT q.Date, q.Date FROM exhibition_record AS q ORDER BY q.Date DESC', 'SELECT q.Date FROM exhibition_record AS q ORDER BY q.Date DESC;'], ['SELECT i.Attendance, i.Date FROM exhibition_record AS i WHERE  i.Attendance = 16 GROUP BY i.Date HAVING MIN(i.Attendance) = 21 LIMIT 4', 'SELECT Date, Attendance FROM exhibition_record WHERE Attendance = 16 GROUP BY Date LIMIT 4'], ['SELECT Exhibition_ID FROM exhibition_record WHERE  Exhibition_ID = 62', 'SELECT Exhibition_ID FROM exhibition_record WHERE Exhibition_ID = 62']], 'customer_complaints': [['SELECT product_description FROM Complaints JOIN Products ON Products.product_id = Complaints.product_id WHERE product_price BETWEEN 1 AND 10 ORDER BY product_description ASC', 'SELECT T2.product_description FROM Complaints AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_price BETWEEN 1 AND 10 ORDER BY T2.product_description ASC'], ['SELECT SUM(product_id), product_price FROM Products ORDER BY product_price DESC', 'SELECT product_price, SUM(product_price) OVER () AS total_price FROM Products ORDER BY product_price DESC;'], ['SELECT MAX(Customers.customer_id), product_id FROM Complaints JOIN Customers ON Complaints.customer_id = Customers.customer_id WHERE Complaints.customer_id BETWEEN 1 AND 10 ORDER BY product_id ASC LIMIT 7', 'SELECT (SELECT MAX(customer_id) FROM Customers) AS max_customer_id, product_id FROM Complaints JOIN Customers ON Complaints.customer_id = Customers.customer_id WHERE Complaints.customer_id BETWEEN 1 AND 10 ORDER BY product_id ASC LIMIT 7'], ['SELECT Customers.customer_id FROM Complaints JOIN Customers JOIN Staff JOIN Products ON Complaints.customer_id = Customers.customer_id AND Complaints.staff_id = Staff.staff_id AND Products.product_id = Complaints.product_id WHERE address_line_2 != (SELECT AVG(address_line_2) FROM Customers WHERE customer_id BETWEEN 1 AND 10) ORDER BY Customers.customer_id ASC', 'SELECT Customers.customer_id FROM Complaints JOIN Customers ON Complaints.customer_id = Customers.customer_id JOIN Staff ON Complaints.staff_id = Staff.staff_id JOIN Products ON Complaints.product_id = Products.product_id WHERE address_line_2 NOT IN (SELECT address_line_2 FROM Customers WHERE customer_id BETWEEN 1 AND 10) ORDER BY Customers.customer_id ASC'], ['SELECT MAX(parent_product_id), COUNT(DISTINCT date_product_discontinued), product_description, parent_product_id FROM Products WHERE  product_price >= 78 GROUP BY parent_product_id HAVING MIN(product_id) >= 77 LIMIT 6', 'SELECT COUNT(DISTINCT date_product_discontinued), product_description, parent_product_id FROM Products WHERE  product_price >= 78 GROUP BY parent_product_id, product_description HAVING MIN(product_id) >= 77 LIMIT 6'], ['SELECT COUNT(staff_id), SUM(staff_id), phone_number FROM Staff WHERE  staff_id >= 66 ORDER BY phone_number DESC', 'SELECT COUNT(staff_id), SUM(staff_id), phone_number FROM Staff WHERE staff_id >= 66 GROUP BY phone_number ORDER BY phone_number DESC;'], ['SELECT COUNT(DISTINCT Products.product_price), COUNT(DISTINCT q.product_category_code), COUNT(DISTINCT q.product_id) FROM Products AS q JOIN Products ON Products.product_id = q.product_id WHERE  Products.product_price >= 56 LIMIT 9', 'SELECT COUNT(DISTINCT product_price), COUNT(DISTINCT product_category_code), COUNT(DISTINCT product_id) FROM Products WHERE product_price >= 56 LIMIT 9'], ['SELECT gender FROM Complaints JOIN Staff JOIN Products ON Complaints.staff_id = Staff.staff_id AND Products.product_id = Complaints.product_id WHERE  product_price < 94 LIMIT 10', 'SELECT T3.gender FROM Complaints AS T1 JOIN Staff AS T3 ON T1.staff_id = T3.staff_id JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_price < 94 LIMIT 10'], ['SELECT COUNT(DISTINCT staff_id), complaint_outcome_code FROM Complaints JOIN Products ON Products.product_id = Complaints.product_id WHERE  staff_id < 12', 'SELECT COUNT(DISTINCT Complaints.staff_id), complaint_outcome_code FROM Complaints JOIN Products ON Products.product_id = Complaints.product_id WHERE Complaints.staff_id < 12 GROUP BY complaint_outcome_code;'], ['SELECT state, address_line_2 FROM Customers WHERE  customer_id > 99 GROUP BY address_line_2 ORDER BY state ASC', 'SELECT state, address_line_2 FROM Customers WHERE customer_id > 99 GROUP BY state, address_line_2 ORDER BY state ASC;'], ['SELECT COUNT(x.product_id), COUNT(DISTINCT x.product_name), x.product_category_code FROM Products AS x LIMIT 1', 'SELECT COUNT(x.product_id), COUNT(DISTINCT x.product_name), x.product_category_code FROM Products AS x GROUP BY x.product_category_code LIMIT 1'], ['SELECT complaint_status_code FROM Complaints WHERE  staff_id < 33 OR complaint_status_code > (SELECT MIN(complaint_status_code) FROM Complaints AS i WHERE i.product_id BETWEEN 1 AND 10 LIMIT 4)', 'SELECT complaint_status_code FROM Complaints WHERE staff_id < 33 OR complaint_status_code IN (SELECT MIN(complaint_status_code) FROM Complaints AS i WHERE i.product_id BETWEEN 1 AND 10)'], ['SELECT COUNT(DISTINCT last_name), COUNT(DISTINCT gender), last_name FROM Staff WHERE staff_id BETWEEN 1 AND 10 OR  staff_id > 70 GROUP BY last_name ORDER BY last_name ASC', 'SELECT last_name, COUNT(DISTINCT last_name) AS last_name_count, COUNT(DISTINCT gender) AS gender_count FROM Staff WHERE staff_id BETWEEN 1 AND 10 OR staff_id > 70 GROUP BY last_name ORDER BY last_name ASC'], ['SELECT SUM(staff_id), staff_id, staff_id, email_address FROM Staff WHERE  staff_id < 82 AND EXISTS (SELECT * FROM Complaints AS m WHERE m.product_id BETWEEN 1 AND 10 AND Staff.staff_id = m.staff_id LIMIT 8) GROUP BY email_address', 'SELECT SUM(S.staff_id) AS total_staff_id, S.staff_id, S.email_address FROM Staff S WHERE S.staff_id < 82 AND EXISTS (SELECT * FROM Complaints AS m WHERE m.product_id BETWEEN 1 AND 10 AND S.staff_id = m.staff_id LIMIT 8) GROUP BY S.email_address, S.staff_id'], ['SELECT p.complaint_outcome_code, p.complaint_outcome_code FROM Complaints AS p WHERE  p.complaint_id != 1', 'SELECT p.complaint_outcome_code FROM Complaints AS p WHERE  p.complaint_id != 1'], ['SELECT complaint_type_code FROM Complaints JOIN Staff ON Complaints.staff_id = Staff.staff_id WHERE Complaints.staff_id BETWEEN 1 AND 10 OR  customer_id = 20 ORDER BY complaint_type_code DESC', 'SELECT complaint_type_code FROM Complaints JOIN Staff ON Complaints.staff_id = Staff.staff_id WHERE Complaints.staff_id BETWEEN 1 AND 10 OR customer_id = 20 ORDER BY complaint_type_code DESC']], 'scholar': [['SELECT COUNT(DISTINCT paper.paperId), journalName, year FROM journal JOIN paper JOIN writes ON paper.paperId = writes.paperId AND journal.journalId = paper.journalId WHERE numCiting IN (SELECT numCiting FROM paper AS x WHERE  x.year >= 70) GROUP BY year HAVING AVG(numCiting) = 33 LIMIT 10', 'SELECT COUNT(DISTINCT paper.paperId), journalName, year FROM journal JOIN paper ON journal.journalId = paper.journalId JOIN writes ON paper.paperId = writes.paperId WHERE numCiting IN (SELECT numCiting FROM paper AS x WHERE  x.year >= 70) GROUP BY year, journalName HAVING AVG(numCiting) = 33 LIMIT 10'], ['SELECT COUNT(paperId), title FROM cite JOIN paper ON cite.citedPaperId = paper.paperId WHERE  year >= 86', 'SELECT COUNT(cite.citingPaperId), paper.title FROM cite JOIN paper ON cite.citedPaperId = paper.paperId WHERE paper.year >= 86 GROUP BY paper.title;'], ['SELECT keyphraseName, keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE  keyphrase.keyphraseId < 100 ORDER BY keyphraseName ASC LIMIT 7', 'SELECT keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE keyphrase.keyphraseId < 100 ORDER BY keyphraseName ASC LIMIT 7'], ['SELECT venueId FROM author JOIN journal JOIN paper JOIN writes ON paper.paperId = writes.paperId AND writes.authorId = author.authorId AND journal.journalId = paper.journalId WHERE author.authorId BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM paper WHERE numCiting BETWEEN 1 AND 10 AND journal.journalId = journalId) LIMIT 7', 'SELECT T1.venueId FROM venue AS T1 INNER JOIN paper AS T2 ON T1.venueId = T2.venueId INNER JOIN writes AS T3 ON T2.paperId = T3.paperId INNER JOIN author AS T4 ON T3.authorId = T4.authorId INNER JOIN journal AS T5 ON T2.journalId = T5.journalId WHERE T4.authorId BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM paper AS T6 WHERE T6.numCiting BETWEEN 1 AND 10 AND T6.journalId = T5.journalId) LIMIT 7'], ['SELECT numCitedBy, journal.journalId FROM journal JOIN paper ON journal.journalId = paper.journalId WHERE paper.journalId BETWEEN 1 AND 10 AND  year <= 100 ORDER BY numCitedBy ASC', 'SELECT paper.numCitedBy, journal.journalName FROM journal JOIN paper ON journal.journalId = paper.journalId WHERE paper.journalId BETWEEN 1 AND 10 AND paper.year <= 100 ORDER BY paper.numCitedBy ASC'], ['SELECT COUNT(DISTINCT l.keyphraseId), l.keyphraseId FROM keyphrase AS l WHERE  l.keyphraseId > 18', 'SELECT COUNT(DISTINCT l.keyphraseId) FROM keyphrase AS l WHERE  l.keyphraseId > 18;'], ['SELECT SUM(author.authorId), author.authorId FROM author JOIN writes ON writes.authorId = author.authorId WHERE  author.authorId < 18 ORDER BY author.authorId DESC', 'SELECT COUNT(author.authorId), author.authorId FROM author JOIN writes ON writes.authorId = author.authorId WHERE author.authorId < 18 ORDER BY author.authorId DESC'], ['SELECT COUNT(year), journalId, venueName, year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE  paper.venueId != 30 AND venueId = (SELECT MIN(venueId) FROM venue WHERE  venueId != 11) GROUP BY year ORDER BY venueName ASC', 'SELECT COUNT(paper.year), paper.journalId, venue.venueName, paper.year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.venueId != 30 AND paper.venueId = (SELECT MIN(venueId) FROM venue WHERE venueId != 11) GROUP BY paper.year, paper.journalId, venue.venueName ORDER BY venueName ASC'], ['SELECT authorName, authorName, authorName FROM author JOIN writes ON writes.authorId = author.authorId WHERE  paperId != 56 GROUP BY authorName ORDER BY authorName DESC', 'SELECT author.authorName FROM author JOIN writes ON writes.authorId = author.authorId WHERE writes.paperId != 56 GROUP BY author.authorName ORDER BY author.authorName DESC;'], ['SELECT MIN(journalId), authorId, writes.paperId FROM paper JOIN writes JOIN cite ON paper.paperId = writes.paperId AND cite.citedPaperId = paper.paperId WHERE  writes.paperId >= 47 ORDER BY writes.paperId DESC', 'SELECT MIN(paper.journalId), w.authorId, w.paperId FROM paper JOIN writes w ON paper.paperId = w.paperId JOIN cite c ON c.citedPaperId = paper.paperId WHERE w.paperId >= 47 ORDER BY w.paperId DESC'], ['SELECT datasetId, datasetId FROM dataset ORDER BY datasetId ASC', 'SELECT datasetId FROM dataset ORDER BY datasetId ASC;'], ['SELECT COUNT(author.authorId), t.authorName FROM author JOIN author AS t ON author.authorId = t.authorId ORDER BY t.authorName ASC LIMIT 3', 'SELECT authorName FROM author ORDER BY authorName ASC LIMIT 3;'], ['SELECT AVG(datasetId), MAX(paperId), COUNT(DISTINCT paperId), paperId FROM paperDataset WHERE  datasetId > 7 GROUP BY paperId HAVING COUNT(datasetId) < 71', 'SELECT AVG(datasetId), MAX(paperId), COUNT(DISTINCT paperId), datasetId FROM paperDataset WHERE datasetId > 7 GROUP BY datasetId HAVING COUNT(datasetId) < 71'], ['SELECT SUM(year), title FROM paper JOIN writes ON paper.paperId = writes.paperId WHERE  numCitedBy <= 26 LIMIT 8', 'SELECT SUM(paper.year), title FROM paper JOIN writes ON paper.paperId = writes.paperId WHERE numCitedBy <= 26 LIMIT 8'], ['SELECT title FROM cite JOIN paper ON cite.citedPaperId = paper.paperId WHERE  year != 32 OR citingPaperId IN (SELECT citingPaperId FROM cite WHERE  citedPaperId != 98 LIMIT 2)', 'SELECT title FROM cite JOIN paper ON cite.citedPaperId = paper.paperId WHERE paper.year != 32 OR citingPaperId IN (SELECT citingPaperId FROM cite WHERE citedPaperId != 98 LIMIT 2)'], ['SELECT COUNT(DISTINCT keyphraseName), keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE  paperId > 12 GROUP BY keyphraseName', 'SELECT COUNT(DISTINCT keyphrase.keyphraseName), keyphrase.keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE paperKeyphrase.paperId > 12 GROUP BY keyphrase.keyphraseName;'], ['SELECT SUM(authorId), AVG(authorId), authorName FROM author WHERE  authorId <= 56 GROUP BY authorName HAVING AVG(authorId) > 31', 'SELECT COUNT(authorId), AVG(authorId), authorName FROM author WHERE authorId <= 56 GROUP BY authorName HAVING AVG(authorId) > 31'], ['SELECT journalName FROM journal JOIN paper ON journal.journalId = paper.journalId LIMIT 2', 'SELECT journalName FROM journal JOIN paper ON paper.journalId = journal.journalId LIMIT 2'], ['SELECT journalId, journalName FROM journal WHERE journalId <= (SELECT MIN(journalId) FROM journal AS u WHERE  u.journalId >= 19) GROUP BY journalName', 'SELECT journalId, journalName FROM journal WHERE journalId <= (SELECT MIN(journalId) FROM journal AS u WHERE  u.journalId >= 19) GROUP BY journalName, journalId'], ['SELECT keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE paperId BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM paperKeyphrase WHERE  keyphraseId < 79 AND keyphrase.keyphraseId = keyphraseId) LIMIT 6', 'SELECT keyphraseName FROM keyphrase JOIN paperKeyphrase ON paperKeyphrase.keyphraseId = keyphrase.keyphraseId WHERE paperId BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM paperKeyphrase WHERE  keyphraseId < 79 AND keyphrase.keyphraseId = paperKeyphrase.keyphraseId) LIMIT 6']], 'coffee_shop': [['SELECT AVG(Shop_ID), Num_of_staff FROM shop WHERE Score BETWEEN 1 AND 10 AND  Shop_ID = 78 ORDER BY Num_of_staff DESC LIMIT 5', 'SELECT Shop_ID, CAST(Num_of_staff AS number) AS Num_of_staff FROM shop WHERE Score BETWEEN 1 AND 10 AND Shop_ID = 78 ORDER BY CAST(Num_of_staff AS number) DESC LIMIT 1;'], ['SELECT y.Member_ID, y.Member_ID FROM member AS y WHERE  y.Time_of_purchase <= 53 LIMIT 7', 'SELECT y.Member_ID FROM member AS y WHERE y.Time_of_purchase <= 53 LIMIT 7'], ['SELECT MIN(HH_ID), MIN(Num_of_shaff_in_charge), AVG(HH_ID), Shop_ID FROM happy_hour WHERE  Num_of_shaff_in_charge = 67 GROUP BY Shop_ID', 'SELECT MIN(HH_ID), MIN(Num_of_shaff_in_charge), AVG(Num_of_shaff_in_charge) as average_num_staff, Shop_ID FROM happy_hour GROUP BY Shop_ID'], ['SELECT z.Level_of_membership, member.Membership_card FROM member JOIN member AS z ON member.Member_ID = z.Member_ID GROUP BY member.Membership_card', 'SELECT Level_of_membership, Membership_card FROM member;'], ['SELECT COUNT(DISTINCT Month), Month FROM happy_hour WHERE  Num_of_shaff_in_charge >= 75 ORDER BY Month DESC LIMIT 3', 'SELECT Month FROM happy_hour WHERE Num_of_shaff_in_charge >= 75 GROUP BY Month ORDER BY Month DESC LIMIT 3;'], ['SELECT MAX(Shop_ID), Num_of_staff, Score FROM shop GROUP BY Score', 'SELECT MAX(Shop_ID), Score FROM shop GROUP BY Score'], ['SELECT MAX(s.Shop_ID) FROM shop AS s WHERE  s.Shop_ID = 57', 'SELECT Shop_ID FROM shop WHERE Shop_ID = 57;'], ['SELECT COUNT(DISTINCT shop.Address), shop.Score FROM shop JOIN shop AS m ON shop.Shop_ID = m.Shop_ID WHERE m.Score BETWEEN 1 AND 10 ORDER BY shop.Score DESC', 'SELECT COUNT(DISTINCT Address), Score FROM shop GROUP BY Score ORDER BY Score DESC;'], ['SELECT i.Address, shop.Address FROM shop JOIN shop AS i ON shop.Shop_ID = i.Shop_ID WHERE  shop.Shop_ID = 49 GROUP BY shop.Address', 'SELECT shop.Address FROM shop WHERE shop.Shop_ID = 49'], ['SELECT happy_hour.Month, happy_hour.Month FROM happy_hour AS x JOIN happy_hour ON happy_hour.HH_ID = x.HH_ID WHERE  x.Num_of_shaff_in_charge <= 89', 'SELECT x.Month, y.Month FROM happy_hour AS x JOIN happy_hour AS y ON x.HH_ID = y.HH_ID WHERE x.Num_of_shaff_in_charge <= 89;'], ['SELECT MIN(i.Num_of_shaff_in_charge), SUM(i.HH_ID) FROM happy_hour AS i WHERE  i.Num_of_shaff_in_charge != 58', 'SELECT MIN(i.Num_of_shaff_in_charge), COUNT(i.HH_ID) FROM happy_hour AS i WHERE i.Num_of_shaff_in_charge != 58']], 'culture_company': [['SELECT movie.movie_id FROM movie JOIN culture_company ON culture_company.movie_id = movie.movie_id WHERE  movie.movie_id = 84 AND book_club_id != (SELECT MIN(book_club_id) FROM book_club WHERE  Year < 14)', 'SELECT movie.movie_id FROM movie JOIN culture_company ON CAST(culture_company.movie_id AS NUMBER) = movie.movie_id WHERE  movie.movie_id = 84 AND CAST(culture_company.book_club_id AS NUMBER) != (SELECT MIN(book_club_id) FROM book_club WHERE  Year < 14)'], ['SELECT COUNT(DISTINCT j.Year), j.Budget_million, j.Year FROM movie AS j WHERE  j.movie_id != 24 GROUP BY j.Year', 'SELECT COUNT(DISTINCT j.Year), j.Budget_million, MAX(j.Year) FROM movie AS j WHERE  j.movie_id != 24 GROUP BY j.Budget_million'], ['SELECT j.book_club_id, j.Publisher FROM book_club AS j WHERE  j.book_club_id <= 53 GROUP BY j.Publisher HAVING AVG(j.Year) <= 12', 'SELECT j.book_club_id, j.Publisher FROM book_club AS j WHERE  j.book_club_id <= 53 GROUP BY j.Publisher HAVING AVG(j.Year) <= 12'], ['SELECT COUNT(DISTINCT v.Author_or_Editor), v.Book_Title FROM book_club AS v WHERE  v.Year >= 90 ORDER BY v.Book_Title DESC LIMIT 4', 'SELECT COUNT(DISTINCT v.Author_or_Editor), v.Book_Title FROM book_club AS v WHERE  v.Year >= 1990 ORDER BY v.Book_Title DESC LIMIT 4'], ['SELECT v.Group_Equity_Shareholding, v.Incorporated_in FROM culture_company AS v WHERE  v.Group_Equity_Shareholding > 55 ORDER BY v.Incorporated_in DESC', 'SELECT v.Group_Equity_Shareholding, v.Incorporated_in FROM culture_company AS v WHERE  v.Group_Equity_Shareholding > 55 ORDER BY v.Group_Equity_Shareholding DESC;'], ['SELECT AVG(o.Group_Equity_Shareholding), o.Group_Equity_Shareholding FROM culture_company AS o WHERE  o.Group_Equity_Shareholding != 12 ORDER BY o.Group_Equity_Shareholding DESC', 'SELECT AVG(o.Group_Equity_Shareholding), o.Group_Equity_Shareholding FROM culture_company AS o WHERE  CAST(o.Group_Equity_Shareholding AS REAL) != 12 ORDER BY CAST(o.Group_Equity_Shareholding AS REAL) DESC'], ['SELECT COUNT(DISTINCT e.Publisher), e.book_club_id FROM book_club AS e WHERE  e.book_club_id = 28 ORDER BY e.book_club_id ASC LIMIT 1', 'SELECT COUNT(DISTINCT e.Publisher), e.book_club_id FROM book_club AS e WHERE e.book_club_id = 28 ORDER BY e.book_club_id ASC LIMIT 1'], ['SELECT COUNT(DISTINCT p.book_club_id), p.book_club_id, p.Book_Title FROM book_club AS p WHERE p.Year BETWEEN 1 AND 10 GROUP BY p.Book_Title', 'SELECT COUNT(DISTINCT p.book_club_id), p.book_club_id, p.Book_Title FROM book_club AS p WHERE p.Year BETWEEN 1 AND 10 GROUP BY p.book_club_id, p.Book_Title'], ['SELECT Director FROM movie JOIN culture_company ON culture_company.movie_id = movie.movie_id WHERE  Gross_worldwide <= 1 LIMIT 9', 'SELECT Director FROM movie JOIN culture_company ON CAST(movie.movie_id AS text) = culture_company.movie_id WHERE  Gross_worldwide <= 1 LIMIT 9'], ['SELECT COUNT(DISTINCT i.Title), i.Budget_million FROM movie AS i WHERE  i.Budget_million >= 79 ORDER BY i.Budget_million ASC LIMIT 5', 'SELECT COUNT(DISTINCT Title), Budget_million FROM movie WHERE Budget_million >= 79 ORDER BY Budget_million ASC LIMIT 5'], ['SELECT m.Author_or_Editor FROM book_club AS m WHERE  m.Year >= 37 LIMIT 7', 'SELECT Author_or_Editor FROM book_club WHERE Year >= 1937 LIMIT 7']], 'hr_1': [['SELECT COUNT(job_history.DEPARTMENT_ID), job_history.DEPARTMENT_ID, job_history.END_DATE FROM job_history AS f JOIN job_history ON job_history.EMPLOYEE_ID = f.EMPLOYEE_ID WHERE  f.DEPARTMENT_ID <= 2 GROUP BY job_history.END_DATE ORDER BY job_history.END_DATE DESC', 'SELECT COUNT(job_history.DEPARTMENT_ID), job_history.DEPARTMENT_ID, job_history.END_DATE FROM job_history WHERE job_history.DEPARTMENT_ID <= 2 GROUP BY job_history.DEPARTMENT_ID, job_history.END_DATE ORDER BY job_history.END_DATE DESC'], ['SELECT COUNT(a.LOCATION_ID), a.STREET_ADDRESS FROM locations AS a WHERE a.LOCATION_ID BETWEEN 1 AND 10 OR STATE_PROVINCE IN (SELECT STATE_PROVINCE FROM locations AS z WHERE  z.LOCATION_ID < 40)', 'SELECT STREET_ADDRESS, COUNT(a.LOCATION_ID) FROM locations AS a WHERE a.LOCATION_ID BETWEEN 1 AND 10 OR STATE_PROVINCE IN (SELECT STATE_PROVINCE FROM locations AS z WHERE  z.LOCATION_ID < 40) GROUP BY a.STREET_ADDRESS;'], ['SELECT DEPARTMENT_ID FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE  COMMISSION_PCT <= 26', 'SELECT employees.DEPARTMENT_ID FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE employees.COMMISSION_PCT <= 26'], ['SELECT SUM(SALARY), job_history.DEPARTMENT_ID, PHONE_NUMBER, MANAGER_ID FROM employees JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE SALARY BETWEEN 1 AND 10 GROUP BY MANAGER_ID LIMIT 3', 'SELECT SUM(SALARY), job_history.DEPARTMENT_ID, PHONE_NUMBER, MANAGER_ID FROM employees JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID WHERE SALARY BETWEEN 1000 AND 10000 GROUP BY job_history.DEPARTMENT_ID, PHONE_NUMBER, MANAGER_ID LIMIT 3'], ['SELECT job_history.JOB_ID, FIRST_NAME FROM departments JOIN employees JOIN jobs JOIN job_history ON employees.JOB_ID = jobs.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND job_history.JOB_ID = jobs.JOB_ID AND departments.DEPARTMENT_ID = employees.DEPARTMENT_ID WHERE  COMMISSION_PCT = 48 LIMIT 10', 'SELECT job_history.JOB_ID, FIRST_NAME FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID JOIN jobs ON employees.JOB_ID = jobs.JOB_ID JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE COMMISSION_PCT = 0.48 LIMIT 10'], ['SELECT COUNT(DISTINCT POSTAL_CODE), COUNT(DISTINCT COUNTRY_ID), POSTAL_CODE FROM locations WHERE  LOCATION_ID < 18', 'SELECT COUNT(DISTINCT POSTAL_CODE), COUNT(DISTINCT COUNTRY_ID) FROM locations WHERE LOCATION_ID < 18;'], ['SELECT COUNT(DISTINCT COUNTRY_NAME), REGION_ID FROM countries WHERE  REGION_ID > 73 OR EXISTS (SELECT * FROM locations AS p WHERE p.LOCATION_ID BETWEEN 1 AND 10 AND countries.COUNTRY_ID = p.COUNTRY_ID) GROUP BY REGION_ID ORDER BY REGION_ID DESC', 'SELECT COUNT(DISTINCT COUNTRY_NAME), REGION_ID FROM countries WHERE REGION_ID > 73 OR EXISTS (SELECT * FROM locations AS p WHERE p.LOCATION_ID BETWEEN 1 AND 10 AND p.COUNTRY_ID = countries.COUNTRY_ID) GROUP BY REGION_ID ORDER BY REGION_ID DESC'], ['SELECT employees.DEPARTMENT_ID FROM departments JOIN employees JOIN jobs JOIN job_history ON employees.JOB_ID = jobs.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND job_history.JOB_ID = jobs.JOB_ID AND departments.DEPARTMENT_ID = employees.DEPARTMENT_ID WHERE  job_history.DEPARTMENT_ID < 66 OR EXISTS (SELECT * FROM jobs AS u WHERE  u.MAX_SALARY < 51 AND job_history.EMPLOYEE_ID = u.JOB_ID) ORDER BY employees.DEPARTMENT_ID DESC', 'SELECT employees.DEPARTMENT_ID FROM departments JOIN employees JOIN jobs JOIN job_history ON employees.JOB_ID = jobs.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND job_history.JOB_ID = jobs.JOB_ID AND departments.DEPARTMENT_ID = employees.DEPARTMENT_ID WHERE  job_history.DEPARTMENT_ID < 66 OR EXISTS (SELECT * FROM jobs AS u WHERE  u.MAX_SALARY < 51 AND job_history.JOB_ID = u.JOB_ID) ORDER BY employees.DEPARTMENT_ID DESC'], ['SELECT MIN(employees.DEPARTMENT_ID), COUNT(DISTINCT job_history.DEPARTMENT_ID), employees.DEPARTMENT_ID FROM departments JOIN employees JOIN jobs JOIN job_history ON employees.JOB_ID = jobs.JOB_ID AND employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID AND job_history.JOB_ID = jobs.JOB_ID AND departments.DEPARTMENT_ID = employees.DEPARTMENT_ID WHERE EXISTS (SELECT * FROM departments AS p WHERE employees.EMPLOYEE_ID = p.DEPARTMENT_ID) GROUP BY employees.DEPARTMENT_ID HAVING AVG(MAX_SALARY) >= 58', 'SELECT employees.DEPARTMENT_ID, MIN(jobs.MAX_SALARY), COUNT(DISTINCT job_history.DEPARTMENT_ID) FROM employees JOIN job_history ON employees.EMPLOYEE_ID = job_history.EMPLOYEE_ID JOIN jobs ON employees.JOB_ID = jobs.JOB_ID JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID GROUP BY employees.DEPARTMENT_ID HAVING AVG(jobs.MAX_SALARY) >= 58'], ['SELECT COUNTRY_NAME, COUNTRY_NAME FROM countries ORDER BY COUNTRY_NAME DESC', 'SELECT COUNTRY_NAME FROM countries ORDER BY COUNTRY_NAME DESC'], ['SELECT SALARY, COMMISSION_PCT, JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE  COMMISSION_PCT != 31 GROUP BY JOB_TITLE', 'SELECT AVG(SALARY) AS AVG_SALARY, AVG(COMMISSION_PCT) AS AVG_COMMISSION_PCT, JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE  COMMISSION_PCT != 0.31 GROUP BY JOB_TITLE'], ['SELECT COUNT(DISTINCT EMPLOYEE_ID) FROM job_history WHERE END_DATE = (SELECT SUM(END_DATE) FROM job_history WHERE  EMPLOYEE_ID = 27 LIMIT 7)', 'SELECT COUNT(DISTINCT EMPLOYEE_ID) FROM job_history WHERE END_DATE = (SELECT END_DATE FROM job_history WHERE EMPLOYEE_ID = 27 ORDER BY START_DATE DESC LIMIT 1)'], ['SELECT COUNT(DISTINCT END_DATE), DEPARTMENT_ID FROM jobs JOIN job_history ON job_history.JOB_ID = jobs.JOB_ID WHERE EMPLOYEE_ID BETWEEN 1 AND 10 GROUP BY DEPARTMENT_ID HAVING MIN(EMPLOYEE_ID) < 80', 'SELECT COUNT(DISTINCT job_history.END_DATE), job_history.DEPARTMENT_ID FROM job_history JOIN jobs ON job_history.JOB_ID = jobs.JOB_ID WHERE job_history.EMPLOYEE_ID BETWEEN 1 AND 10 GROUP BY job_history.DEPARTMENT_ID HAVING MIN(job_history.EMPLOYEE_ID) < 80']], 'farm': [['SELECT COUNT(DISTINCT Rank), Hosts, Theme FROM farm_competition JOIN competition_record ON farm_competition.Competition_ID = competition_record.Competition_ID WHERE  Farm_ID = 62 OR EXISTS (SELECT * FROM farm WHERE Total_Cattle BETWEEN 1 AND 10 AND competition_record.Competition_ID = Farm_ID LIMIT 9) LIMIT 10', 'SELECT COUNT(DISTINCT Rank), Hosts, Theme FROM farm_competition JOIN competition_record ON farm_competition.Competition_ID = competition_record.Competition_ID WHERE Farm_ID = 62 OR EXISTS (SELECT * FROM farm WHERE Total_Cattle BETWEEN 1 AND 10 AND competition_record.Farm_ID = farm.Farm_ID LIMIT 9) LIMIT 10'], ['SELECT MIN(farm.Sheep_and_Goats), y.Pigs FROM farm AS y JOIN farm ON farm.Farm_ID = y.Farm_ID WHERE y.Year BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM competition_record WHERE  Rank != 51 AND farm.Farm_ID = Farm_ID)', 'SELECT MIN(y.Sheep_and_Goats), y.Pigs FROM farm AS y JOIN farm AS z ON y.Farm_ID = z.Farm_ID WHERE y.Year BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM competition_record WHERE Rank != 51 AND y.Farm_ID = Farm_ID)'], ['SELECT COUNT(DISTINCT Official_Name), Area_km_2, Census_Ranking, Official_Name FROM city WHERE  Area_km_2 != 53 GROUP BY Official_Name', 'SELECT COUNT(DISTINCT Official_Name), Area_km_2, Census_Ranking, Official_Name FROM city WHERE Area_km_2 != 53 GROUP BY Official_Name, Area_km_2, Census_Ranking;'], ['SELECT Farm_ID FROM competition_record WHERE  Competition_ID != 36 LIMIT 5', 'SELECT Farm_ID FROM competition_record WHERE Competition_ID != 36'], ['SELECT SUM(Rank), Status FROM farm_competition JOIN competition_record JOIN city ON farm_competition.Host_city_ID = city.City_ID AND farm_competition.Competition_ID = competition_record.Competition_ID WHERE  City_ID != 70', 'SELECT SUM(cr.Rank), c.Status FROM farm_competition AS fc JOIN competition_record AS cr ON fc.Competition_ID = cr.Competition_ID JOIN city AS c ON fc.Host_city_ID = c.City_ID WHERE c.City_ID != 70'], ['SELECT COUNT(DISTINCT Competition_ID) FROM farm_competition WHERE  Competition_ID = 91 LIMIT 5', 'SELECT COUNT(DISTINCT Competition_ID) FROM farm_competition LIMIT 5'], ['SELECT farm.Year, Census_Ranking FROM farm JOIN farm_competition JOIN competition_record JOIN city ON farm_competition.Host_city_ID = city.City_ID AND farm_competition.Competition_ID = competition_record.Competition_ID AND competition_record.Farm_ID = farm.Farm_ID LIMIT 6', 'SELECT farm.Year, city.Census_Ranking FROM farm JOIN competition_record ON farm.Farm_ID = competition_record.Farm_ID JOIN farm_competition ON competition_record.Competition_ID = farm_competition.Competition_ID JOIN city ON farm_competition.Host_city_ID = city.City_ID LIMIT 6'], ['SELECT farm.Farm_ID, Census_Ranking FROM farm JOIN farm_competition JOIN competition_record JOIN city ON farm_competition.Host_city_ID = city.City_ID AND farm_competition.Competition_ID = competition_record.Competition_ID AND competition_record.Farm_ID = farm.Farm_ID WHERE  Oxen = 72', 'SELECT farm.Farm_ID, city.Census_Ranking FROM farm JOIN competition_record ON farm.Farm_ID = competition_record.Farm_ID JOIN farm_competition ON competition_record.Competition_ID = farm_competition.Competition_ID JOIN city ON farm_competition.Host_city_ID = city.City_ID WHERE farm.Oxen = 72'], ['SELECT SUM(Working_Horses), Official_Name FROM farm JOIN farm_competition JOIN competition_record JOIN city ON farm_competition.Host_city_ID = city.City_ID AND farm_competition.Competition_ID = competition_record.Competition_ID AND competition_record.Farm_ID = farm.Farm_ID WHERE Rank BETWEEN 1 AND 10 OR Population <= (SELECT AVG(Population) FROM city WHERE Population BETWEEN 1 AND 10) ORDER BY Official_Name ASC', 'SELECT SUM(farm.Working_Horses), city.Official_Name FROM farm JOIN competition_record ON farm.Farm_ID = competition_record.Farm_ID JOIN farm_competition ON competition_record.Competition_ID = farm_competition.Competition_ID JOIN city ON farm_competition.Host_city_ID = city.City_ID WHERE competition_record.Rank BETWEEN 1 AND 10 AND city.Population <= (SELECT AVG(Population) FROM city WHERE Population > 0) ORDER BY city.Official_Name ASC']], 'government_shift': [['SELECT MIN(Channels.Channel_ID), Channels.Channel_Details, x.Channel_Details FROM Channels JOIN Channels AS x ON Channels.Channel_ID = x.Channel_ID WHERE  x.Channel_ID < 43 GROUP BY x.Channel_Details ORDER BY x.Channel_Details ASC', 'SELECT MIN(x.Channel_ID), x.Channel_Details FROM Channels AS x GROUP BY x.Channel_Details ORDER BY x.Channel_Details ASC'], ['SELECT w.Integration_Platform_ID, w.Integration_Platform_ID, w.Integration_Platform_Details FROM Integration_Platform AS w WHERE w.Customer_Interaction_ID BETWEEN 1 AND 10 AND  w.Integration_Platform_ID < 19 ORDER BY w.Integration_Platform_ID ASC LIMIT 3', 'SELECT w.Integration_Platform_ID, w.Integration_Platform_Details FROM Integration_Platform AS w WHERE w.Customer_Interaction_ID BETWEEN 1 AND 10 AND w.Integration_Platform_ID < 19 ORDER BY w.Integration_Platform_ID ASC LIMIT 3'], ['SELECT q.Customers_and_Services_ID, q.Customers_and_Services_Details FROM Customers_and_Services AS q WHERE q.Service_ID BETWEEN 1 AND 10 GROUP BY q.Customers_and_Services_Details ORDER BY q.Customers_and_Services_ID DESC', 'SELECT q.Customers_and_Services_ID, q.Customers_and_Services_Details FROM Customers_and_Services AS q WHERE q.Service_ID BETWEEN 1 AND 10 ORDER BY q.Customers_and_Services_ID DESC'], ['SELECT MAX(z.Customer_ID), COUNT(DISTINCT z.Customers_and_Services_Details) FROM Customers_and_Services AS z WHERE  z.Customers_and_Services_ID <= 63', 'SELECT MAX(z.Customer_ID), COUNT(DISTINCT z.Customers_and_Services_Details) FROM Customers_and_Services AS z WHERE  z.Customers_and_Services_ID <= 63'], ['SELECT Customers_and_Services_ID FROM Customer_Interactions JOIN Services JOIN Customers_and_Services JOIN Integration_Platform ON Customer_Interactions.Service_ID = Services.Service_ID AND Services.Service_ID = Customers_and_Services.Service_ID AND Integration_Platform.Customer_Interaction_ID = Customer_Interactions.Customer_Interaction_ID WHERE  Customers_and_Services.Customer_ID >= 15 OR Customers_and_Services_Details <= (SELECT AVG(Customers_and_Services_Details) FROM Customers_and_Services AS j WHERE  j.Customers_and_Services_ID < 68) ORDER BY Customers_and_Services_ID ASC', 'SELECT Customers_and_Services_ID FROM Customer_Interactions JOIN Customers_and_Services ON Customer_Interactions.Customer_ID = Customers_and_Services.Customer_ID AND Customer_Interactions.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID >= 15 ORDER BY Customers_and_Services_ID ASC;'], ['SELECT Customer_Details, Customer_Details FROM Customers WHERE Customer_ID BETWEEN 1 AND 10 GROUP BY Customer_Details ORDER BY Customer_Details DESC', 'SELECT Customer_Details FROM Customers WHERE Customer_ID BETWEEN 1 AND 10 GROUP BY Customer_Details ORDER BY COUNT(Customer_Details) DESC;'], ['SELECT Customer_Interactions.Channel_ID FROM Channels JOIN Customer_Interactions ON Channels.Channel_ID = Customer_Interactions.Channel_ID WHERE Service_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Services WHERE Service_ID BETWEEN 1 AND 10 AND Customer_Interactions.Customer_Interaction_ID = Service_ID)', 'SELECT Customer_Interactions.Channel_ID FROM Channels JOIN Customer_Interactions ON Channels.Channel_ID = Customer_Interactions.Channel_ID WHERE Customer_Interactions.Service_ID BETWEEN 1 AND 10 OR Customer_Interactions.Service_ID IN (SELECT Service_ID FROM Services WHERE Service_ID BETWEEN 1 AND 10)'], ['SELECT COUNT(DISTINCT Channel_Details), Channel_ID, Channel_ID FROM Channels WHERE  Channel_ID < 41', 'SELECT COUNT(DISTINCT Channel_Details) FROM Channels WHERE Channel_ID < 41'], ['SELECT x.Service_ID, x.Service_ID, x.Service_ID FROM Services AS x WHERE x.Service_ID BETWEEN 1 AND 10 AND Service_Details IN (SELECT Service_Details FROM Services AS s WHERE s.Service_ID BETWEEN 1 AND 10) ORDER BY x.Service_ID DESC', 'SELECT x.Service_ID FROM Services AS x WHERE x.Service_ID BETWEEN 1 AND 10 AND x.Service_Details IN (SELECT Service_Details FROM Services AS s WHERE s.Service_ID BETWEEN 1 AND 10) ORDER BY x.Service_ID DESC'], ['SELECT Integration_Platform_Details, Customer_Interaction_ID FROM Integration_Platform WHERE  Customer_Interaction_ID < 43 GROUP BY Customer_Interaction_ID HAVING MAX(Customer_Interaction_ID) > 92 ORDER BY Integration_Platform_Details DESC', 'SELECT Integration_Platform_Details, MAX(Customer_Interaction_ID) FROM Integration_Platform WHERE Customer_Interaction_ID < 43 GROUP BY Integration_Platform_Details HAVING MAX(Customer_Interaction_ID) > 92 ORDER BY Integration_Platform_Details DESC'], ['SELECT Customers_and_Services.Customers_and_Services_ID, Customer_ID FROM Analytical_Layer JOIN Customers_and_Services ON Customers_and_Services.Customers_and_Services_ID = Analytical_Layer.Customers_and_Services_ID WHERE  Service_ID >= 10 GROUP BY Customer_ID ORDER BY Customer_ID DESC LIMIT 5', 'SELECT CAST(Customers_and_Services.Customers_and_Services_ID AS TEXT), Customer_ID FROM Analytical_Layer JOIN Customers_and_Services ON CAST(Customers_and_Services.Customers_and_Services_ID AS TEXT) = Analytical_Layer.Customers_and_Services_ID WHERE  Service_ID >= 10 GROUP BY Customer_ID ORDER BY Customer_ID DESC LIMIT 5'], ['SELECT SUM(Customer_ID), Customer_ID FROM Customers WHERE  Customer_ID > 25 LIMIT 2', 'SELECT Customer_ID FROM Customers WHERE Customer_ID > 25 LIMIT 2'], ['SELECT SUM(Channel_ID), COUNT(DISTINCT Channel_Details) FROM Channels WHERE  Channel_ID != 75', 'SELECT COUNT(Channel_ID), COUNT(DISTINCT Channel_Details) FROM Channels WHERE Channel_ID != 75;'], ['SELECT Service_ID, Customers.Customer_ID FROM Channels JOIN Customer_Interactions JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID AND Channels.Channel_ID = Customer_Interactions.Channel_ID WHERE  Customer_Interactions.Channel_ID = 11 LIMIT 9', 'SELECT CI.Service_ID, CI.Customer_ID FROM Customer_Interactions CI JOIN Customers C ON CI.Customer_ID = C.Customer_ID JOIN Channels CH ON CI.Channel_ID = CH.Channel_ID WHERE CI.Channel_ID = 11 LIMIT 9'], ['SELECT COUNT(g.Customer_Interaction_ID), MIN(Integration_Platform.Integration_Platform_ID) FROM Integration_Platform JOIN Integration_Platform AS g ON Integration_Platform.Integration_Platform_ID = g.Integration_Platform_ID WHERE  Integration_Platform.Customer_Interaction_ID < 85', 'SELECT COUNT(Customer_Interaction_ID), MIN(Integration_Platform_ID) FROM Integration_Platform WHERE Customer_Interaction_ID < 85'], ['SELECT AVG(Customers.Customer_ID) FROM Customer_Interactions JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE  Customer_Interactions.Customer_ID < 41', 'SELECT AVG(T1.Customer_ID) FROM Customer_Interactions AS T1 JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Customer_ID < 41']], 'film_rank': [['SELECT n.Number_cities, n.Number_cities FROM market AS n WHERE n.Market_ID BETWEEN 1 AND 10 OR Number_cities < (SELECT SUM(Number_cities) FROM market AS a WHERE  a.Market_ID <= 40)', 'SELECT n.Number_cities FROM market AS n WHERE n.Market_ID BETWEEN 1 AND 10 OR Number_cities < (SELECT SUM(Number_cities) FROM market AS a WHERE  a.Market_ID <= 40)'], ['SELECT MIN(Estimation_ID), COUNT(DISTINCT film_market_estimation.Film_ID) FROM film_market_estimation JOIN film ON film.Film_ID = film_market_estimation.Film_ID WHERE EXISTS (SELECT * FROM film_market_estimation WHERE  Market_ID = 28 AND film.Film_ID = Film_ID)', 'SELECT MIN(T1.Estimation_ID), COUNT(DISTINCT T1.Film_ID) FROM film_market_estimation T1 JOIN film T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Market_ID = 28;'], ['SELECT AVG(market.Market_ID), AVG(Estimation_ID), Year FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE  Film_ID != 91 GROUP BY Year HAVING AVG(market.Market_ID) >= 62', 'SELECT AVG(T1.Market_ID), AVG(T1.Estimation_ID), T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE  T1.Film_ID != 91 GROUP BY T1.Year HAVING AVG(T1.Market_ID) >= 62'], ['SELECT q.Type, q.Type FROM film_market_estimation AS q WHERE  q.Estimation_ID != 5 ORDER BY q.Type DESC LIMIT 7', 'SELECT q.Type FROM film_market_estimation AS q WHERE q.Estimation_ID != 5 ORDER BY q.Type DESC LIMIT 7;'], ['SELECT Gross_in_dollar FROM film WHERE  Film_ID = 69 LIMIT 8', 'SELECT Gross_in_dollar FROM film WHERE Film_ID = 69 LIMIT 1;'], ['SELECT x.Country, x.Country FROM market AS x WHERE Country IN (SELECT Country FROM market AS u WHERE  u.Number_cities > 11 LIMIT 3)', 'SELECT x.Country FROM market AS x WHERE Country IN (SELECT Country FROM market AS u WHERE  u.Number_cities > 11 LIMIT 3)'], ['SELECT Type FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE Film_ID BETWEEN 1 AND 10 OR  Low_Estimate = 36 LIMIT 8', 'SELECT T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T2.Film_ID BETWEEN 1 AND 10 OR T2.Low_Estimate = 36 LIMIT 8'], ['SELECT Number_cities, Low_Estimate FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE  Estimation_ID = 92 GROUP BY Low_Estimate ORDER BY Number_cities ASC', 'SELECT T2.Number_cities, T1.Low_Estimate FROM film_market_estimation AS T1 INNER JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Estimation_ID = 92 GROUP BY T1.Low_Estimate, T2.Number_cities ORDER BY T2.Number_cities ASC;'], ['SELECT m.Title, m.Title FROM film AS m WHERE  m.Gross_in_dollar > 16 LIMIT 3', 'SELECT m.Title FROM film AS m WHERE m.Gross_in_dollar > 16 LIMIT 3;'], ['SELECT Number_cities, Country, High_Estimate FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE  Low_Estimate < 63 AND Type NOT IN (SELECT Type FROM film_market_estimation AS y WHERE y.Market_ID BETWEEN 1 AND 10 LIMIT 5) GROUP BY High_Estimate HAVING AVG(film_market_estimation.Market_ID) <= 73 ORDER BY High_Estimate ASC LIMIT 2', 'SELECT T1.Number_cities, T1.Country, T2.High_Estimate FROM market AS T1 JOIN film_market_estimation AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Low_Estimate < 63 AND T2.Type NOT IN (SELECT Type FROM film_market_estimation AS y WHERE y.Market_ID BETWEEN 1 AND 10 LIMIT 5) GROUP BY T1.Number_cities, T1.Country, T2.High_Estimate HAVING AVG(T2.Market_ID) <= 73 ORDER BY T2.High_Estimate ASC LIMIT 2;'], ['SELECT SUM(u.Market_ID), u.Estimation_ID, u.Low_Estimate FROM film_market_estimation AS u WHERE  u.Film_ID != 24 GROUP BY u.Low_Estimate HAVING SUM(u.Film_ID) > 39', 'SELECT SUM(u.Market_ID), u.Estimation_ID, u.Low_Estimate FROM film_market_estimation AS u WHERE  u.Film_ID != 24 GROUP BY u.Estimation_ID, u.Low_Estimate HAVING SUM(u.Market_ID) > 39'], ['SELECT MAX(j.Gross_in_dollar), film.Studio, j.Title FROM film JOIN film AS j ON film.Film_ID = j.Film_ID WHERE  film.Film_ID >= 25 GROUP BY j.Title LIMIT 4', 'SELECT MAX(f.Gross_in_dollar), f.Studio, f.Title FROM film f WHERE f.Film_ID >= 25 GROUP BY f.Title, f.Studio ORDER BY MAX(f.Gross_in_dollar) DESC LIMIT 4;'], ['SELECT market.Country, f.Country FROM market AS f JOIN market ON market.Market_ID = f.Market_ID WHERE  market.Market_ID <= 84 ORDER BY f.Country ASC LIMIT 3', 'SELECT m1.Country, m2.Country FROM market AS m1 JOIN market AS m2 ON m1.Market_ID = m2.Market_ID WHERE m1.Market_ID <= 84 ORDER BY m2.Country ASC LIMIT 3'], ['SELECT MAX(Market_ID), Number_cities FROM market WHERE Country IN (SELECT Country FROM market WHERE  Market_ID <= 97 LIMIT 5)', 'SELECT Country, MAX(Market_ID), Number_cities FROM market WHERE Country IN (SELECT Country FROM market WHERE Market_ID <= 97 LIMIT 5) GROUP BY Country, Number_cities;']], 'customers_and_products_contacts': [['SELECT COUNT(customer_id), customer_phone FROM Customers WHERE customer_id BETWEEN 1 AND 10 OR  customer_id = 91 LIMIT 10', 'SELECT COUNT(customer_id), customer_phone FROM Customers WHERE customer_id BETWEEN 1 AND 10 OR customer_id = 91 LIMIT 10'], ['SELECT i.order_id FROM Customer_Orders AS i WHERE customer_id >= (SELECT MIN(customer_id) FROM Customer_Orders WHERE  customer_id < 66 LIMIT 8)', 'SELECT i.order_id FROM Customer_Orders AS i WHERE customer_id >= (SELECT MIN(customer_id) FROM Customer_Orders WHERE customer_id < 66)'], ['SELECT f.order_quantity FROM Order_Items AS f WHERE  f.order_id < 31 ORDER BY f.order_quantity ASC', 'SELECT CAST(f.order_quantity AS NUMBER) FROM Order_Items AS f WHERE f.order_id < 31 ORDER BY CAST(f.order_quantity AS NUMBER) ASC'], ['SELECT order_quantity FROM Order_Items WHERE  order_id >= 77 ORDER BY order_quantity DESC LIMIT 4', 'SELECT CAST(order_quantity AS number) AS order_quantity FROM Order_Items WHERE order_id >= 77 ORDER BY CAST(order_quantity AS number) DESC LIMIT 4'], ['SELECT d.customer_id, d.payment_method_code FROM Customers AS d WHERE  d.customer_id < 80 ORDER BY d.payment_method_code ASC', 'SELECT d.customer_id, d.payment_method_code FROM Customers AS d WHERE  d.customer_id < 80 ORDER BY d.payment_method_code ASC']], 'pilot_1': [['SELECT COUNT(DISTINCT PilotSkills.plane_name), PilotSkills.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE  age > 30', 'SELECT COUNT(DISTINCT PilotSkills.plane_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 30;'], ['SELECT MAX(age), COUNT(DISTINCT age), age FROM PilotSkills WHERE age BETWEEN 1 AND 10 GROUP BY age', 'SELECT MAX(age), COUNT(DISTINCT age) FROM PilotSkills WHERE age BETWEEN 1 AND 10;'], ['SELECT SUM(age), age FROM PilotSkills WHERE plane_name != (SELECT SUM(plane_name) FROM Hangar LIMIT 10) ORDER BY age DESC LIMIT 3', 'SELECT SUM(age), age FROM PilotSkills WHERE plane_name NOT IN (SELECT plane_name FROM Hangar LIMIT 10) ORDER BY age DESC LIMIT 3'], ['SELECT age, plane_name FROM PilotSkills WHERE pilot_name < (SELECT AVG(pilot_name) FROM PilotSkills AS z LIMIT 8) GROUP BY plane_name HAVING SUM(age) <= 23 ORDER BY plane_name ASC', 'SELECT plane_name, AVG(age) AS average_age FROM PilotSkills GROUP BY plane_name HAVING AVG(age) <= 23 ORDER BY plane_name ASC;'], ['SELECT age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age BETWEEN 1 AND 10 AND  age > 10', 'SELECT age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age > 10;'], ['SELECT PilotSkills.plane_name, Hangar.plane_name, location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age BETWEEN 1 AND 10 OR  age = 57 GROUP BY PilotSkills.plane_name ORDER BY Hangar.plane_name DESC', 'SELECT PilotSkills.plane_name, Hangar.plane_name, location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age BETWEEN 1 AND 10 OR age = 57 GROUP BY PilotSkills.plane_name ORDER BY PilotSkills.plane_name DESC;'], ['SELECT SUM(v.age), v.age FROM PilotSkills AS v WHERE  v.age >= 58 GROUP BY v.age LIMIT 7', 'SELECT v.age FROM PilotSkills AS v WHERE v.age >= 58 GROUP BY v.age LIMIT 7'], ['SELECT age, age FROM PilotSkills WHERE  age > 81 OR pilot_name = (SELECT SUM(pilot_name) FROM PilotSkills AS f LIMIT 8) ORDER BY age DESC LIMIT 3', 'SELECT age FROM PilotSkills WHERE age > 81 ORDER BY age DESC LIMIT 3'], ['SELECT age, age, PilotSkills.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE EXISTS (SELECT * FROM PilotSkills WHERE age BETWEEN 1 AND 10 AND Hangar.plane_name = plane_name) GROUP BY PilotSkills.plane_name ORDER BY age DESC LIMIT 1', 'SELECT PilotSkills.age, PilotSkills.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE EXISTS (SELECT 1 FROM PilotSkills AS T1 WHERE T1.age BETWEEN 1 AND 10 AND T1.plane_name = PilotSkills.plane_name) GROUP BY PilotSkills.plane_name ORDER BY PilotSkills.age DESC LIMIT 1'], ['SELECT COUNT(DISTINCT Hangar.plane_name), pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age IN (SELECT age FROM PilotSkills AS a) ORDER BY pilot_name DESC', 'SELECT COUNT(DISTINCT Hangar.plane_name), PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age IN (SELECT age FROM PilotSkills GROUP BY age HAVING COUNT(age) > 1) GROUP BY PilotSkills.pilot_name ORDER BY PilotSkills.pilot_name DESC'], ['SELECT MAX(PilotSkills.age), PilotSkills.age FROM PilotSkills AS h JOIN PilotSkills ON PilotSkills.pilot_name = h.pilot_name WHERE pilot_name >= (SELECT MAX(pilot_name) FROM PilotSkills WHERE  age <= 65 LIMIT 4)', 'SELECT MAX(PS.age), PS.age FROM PilotSkills AS h JOIN PilotSkills AS PS ON PS.pilot_name = h.pilot_name WHERE pilot_name >= (SELECT MAX(pilot_name) FROM PilotSkills WHERE  age <= 65 LIMIT 4)'], ['SELECT pilot_name, pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Hangar AS f WHERE PilotSkills.pilot_name = f.plane_name)', 'SELECT pilot_name, pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE age BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Hangar AS H WHERE PilotSkills.pilot_name = H.plane_name)']], 'store_1': [['SELECT name FROM artists WHERE id BETWEEN 1 AND 10 OR  id > 80 GROUP BY name HAVING SUM(id) = 26 LIMIT 1', 'SELECT name FROM artists WHERE id BETWEEN 1 AND 10 OR id > 80 GROUP BY name HAVING COUNT(name) = 1 LIMIT 1'], ['SELECT artists.name, artists.name, f.name FROM artists AS f JOIN artists ON artists.id = f.id GROUP BY f.name', 'SELECT T1.name, T2.name FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id'], ['SELECT AVG(invoice_lines.unit_price), name FROM tracks JOIN invoice_lines ON invoice_lines.track_id = tracks.id WHERE album_id IN (SELECT album_id FROM tracks WHERE  genre_id <= 82)', 'SELECT AVG(T2.unit_price), T1.name FROM tracks T1 JOIN invoice_lines T2 ON T2.track_id = T1.id WHERE T1.album_id IN (SELECT album_id FROM tracks WHERE  genre_id <= 82)'], ['SELECT artists.name, i.name FROM artists JOIN artists AS i ON artists.id = i.id WHERE artists.id BETWEEN 1 AND 10 GROUP BY i.name', 'SELECT artists.name, i.name FROM artists JOIN artists AS i ON artists.id = i.id WHERE artists.id BETWEEN 1 AND 10 GROUP BY artists.name, i.name'], ['SELECT AVG(id) FROM employees WHERE fax < (SELECT SUM(fax) FROM employees WHERE  reports_to < 2)', 'SELECT AVG(id) FROM employees WHERE fax < (SELECT SUM(CAST(fax AS REAL)) FROM employees WHERE  reports_to < 2)'], ['SELECT COUNT(DISTINCT hire_date), id, reports_to FROM employees WHERE  reports_to <= 7 AND EXISTS (SELECT * FROM employees AS p WHERE p.id BETWEEN 1 AND 10 AND employees.id = p.id) GROUP BY reports_to', 'SELECT COUNT(DISTINCT hire_date), reports_to FROM employees WHERE reports_to <= 7 GROUP BY reports_to'], ['SELECT COUNT(DISTINCT f.name), f.id, f.name FROM genres AS f WHERE f.id BETWEEN 1 AND 10 OR  f.id < 88 GROUP BY f.name HAVING MAX(f.id) > 27 LIMIT 7', 'SELECT COUNT(DISTINCT f.name), f.id, f.name FROM genres AS f WHERE f.id BETWEEN 1 AND 10 OR  f.id < 88 GROUP BY f.id, f.name HAVING MAX(f.id) > 27 LIMIT 7'], ['SELECT artist_id, title FROM albums GROUP BY title HAVING COUNT(id) >= 54', 'SELECT artist_id, title FROM albums GROUP BY artist_id, title HAVING COUNT(id) >= 54'], ['SELECT milliseconds FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE  unit_price >= 5', 'SELECT milliseconds FROM genres JOIN tracks ON genres.id = tracks.genre_id WHERE tracks.unit_price >= 5'], ['SELECT name FROM genres WHERE  id = 96 GROUP BY name ORDER BY name ASC LIMIT 10', 'SELECT name FROM genres WHERE id = 96 ORDER BY name ASC LIMIT 10'], ['SELECT COUNT(DISTINCT id), name FROM genres WHERE  id > 59 GROUP BY name ORDER BY name ASC', 'SELECT COUNT(*), name FROM genres WHERE id > 59 GROUP BY name ORDER BY name ASC'], ['SELECT title FROM tracks JOIN albums JOIN playlist_tracks JOIN artists ON tracks.album_id = albums.id AND tracks.id = playlist_tracks.track_id AND albums.artist_id = artists.id WHERE  milliseconds <= 25 ORDER BY title DESC', 'SELECT title FROM albums AS T1 JOIN tracks ON T1.id = tracks.album_id JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN artists ON T1.artist_id = artists.id WHERE  tracks.milliseconds <= 25000 ORDER BY T1.title DESC;']], 'warehouse_1': [['SELECT MIN(Capacity), Code FROM Warehouses WHERE  Capacity != 62', 'SELECT MIN(Capacity), Code FROM Warehouses WHERE Capacity != 62'], ['SELECT SUM(Capacity) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE  Warehouse <= 97 LIMIT 4', 'SELECT SUM(Warehouses.Capacity) FROM Boxes JOIN Warehouses ON CAST(Boxes.Warehouse AS TEXT) = Warehouses.Code WHERE Warehouses.Code <= 97'], ['SELECT Value, Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code', 'SELECT Value, Location FROM Boxes JOIN Warehouses ON CAST(Boxes.Warehouse AS TEXT) = CAST(Warehouses.Code AS TEXT)'], ['SELECT COUNT(DISTINCT m.Location), m.Code, m.Capacity FROM Warehouses AS m WHERE  m.Code < 87', 'SELECT COUNT(DISTINCT m.Location), SUM(m.Capacity) FROM Warehouses AS m WHERE  m.Code < 87'], ['SELECT SUM(Value), Value FROM Boxes WHERE  Value > 85 GROUP BY Value', 'SELECT SUM(Value), Value FROM Boxes WHERE Value > 85 GROUP BY Value']], 'book_press': [['SELECT Age FROM author JOIN book ON author.Author_ID = book.Author_ID WHERE book.Author_ID BETWEEN 1 AND 10 AND Author_ID < (SELECT MIN(Author_ID) FROM author AS s WHERE  s.Age > 43 LIMIT 3) ORDER BY Age DESC LIMIT 10', 'SELECT Age FROM author WHERE Author_ID BETWEEN 1 AND 10 AND Author_ID < (SELECT MIN(Author_ID) FROM author AS s WHERE  s.Age > 43 LIMIT 3) ORDER BY Age DESC LIMIT 10'], ['SELECT COUNT(book.Author_ID), book.Press_ID FROM book JOIN book AS u ON book.Book_ID = u.Book_ID WHERE  u.Book_ID >= 25 AND EXISTS (SELECT * FROM press WHERE  Year_Profits_billion > 20 AND book.Book_ID = Press_ID) ORDER BY book.Press_ID DESC', 'SELECT COUNT(book.Author_ID), book.Press_ID FROM book JOIN press AS u ON book.Press_ID = u.Press_ID WHERE book.Book_ID >= 25 AND EXISTS (SELECT * FROM press WHERE  Year_Profits_billion > 20 AND press.Press_ID = book.Press_ID) ORDER BY book.Press_ID DESC'], ['SELECT MAX(x.Age), x.Gender, x.Name FROM author AS x WHERE  x.Age <= 77 OR Name NOT IN (SELECT Name FROM author WHERE  Author_ID >= 49 LIMIT 2)', 'SELECT x.Age, x.Gender, x.Name FROM author AS x WHERE  x.Age <= 77 OR x.Name NOT IN (SELECT Name FROM author WHERE  Author_ID >= 49 LIMIT 2) ORDER BY x.Age DESC LIMIT 1;'], ['SELECT press.Name FROM author JOIN book JOIN press ON book.Press_ID = press.Press_ID AND author.Author_ID = book.Author_ID WHERE  book.Press_ID <= 32', 'SELECT press.Name FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID WHERE book.Press_ID <= 32'], ['SELECT MAX(Year_Profits_billion) FROM press WHERE Month_Profits_billion IN (SELECT Month_Profits_billion FROM press AS g WHERE g.Month_Profits_billion BETWEEN 1 AND 10) LIMIT 4', 'SELECT MAX(Year_Profits_billion) FROM press WHERE Month_Profits_billion BETWEEN 1 AND 10'], ['SELECT press.Month_Profits_billion, v.Month_Profits_billion, v.Year_Profits_billion FROM press AS v JOIN press ON press.Press_ID = v.Press_ID WHERE press.Year_Profits_billion BETWEEN 1 AND 10 GROUP BY v.Year_Profits_billion ORDER BY v.Month_Profits_billion ASC', 'SELECT Month_Profits_billion, Year_Profits_billion FROM press WHERE Year_Profits_billion BETWEEN 1 AND 10 GROUP BY Year_Profits_billion, Month_Profits_billion ORDER BY Month_Profits_billion ASC'], ['SELECT t.Gender FROM author AS t WHERE  t.Age != 42 LIMIT 7', 'SELECT t.Gender FROM author AS t WHERE  t.Age != 42 LIMIT 7'], ['SELECT f.Name FROM author AS f', 'SELECT Name FROM author;'], ['SELECT COUNT(Year_Profits_billion), Month_Profits_billion FROM press GROUP BY Month_Profits_billion', 'SELECT Year_Profits_billion, COUNT(Month_Profits_billion) FROM press GROUP BY Year_Profits_billion'], ['SELECT COUNT(DISTINCT u.Press_ID), COUNT(DISTINCT u.Sale_Amount), COUNT(DISTINCT u.Book_ID), u.Press_ID FROM book AS u WHERE  u.Press_ID = 64 GROUP BY u.Press_ID HAVING MIN(u.Press_ID) <= 58 ORDER BY u.Press_ID ASC', 'SELECT COUNT(DISTINCT CAST(u.Sale_Amount AS number)) AS distinct_sales, COUNT(DISTINCT u.Book_ID) AS distinct_books, u.Press_ID FROM book AS u WHERE  u.Press_ID = 64']], 'company_employee': [['SELECT COUNT(DISTINCT Age), People_ID, Age FROM people GROUP BY Age HAVING MIN(Age) >= 41', 'SELECT COUNT(DISTINCT Age) FROM people WHERE Age >= 41'], ['SELECT people.People_ID, u.Age, people.Name FROM people AS u JOIN people ON people.People_ID = u.People_ID WHERE  people.People_ID >= 100 OR EXISTS (SELECT * FROM employment WHERE people.People_ID = People_ID) GROUP BY people.Name HAVING MIN(u.People_ID) <= 91 ORDER BY people.People_ID DESC LIMIT 3', '\nSELECT p.People_ID, p.Age, p.Name \nFROM people p \nWHERE p.People_ID >= 100 OR EXISTS (\n  SELECT * \n  FROM employment e \n  WHERE e.People_ID = p.People_ID\n)\nGROUP BY p.People_ID, p.Age, p.Name \nHAVING MIN(p.People_ID) <= 91 \nORDER BY p.People_ID DESC \nLIMIT 3;'], ['SELECT COUNT(r.Market_Value_in_Billion), r.Headquarters FROM company AS r WHERE  r.Sales_in_Billion = 81 AND Profits_in_Billion NOT IN (SELECT Profits_in_Billion FROM company AS n WHERE  n.Sales_in_Billion >= 5)', 'SELECT COUNT(c.Market_Value_in_Billion), c.Headquarters FROM company AS c WHERE  c.Sales_in_Billion = 81 AND Profits_in_Billion NOT IN (SELECT Profits_in_Billion FROM company AS n WHERE  n.Sales_in_Billion >= 5)'], ['SELECT l.Name FROM company JOIN company AS l ON company.Company_ID = l.Company_ID WHERE Assets_in_Billion IN (SELECT Assets_in_Billion FROM company AS p WHERE p.Company_ID BETWEEN 1 AND 10) LIMIT 4', 'SELECT Name FROM company WHERE Company_ID BETWEEN 1 AND 10 LIMIT 4'], ['SELECT AVG(Profits_in_Billion), Name FROM company', 'SELECT AVG(Profits_in_Billion), Name FROM company GROUP BY Name;'], ['SELECT Year_working, Year_working, People_ID FROM employment WHERE  People_ID < 74 AND People_ID = (SELECT SUM(People_ID) FROM employment AS a WHERE  a.People_ID >= 95) GROUP BY People_ID HAVING COUNT(Year_working) = 37 ORDER BY Year_working ASC', 'SELECT Year_working, People_ID FROM employment WHERE People_ID < 74 ORDER BY People_ID, Year_working ASC'], ['SELECT f.Headquarters, f.Name FROM company AS f WHERE f.Profits_in_Billion BETWEEN 1 AND 10 AND Industry IN (SELECT Industry FROM company AS f WHERE  f.Sales_in_Billion < 93) GROUP BY f.Headquarters HAVING SUM(f.Assets_in_Billion) >= 17 ORDER BY f.Headquarters DESC', 'SELECT Headquarters, Name FROM company WHERE Profits_in_Billion BETWEEN 1 AND 10 AND Industry IN (SELECT Industry FROM company WHERE  Sales_in_Billion < 93 AND Profits_in_Billion BETWEEN 1 AND 10) GROUP BY Headquarters HAVING SUM(Assets_in_Billion) >= 17 ORDER BY Headquarters DESC'], ['SELECT Year_working, employment.People_ID FROM employment JOIN people ON employment.People_ID = people.People_ID WHERE  Year_working < 76 ORDER BY Year_working DESC', 'SELECT Year_working, employment.People_ID FROM employment JOIN people ON employment.People_ID = people.People_ID WHERE  Year_working < 76 ORDER BY Year_working DESC']], 'performance_attendance': [['SELECT member_attendance.Member_ID FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID WHERE  Num_of_Pieces != 48', 'SELECT CAST(member_attendance.Member_ID AS TEXT) FROM member JOIN member_attendance ON member.Member_ID = CAST(member_attendance.Member_ID AS TEXT) WHERE Num_of_Pieces != 48'], ['SELECT Performance_ID FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID WHERE  Num_of_Pieces <= 74 ORDER BY Performance_ID ASC LIMIT 5', ''], ['SELECT Attendance, Attendance FROM performance WHERE Attendance BETWEEN 1 AND 10 OR  Attendance >= 36 ORDER BY Attendance DESC', 'SELECT DISTINCT Attendance FROM performance WHERE Attendance BETWEEN 1 AND 10 OR Attendance >= 36 ORDER BY Attendance DESC'], ['SELECT COUNT(DISTINCT Performance_ID), Host FROM performance WHERE  Performance_ID != 29 LIMIT 9', 'SELECT COUNT(DISTINCT Performance_ID), Host FROM performance WHERE Performance_ID != 29 LIMIT 9']], 'voter_1': [['SELECT o.area_code, o.area_code FROM AREA_CODE_STATE AS o WHERE o.area_code BETWEEN 1 AND 10 AND state NOT IN (SELECT state FROM AREA_CODE_STATE WHERE  area_code <= 83) LIMIT 3', 'SELECT o.area_code FROM AREA_CODE_STATE AS o WHERE o.area_code BETWEEN 1 AND 10 AND state NOT IN (SELECT DISTINCT state FROM VOTES) LIMIT 3'], ['SELECT SUM(g.contestant_number), COUNT(DISTINCT g.contestant_name), g.contestant_number, g.contestant_name FROM CONTESTANTS AS g WHERE  g.contestant_number != 75 GROUP BY g.contestant_name HAVING AVG(g.contestant_number) > 73 ORDER BY g.contestant_name ASC LIMIT 5', 'SELECT g.contestant_number, g.contestant_name, AVG(g.contestant_number) AS avg_contestant_number, COUNT(g.contestant_name) AS count_contestant_name FROM CONTESTANTS AS g WHERE g.contestant_number != 75 GROUP BY g.contestant_number, g.contestant_name HAVING AVG(g.contestant_number) > 73 ORDER BY g.contestant_name ASC LIMIT 5'], ['SELECT h.state FROM VOTES AS h WHERE  h.contestant_number = 98 OR phone_number >= (SELECT AVG(phone_number) FROM VOTES WHERE contestant_number BETWEEN 1 AND 10)', 'SELECT state FROM VOTES AS h WHERE h.contestant_number = 98 OR phone_number >= (SELECT AVG(phone_number) FROM VOTES WHERE contestant_number BETWEEN 1 AND 10)'], ['SELECT contestant_name, VOTES.contestant_number FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state WHERE  VOTES.contestant_number != 5 GROUP BY VOTES.contestant_number HAVING COUNT(phone_number) <= 22', 'SELECT contestant_name, VOTES.contestant_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE VOTES.contestant_number != 5 GROUP BY VOTES.contestant_number HAVING COUNT(phone_number) <= 22;'], ['SELECT contestant_name FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state WHERE  CONTESTANTS.contestant_number > 81 LIMIT 4', 'SELECT contestant_name FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_number > 81 LIMIT 4'], ['SELECT MIN(CONTESTANTS.contestant_number), VOTES.contestant_number FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number AND AREA_CODE_STATE.state = VOTES.state WHERE  CONTESTANTS.contestant_number >= 69 AND EXISTS (SELECT * FROM VOTES AS z WHERE CONTESTANTS.contestant_number = z.contestant_number LIMIT 1)', 'SELECT MIN(CONTESTANTS.contestant_number), VOTES.contestant_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE CONTESTANTS.contestant_number >= 69 AND EXISTS (SELECT * FROM VOTES AS z WHERE CONTESTANTS.contestant_number = z.contestant_number LIMIT 1)'], ['SELECT COUNT(DISTINCT VOTES.state) FROM VOTES JOIN VOTES AS r ON VOTES.vote_id = r.vote_id WHERE  r.vote_id <= 86 LIMIT 2', 'SELECT COUNT(DISTINCT state) FROM VOTES WHERE vote_id <= 86 LIMIT 1'], ['SELECT c.state, c.state FROM AREA_CODE_STATE AS c WHERE  c.area_code <= 67 ORDER BY c.state ASC', 'SELECT c.state FROM AREA_CODE_STATE AS c WHERE c.area_code <= 67 ORDER BY c.state ASC'], ['SELECT area_code, AREA_CODE_STATE.state FROM VOTES JOIN AREA_CODE_STATE ON AREA_CODE_STATE.state = VOTES.state WHERE  contestant_number < 66 GROUP BY AREA_CODE_STATE.state LIMIT 6', 'SELECT T1.area_code, T1.state FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE T2.contestant_number < 66 GROUP BY T1.state, T1.area_code LIMIT 6;'], ['SELECT state, contestant_number FROM VOTES WHERE  phone_number <= 88 AND contestant_number < (SELECT MIN(contestant_number) FROM CONTESTANTS WHERE  contestant_number < 13 LIMIT 1) GROUP BY contestant_number LIMIT 6', 'SELECT state, contestant_number FROM VOTES WHERE phone_number <= 88 AND contestant_number < (SELECT MIN(contestant_number) FROM CONTESTANTS WHERE contestant_number < 13 ORDER BY contestant_number ASC LIMIT 1) ORDER BY contestant_number LIMIT 6'], ['SELECT COUNT(DISTINCT contestant_number), contestant_number, contestant_number FROM CONTESTANTS WHERE  contestant_number < 94 AND EXISTS (SELECT * FROM VOTES AS q WHERE  q.phone_number > 78 AND CONTESTANTS.contestant_number = q.contestant_number) ORDER BY contestant_number ASC', 'SELECT COUNT(DISTINCT contestant_number), contestant_number FROM CONTESTANTS WHERE contestant_number < 94 AND EXISTS (SELECT * FROM VOTES AS q WHERE q.phone_number > 78 AND CONTESTANTS.contestant_number = q.contestant_number) GROUP BY contestant_number ORDER BY contestant_number ASC']], 'world_1': [['SELECT GNP, GNP FROM country WHERE  LifeExpectancy <= 81', 'SELECT GNP FROM country WHERE LifeExpectancy <= 81'], ['SELECT country.Population, GNP FROM countrylanguage JOIN city JOIN country ON country.Code = city.CountryCode AND countrylanguage.CountryCode = country.Code WHERE  IndepYear != 21 OR IsOfficial IN (SELECT IsOfficial FROM countrylanguage WHERE Percentage BETWEEN 1 AND 10)', 'SELECT country.Population, country.GNP FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode JOIN city ON country.Code = city.CountryCode WHERE country.IndepYear != 21 OR countrylanguage.IsOfficial IN (SELECT IsOfficial FROM countrylanguage WHERE Percentage BETWEEN 1 AND 10)'], ['SELECT LocalName, HeadOfState FROM country WHERE  Capital <= 84 GROUP BY HeadOfState ORDER BY HeadOfState ASC', 'SELECT LocalName, HeadOfState FROM country WHERE Capital <= 84 ORDER BY HeadOfState ASC;']], 'shop_membership': [['SELECT f.Branch_ID FROM branch AS f WHERE  f.Branch_ID = 63 AND membership_amount IN (SELECT membership_amount FROM branch LIMIT 10)', 'SELECT f.Branch_ID FROM branch AS f WHERE  f.Branch_ID = 63 AND CAST(f.membership_amount AS REAL) IN (SELECT CAST(membership_amount AS REAL) FROM branch ORDER BY CAST(membership_amount AS REAL) LIMIT 10)'], ['SELECT SUM(Member_ID), Register_Year, Branch_ID FROM membership_register_branch GROUP BY Branch_ID ORDER BY Branch_ID ASC LIMIT 5', 'SELECT COUNT(Member_ID) AS Member_Count, CAST(Register_Year AS number) AS Register_Year, CAST(Branch_ID AS number) AS Branch_ID FROM membership_register_branch GROUP BY CAST(Branch_ID AS number) ORDER BY CAST(Branch_ID AS number) ASC LIMIT 5'], ['SELECT Level, Open_year, Address_road FROM purchase JOIN branch JOIN member ON branch.Branch_ID = purchase.Branch_ID AND purchase.Member_ID = member.Member_ID GROUP BY Level HAVING AVG(Total_pounds) < 82', 'SELECT T3.Level, T2.Open_year, T2.Address_road FROM purchase AS T1 INNER JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID INNER JOIN member AS T3 ON T1.Member_ID = T3.Member_ID GROUP BY T3.Level, T2.Open_year, T2.Address_road HAVING AVG(T1.Total_pounds) < 82'], ['SELECT branch.Branch_ID, p.Open_year, branch.Name FROM branch JOIN branch AS p ON branch.Branch_ID = p.Branch_ID WHERE  p.Branch_ID >= 13', 'SELECT Branch_ID, Open_year, Name FROM branch WHERE Branch_ID >= 13;'], ['SELECT member.Name, u.Hometown, u.Card_Number FROM member JOIN member AS u ON member.Member_ID = u.Member_ID', 'SELECT Name, Hometown, Card_Number FROM member;'], ['SELECT AVG(member.Member_ID), COUNT(DISTINCT purchase.Member_ID), Hometown FROM member JOIN membership_register_branch JOIN purchase ON member.Member_ID = membership_register_branch.Member_ID AND purchase.Member_ID = member.Member_ID WHERE  Total_pounds > 10 GROUP BY Hometown', 'SELECT AVG(T1.Member_ID), COUNT(DISTINCT T2.Member_ID), T1.Hometown FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN purchase AS T3 ON T2.Member_ID = T3.Member_ID WHERE T3.Total_pounds > 10 GROUP BY T1.Hometown'], ['SELECT u.Card_Number, u.Card_Number FROM member AS u WHERE  u.Level = 93 GROUP BY u.Card_Number ORDER BY u.Card_Number ASC', 'SELECT m.Card_Number FROM member AS m WHERE m.Level = 93 GROUP BY m.Card_Number ORDER BY m.Card_Number ASC'], ['SELECT a.Branch_ID FROM branch JOIN branch AS a ON branch.Branch_ID = a.Branch_ID WHERE  a.Branch_ID >= 64', 'SELECT Branch_ID FROM branch WHERE Branch_ID >= 64'], ['SELECT Total_pounds FROM purchase JOIN member ON purchase.Member_ID = member.Member_ID WHERE Branch_ID NOT IN (SELECT Branch_ID FROM membership_register_branch WHERE  Member_ID = 23 LIMIT 10) ORDER BY Total_pounds ASC LIMIT 7', 'SELECT CAST(Total_pounds AS TEXT) FROM purchase JOIN member ON CAST(purchase.Member_ID AS TEXT) = CAST(member.Member_ID AS TEXT) WHERE CAST(purchase.Branch_ID AS INTEGER) NOT IN (SELECT CAST(Branch_ID AS INTEGER) FROM membership_register_branch WHERE CAST(Member_ID AS INTEGER) = 23 LIMIT 10) ORDER BY CAST(Total_pounds AS INTEGER) ASC LIMIT 7'], ['SELECT MIN(i.Member_ID), i.Level FROM member AS i WHERE  i.Level < 43 AND Hometown != (SELECT AVG(Hometown) FROM member WHERE Member_ID BETWEEN 1 AND 10) LIMIT 3', 'SELECT MIN(i.Member_ID), i.Level FROM member AS i WHERE  i.Level < 43 AND Hometown != (SELECT Hometown FROM member WHERE Member_ID BETWEEN 1 AND 10 LIMIT 1) LIMIT 3']], 'e_commerce': [['SELECT AVG(g.shipment_id), SUM(g.shipment_id) FROM Shipment_Items AS g WHERE  g.order_item_id <= 8', 'SELECT AVG(g.shipment_id), SUM(g.shipment_id) FROM Shipment_Items AS g WHERE g.order_item_id <= 8'], ['SELECT AVG(parent_product_id), AVG(parent_product_id), parent_product_id FROM Products', 'SELECT AVG(parent_product_id) AS avg_parent_product_id, parent_product_id FROM Products GROUP BY parent_product_id;'], ['SELECT COUNT(DISTINCT i.product_name), i.product_price, i.product_color FROM Products AS i JOIN Products ON Products.product_id = i.product_id WHERE  Products.product_price >= 24 OR EXISTS (SELECT * FROM Order_Items WHERE Products.product_id = product_id) GROUP BY i.product_color', 'SELECT COUNT(DISTINCT i.product_name), i.product_price, i.product_color FROM Products AS i JOIN Products AS p ON p.product_id = i.product_id WHERE p.product_price >= 24 OR EXISTS (SELECT * FROM Order_Items WHERE p.product_id = Order_Items.product_id) GROUP BY i.product_color']], 'headphone_store': [['SELECT COUNT(Headphone_ID), Store_ID FROM stock WHERE  Quantity <= 11 LIMIT 3', 'SELECT Store_ID, COUNT(Headphone_ID) as headphone_count FROM stock WHERE  Quantity <= 11 GROUP BY Store_ID ORDER BY headphone_count DESC LIMIT 3'], ['SELECT Neighborhood FROM store WHERE Store_ID BETWEEN 1 AND 10 OR Store_ID IN (SELECT Store_ID FROM stock WHERE  Quantity != 99)', 'SELECT Neighborhood FROM store WHERE Store_ID BETWEEN 1 AND 10 OR Store_ID IN (SELECT Store_ID FROM stock WHERE  Quantity != 99)'], ['SELECT COUNT(DISTINCT Earpads), Driver-matched_dB FROM headphone WHERE Price BETWEEN 1 AND 10 ORDER BY Driver-matched_dB DESC', 'SELECT COUNT(DISTINCT Earpads), "Driver-matched_dB" FROM headphone WHERE Price BETWEEN 1 AND 10 ORDER BY "Driver-matched_dB" DESC;'], ['SELECT SUM(i.Price), i.Model FROM headphone AS i WHERE  i.Driver-matched_dB < 67 ORDER BY i.Model DESC', 'SELECT SUM(i.Price), i.Model FROM headphone AS i WHERE i.`Driver-matched_dB` < 67 GROUP BY i.Model ORDER BY SUM(i.Price) DESC;'], ['SELECT COUNT(DISTINCT Class), Price FROM headphone WHERE Headphone_ID BETWEEN 1 AND 10', 'SELECT COUNT(DISTINCT Class), AVG(Price) FROM headphone WHERE Headphone_ID BETWEEN 1 AND 10'], ['SELECT COUNT(DISTINCT Neighborhood), Name FROM store JOIN stock ON store.Store_ID = stock.Store_ID WHERE Headphone_ID BETWEEN 1 AND 10 OR  store.Store_ID = 28 LIMIT 7', 'SELECT COUNT(DISTINCT T1.Neighborhood), T1.Name FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Headphone_ID BETWEEN 1 AND 10 OR T1.Store_ID = 28 LIMIT 7'], ['SELECT Quantity FROM store JOIN stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID AND store.Store_ID = stock.Store_ID WHERE  Quantity != 18 ORDER BY Quantity ASC', 'SELECT Quantity FROM store JOIN stock ON store.Store_ID = stock.Store_ID JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID WHERE Quantity != 18 ORDER BY Quantity ASC'], ['SELECT headphone.Headphone_ID FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID WHERE  Driver-matched_dB = 9 LIMIT 5', 'SELECT headphone.Headphone_ID FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID WHERE "Driver-matched_dB" = 9 LIMIT 5']], 'workshop_paper': [['SELECT SUM(Submission_ID), Author, College FROM submission WHERE Author IN (SELECT Author FROM submission WHERE  Scores != 59) ORDER BY Author DESC', 'SELECT SUM(Submission_ID), Author, College FROM submission WHERE Author IN (SELECT Author FROM submission WHERE  Scores != 59) ORDER BY Author COLLATE NOCASE DESC;'], ['SELECT Venue, Date FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE  Acceptance.Workshop_ID = 33 OR EXISTS (SELECT * FROM Acceptance WHERE workshop.Workshop_ID = Workshop_ID)', 'SELECT Venue, Date FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Acceptance.Workshop_ID = 33 OR EXISTS (SELECT * FROM Acceptance AS A WHERE workshop.Workshop_ID = A.Workshop_ID)'], ['SELECT i.Submission_ID FROM submission AS i JOIN submission ON submission.Submission_ID = i.Submission_ID WHERE  i.Submission_ID < 51 ORDER BY i.Submission_ID ASC LIMIT 3', 'SELECT s.Submission_ID FROM submission AS s JOIN Acceptance AS a ON a.Submission_ID = s.Submission_ID WHERE s.Submission_ID < 51 ORDER BY s.Submission_ID ASC LIMIT 3'], ['SELECT Date, Scores FROM submission JOIN workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID AND submission.Submission_ID = Acceptance.Submission_ID WHERE  workshop.Workshop_ID < 67 AND EXISTS (SELECT * FROM workshop AS s WHERE s.Workshop_ID BETWEEN 1 AND 10 AND Acceptance.Submission_ID = s.Workshop_ID) GROUP BY Scores', 'SELECT T2.Date, AVG(T1.Scores) FROM submission AS T1 JOIN Acceptance AS T3 ON T1.Submission_ID = T3.Submission_ID JOIN workshop AS T2 ON T3.Workshop_ID = T2.Workshop_ID WHERE T2.Workshop_ID < 67 AND EXISTS (SELECT * FROM workshop AS s WHERE s.Workshop_ID BETWEEN 1 AND 10 AND T3.Workshop_ID = s.Workshop_ID) GROUP BY T2.Date'], ['SELECT MAX(Workshop_ID), COUNT(DISTINCT Acceptance.Submission_ID) FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID WHERE  Scores >= 74', 'SELECT MAX(T1.Workshop_ID), COUNT(DISTINCT T1.Submission_ID) FROM Acceptance AS T1 INNER JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T2.Scores >= 74'], ['SELECT Submission_ID FROM submission WHERE  Submission_ID != 85 OR Scores NOT IN (SELECT Scores FROM submission AS w) LIMIT 9', 'SELECT s.Submission_ID FROM submission s JOIN Acceptance a ON s.Submission_ID = a.Submission_ID WHERE a.Submission_ID != 85 OR s.Scores NOT IN (SELECT Scores FROM submission) LIMIT 9'], ['SELECT SUM(Workshop_ID), COUNT(DISTINCT Name), COUNT(DISTINCT Workshop_ID), Date FROM workshop WHERE Workshop_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Acceptance WHERE  Workshop_ID > 84 AND workshop.Workshop_ID = Workshop_ID) GROUP BY Date', 'SELECT COUNT(DISTINCT Workshop_ID), COUNT(DISTINCT Name), COUNT(DISTINCT Workshop_ID), Date FROM workshop WHERE Workshop_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Acceptance WHERE  Workshop_ID > 84 AND workshop.Workshop_ID = Acceptance.Workshop_ID) GROUP BY Date'], ['SELECT COUNT(Acceptance.Submission_ID), Scores, College FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID WHERE  submission.Submission_ID = 56 GROUP BY College HAVING SUM(Scores) = 36 ORDER BY Scores DESC LIMIT 9', 'SELECT COUNT(s.Submission_ID), s.Scores, s.College FROM submission s JOIN Acceptance a ON s.Submission_ID = a.Submission_ID WHERE  s.Submission_ID = 56 GROUP BY s.College, s.Scores HAVING SUM(s.Scores) = 36 ORDER BY s.Scores DESC LIMIT 9'], ['SELECT SUM(Workshop_ID), Name, Date FROM workshop WHERE  Workshop_ID != 81 GROUP BY Date', 'SELECT SUM(Workshop_ID), Name, Date FROM workshop WHERE Workshop_ID != 81 GROUP BY Name, Date;'], ['SELECT COUNT(DISTINCT Date), workshop.Workshop_ID FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Submission_ID BETWEEN 1 AND 10 OR  workshop.Workshop_ID != 63', 'SELECT COUNT(DISTINCT workshop.Date), workshop.Workshop_ID FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Acceptance.Submission_ID BETWEEN 1 AND 10 OR workshop.Workshop_ID != 63'], ['SELECT COUNT(DISTINCT v.Author), v.Submission_ID FROM submission AS v WHERE  v.Scores >= 11', 'SELECT COUNT(DISTINCT v.Author) FROM submission AS v WHERE v.Scores >= 11;'], ['SELECT COUNT(DISTINCT Author), Workshop_ID FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID', 'SELECT COUNT(DISTINCT Author), Workshop_ID FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID GROUP BY Workshop_ID;'], ['SELECT COUNT(DISTINCT q.Author), COUNT(DISTINCT submission.College), COUNT(DISTINCT q.Scores) FROM submission JOIN submission AS q ON submission.Submission_ID = q.Submission_ID WHERE  submission.Scores > 73', 'SELECT COUNT(DISTINCT Author), COUNT(DISTINCT College), COUNT(DISTINCT Scores) FROM submission WHERE Scores > 73'], ['SELECT Workshop_ID, Submission_ID FROM Acceptance WHERE  Workshop_ID >= 1 ORDER BY Workshop_ID DESC', 'SELECT Workshop_ID, Submission_ID FROM Acceptance WHERE Workshop_ID >= 1 ORDER BY Workshop_ID DESC'], ['SELECT COUNT(DISTINCT Submission_ID), workshop.Workshop_ID, Name FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Venue = (SELECT AVG(Venue) FROM workshop WHERE  Workshop_ID > 16 LIMIT 9) GROUP BY Name ORDER BY workshop.Workshop_ID ASC LIMIT 6', 'SELECT COUNT(DISTINCT Acceptance.Submission_ID), workshop.Workshop_ID, workshop.Name FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE workshop.Venue = (SELECT Venue FROM workshop WHERE Workshop_ID > 16 ORDER BY Workshop_ID LIMIT 1) GROUP BY workshop.Workshop_ID, workshop.Name ORDER BY workshop.Workshop_ID ASC LIMIT 6'], ['SELECT MIN(submission.Submission_ID), Acceptance.Submission_ID FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID WHERE  Workshop_ID <= 7 ORDER BY Acceptance.Submission_ID DESC', 'SELECT MIN(submission.Submission_ID), Acceptance.Submission_ID FROM submission JOIN Acceptance ON submission.Submission_ID = Acceptance.Submission_ID WHERE Acceptance.Workshop_ID <= 7 ORDER BY Acceptance.Submission_ID DESC;'], ['SELECT s.Workshop_ID FROM Acceptance AS s WHERE s.Workshop_ID BETWEEN 1 AND 10 AND  s.Workshop_ID >= 51 GROUP BY s.Workshop_ID HAVING SUM(s.Submission_ID) >= 46', 'SELECT s.Workshop_ID FROM Acceptance AS s WHERE s.Workshop_ID BETWEEN 1 AND 50 AND s.Workshop_ID >= 1 GROUP BY s.Workshop_ID HAVING COUNT(s.Submission_ID) >= 46'], ['SELECT submission.Submission_ID, workshop.Workshop_ID, workshop.Workshop_ID FROM submission JOIN workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID AND submission.Submission_ID = Acceptance.Submission_ID WHERE  Acceptance.Workshop_ID >= 20 ORDER BY workshop.Workshop_ID ASC LIMIT 8', 'SELECT T1.Submission_ID, T2.Workshop_ID FROM submission AS T1 INNER JOIN Acceptance AS T3 ON T1.Submission_ID = T3.Submission_ID INNER JOIN workshop AS T2 ON T2.Workshop_ID = T3.Workshop_ID WHERE T2.Workshop_ID >= 20 ORDER BY T2.Workshop_ID ASC LIMIT 8'], ['SELECT Date, Name FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Acceptance.Workshop_ID BETWEEN 1 AND 10 AND  workshop.Workshop_ID != 48 GROUP BY Name HAVING AVG(Acceptance.Workshop_ID) = 62', 'SELECT Date, Name FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE Acceptance.Workshop_ID BETWEEN 1 AND 10 AND  workshop.Workshop_ID != 48 GROUP BY Date, Name'], ['SELECT Submission_ID, Result FROM workshop JOIN Acceptance ON Acceptance.Workshop_ID = workshop.Workshop_ID WHERE  workshop.Workshop_ID != 0 GROUP BY Result ORDER BY Result DESC', 'SELECT A.Submission_ID, A.Result FROM Acceptance A JOIN submission s ON A.Submission_ID = s.Submission_ID JOIN workshop w ON A.Workshop_ID = w.Workshop_ID WHERE w.Workshop_ID != 0 GROUP BY A.Result ORDER BY A.Result DESC;'], ['SELECT Scores FROM submission WHERE  Submission_ID < 61 ORDER BY Scores DESC', 'SELECT Scores FROM submission WHERE Submission_ID < 61 ORDER BY Scores DESC'], ['SELECT s.Workshop_ID, s.Workshop_ID FROM Acceptance AS s WHERE  s.Workshop_ID >= 69', 'SELECT s.Workshop_ID, s.Result FROM Acceptance AS s WHERE  s.Workshop_ID >= 69']], 'restaurants': [['SELECT RESTAURANT_ID, ID, REGION FROM GEOGRAPHIC JOIN RESTAURANT JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME AND LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE RATING NOT IN (SELECT RATING FROM RESTAURANT AS e) GROUP BY REGION HAVING SUM(RESTAURANT_ID) >= 66 LIMIT 9', 'SELECT RESTAURANT.ID, GEOGRAPHIC.REGION FROM GEOGRAPHIC JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME JOIN LOCATION ON RESTAURANT.ID = LOCATION.RESTAURANT_ID WHERE RESTAURANT.RATING NOT IN (SELECT MAX(RATING) FROM RESTAURANT) GROUP BY GEOGRAPHIC.REGION HAVING COUNT(RESTAURANT.ID) >= 66 LIMIT 9'], ['SELECT ID, RESTAURANT.CITY_NAME, RATING FROM GEOGRAPHIC JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME WHERE RATING BETWEEN 1 AND 10 GROUP BY RATING', 'SELECT ID, RESTAURANT.CITY_NAME, RATING FROM GEOGRAPHIC JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME WHERE RATING BETWEEN 1 AND 10 GROUP BY RESTAURANT.CITY_NAME, ID, RATING;'], ['SELECT MAX(RESTAURANT_ID), CITY_NAME FROM LOCATION WHERE  HOUSE_NUMBER > 44 GROUP BY CITY_NAME HAVING MIN(RESTAURANT_ID) >= 42', 'SELECT CITY_NAME, MAX(RESTAURANT_ID) AS MAX_RESTAURANT_ID FROM LOCATION WHERE HOUSE_NUMBER > 44 GROUP BY CITY_NAME HAVING MAX(RESTAURANT_ID) >= 42;'], ['SELECT COUNT(HOUSE_NUMBER), LOCATION.CITY_NAME FROM GEOGRAPHIC JOIN LOCATION ON LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE HOUSE_NUMBER BETWEEN 1 AND 10 LIMIT 3', 'SELECT HOUSE_NUMBER, CITY_NAME FROM LOCATION WHERE HOUSE_NUMBER BETWEEN 1 AND 10 LIMIT 3'], ['SELECT RESTAURANT.ID, RESTAURANT.ID FROM RESTAURANT AS a JOIN RESTAURANT ON RESTAURANT.ID = a.ID WHERE  RESTAURANT.ID > 16 ORDER BY RESTAURANT.ID DESC', 'SELECT ID FROM RESTAURANT WHERE ID > 16 ORDER BY ID DESC;'], ['SELECT z.STREET_NAME FROM LOCATION AS z JOIN LOCATION ON LOCATION.RESTAURANT_ID = z.RESTAURANT_ID WHERE  LOCATION.HOUSE_NUMBER <= 70 ORDER BY z.STREET_NAME ASC LIMIT 1', 'SELECT z1.STREET_NAME FROM LOCATION AS z1 JOIN LOCATION AS z2 ON z2.RESTAURANT_ID = z1.RESTAURANT_ID WHERE  z2.HOUSE_NUMBER <= 70 ORDER BY z1.STREET_NAME ASC LIMIT 1'], ['SELECT ID FROM GEOGRAPHIC JOIN RESTAURANT JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME AND LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE  RESTAURANT_ID = 94', 'SELECT T1.ID FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID JOIN GEOGRAPHIC AS T3 ON T2.CITY_NAME = T3.CITY_NAME WHERE T1.ID = 94;'], ['SELECT COUNT(ID) FROM GEOGRAPHIC JOIN RESTAURANT JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = RESTAURANT.CITY_NAME AND LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE HOUSE_NUMBER NOT IN (SELECT HOUSE_NUMBER FROM LOCATION AS w WHERE w.HOUSE_NUMBER BETWEEN 1 AND 10 LIMIT 7) LIMIT 7', 'SELECT COUNT(r.ID) FROM RESTAURANT r JOIN LOCATION l ON r.ID = l.RESTAURANT_ID JOIN GEOGRAPHIC g ON r.CITY_NAME = g.CITY_NAME WHERE l.HOUSE_NUMBER NOT IN (SELECT HOUSE_NUMBER FROM LOCATION) LIMIT 7'], ['SELECT STREET_NAME FROM GEOGRAPHIC JOIN LOCATION ON LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE  RESTAURANT_ID < 43 ORDER BY STREET_NAME DESC LIMIT 4', 'SELECT STREET_NAME FROM GEOGRAPHIC JOIN LOCATION ON LOCATION.CITY_NAME = GEOGRAPHIC.CITY_NAME WHERE LOCATION.RESTAURANT_ID < 43 ORDER BY STREET_NAME DESC LIMIT 4']], 'program_share': [['SELECT Share_in_percent FROM program JOIN broadcast_share ON program.Program_ID = broadcast_share.Program_ID WHERE Launch BETWEEN 1 AND 10 AND  Channel_ID < 69 ORDER BY Share_in_percent ASC', 'SELECT Share_in_percent FROM program JOIN broadcast_share ON program.Program_ID = broadcast_share.Program_ID WHERE Launch BETWEEN 1 AND 10 AND  Channel_ID < 69 ORDER BY Share_in_percent ASC'], ['SELECT Time_of_day FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE Share_in_percent BETWEEN 1 AND 10 AND  Program_ID != 8 ORDER BY Time_of_day ASC', 'SELECT Time_of_day FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE Share_in_percent BETWEEN 1 AND 10 AND  Program_ID != 8 ORDER BY Time_of_day ASC'], ['SELECT SUM(broadcast.Channel_ID), Share_in_percent, Time_of_day FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE  Rating_in_percent < 88 GROUP BY Time_of_day LIMIT 10', 'SELECT COUNT(broadcast.Channel_ID), Share_in_percent, Time_of_day FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE Rating_in_percent < 88 GROUP BY Time_of_day, Share_in_percent LIMIT 10;'], ['SELECT channel.Channel_ID FROM channel JOIN program JOIN broadcast_share ON program.Program_ID = broadcast_share.Program_ID AND broadcast_share.Channel_ID = channel.Channel_ID WHERE broadcast_share.Program_ID BETWEEN 1 AND 10 AND  broadcast_share.Channel_ID >= 58', 'SELECT T2.Channel_ID FROM program AS T1 INNER JOIN broadcast_share AS T2 ON T1.Program_ID = T2.Program_ID INNER JOIN channel AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE T2.Program_ID BETWEEN 1 AND 10 AND T2.Channel_ID >= 58'], ['SELECT a.Launch, a.Name FROM program AS a WHERE a.Launch BETWEEN 1 AND 10 ORDER BY a.Launch ASC LIMIT 1', 'SELECT Name, Launch FROM program WHERE Launch BETWEEN 1 AND 10 ORDER BY Launch ASC LIMIT 1'], ['SELECT Channel_ID, Share_in_percent, Name FROM channel WHERE  Channel_ID > 42 GROUP BY Name LIMIT 3', 'SELECT Channel_ID, Share_in_percent, Name FROM channel WHERE Channel_ID > 42 LIMIT 3;'], ['SELECT COUNT(channel.Channel_ID), Program_ID, channel.Channel_ID FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE  Share_in_percent >= 94', 'SELECT COUNT(c.Channel_ID), b.Program_ID, c.Channel_ID FROM channel c JOIN broadcast b ON c.Channel_ID = b.Channel_ID WHERE  c.Share_in_percent >= 94'], ['SELECT broadcast_share.Program_ID FROM program JOIN broadcast_share ON program.Program_ID = broadcast_share.Program_ID WHERE  Share_in_percent > 11 ORDER BY broadcast_share.Program_ID ASC LIMIT 7', 'SELECT T3.Program_ID FROM broadcast_share AS T1 JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T2.Program_ID = T3.Program_ID WHERE T1.Share_in_percent > 11 ORDER BY T3.Program_ID ASC LIMIT 7'], ['SELECT w.Launch FROM program AS w ORDER BY w.Launch ASC LIMIT 5', 'SELECT w.Launch FROM program AS w ORDER BY w.Launch ASC LIMIT 5'], ['SELECT MAX(Launch) FROM program WHERE  Program_ID <= 61', 'SELECT MAX(Launch) FROM program WHERE Program_ID <= 61'], ['SELECT COUNT(DISTINCT broadcast.Channel_ID), COUNT(DISTINCT Program_ID) FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE  Rating_in_percent = 92 LIMIT 7', 'SELECT COUNT(DISTINCT T1.Channel_ID), COUNT(DISTINCT T2.Program_ID) FROM channel AS T1 JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE  T1.Rating_in_percent = 92 LIMIT 7'], ['SELECT Time_of_day FROM broadcast WHERE Program_ID BETWEEN 1 AND 10 AND  Channel_ID < 37 LIMIT 3', 'SELECT Time_of_day FROM broadcast WHERE Program_ID BETWEEN 1 AND 10 AND Channel_ID < 37 LIMIT 3'], ['SELECT COUNT(Share_in_percent), COUNT(DISTINCT Channel_ID), COUNT(DISTINCT Rating_in_percent), Rating_in_percent FROM channel WHERE  Channel_ID = 30 GROUP BY Rating_in_percent', 'SELECT COUNT(Share_in_percent), COUNT(DISTINCT Channel_ID), COUNT(DISTINCT Rating_in_percent), AVG(Rating_in_percent) FROM channel WHERE Channel_ID = 30'], ['SELECT channel.Channel_ID FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE  Program_ID = 88 ORDER BY channel.Channel_ID ASC LIMIT 4', 'SELECT channel.Channel_ID FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE Program_ID = 88 ORDER BY channel.Channel_ID ASC LIMIT 4;'], ['SELECT COUNT(DISTINCT Program_ID), COUNT(DISTINCT Owner), COUNT(DISTINCT Program_ID), Launch FROM program WHERE Launch BETWEEN 1 AND 10 AND  Launch = 71 GROUP BY Launch', 'SELECT COUNT(DISTINCT Program_ID), COUNT(DISTINCT Owner), COUNT(DISTINCT Program_ID) FROM program WHERE Launch = 71'], ['SELECT Rating_in_percent, Name FROM channel WHERE Name NOT IN (SELECT Name FROM program AS k WHERE  k.Launch < 9 LIMIT 4) ORDER BY Rating_in_percent ASC LIMIT 7', 'SELECT T1.Rating_in_percent, T1.Name FROM channel AS T1 INNER JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T2.Program_ID NOT IN (SELECT Program_ID FROM program WHERE Launch < 9 LIMIT 4) ORDER BY T1.Rating_in_percent ASC LIMIT 7'], ['SELECT MIN(Launch), COUNT(DISTINCT Origin), Program_ID FROM program WHERE  Program_ID >= 50', 'SELECT MIN(Launch) AS min_launch, COUNT(DISTINCT Origin) AS origin_count, Program_ID FROM program WHERE Program_ID >= 50 GROUP BY Program_ID;']], 'inn_1': [['SELECT Reservations.Kids, a.Kids FROM Reservations JOIN Reservations AS a ON Reservations.Code = a.Code WHERE a.Adults BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Rooms WHERE  beds <= 36 AND Reservations.Code = RoomId)', 'SELECT r.Kids, r2.Kids FROM Reservations AS r JOIN Reservations AS r2 ON r.Room = r2.Room WHERE r2.Adults BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Rooms WHERE beds <= 36 AND r.Room = RoomId)'], ['SELECT SUM(Kids), CheckOut FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE maxOccupancy BETWEEN 1 AND 10 OR  Rate = 30', 'SELECT SUM(Kids), CheckOut FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE Rooms.maxOccupancy BETWEEN 1 AND 10 OR Reservations.Rate = 30;'], ['SELECT COUNT(DISTINCT i.Code), i.LastName FROM Reservations AS i WHERE Code != (SELECT AVG(Code) FROM Reservations)', 'SELECT COUNT(DISTINCT i.Code), i.LastName FROM Reservations AS i WHERE CAST(i.Code AS decimal) != (SELECT AVG(CAST(Code AS decimal)) FROM Reservations)'], ['SELECT Kids, Kids FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE  beds != 34 ORDER BY Kids DESC', 'SELECT Kids FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE beds != 34 ORDER BY Kids DESC;'], ['SELECT MIN(Rate), FirstName FROM Reservations WHERE  Kids > 87 LIMIT 3', 'SELECT MIN(Rate) FROM Reservations WHERE Kids > 87 LIMIT 1'], ['SELECT SUM(beds), CheckOut FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE basePrice BETWEEN 1 AND 10 OR  Kids = 65 ORDER BY CheckOut DESC', 'SELECT SUM(r.beds), r1.CheckOut FROM Rooms r JOIN Reservations r1 ON r1.Room = r.RoomId WHERE r.basePrice BETWEEN 1 AND 10 AND r1.Kids = 65 ORDER BY r1.CheckOut DESC'], ['SELECT beds, roomName, maxOccupancy FROM Rooms WHERE maxOccupancy BETWEEN 1 AND 10 OR  basePrice = 73 GROUP BY maxOccupancy HAVING SUM(basePrice) >= 30', 'SELECT beds, roomName, maxOccupancy FROM Rooms WHERE maxOccupancy BETWEEN 1 AND 10 OR basePrice = 73'], ['SELECT t.roomName, Rooms.roomName, t.bedType FROM Rooms JOIN Rooms AS t ON Rooms.RoomId = t.RoomId WHERE Rooms.beds BETWEEN 1 AND 10 OR  t.basePrice < 28 GROUP BY t.bedType', 'SELECT T1.roomName, T1.bedType FROM Rooms AS T1 WHERE T1.beds BETWEEN 1 AND 10 OR T1.basePrice < 28 GROUP BY T1.bedType'], ['SELECT AVG(y.Adults), Reservations.Code FROM Reservations JOIN Reservations AS y ON Reservations.Code = y.Code ORDER BY Reservations.Code ASC LIMIT 8', 'SELECT AVG(T2.Adults), T1.Code FROM Reservations AS T1 JOIN Reservations AS T2 ON T1.Code = T2.Code ORDER BY T1.Code ASC LIMIT 8'], ['SELECT decor, beds FROM Rooms WHERE  maxOccupancy > 66 GROUP BY beds LIMIT 6', 'SELECT decor, beds FROM Rooms WHERE maxOccupancy > 66 ORDER BY beds LIMIT 6;'], ['SELECT MAX(Adults), Kids FROM Reservations WHERE EXISTS (SELECT * FROM Rooms WHERE  beds > 87 AND Reservations.Code = RoomId LIMIT 4)', 'SELECT MAX(Adults), Kids FROM Reservations WHERE EXISTS (SELECT * FROM Rooms WHERE beds > 87 AND Reservations.Room = Rooms.RoomId LIMIT 4)'], ['SELECT MIN(maxOccupancy), decor FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE  basePrice <= 18', 'SELECT decor, maxOccupancy FROM Rooms WHERE basePrice <= 18 ORDER BY maxOccupancy LIMIT 1;'], ['SELECT COUNT(b.maxOccupancy), b.beds FROM Rooms AS b WHERE b.beds BETWEEN 1 AND 10 AND roomName >= (SELECT MAX(roomName) FROM Rooms AS x WHERE x.maxOccupancy BETWEEN 1 AND 10 AND  x.beds < 25 LIMIT 6) GROUP BY b.beds', 'SELECT COUNT(Rooms.maxOccupancy), Rooms.beds FROM Rooms WHERE Rooms.beds BETWEEN 1 AND 10 AND Rooms.roomName >= (SELECT MAX(roomName) FROM Rooms AS x WHERE x.maxOccupancy BETWEEN 1 AND 10 AND x.beds < 25) GROUP BY Rooms.beds'], ['SELECT Reservations.Code FROM Reservations AS g JOIN Reservations ON Reservations.Code = g.Code WHERE  Reservations.Adults != 74', 'SELECT r1.Code FROM Reservations AS r1 JOIN Reservations AS r2 ON r1.Code != r2.Code WHERE r1.Adults != 74 AND r2.Adults != 74']], 'match_season': [['SELECT AVG(Team_id), MAX(Team_id) FROM team WHERE Name NOT IN (SELECT Name FROM team AS k)', 'SELECT AVG(Team_id), MAX(Team_id) FROM team'], ['SELECT COUNT(DISTINCT d.Team_id), COUNT(DISTINCT d.Team_id), d.Name FROM team AS d GROUP BY d.Name LIMIT 5', 'SELECT COUNT(DISTINCT d.Team_id), d.Name FROM team AS d GROUP BY d.Name LIMIT 5'], ['SELECT Team_id, Official_native_language FROM team JOIN country JOIN match_season JOIN player ON match_season.Team = team.Team_id AND team.Team_id = player.Team AND country.Country_id = match_season.Country WHERE Country BETWEEN 1 AND 10 GROUP BY Official_native_language ORDER BY Team_id DESC', 'SELECT T1.Team_id, T3.Official_native_language FROM team T1 JOIN match_season T2 ON T2.Team = T1.Team_id JOIN country T3 ON T2.Country = T3.Country_id JOIN player T4 ON T1.Team_id = T4.Team WHERE T3.Country_id BETWEEN 1 AND 10 GROUP BY T3.Official_native_language ORDER BY T1.Team_id DESC;'], ['SELECT COUNT(DISTINCT d.Country_name), d.Official_native_language FROM country AS d WHERE  d.Country_id <= 57 LIMIT 1', 'SELECT COUNT(DISTINCT d.Country_name), d.Official_native_language FROM country AS d WHERE  d.Country_id <= 57 LIMIT 1'], ['SELECT Team, Name FROM team JOIN match_season ON match_season.Team = team.Team_id WHERE  Team_id = 31 GROUP BY Name LIMIT 5', 'SELECT Name FROM team WHERE Team_id = 31 GROUP BY Name LIMIT 5']], 'video_game': [['SELECT game.Release_Date FROM game AS c JOIN game ON game.Game_ID = c.Game_ID WHERE  c.Game_ID >= 35', 'SELECT Release_Date FROM game WHERE Game_ID >= 35;'], ['SELECT COUNT(DISTINCT Market_district), Download_rank FROM platform WHERE  Download_rank > 37 GROUP BY Download_rank HAVING MAX(Download_rank) > 97 LIMIT 7', 'SELECT COUNT(DISTINCT Market_district), Download_rank FROM platform WHERE Download_rank > 37 GROUP BY Download_rank, Market_district HAVING MAX(Download_rank) > 97 LIMIT 7'], ['SELECT MAX(Rank_of_the_year) FROM player WHERE Player_ID BETWEEN 1 AND 10 OR Rank_of_the_year IN (SELECT Rank_of_the_year FROM player AS r) LIMIT 5', 'SELECT MAX(Rank_of_the_year) FROM player WHERE Player_ID BETWEEN 1 AND 10 LIMIT 1'], ['SELECT AVG(d.Player_ID), MIN(d.Player_ID) FROM player AS d WHERE  d.Rank_of_the_year = 46 LIMIT 1', 'SELECT AVG(d.Player_ID), MIN(d.Player_ID) FROM player AS d WHERE  d.Rank_of_the_year = 46;'], ['SELECT MAX(Game_ID), If_active FROM game_player WHERE  Game_ID = 25 ORDER BY If_active DESC LIMIT 6', 'SELECT MAX(Game_ID), If_active FROM game_player WHERE Game_ID = 25 ORDER BY If_active DESC LIMIT 6'], ['SELECT platform.Download_rank FROM platform AS i JOIN platform ON platform.Platform_ID = i.Platform_ID', 'SELECT t1.Download_rank FROM platform AS t1 JOIN platform AS t2 ON t2.Platform_ID = t1.Platform_ID'], ['SELECT MAX(v.Game_ID), v.If_active FROM game_player AS v', 'SELECT MAX(v.Game_ID), MAX(v.If_active) FROM game_player AS v'], ['SELECT AVG(h.Rank_of_the_year), h.College FROM player AS h WHERE  h.Rank_of_the_year <= 82 GROUP BY h.College LIMIT 2', 'SELECT AVG(h.Rank_of_the_year) AS avg_rank, h.College FROM player AS h WHERE h.Rank_of_the_year <= 82 GROUP BY h.College ORDER BY avg_rank LIMIT 2;'], ['SELECT platform.Platform_ID, platform.Platform_ID FROM platform JOIN platform AS a ON platform.Platform_ID = a.Platform_ID', 'SELECT platform.Platform_ID, platform.Platform_name FROM platform JOIN platform AS a ON platform.Platform_ID = a.Platform_ID;'], ['SELECT game.Platform_ID, Release_Date FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE Game_ID BETWEEN 1 AND 10', 'SELECT g.Game_ID, g.Release_Date FROM platform p JOIN game g ON g.Platform_ID = p.Platform_ID WHERE g.Game_ID BETWEEN 1 AND 10;'], ['SELECT COUNT(game.Game_ID), Platform_ID FROM game_player JOIN game ON game_player.Game_ID = game.Game_ID WHERE  Player_ID >= 99 ORDER BY Platform_ID ASC LIMIT 9', 'SELECT COUNT(gp.Game_ID), g.Platform_ID FROM game_player gp JOIN game g ON gp.Game_ID = g.Game_ID WHERE gp.Player_ID >= 99 GROUP BY g.Platform_ID ORDER BY g.Platform_ID ASC LIMIT 9'], ['SELECT Rank_of_the_year, Position FROM player WHERE Rank_of_the_year NOT IN (SELECT Rank_of_the_year FROM player WHERE  Rank_of_the_year > 86 LIMIT 7) GROUP BY Position LIMIT 7', 'SELECT Rank_of_the_year, Position FROM player WHERE Rank_of_the_year NOT IN (SELECT Rank_of_the_year FROM player WHERE Rank_of_the_year > 86) GROUP BY Position ORDER BY Rank_of_the_year LIMIT 7'], ['SELECT j.Platform_ID, j.Release_Date, j.Franchise FROM game JOIN game AS j ON game.Game_ID = j.Game_ID GROUP BY j.Franchise ORDER BY j.Platform_ID ASC', 'SELECT Platform_ID, Release_Date, Franchise FROM game GROUP BY Franchise, Platform_ID, Release_Date ORDER BY Platform_ID ASC;'], ['SELECT COUNT(game.Platform_ID), Franchise, Download_rank FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE Release_Date IN (SELECT Release_Date FROM game AS z WHERE  z.Units_sold_Millions > 71 LIMIT 4) GROUP BY Download_rank HAVING SUM(Download_rank) < 66 ORDER BY Franchise ASC LIMIT 6', 'SELECT COUNT(game.Title), Franchise, Download_rank FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE Release_Date IN (SELECT Release_Date FROM game AS z WHERE  z.Units_sold_Millions > 71 LIMIT 4) GROUP BY Franchise, Download_rank HAVING Download_rank < 66 ORDER BY Franchise ASC LIMIT 6'], ['SELECT If_active, Game_ID FROM game_player WHERE Game_ID BETWEEN 1 AND 10 GROUP BY Game_ID', 'SELECT If_active, Game_ID FROM game_player WHERE Game_ID BETWEEN 1 AND 10 GROUP BY If_active, Game_ID;'], ['SELECT Download_rank, Developers FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE Platform_ID NOT IN (SELECT Platform_ID FROM platform WHERE Download_rank BETWEEN 1 AND 10 LIMIT 6) GROUP BY Developers HAVING AVG(platform.Platform_ID) <= 49 ORDER BY Download_rank ASC', 'SELECT T2.Download_rank, T1.Developers FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Download_rank NOT IN (SELECT Download_rank FROM platform WHERE Download_rank BETWEEN 1 AND 10 LIMIT 6) GROUP BY T1.Developers, T2.Download_rank HAVING COUNT(T1.Game_ID) > 0 ORDER BY T2.Download_rank ASC'], ['SELECT AVG(q.Player_ID), COUNT(DISTINCT q.If_active), COUNT(DISTINCT q.Player_ID) FROM game_player AS q WHERE q.Player_ID BETWEEN 1 AND 10 OR  q.Player_ID >= 18 LIMIT 4', 'SELECT COUNT(DISTINCT q.If_active), COUNT(DISTINCT q.Player_ID) FROM game_player AS q WHERE (q.Player_ID BETWEEN 1 AND 10) OR q.Player_ID >= 18 LIMIT 4'], ['SELECT COUNT(DISTINCT g.Franchise) FROM game AS g WHERE  g.Game_ID > 33', 'SELECT COUNT(DISTINCT g.Franchise) FROM game AS g WHERE g.Game_ID > 33;'], ['SELECT game.Platform_ID, Franchise FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE  Units_sold_Millions = 33 GROUP BY Franchise', 'SELECT game.Platform_ID, game.Franchise FROM platform JOIN game ON game.Platform_ID = platform.Platform_ID WHERE game.Units_sold_Millions = 33 GROUP BY game.Franchise, game.Platform_ID;'], ['SELECT Game_ID, If_active FROM game_player JOIN player ON player.Player_ID = game_player.Player_ID WHERE  player.Player_ID > 51 GROUP BY If_active ORDER BY Game_ID DESC', 'SELECT Game_ID, If_active FROM game_player JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.Player_ID > 51 GROUP BY If_active ORDER BY Game_ID DESC']], 'loan_1': [['SELECT AVG(amount), bank.branch_ID FROM bank JOIN loan ON loan.branch_ID = bank.branch_ID WHERE  amount <= 74 LIMIT 8', 'SELECT AVG(amount), CAST(bank.branch_ID AS TEXT) FROM bank JOIN loan ON CAST(bank.branch_ID AS TEXT) = loan.branch_ID WHERE amount <= 74 LIMIT 8;'], ['SELECT COUNT(DISTINCT bank.branch_ID), e.branch_ID FROM bank AS e JOIN bank ON bank.branch_ID = e.branch_ID WHERE  bank.no_of_customers <= 67 LIMIT 8', 'SELECT COUNT(DISTINCT branch_ID) FROM bank WHERE no_of_customers <= 67 LIMIT 1'], ['SELECT acc_bal, acc_type FROM customer WHERE no_of_loans BETWEEN 1 AND 10 AND  credit_score < 60 LIMIT 3', 'SELECT acc_bal, acc_type FROM customer WHERE no_of_loans BETWEEN 1 AND 10 AND credit_score < 600 LIMIT 3;'], ['SELECT SUM(amount), loan_type FROM loan', 'SELECT loan_type, SUM(amount) FROM loan GROUP BY loan_type;'], ['SELECT COUNT(DISTINCT s.cust_ID), s.state FROM customer AS s WHERE acc_bal >= (SELECT MAX(acc_bal) FROM customer AS f WHERE  f.branch_ID >= 42 LIMIT 5) ORDER BY s.state ASC', 'SELECT COUNT(DISTINCT s.cust_ID), s.state FROM customer AS s WHERE acc_bal >= (SELECT MAX(acc_bal) FROM customer AS f WHERE  f.branch_ID <= 42 LIMIT 5) ORDER BY s.state ASC'], ['SELECT COUNT(amount), amount, loan_type FROM loan WHERE loan_type < (SELECT SUM(loan_type) FROM loan WHERE  amount != 42) GROUP BY loan_type HAVING SUM(amount) > 2 ORDER BY loan_type ASC', 'SELECT COUNT(amount), loan_type FROM loan WHERE amount > 2 GROUP BY loan_type ORDER BY loan_type ASC'], ['SELECT loan_type FROM loan JOIN bank JOIN customer ON bank.branch_ID = customer.branch_ID AND loan.branch_ID = bank.branch_ID WHERE  acc_bal != 51 LIMIT 2', 'SELECT loan_type FROM loan JOIN bank ON CAST(bank.branch_ID AS TEXT) = loan.branch_ID JOIN customer ON CAST(customer.branch_ID AS TEXT) = loan.branch_ID WHERE customer.acc_bal != 51 LIMIT 2'], ['SELECT AVG(branch_ID), AVG(no_of_customers), no_of_customers FROM bank WHERE branch_ID BETWEEN 1 AND 10 GROUP BY no_of_customers HAVING MAX(no_of_customers) < 67 ORDER BY no_of_customers ASC LIMIT 1', 'SELECT AVG(branch_ID), AVG(no_of_customers), no_of_customers FROM bank WHERE branch_ID BETWEEN 1 AND 10 GROUP BY no_of_customers ORDER BY no_of_customers ASC LIMIT 1'], ['SELECT COUNT(DISTINCT city), city FROM bank WHERE state IN (SELECT state FROM customer AS s WHERE  s.branch_ID >= 57 LIMIT 5) ORDER BY city ASC', 'SELECT COUNT(DISTINCT city) as count, city FROM bank WHERE state IN (SELECT state FROM customer AS s WHERE s.branch_ID >= 57 LIMIT 5) GROUP BY city ORDER BY city ASC'], ['SELECT u.branch_ID, u.branch_ID FROM loan JOIN loan AS u ON loan.loan_ID = u.loan_ID WHERE  loan.amount >= 78', 'SELECT l.branch_ID, c.cust_name FROM loan AS l JOIN customer AS c ON l.cust_ID = c.cust_ID WHERE l.amount >= 78'], ['SELECT MIN(acc_bal), MIN(credit_score), cust_ID FROM customer WHERE  acc_bal != 36 ORDER BY cust_ID DESC', 'SELECT MIN(acc_bal), MIN(credit_score), cust_ID FROM customer WHERE acc_bal != 36 ORDER BY cust_ID DESC;']], 'driving_school': [['SELECT vehicle_details, vehicle_details, vehicle_details FROM Vehicles WHERE vehicle_id BETWEEN 1 AND 10 AND vehicle_id <= (SELECT AVG(vehicle_id) FROM Lessons WHERE  vehicle_id >= 71) ORDER BY vehicle_details DESC', 'SELECT vehicle_details FROM Vehicles WHERE vehicle_id BETWEEN 1 AND 10 AND vehicle_id <= (SELECT AVG(vehicle_id) FROM Lessons WHERE vehicle_id >= 71) ORDER BY vehicle_details DESC;'], ['SELECT e.last_name FROM Staff AS e JOIN Staff ON Staff.staff_id = e.staff_id ORDER BY e.last_name ASC LIMIT 6', 'SELECT e.last_name FROM Staff AS e ORDER BY e.last_name ASC LIMIT 6'], ['SELECT Staff.last_name, date_left_staff FROM Addresses JOIN Customers JOIN Staff ON Customers.customer_address_id = Addresses.address_id AND Staff.staff_address_id = Addresses.address_id WHERE date_became_customer < (SELECT AVG(date_became_customer) FROM Customers LIMIT 5) GROUP BY date_left_staff HAVING COUNT(amount_outstanding) < 39', 'SELECT s.last_name, s.date_left_staff FROM Addresses AS a JOIN Customers AS c ON c.customer_address_id = a.address_id JOIN Staff AS s ON s.staff_address_id = a.address_id WHERE c.date_became_customer < (SELECT AVG(date_became_customer) FROM Customers) GROUP BY s.date_left_staff, s.last_name HAVING COUNT(c.amount_outstanding) < 39'], ['SELECT Staff.last_name FROM Addresses JOIN Customers JOIN Customer_Payments JOIN Staff ON Customers.customer_address_id = Addresses.address_id AND Staff.staff_address_id = Addresses.address_id AND Customer_Payments.customer_id = Customers.customer_id WHERE amount_payment BETWEEN 1 AND 10 AND address_id IN (SELECT address_id FROM Addresses)', 'SELECT Staff.last_name FROM Addresses JOIN Staff ON Addresses.address_id = Staff.staff_address_id JOIN Customers ON Customers.customer_address_id = Addresses.address_id JOIN Customer_Payments ON Customer_Payments.customer_id = Customers.customer_id WHERE amount_payment BETWEEN 1 AND 10 AND Addresses.address_id IN (SELECT address_id FROM Addresses)'], ['SELECT COUNT(DISTINCT j.amount_payment), j.datetime_payment FROM Customer_Payments AS j GROUP BY j.datetime_payment HAVING AVG(j.customer_id) > 46 LIMIT 8', 'SELECT COUNT(DISTINCT j.amount_payment) FROM Customer_Payments AS j GROUP BY j.customer_id HAVING AVG(j.amount_payment) > 46 LIMIT 8'], ['SELECT address_id FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE EXISTS (SELECT * FROM Lessons WHERE  staff_id <= 56 AND Staff.staff_id = staff_id)', 'SELECT address_id FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE EXISTS (SELECT * FROM Lessons WHERE staff_id <= 56 AND Staff.staff_id = Lessons.staff_id)'], ['SELECT AVG(s.vehicle_id), s.vehicle_details FROM Vehicles AS s WHERE s.vehicle_id BETWEEN 1 AND 10 GROUP BY s.vehicle_details', 'SELECT AVG(s.vehicle_id) FROM Vehicles AS s WHERE s.vehicle_id BETWEEN 1 AND 10'], ['SELECT COUNT(DISTINCT phone_number), staff_id FROM Addresses JOIN Customers JOIN Staff ON Customers.customer_address_id = Addresses.address_id AND Staff.staff_address_id = Addresses.address_id ORDER BY staff_id DESC LIMIT 3', 'SELECT COUNT(DISTINCT c.phone_number), s.staff_id FROM Addresses a JOIN Customers c ON c.customer_address_id = a.address_id JOIN Staff s ON s.staff_address_id = a.address_id ORDER BY COUNT(DISTINCT c.phone_number) DESC LIMIT 3'], ['SELECT COUNT(DISTINCT amount_payment) FROM Customer_Payments WHERE  amount_payment = 50', 'SELECT COUNT(DISTINCT amount_payment) FROM Customer_Payments'], ['SELECT SUM(address_id), COUNT(DISTINCT country), address_id FROM Addresses WHERE  address_id <= 90 AND state_province_county NOT IN (SELECT state_province_county FROM Addresses AS g WHERE g.address_id BETWEEN 1 AND 10)', 'SELECT SUM(address_id), COUNT(DISTINCT country) FROM Addresses WHERE address_id <= 90 AND state_province_county NOT IN (SELECT state_province_county FROM Addresses AS g WHERE g.address_id BETWEEN 1 AND 10)'], ['SELECT COUNT(DISTINCT staff_id), email_address FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id WHERE  Lessons.customer_id <= 92 ORDER BY email_address ASC LIMIT 3', 'SELECT COUNT(DISTINCT T1.staff_id), T3.email_address FROM Staff AS T1 JOIN Lessons AS T2 ON T1.staff_id = T2.staff_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id WHERE T2.customer_id <= 92 ORDER BY T3.email_address ASC LIMIT 3'], ['SELECT SUM(staff_id), price, customer_status_code FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id WHERE price NOT IN (SELECT price FROM Lessons AS p) GROUP BY customer_status_code HAVING COUNT(Lessons.customer_id) <= 28 ORDER BY customer_status_code ASC', 'SELECT SUM(price) AS total_price, customer_status_code FROM Customers JOIN Lessons ON Customers.customer_id = Lessons.customer_id GROUP BY customer_status_code HAVING COUNT(Lessons.customer_id) <= 28 ORDER BY customer_status_code ASC'], ['SELECT middle_name FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE staff_address_id BETWEEN 1 AND 10', 'SELECT middle_name FROM Addresses JOIN Staff ON Staff.staff_address_id = Addresses.address_id WHERE Staff.staff_address_id BETWEEN 1 AND 10']], 'bike_1': [['SELECT i.lat, i.city FROM station AS i WHERE  i.dock_count < 93 GROUP BY i.city ORDER BY i.city DESC', 'SELECT i.lat, i.city FROM station i WHERE  i.dock_count < 93 GROUP BY i.city ORDER BY i.city DESC'], ['SELECT MAX(dock_count), bikes_available, name, station_id FROM station JOIN status ON status.station_id = station.id WHERE  lat != 24 GROUP BY station_id HAVING MAX(lat) < 60', 'SELECT MAX(dock_count), bikes_available, name, station_id FROM station JOIN status ON status.station_id = station.id WHERE  lat != 24 GROUP BY station_id, name, bikes_available HAVING MAX(lat) < 60'], ['SELECT COUNT(DISTINCT dock_count), long, time FROM station JOIN status ON status.station_id = station.id WHERE  lat != 19 GROUP BY time ORDER BY time ASC', 'SELECT COUNT(DISTINCT dock_count), long, time FROM station JOIN status ON status.station_id = station.id WHERE  lat != 19 GROUP BY long, time ORDER BY time ASC'], ['SELECT MIN(docks_available), SUM(station_id), bikes_available FROM status WHERE  station_id != 74 GROUP BY bikes_available HAVING MAX(bikes_available) <= 91 LIMIT 1', 'SELECT MIN(T1.docks_available), SUM(T1.station_id), T1.bikes_available FROM ( SELECT station_id, docks_available, bikes_available, ROW_NUMBER() OVER (PARTITION BY bikes_available ORDER BY station_id) as rn FROM status WHERE station_id != 74 ) T1 WHERE T1.rn = 1 GROUP BY T1.bikes_available HAVING MAX(T1.bikes_available) <= 91 LIMIT 1'], ['SELECT dock_count, city, name FROM station JOIN status ON status.station_id = station.id WHERE docks_available BETWEEN 1 AND 10 AND  docks_available >= 57 GROUP BY name HAVING AVG(station_id) <= 46', 'SELECT T2.dock_count, T2.city, T2.name FROM station AS T2 JOIN status AS T1 ON T1.station_id = T2.id WHERE T1.docks_available BETWEEN 1 AND 10 AND  T1.docks_available <= 57 GROUP BY T2.name, T2.dock_count, T2.city HAVING AVG(T2.id) <= 46'], ['SELECT COUNT(DISTINCT start_date), subscription_type FROM trip WHERE  id > 29 LIMIT 8', 'SELECT COUNT(DISTINCT start_date), subscription_type FROM trip WHERE id > 29 GROUP BY subscription_type LIMIT 8;'], ['SELECT COUNT(DISTINCT city) FROM station JOIN status ON status.station_id = station.id LIMIT 5', 'SELECT COUNT(DISTINCT station.city) FROM station JOIN status ON status.station_id = station.id LIMIT 5'], ['SELECT y.name FROM station JOIN station AS y ON station.id = y.id WHERE city IN (SELECT city FROM station WHERE dock_count BETWEEN 1 AND 10 AND  id = 85) ORDER BY y.name DESC LIMIT 6', 'SELECT y.name FROM station CROSS JOIN station AS y WHERE city IN (SELECT city FROM station WHERE dock_count BETWEEN 1 AND 10 AND  id = 85) ORDER BY y.name DESC LIMIT 6'], ['SELECT COUNT(DISTINCT city) FROM station WHERE long BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM status WHERE  docks_available = 66 AND station.id = station_id)', 'SELECT COUNT(DISTINCT city) FROM station WHERE long BETWEEN 1 AND 10 AND id IN (SELECT station_id FROM status WHERE docks_available = 66)'], ['SELECT name, name FROM station JOIN status ON status.station_id = station.id WHERE  long = 100', 'SELECT T1.name, T2.name FROM station AS T1 JOIN status AS T2 ON T2.station_id = T1.id WHERE T1.long = 100'], ['SELECT MIN(o.max_gust_speed_mph), o.min_humidity, o.mean_visibility_miles FROM weather AS o WHERE  o.mean_wind_speed_mph != 96 OR max_dew_point_f IN (SELECT max_dew_point_f FROM weather WHERE  wind_dir_degrees <= 0)', 'SELECT MIN(max_gust_speed_mph), min_humidity, mean_visibility_miles FROM weather AS o WHERE mean_wind_speed_mph != 96 OR max_dew_point_f IN (SELECT max_dew_point_f FROM weather WHERE wind_dir_degrees <= 0)'], ['SELECT SUM(lat), city FROM station WHERE long IN (SELECT long FROM station AS j WHERE j.id BETWEEN 1 AND 10) LIMIT 3', 'SELECT AVG(lat), city FROM station WHERE long IN (SELECT long FROM station AS j WHERE j.id BETWEEN 1 AND 10) GROUP BY city LIMIT 3']], 'conference': [['SELECT COUNT(DISTINCT Conference_Name), Conference_Name, Location FROM conference WHERE  Year <= 29 AND Conference_ID > (SELECT MIN(Conference_ID) FROM conference_participation LIMIT 4) GROUP BY Location HAVING AVG(Conference_ID) > 61 ORDER BY Location ASC', 'SELECT COUNT(DISTINCT Conference_Name), Conference_Name, Location FROM conference WHERE Year <= 29 AND Conference_ID > (SELECT MIN(Conference_ID) FROM conference_participation) GROUP BY Location, Conference_Name HAVING AVG(Conference_ID) > 61 ORDER BY Location ASC'], ['SELECT COUNT(s.Conference_ID), s.role FROM conference_participation JOIN conference_participation AS s ON conference_participation.staff_ID = s.staff_ID GROUP BY s.role ORDER BY s.role DESC', 'SELECT COUNT(s.Conference_ID), s.role FROM conference_participation s GROUP BY s.role ORDER BY s.role DESC;'], ['SELECT AVG(f.Founded), f.Location FROM institution AS f JOIN institution ON institution.Institution_ID = f.Institution_ID WHERE Location NOT IN (SELECT Location FROM institution) GROUP BY f.Location ORDER BY f.Location ASC', 'SELECT AVG(Founded) FROM institution GROUP BY Location ORDER BY Location ASC;'], ['SELECT AVG(Conference_ID), role FROM conference_participation JOIN institution JOIN staff ON staff.Institution_ID = institution.Institution_ID AND staff.staff_ID = conference_participation.staff_ID WHERE  conference_participation.staff_ID <= 100 LIMIT 6', 'SELECT AVG(cp.Conference_ID), cp.role FROM conference_participation cp JOIN staff s ON cp.staff_ID = s.staff_ID JOIN institution i ON s.Institution_ID = i.Institution_ID WHERE cp.staff_ID <= 100 GROUP BY cp.role LIMIT 6'], ['SELECT staff_ID, role, role FROM conference_participation', 'SELECT staff_ID, role FROM conference_participation;'], ['SELECT Founded, Age FROM institution JOIN staff ON staff.Institution_ID = institution.Institution_ID GROUP BY Age HAVING MAX(staff_ID) >= 91 LIMIT 5', 'SELECT institution.Founded, staff.Age FROM institution JOIN staff ON staff.Institution_ID = institution.Institution_ID GROUP BY institution.Founded, staff.Age HAVING staff.Age >= 91 LIMIT 5'], ['SELECT AVG(Age), staff.staff_ID, Age FROM conference_participation JOIN institution JOIN staff ON staff.Institution_ID = institution.Institution_ID AND staff.staff_ID = conference_participation.staff_ID WHERE  staff.Institution_ID <= 99 AND Conference_ID IN (SELECT Conference_ID FROM conference) ORDER BY Age ASC', 'SELECT AVG(t.Age), t.staff_ID, t.Age FROM (SELECT s.staff_ID, s.Age FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN institution i ON s.Institution_ID = i.Institution_ID) t WHERE t.staff_ID IN (SELECT staff_ID FROM conference_participation) AND t.staff_ID <= 99 ORDER BY t.Age ASC'], ['SELECT f.Founded FROM institution AS f WHERE  f.Institution_ID >= 13 LIMIT 3', 'SELECT f.Founded FROM institution AS f WHERE  f.Institution_ID >= 13 LIMIT 3'], ['SELECT r.Age, r.staff_ID, r.Nationality FROM staff AS r WHERE r.staff_ID BETWEEN 1 AND 10 OR  r.staff_ID <= 72', 'SELECT r.Age, r.staff_ID, r.Nationality FROM staff AS r WHERE r.staff_ID <= 72;'], ['SELECT r.Location, conference.Year FROM conference AS r JOIN conference ON conference.Conference_ID = r.Conference_ID WHERE  r.Conference_ID >= 40 GROUP BY conference.Year ORDER BY conference.Year ASC LIMIT 9', 'SELECT r.Location, conference.Year FROM conference AS r JOIN conference ON conference.Conference_ID = r.Conference_ID WHERE  r.Conference_ID >= 40 GROUP BY r.Location, conference.Year ORDER BY conference.Year ASC LIMIT 9'], ['SELECT MAX(n.Founded), institution.Institution_ID FROM institution AS n JOIN institution ON institution.Institution_ID = n.Institution_ID WHERE  n.Founded <= 44 LIMIT 8', 'SELECT MAX(n.Founded), n.Institution_ID FROM institution AS n WHERE n.Founded <= 1944 LIMIT 8'], ['SELECT staff_ID, staff_ID FROM conference JOIN conference_participation ON conference_participation.Conference_ID = conference.Conference_ID', 'SELECT T1.staff_ID, T2.role FROM staff AS T1 INNER JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID'], ['SELECT COUNT(b.Founded), b.Founded, b.Institution_ID, b.Location FROM institution AS b WHERE  b.Institution_ID > 21 GROUP BY b.Location HAVING MAX(b.Institution_ID) > 38', 'SELECT COUNT(b.Founded), MAX(b.Founded), b.Location FROM institution AS b WHERE  b.Institution_ID > 21 GROUP BY b.Location HAVING MAX(b.Institution_ID) > 38'], ['SELECT Founded, Founded FROM institution WHERE Institution_ID IN (SELECT Institution_ID FROM institution AS u) GROUP BY Founded', 'SELECT COUNT(*) FROM institution;'], ['SELECT Institution_ID, name FROM conference JOIN conference_participation JOIN staff ON staff.staff_ID = conference_participation.staff_ID AND conference_participation.Conference_ID = conference.Conference_ID WHERE  conference_participation.Conference_ID != 98 ORDER BY Institution_ID DESC LIMIT 3', 'SELECT T1.Institution_ID, T3.name FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN conference_participation AS T3 ON T2.staff_ID = T3.staff_ID JOIN conference AS T4 ON T3.Conference_ID = T4.Conference_ID WHERE T3.Conference_ID != 98 ORDER BY T1.Institution_ID DESC LIMIT 3']], 'restaurant_1': [['SELECT p.Address, p.Rating FROM Restaurant AS p WHERE  p.ResID < 36 GROUP BY p.Rating LIMIT 6', 'SELECT Address, Rating FROM Restaurant WHERE ResID < 36 LIMIT 6'], ['SELECT StuID, Address FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Spent BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Visits_Restaurant AS s WHERE Restaurant.ResID = s.ResID) ORDER BY Address DESC', 'SELECT StuID, Address FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Spent BETWEEN 1 AND 10 ORDER BY Address DESC'], ['SELECT MIN(ResTypeID), ResTypeDescription FROM Restaurant_Type WHERE ResTypeID BETWEEN 1 AND 10 OR ResTypeID NOT IN (SELECT ResTypeID FROM Type_Of_Restaurant WHERE ResTypeID BETWEEN 1 AND 10 AND  ResTypeID != 80 LIMIT 8)', 'SELECT MIN(T.ResTypeID), T.ResTypeDescription FROM Restaurant_Type T LEFT JOIN Type_Of_Restaurant R ON T.ResTypeID = R.ResTypeID WHERE T.ResTypeID BETWEEN 1 AND 10 AND (R.ResTypeID IS NULL OR R.ResTypeID = 80) LIMIT 8'], ['SELECT Address FROM Restaurant WHERE ResName IN (SELECT ResName FROM Restaurant AS k) GROUP BY Address ORDER BY Address DESC', 'SELECT DISTINCT Address FROM Restaurant ORDER BY Address DESC;'], ['SELECT Student.StuID, LName FROM Visits_Restaurant JOIN Student JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID AND Student.StuID = Visits_Restaurant.StuID WHERE EXISTS (SELECT * FROM Visits_Restaurant WHERE StuID BETWEEN 1 AND 10 AND  Spent <= 76 AND Student.StuID = StuID LIMIT 2)', 'SELECT Student.StuID, LName FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.StuID IN (SELECT StuID FROM Visits_Restaurant WHERE StuID BETWEEN 1 AND 10 AND Spent <= 76 LIMIT 2)'], ['SELECT ResName FROM Type_Of_Restaurant JOIN Restaurant_Type JOIN Restaurant ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID AND Restaurant.ResID = Type_Of_Restaurant.ResID WHERE Rating BETWEEN 1 AND 10', 'SELECT DISTINCT T3.ResName FROM Type_Of_Restaurant T1 JOIN Restaurant_Type T2 ON T1.ResTypeID = T2.ResTypeID JOIN Restaurant T3 ON T1.ResID = T3.ResID WHERE T3.Rating BETWEEN 1 AND 10'], ['SELECT ResID FROM Type_Of_Restaurant WHERE  ResID <= 9 AND EXISTS (SELECT * FROM Restaurant_Type AS p WHERE p.ResTypeID BETWEEN 1 AND 10 AND Type_Of_Restaurant.ResTypeID = p.ResTypeID)', 'SELECT ResID FROM Type_Of_Restaurant WHERE ResID <= 9 AND ResTypeID IN (SELECT ResTypeID FROM Restaurant_Type WHERE ResTypeID BETWEEN 1 AND 10)'], ['SELECT MAX(ResID), ResName FROM Restaurant WHERE  ResID > 26', 'SELECT ResName FROM Restaurant WHERE ResID > 26 ORDER BY ResID DESC LIMIT 1;']], 'district_spokesman': [['SELECT b.Speach_title, b.Name FROM spokesman JOIN spokesman AS b ON spokesman.Spokesman_ID = b.Spokesman_ID WHERE  b.Points <= 75 GROUP BY b.Name HAVING SUM(spokesman.Spokesman_ID) < 100 ORDER BY b.Speach_title ASC', 'SELECT Speach_title, Name FROM spokesman WHERE Points <= 75 ORDER BY Speach_title ASC;'], ['SELECT COUNT(DISTINCT Area_km), spokesman_district.District_ID FROM spokesman_district JOIN spokesman JOIN district ON spokesman_district.District_ID = district.District_ID AND spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE Points BETWEEN 1 AND 10 AND Spokesman_ID >= (SELECT MIN(Spokesman_ID) FROM spokesman_district AS v WHERE  v.Spokesman_ID <= 98) LIMIT 1', 'SELECT COUNT(DISTINCT T2.Area_km), T1.District_ID FROM spokesman_district AS T1 JOIN spokesman AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID JOIN district AS T3 ON T1.District_ID = T3.District_ID WHERE T2.Points BETWEEN 1 AND 10 AND T2.Spokesman_ID >= (SELECT MIN(Spokesman_ID) FROM spokesman_district AS v WHERE  v.Spokesman_ID <= 98) LIMIT 1'], ['SELECT COUNT(DISTINCT q.Name), q.Population FROM district AS q WHERE q.Area_km BETWEEN 1 AND 10 OR Government_website NOT IN (SELECT Government_website FROM district WHERE  Density_km < 14) ORDER BY q.Population ASC', 'SELECT COUNT(DISTINCT q.Name), q.Population FROM district AS q WHERE q.Area_km BETWEEN 1 AND 10 OR q.Government_website NOT IN (SELECT Government_website FROM district WHERE  Density_km < 14) ORDER BY q.Population ASC'], ['SELECT COUNT(DISTINCT spokesman.Age), spokesman.Rank_position FROM spokesman AS t JOIN spokesman ON spokesman.Spokesman_ID = t.Spokesman_ID WHERE  t.Rank_position >= 88 GROUP BY spokesman.Rank_position', 'SELECT COUNT(DISTINCT t.Age), t.Rank_position FROM spokesman AS t JOIN spokesman AS s ON s.Spokesman_ID = t.Spokesman_ID WHERE  t.Rank_position >= 88 GROUP BY t.Rank_position'], ['SELECT Name, Government_website, Density_km FROM district WHERE  Density_km <= 91 GROUP BY Density_km HAVING COUNT(Density_km) > 18', 'SELECT Name, Government_website, Density_km FROM district WHERE Density_km <= 91 GROUP BY Name, Government_website, Density_km HAVING COUNT(Density_km) > 18;'], ['SELECT spokesman.Spokesman_ID, Start_year FROM spokesman_district JOIN spokesman ON spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE Points BETWEEN 1 AND 10 AND  spokesman.Spokesman_ID > 88 ORDER BY Start_year ASC', 'SELECT spokesman.Spokesman_ID, Start_year FROM spokesman JOIN spokesman_district ON spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE spokesman.Points BETWEEN 1 AND 10 AND spokesman.Spokesman_ID > 88 ORDER BY Start_year ASC'], ['SELECT COUNT(DISTINCT District_ID), Rank_position, Speach_title FROM spokesman_district JOIN spokesman ON spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE  Points = 4 GROUP BY Speach_title LIMIT 10', 'SELECT COUNT(DISTINCT T1.District_ID), T2.Rank_position, T2.Speach_title FROM spokesman_district AS T1 JOIN spokesman AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID WHERE T2.Points = 4 GROUP BY T2.Rank_position, T2.Speach_title LIMIT 10'], ['SELECT district.District_ID, spokesman_district.District_ID FROM spokesman_district JOIN spokesman JOIN district ON spokesman_district.District_ID = district.District_ID AND spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE  district.District_ID >= 29 OR Area_km IN (SELECT Area_km FROM district AS s WHERE  s.Density_km < 89) GROUP BY spokesman_district.District_ID', 'SELECT T2.District_ID FROM spokesman AS T1 INNER JOIN spokesman_district AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID INNER JOIN district AS T3 ON T2.District_ID = T3.District_ID WHERE T3.District_ID >= 29 OR T3.Area_km IN (SELECT Area_km FROM district AS s WHERE s.Density_km < 89) GROUP BY T2.District_ID'], ['SELECT spokesman.Rank_position FROM spokesman AS d JOIN spokesman ON spokesman.Spokesman_ID = d.Spokesman_ID WHERE  d.Rank_position = 6 ORDER BY spokesman.Rank_position DESC', 'SELECT Rank_position FROM spokesman WHERE Rank_position = 6 ORDER BY Rank_position DESC;'], ['SELECT MIN(Age), Speach_title FROM spokesman WHERE Spokesman_ID BETWEEN 1 AND 10 LIMIT 7', 'SELECT MIN(Age), Speach_title FROM spokesman WHERE Spokesman_ID BETWEEN 1 AND 10 LIMIT 7'], ['SELECT Speach_title FROM spokesman WHERE Points <= (SELECT MAX(Points) FROM spokesman AS m LIMIT 8) GROUP BY Speach_title HAVING COUNT(Rank_position) > 52 ORDER BY Speach_title ASC', 'SELECT Speach_title FROM spokesman WHERE Points <= (SELECT MAX(Points) FROM spokesman) GROUP BY Speach_title HAVING COUNT(Spokesman_ID) > 1 ORDER BY Speach_title ASC'], ['SELECT MIN(spokesman.Rank_position), COUNT(DISTINCT j.Age), j.Speach_title FROM spokesman AS j JOIN spokesman ON spokesman.Spokesman_ID = j.Spokesman_ID WHERE  j.Spokesman_ID != 23 GROUP BY j.Speach_title HAVING MIN(j.Points) < 38 LIMIT 4', 'SELECT MIN(j.Rank_position), COUNT(DISTINCT j.Age), j.Speach_title FROM spokesman AS j WHERE j.Spokesman_ID != 23 GROUP BY j.Speach_title HAVING MIN(j.Points) < 38 LIMIT 4'], ['SELECT MAX(spokesman_district.Spokesman_ID), Speach_title FROM spokesman_district JOIN spokesman JOIN district ON spokesman_district.District_ID = district.District_ID AND spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE spokesman.Spokesman_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM spokesman_district WHERE District_ID BETWEEN 1 AND 10 AND spokesman.Spokesman_ID = Spokesman_ID LIMIT 9) ORDER BY Speach_title DESC LIMIT 10', 'SELECT MAX(T1.Spokesman_ID), T2.Speach_title FROM spokesman_district AS T1 JOIN spokesman AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID WHERE T2.Spokesman_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM spokesman_district WHERE District_ID BETWEEN 1 AND 10 AND spokesman_id = T1.Spokesman_ID LIMIT 9) ORDER BY T2.Speach_title DESC LIMIT 10'], ['SELECT SUM(q.Rank_position), q.Speach_title, q.Age FROM spokesman AS q WHERE  q.Rank_position = 74 GROUP BY q.Age', 'SELECT SUM(q.Rank_position), q.Speach_title, q.Age FROM spokesman AS q WHERE q.Rank_position = 74 GROUP BY q.Speach_title, q.Age;'], ['SELECT i.Name, i.Speach_title FROM spokesman AS i WHERE  i.Spokesman_ID != 50 AND Rank_position NOT IN (SELECT Rank_position FROM spokesman WHERE Age BETWEEN 1 AND 10) GROUP BY i.Speach_title ORDER BY i.Speach_title ASC LIMIT 4', 'SELECT Name, Speach_title FROM spokesman WHERE Spokesman_ID != 50 AND Rank_position NOT IN (SELECT Rank_position FROM spokesman WHERE Age BETWEEN 1 AND 10) GROUP BY Speach_title ORDER BY Speach_title ASC LIMIT 4'], ['SELECT Name FROM spokesman_district JOIN spokesman ON spokesman.Spokesman_ID = spokesman_district.Spokesman_ID WHERE  spokesman_district.Spokesman_ID < 87', 'SELECT Name FROM spokesman WHERE Spokesman_ID < 87;'], ['SELECT AVG(Area_km) FROM spokesman_district JOIN district ON spokesman_district.District_ID = district.District_ID WHERE  Spokesman_ID != 9 AND Population NOT IN (SELECT Population FROM district WHERE Population BETWEEN 1 AND 10 LIMIT 7) LIMIT 10', 'SELECT AVG(T1.Area_km) FROM district AS T1 JOIN spokesman_district AS T2 ON T2.District_ID = T1.District_ID WHERE T2.Spokesman_ID != 9 AND T1.Population NOT IN (SELECT Population FROM district WHERE Population BETWEEN 1 AND 10 LIMIT 7) LIMIT 10'], ['SELECT COUNT(DISTINCT r.Name), r.Speach_title, r.Points FROM spokesman AS r WHERE  r.Points > 4 GROUP BY r.Points ORDER BY r.Speach_title ASC', 'SELECT COUNT(DISTINCT r.Name), r.Speach_title, r.Points FROM spokesman AS r WHERE r.Points > 4 GROUP BY r.Speach_title, r.Points ORDER BY r.Speach_title ASC']], 'student_1': [['SELECT list.Classroom FROM list AS l JOIN list ON list.LastName = l.LastName WHERE  l.Grade = 18', 'SELECT T2.Classroom FROM list AS T1 JOIN list AS T2 ON T2.LastName = T1.LastName WHERE  T1.Grade = 18'], ['SELECT MAX(Grade), Grade FROM list WHERE  Classroom > 26', 'SELECT MAX(Grade) FROM list WHERE Classroom > 26'], ['SELECT LastName, LastName, FirstName FROM list WHERE Grade BETWEEN 1 AND 10 OR LastName <= (SELECT SUM(LastName) FROM teachers WHERE Classroom BETWEEN 1 AND 10 OR  Classroom <= 10) GROUP BY FirstName LIMIT 10', 'SELECT LastName, FirstName FROM list WHERE Grade BETWEEN 1 AND 10 OR Classroom BETWEEN 1 AND 10 GROUP BY LastName, FirstName LIMIT 10;'], ['SELECT COUNT(Grade), Classroom FROM list WHERE Classroom BETWEEN 1 AND 10 AND  Classroom >= 54 ORDER BY Classroom ASC', 'SELECT COUNT(Grade), Classroom FROM list WHERE Classroom BETWEEN 1 AND 10 AND Classroom >= 54 GROUP BY Classroom ORDER BY Classroom ASC'], ['SELECT i.FirstName FROM teachers AS i WHERE i.Classroom BETWEEN 1 AND 10 AND LastName NOT IN (SELECT LastName FROM teachers AS w WHERE  w.Classroom >= 21 LIMIT 9)', 'SELECT i.FirstName FROM list AS i WHERE i.Classroom BETWEEN 1 AND 10 AND i.LastName NOT IN (SELECT w.LastName FROM list AS w WHERE w.Classroom >= 21 LIMIT 9)'], ['SELECT COUNT(DISTINCT g.FirstName), g.LastName FROM list AS g WHERE  g.Grade > 85 OR FirstName NOT IN (SELECT FirstName FROM teachers WHERE  Classroom <= 10) ORDER BY g.LastName DESC', 'SELECT g.LastName, COUNT(DISTINCT g.FirstName) FROM list AS g WHERE  g.Grade > 85 OR g.FirstName NOT IN (SELECT FirstName FROM teachers WHERE  Classroom <= 10) GROUP BY g.LastName ORDER BY g.LastName DESC;'], ['SELECT Classroom, Classroom FROM teachers WHERE LastName NOT IN (SELECT LastName FROM list WHERE  Classroom <= 76)', 'SELECT Classroom FROM teachers WHERE LastName NOT IN (SELECT LastName FROM list WHERE Classroom <= 76)'], ['SELECT LastName FROM teachers WHERE Classroom <= (SELECT MIN(Classroom) FROM list WHERE  Classroom >= 61)', 'SELECT LastName FROM teachers WHERE Classroom > (SELECT MIN(Classroom) FROM list WHERE Classroom >= 61)'], ['SELECT COUNT(DISTINCT f.Classroom), f.Grade, f.FirstName FROM list AS f WHERE FirstName = (SELECT MAX(FirstName) FROM list) LIMIT 10', 'SELECT COUNT(DISTINCT f.Classroom), f.Grade, f.FirstName FROM list AS f WHERE (f.FirstName, f.LastName) = (SELECT FirstName, LastName FROM list ORDER BY LastName, FirstName DESC LIMIT 1) GROUP BY f.Grade, f.FirstName LIMIT 10']], 'decoration_competition': [['SELECT member.Name, Leader_Name, college.Name FROM member JOIN round JOIN college ON member.College_ID = college.College_ID AND round.Member_ID = member.Member_ID WHERE  college.College_ID <= 8 GROUP BY college.Name LIMIT 1', 'SELECT m.Name, c.Leader_Name, c.Name FROM member m JOIN round r ON m.Member_ID = r.Member_ID JOIN college c ON m.College_ID = c.College_ID WHERE c.College_ID <= 8 GROUP BY c.Name LIMIT 1'], ['SELECT AVG(College_ID), Leader_Name, Name FROM college WHERE College_Location NOT IN (SELECT College_Location FROM college AS v WHERE v.College_ID BETWEEN 1 AND 10) LIMIT 7', 'SELECT AVG(t.College_ID) AS avg_College_ID, t.Leader_Name, t.Name FROM ( SELECT College_ID, Leader_Name, Name FROM college WHERE College_Location NOT IN (SELECT College_Location FROM college AS v WHERE v.College_ID BETWEEN 1 AND 10) LIMIT 7 ) t GROUP BY t.Leader_Name, t.Name'], ['SELECT COUNT(DISTINCT a.Country) FROM member AS a WHERE a.Member_ID BETWEEN 1 AND 10 AND  a.Member_ID >= 84', 'SELECT COUNT(DISTINCT a.Country) FROM member AS a WHERE a.Member_ID BETWEEN 1 AND 10;'], ['SELECT COUNT(DISTINCT college.Name), member.Name FROM member JOIN college ON member.College_ID = college.College_ID WHERE  Member_ID != 76 GROUP BY member.Name HAVING MAX(college.College_ID) >= 56', 'SELECT COUNT(DISTINCT college.Name), member.Name FROM member JOIN college ON member.College_ID = college.College_ID WHERE member.Member_ID != 76 GROUP BY member.Name, member.Member_ID HAVING MAX(college.College_ID) >= 56'], ['SELECT COUNT(DISTINCT o.Country), COUNT(DISTINCT o.Country), o.Country, o.College_ID FROM member AS o WHERE  o.College_ID < 93 GROUP BY o.College_ID ORDER BY o.Country DESC', 'SELECT COUNT(DISTINCT o.Country), COUNT(DISTINCT o.Country), o.Country, o.College_ID FROM member AS o WHERE  o.College_ID < 93 GROUP BY o.College_ID, o.Country ORDER BY o.Country DESC'], ['SELECT SUM(Round_ID), Round_ID FROM member JOIN round JOIN college ON member.College_ID = college.College_ID AND round.Member_ID = member.Member_ID WHERE  member.Member_ID > 83', 'SELECT SUM(Round_ID), MAX(Round_ID) AS Round_ID FROM member JOIN round ON member.Member_ID = round.Member_ID JOIN college ON member.College_ID = college.College_ID WHERE member.Member_ID > 83 GROUP BY member.Member_ID'], ['SELECT Member_ID, Country FROM member WHERE  College_ID > 17 GROUP BY Country HAVING MIN(College_ID) < 74 LIMIT 8', 'SELECT Member_ID, Country FROM member WHERE College_ID > 17 GROUP BY Member_ID, Country HAVING MIN(College_ID) < 74 LIMIT 8'], ['SELECT h.Country, h.Name FROM member AS h GROUP BY h.Name HAVING COUNT(h.College_ID) = 84 LIMIT 3', 'SELECT h.Country, h.Name FROM member AS h GROUP BY h.Country, h.Name HAVING COUNT(h.College_ID) = 84 LIMIT 3'], ['SELECT College_ID, College_ID, Leader_Name FROM college WHERE EXISTS (SELECT * FROM member AS e WHERE  e.Member_ID >= 76 AND college.College_ID = e.College_ID LIMIT 2) GROUP BY Leader_Name', 'SELECT College_ID, Leader_Name FROM college WHERE EXISTS (SELECT * FROM member AS e WHERE  e.Member_ID >= 76 AND college.College_ID = e.College_ID LIMIT 2) GROUP BY College_ID, Leader_Name;'], ['SELECT round.Member_ID FROM round JOIN member ON round.Member_ID = member.Member_ID WHERE round.Member_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM round WHERE Member_ID BETWEEN 1 AND 10 AND member.Member_ID = Member_ID) ORDER BY round.Member_ID ASC', 'SELECT T2.Member_ID FROM round AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Member_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM round WHERE Member_ID BETWEEN 1 AND 10 AND Member_ID = T2.Member_ID) ORDER BY T2.Member_ID ASC'], ['SELECT b.Round_ID, b.Round_ID FROM round AS b WHERE  b.Member_ID <= 78', 'SELECT b.Round_ID FROM round AS b WHERE b.Member_ID <= 78'], ['SELECT s.College_ID, s.Member_ID FROM member AS s WHERE s.Member_ID BETWEEN 1 AND 10', 'SELECT College_ID, Member_ID FROM member WHERE Member_ID BETWEEN 1 AND 10;'], ['SELECT College_ID, Country FROM member WHERE  Member_ID = 68 GROUP BY College_ID HAVING COUNT(College_ID) < 24 LIMIT 8', 'SELECT College_ID, Country FROM member WHERE Member_ID = 68 GROUP BY College_ID HAVING COUNT(College_ID) < 24 LIMIT 8'], ['SELECT Rank_in_Round FROM round JOIN member ON round.Member_ID = member.Member_ID WHERE EXISTS (SELECT * FROM college WHERE member.Member_ID = College_ID) ORDER BY Rank_in_Round DESC LIMIT 9', 'SELECT T1.Rank_in_Round FROM round AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE EXISTS (SELECT * FROM college AS T3 WHERE T3.College_ID = T2.College_ID) ORDER BY T1.Rank_in_Round DESC LIMIT 9'], ['SELECT Rank_in_Round, Round_ID FROM round WHERE  Rank_in_Round >= 3 AND Member_ID IN (SELECT Member_ID FROM member AS s WHERE s.College_ID BETWEEN 1 AND 10) GROUP BY Round_ID ORDER BY Round_ID ASC LIMIT 5', 'SELECT Rank_in_Round, Round_ID FROM round WHERE Rank_in_Round >= 3 AND Member_ID IN (SELECT Member_ID FROM member WHERE College_ID BETWEEN 1 AND 10) ORDER BY Round_ID ASC LIMIT 5'], ['SELECT college.Name FROM college AS p JOIN college ON college.College_ID = p.College_ID WHERE  p.College_ID = 67 ORDER BY college.Name DESC LIMIT 9', 'SELECT Name FROM college WHERE College_ID = 67 ORDER BY Name DESC LIMIT 9;'], ['SELECT COUNT(DISTINCT member.Country), r.Name, r.Country FROM member JOIN member AS r ON member.Member_ID = r.Member_ID WHERE  member.College_ID <= 35 GROUP BY r.Country', 'SELECT COUNT(DISTINCT m.Country), c.Name, c.Country FROM member AS m JOIN college AS c ON m.College_ID = c.College_ID WHERE m.College_ID <= 35 GROUP BY c.Name, c.Country;']], 'restaurant_bills': [['SELECT MAX(Branch_ID), COUNT(Branch_ID), Years_opened FROM branch WHERE  Years_opened != 40', 'SELECT MAX(Branch_ID), COUNT(Branch_ID), Years_opened FROM branch WHERE Years_opened != 40'], ['SELECT MAX(Branch_ID), Years_opened, Manager FROM branch WHERE Years_opened BETWEEN 1 AND 10 OR  Years_opened >= 88 GROUP BY Manager LIMIT 6', 'SELECT MAX(Branch_ID), Years_opened, Manager FROM branch WHERE Years_opened BETWEEN 1 AND 10 OR  Years_opened >= 88 GROUP BY Manager, Years_opened LIMIT 6'], ['SELECT COUNT(DISTINCT i.Level_of_Membership), i.Level_of_Membership, i.Name FROM customer AS i WHERE i.Customer_ID BETWEEN 1 AND 10 GROUP BY i.Name HAVING MIN(i.Customer_ID) < 96 LIMIT 9', 'SELECT COUNT(DISTINCT t.Level_of_Membership), t.Level_of_Membership, t.Name FROM customer AS t WHERE t.Customer_ID BETWEEN 1 AND 10 GROUP BY t.Name, t.Level_of_Membership HAVING MIN(t.Customer_ID) < 96 LIMIT 9'], ['SELECT Level_of_Membership, Nationality, Name FROM customer WHERE  Card_Credit < 88 GROUP BY Name', 'SELECT Level_of_Membership, Nationality, Name FROM customer WHERE Card_Credit < 88'], ['SELECT w.Years_opened, w.Location_of_office FROM branch AS w WHERE  w.Years_opened <= 31', 'SELECT Years_opened, Location_of_office FROM branch WHERE Years_opened <= 50;']], 'music_2': [['SELECT Firstname, Vocals.Bandmate FROM Vocals JOIN Band JOIN Performance ON Band.Id = Vocals.Bandmate AND Performance.Bandmate = Band.Id WHERE  Id = 38 GROUP BY Vocals.Bandmate HAVING AVG(Id) <= 36', 'SELECT B.Firstname, V.Bandmate FROM Vocals V JOIN Band B ON V.Bandmate = B.Id WHERE V.Bandmate = 38'], ['SELECT AVG(e.AId), e.Type FROM Albums AS e JOIN Albums ON Albums.AId = e.AId WHERE  e.Year >= 21 GROUP BY e.Type HAVING AVG(Albums.Year) >= 20 LIMIT 1', 'SELECT AVG(AId), Type FROM Albums WHERE Year >= 21 GROUP BY Type HAVING AVG(Year) >= 20 LIMIT 1'], ['SELECT Type FROM Vocals JOIN Songs JOIN Performance JOIN Band ON Songs.SongId = Vocals.SongId AND Band.Id = Vocals.Bandmate AND Performance.Bandmate = Band.Id WHERE  Vocals.SongId = 53 LIMIT 9', 'SELECT Type FROM Vocals JOIN Songs ON Vocals.SongId = Songs.SongId JOIN Performance ON Songs.SongId = Performance.SongId JOIN Band ON Performance.Bandmate = Band.Id WHERE Vocals.SongId = 53 LIMIT 9'], ['SELECT Performance.StagePosition, Performance.StagePosition FROM Performance JOIN Performance AS e ON Performance.SongId = e.SongId WHERE  Performance.Bandmate <= 41 ORDER BY Performance.StagePosition ASC', 'SELECT Performance.StagePosition FROM Performance WHERE Performance.Bandmate <= 41 ORDER BY CAST(Performance.StagePosition AS NUMBER) ASC'], ['SELECT COUNT(Vocals.SongId), MIN(Performance.Bandmate), Firstname FROM Vocals JOIN Band JOIN Performance ON Band.Id = Vocals.Bandmate AND Performance.Bandmate = Band.Id WHERE Id BETWEEN 1 AND 10 GROUP BY Firstname', 'SELECT COUNT(*), Band.Firstname FROM Vocals JOIN Band ON Vocals.Bandmate = Band.Id WHERE Band.Id BETWEEN 1 AND 10 GROUP BY Band.Firstname;'], ['SELECT COUNT(DISTINCT AId), Type, Type FROM Albums', 'SELECT COUNT(DISTINCT AId), Type FROM Albums'], ['SELECT Id, StagePosition FROM Vocals JOIN Band JOIN Performance ON Band.Id = Vocals.Bandmate AND Performance.Bandmate = Band.Id WHERE  Id <= 38 AND EXISTS (SELECT * FROM Performance AS s WHERE  s.Bandmate <= 58 AND Band.Id = s.Bandmate)', 'SELECT b.Id, p.StagePosition FROM Vocals v JOIN Band b JOIN Performance p ON v.Bandmate = b.Id AND b.Id = p.Bandmate WHERE  b.Id <= 38 AND EXISTS (SELECT * FROM Performance AS s WHERE  s.Bandmate <= 58 AND p.Bandmate = s.Bandmate)'], ['SELECT AVG(Bandmate), Bandmate FROM Vocals JOIN Songs ON Songs.SongId = Vocals.SongId WHERE  Songs.SongId > 38', 'SELECT COUNT(Bandmate) AS BandmateCount, Bandmate FROM Vocals JOIN Songs ON Songs.SongId = Vocals.SongId WHERE Songs.SongId > 38 GROUP BY Bandmate;'], ['SELECT COUNT(DISTINCT r.Firstname), COUNT(DISTINCT r.Id), r.Id FROM Band AS r WHERE  r.Id != 11 ORDER BY r.Id DESC', 'SELECT COUNT(DISTINCT Firstname), COUNT(DISTINCT Id) FROM Band WHERE Id != 11;'], ['SELECT MAX(p.Bandmate), COUNT(DISTINCT p.SongId), p.SongId FROM Vocals AS p WHERE  p.Bandmate > 75', 'SELECT p.SongId, MAX(p.Bandmate), COUNT(DISTINCT p.SongId) FROM Vocals AS p WHERE p.Bandmate > 75 GROUP BY p.SongId;']], 'bike_racing': [['SELECT AVG(j.heat), j.name, j.name, j.nation FROM cyclist AS j WHERE  j.result != 30 OR result != (SELECT MAX(result) FROM cyclist AS w WHERE w.result BETWEEN 1 AND 10 AND  w.heat <= 20 LIMIT 10) GROUP BY j.nation HAVING MAX(j.heat) < 52 ORDER BY j.name ASC', 'SELECT AVG(j.heat), j.name, j.nation FROM cyclist AS j WHERE  j.result != 30 OR j.result != (SELECT result FROM cyclist AS w WHERE w.result BETWEEN 1 AND 10 AND  w.heat <= 20) GROUP BY j.nation HAVING MAX(j.heat) < 52 ORDER BY j.name ASC'], ['SELECT a.result FROM cyclist AS a JOIN cyclist ON cyclist.id = a.id WHERE  a.result = 8 ORDER BY a.result DESC', 'SELECT result FROM cyclist WHERE result = 8 ORDER BY result DESC'], ['SELECT COUNT(DISTINCT id), price, weight FROM bike WHERE weight BETWEEN 1 AND 10 OR  weight != 58', 'SELECT COUNT(DISTINCT id), AVG(price), AVG(weight) FROM bike WHERE weight BETWEEN 1 AND 10 OR weight != 58;'], ['SELECT cyclist.name FROM cyclist AS i JOIN cyclist ON cyclist.id = i.id WHERE  i.id >= 38', 'SELECT name FROM cyclist WHERE id >= 38;'], ['SELECT r.heat, r.name FROM cyclist AS r WHERE  r.id < 34 AND heat NOT IN (SELECT heat FROM cyclist AS n WHERE  n.id >= 78) GROUP BY r.name ORDER BY r.heat ASC', 'SELECT r.heat, r.name FROM cyclist AS r WHERE r.id < 34 AND r.heat NOT IN (SELECT heat FROM cyclist AS n WHERE n.id >= 78) GROUP BY r.name, r.heat ORDER BY r.heat ASC'], ['SELECT COUNT(DISTINCT b.bike_id) FROM cyclists_own_bikes AS b', 'SELECT COUNT(DISTINCT b.bike_id) FROM cyclists_own_bikes AS b'], ['SELECT b.material, bike.material FROM bike JOIN bike AS b ON bike.id = b.id WHERE  bike.price <= 68 GROUP BY bike.material', 'SELECT b.material FROM bike JOIN bike AS b ON bike.id = b.id WHERE bike.price <= 68 GROUP BY b.material;']], 'tvshow': [['SELECT w.Directed_by, w.Title, w.Channel FROM Cartoon AS w JOIN Cartoon ON Cartoon.id = w.id WHERE  w.id <= 62 GROUP BY w.Channel HAVING SUM(Cartoon.Production_code) >= 1', 'SELECT w.Directed_by, w.Title, w.Channel FROM Cartoon AS w JOIN TV_Channel AS t ON w.Channel = t.id WHERE w.id <= 62 GROUP BY w.Channel HAVING SUM(w.Production_code) >= 1'], ['SELECT n.Directed_by, n.Written_by FROM Cartoon AS n JOIN Cartoon ON Cartoon.id = n.id WHERE Cartoon.Production_code BETWEEN 1 AND 10 OR  Cartoon.Production_code > 56 GROUP BY n.Written_by ORDER BY n.Written_by DESC', 'SELECT Directed_by, Written_by FROM Cartoon WHERE Production_code BETWEEN 1 AND 10 OR Production_code > 56 GROUP BY Written_by, Directed_by ORDER BY Written_by DESC;'], ['SELECT SUM(Production_code), Original_air_date, Channel FROM Cartoon WHERE Production_code BETWEEN 1 AND 10 GROUP BY Channel HAVING AVG(id) >= 50 ORDER BY Original_air_date DESC LIMIT 3', 'SELECT MIN(Production_code), Original_air_date, Channel FROM Cartoon WHERE Production_code BETWEEN 1 AND 10 GROUP BY Original_air_date, Channel HAVING MIN(id) >= 50 ORDER BY Original_air_date DESC LIMIT 3'], ['SELECT y.18_49_Rating_Share FROM TV_series JOIN TV_series AS y ON TV_series.id = y.id WHERE  TV_series.Weekly_Rank = 80', 'SELECT y["18_49_Rating_Share"] FROM TV_series JOIN TV_series AS y ON TV_series.id = y.id WHERE  TV_series.Weekly_Rank = 80'], ['SELECT Directed_by, Country FROM TV_series JOIN TV_Channel JOIN Cartoon ON TV_Channel.id = TV_series.Channel AND Cartoon.Channel = TV_Channel.id WHERE  Share >= 14', 'SELECT T1.Directed_by, T3.Country FROM Cartoon AS T1 JOIN TV_Channel AS T3 ON T1.Channel = T3.id JOIN TV_series AS T2 ON T2.Channel = T3.id WHERE T2.Share >= 14'], ['SELECT MIN(Production_code), Directed_by, Written_by FROM Cartoon GROUP BY Written_by HAVING MAX(Production_code) < 46 ORDER BY Directed_by DESC', 'SELECT MIN(Production_code), Directed_by, Written_by FROM Cartoon GROUP BY Written_by, Directed_by HAVING MAX(Production_code) < 46 ORDER BY Directed_by DESC']], 'imdb': [['SELECT AVG(s.pid), s.name, s.name FROM producer AS s WHERE  s.birth_year >= 8', 'SELECT AVG(s.pid) FROM producer AS s WHERE  s.birth_year >= 1980'], ['SELECT pid, msid FROM made_by WHERE  pid <= 96 AND EXISTS (SELECT * FROM producer WHERE made_by.id = pid) GROUP BY msid ORDER BY msid DESC', 'SELECT pid, msid FROM made_by WHERE pid <= 96 AND EXISTS (SELECT * FROM producer WHERE made_by.pid = pid) GROUP BY msid ORDER BY msid DESC'], ['SELECT COUNT(DISTINCT kid), id, kid FROM tags WHERE msid BETWEEN 1 AND 10 AND msid < (SELECT AVG(msid) FROM made_by WHERE  id = 70) GROUP BY kid ORDER BY kid ASC LIMIT 4', 'SELECT COUNT(DISTINCT kid), id, kid FROM tags WHERE msid BETWEEN 1 AND 10 AND msid < (SELECT AVG(made_by.msid) FROM made_by WHERE  id = 70) GROUP BY kid ORDER BY kid ASC LIMIT 4'], ['SELECT COUNT(DISTINCT id), id FROM tags WHERE  kid = 30 LIMIT 4', 'SELECT COUNT(DISTINCT msid), msid FROM tags WHERE kid = 30 LIMIT 4']], 'tracking_grants_for_research': [['SELECT outcome_description, outcome_description, outcome_description FROM Research_Outcomes LIMIT 7', 'SELECT outcome_description FROM Research_Outcomes LIMIT 7'], ['SELECT COUNT(DISTINCT document_id), COUNT(DISTINCT document_id), document_id FROM Documents WHERE  grant_id = 61', 'SELECT COUNT(DISTINCT document_id), COUNT(DISTINCT document_id) FROM Documents WHERE grant_id = 61'], ['SELECT other_details FROM Grants WHERE  grant_id <= 21 AND EXISTS (SELECT * FROM Documents WHERE document_id BETWEEN 1 AND 10 AND Grants.grant_id = grant_id) ORDER BY other_details ASC', 'SELECT other_details FROM Grants WHERE grant_id <= 21 AND EXISTS (SELECT * FROM Documents WHERE document_id BETWEEN 1 AND 10 AND Grants.grant_id = Documents.grant_id) ORDER BY other_details ASC'], ['SELECT project_id, outcome_code FROM Project_Outcomes WHERE  project_id >= 7', 'SELECT project_id, outcome_code FROM Project_Outcomes WHERE project_id >= 7'], ['SELECT organisation_id, organisation_id, organisation_type_description FROM Organisation_Types JOIN Organisations ON Organisation_Types.organisation_type = Organisations.organisation_type WHERE  organisation_id > 69 GROUP BY organisation_type_description ORDER BY organisation_type_description ASC LIMIT 2', 'SELECT organisation_id, organisation_type_description FROM Organisation_Types JOIN Organisations ON Organisation_Types.organisation_type = Organisations.organisation_type WHERE organisation_id > 69 GROUP BY organisation_id, organisation_type_description ORDER BY organisation_type_description ASC LIMIT 2']], 'school_player': [['SELECT COUNT(Founded), Year_Entered_Competition, Age FROM school JOIN player ON school.School_ID = player.School_ID WHERE  school.School_ID != 18', 'SELECT COUNT(s.Founded), s.Year_Entered_Competition, AVG(p.Age) FROM school s JOIN player p ON s.School_ID = p.School_ID WHERE s.School_ID != 18 GROUP BY s.Year_Entered_Competition;'], ['SELECT o.School_Year, o.Class_A FROM school_performance AS o WHERE  o.School_Id > 71 GROUP BY o.Class_A HAVING MIN(o.School_Id) <= 17', 'SELECT o.School_Year, o.Class_A FROM school_performance AS o WHERE o.School_Id > 71 GROUP BY o.School_Year, o.Class_A HAVING MIN(o.School_Id) <= 17'], ['SELECT Year_Entered_Competition, Denomination FROM school JOIN school_performance ON school_performance.School_Id = school.School_ID WHERE EXISTS (SELECT * FROM school WHERE  Enrollment < 9 AND school_performance.School_Id = School_ID) LIMIT 1', 'SELECT T1.Year_Entered_Competition, T1.Denomination FROM school AS T1 JOIN school_performance AS T2 ON T2.School_Id = T1.School_ID WHERE EXISTS (SELECT 1 FROM school AS T3 WHERE T3.Enrollment < 9 AND T3.School_ID = T2.School_Id) LIMIT 1'], ['SELECT s.Boys_or_Girls FROM school AS s WHERE  s.Founded <= 15 LIMIT 4', 'SELECT s.Boys_or_Girls FROM school AS s WHERE  s.Founded <= 2015 LIMIT 4'], ['SELECT SUM(d.School_Id), SUM(d.School_Id) FROM school_performance AS d WHERE  d.School_Id < 51 LIMIT 5', 'SELECT COUNT(d.School_Id), SUM(1) FROM school_performance AS d WHERE  d.School_Id < 51 LIMIT 5'], ['SELECT School_Id FROM school_performance WHERE School_Id BETWEEN 1 AND 10 AND  School_Id >= 27', 'SELECT School_Id FROM school_performance WHERE School_Id BETWEEN 1 AND 26 OR School_Id >= 27;'], ['SELECT Location FROM school JOIN player ON school.School_ID = player.School_ID WHERE school.School_ID BETWEEN 1 AND 10 AND  Age > 35 ORDER BY Location DESC LIMIT 1', 'SELECT Location FROM school JOIN player ON player.School_ID = school.School_ID WHERE school.School_ID BETWEEN 1 AND 10 AND  Age > 35 ORDER BY Location DESC LIMIT 1'], ['SELECT School_ID, School_ID, Division FROM school_details WHERE School_ID BETWEEN 1 AND 10 AND Division NOT IN (SELECT Division FROM school_details WHERE  School_ID = 23 LIMIT 3) GROUP BY Division', 'SELECT School_ID, Division FROM school_details WHERE School_ID BETWEEN 1 AND 10 AND Division NOT IN (SELECT Division FROM school_details WHERE School_ID = 23) GROUP BY Division']], 'ship_1': [['SELECT Captain_ID FROM captain WHERE age > (SELECT MIN(age) FROM captain AS f)', 'SELECT Captain_ID FROM captain WHERE CAST(age AS number) > (SELECT MIN(CAST(age AS number)) FROM captain AS f)'], ['SELECT Captain_ID, age FROM captain WHERE  Captain_ID <= 51 GROUP BY age ORDER BY age ASC', 'SELECT CAST(age AS number) FROM captain WHERE Captain_ID <= 51 GROUP BY CAST(age AS number) ORDER BY CAST(age AS number) ASC;'], ['SELECT Built_Year, Built_Year, Type, Flag FROM Ship WHERE  Ship_ID < 97 GROUP BY Flag', 'SELECT Flag, MAX(Built_Year) AS max_Built_Year, Type FROM Ship WHERE Ship_ID < 97 GROUP BY Flag, Type;'], ['SELECT Captain_ID, Class, Name FROM captain WHERE  Ship_ID != 86 GROUP BY Name', 'SELECT Captain_ID, Class, Name FROM captain WHERE Ship_ID != 86;'], ['SELECT g.Flag, g.Class FROM Ship AS g WHERE  g.Ship_ID = 49 GROUP BY g.Class HAVING SUM(g.Built_Year) >= 17 ORDER BY g.Flag DESC', 'SELECT g.Flag, g.Class FROM Ship AS g WHERE g.Ship_ID = 49 GROUP BY g.Flag, g.Class HAVING SUM(g.Built_Year) >= 17 ORDER BY g.Flag DESC'], ['SELECT Built_Year, Class FROM Ship WHERE Class <= (SELECT MAX(Class) FROM Ship AS r) ORDER BY Class ASC', 'SELECT Built_Year, Class FROM Ship ORDER BY Class ASC;'], ['SELECT b.Type, b.Class FROM Ship AS b ORDER BY b.Type ASC', 'SELECT b.Type, b.Class FROM Ship AS b ORDER BY b.Type ASC'], ['SELECT age FROM captain WHERE  Captain_ID <= 37', 'SELECT CAST(age AS NUMBER) AS age FROM captain WHERE CAST(age AS NUMBER) <= 37;']], 'college_1': [['SELECT PROF_NUM, CLASS_TIME FROM CLASS JOIN ENROLL JOIN COURSE ON CLASS.CLASS_CODE = ENROLL.CLASS_CODE AND COURSE.CRS_CODE = CLASS.CRS_CODE WHERE CLASS_CODE NOT IN (SELECT CLASS_CODE FROM CLASS AS t WHERE  t.PROF_NUM >= 28) GROUP BY CLASS_TIME HAVING MIN(PROF_NUM) >= 32', 'SELECT PROF_NUM, CLASS_TIME FROM CLASS JOIN ENROLL ON CLASS.CLASS_CODE = ENROLL.CLASS_CODE JOIN COURSE ON COURSE.CRS_CODE = CLASS.CRS_CODE WHERE CLASS_CODE NOT IN (SELECT CLASS_CODE FROM CLASS AS t WHERE t.PROF_NUM >= 28) GROUP BY CLASS_TIME HAVING MIN(PROF_NUM) >= 32'], ['SELECT AVG(PROFESSOR.EMP_NUM) FROM EMPLOYEE JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM WHERE EMP_DOB <= (SELECT MIN(EMP_DOB) FROM EMPLOYEE) LIMIT 4', 'SELECT AVG(E.EMP_NUM) FROM EMPLOYEE E JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM WHERE E.EMP_DOB <= (SELECT MIN(EMP_DOB) FROM EMPLOYEE) LIMIT 4'], ['SELECT SUM(CRS_CREDIT), COUNT(DISTINCT CRS_CODE), CRS_DESCRIPTION FROM COURSE WHERE CRS_CREDIT BETWEEN 1 AND 10 AND  CRS_CREDIT <= 76 GROUP BY CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION DESC LIMIT 5', 'SELECT CRS_DESCRIPTION, SUM(CRS_CREDIT), COUNT(DISTINCT CRS_CODE) FROM COURSE WHERE CRS_CREDIT BETWEEN 1 AND 10 AND CRS_CREDIT <= 76 GROUP BY CRS_DESCRIPTION ORDER BY CRS_DESCRIPTION DESC LIMIT 5'], ['SELECT CLASS.CRS_CODE, PROF_NUM FROM CLASS JOIN ENROLL JOIN COURSE ON CLASS.CLASS_CODE = ENROLL.CLASS_CODE AND COURSE.CRS_CODE = CLASS.CRS_CODE WHERE EXISTS (SELECT * FROM COURSE AS b WHERE  b.CRS_CREDIT != 6 AND CLASS.CLASS_CODE = b.CRS_CODE LIMIT 9) GROUP BY PROF_NUM HAVING AVG(STU_NUM) < 94 ORDER BY PROF_NUM DESC', 'SELECT T1.CRS_CODE, T1.PROF_NUM FROM CLASS T1 JOIN ENROLL T2 ON T1.CLASS_CODE = T2.CLASS_CODE JOIN COURSE T3 ON T3.CRS_CODE = T1.CRS_CODE WHERE T3.CRS_CREDIT != 6 GROUP BY T1.PROF_NUM HAVING AVG(T2.STU_NUM) < 94 ORDER BY T1.PROF_NUM DESC LIMIT 9'], ['SELECT CRS_CODE FROM CLASS WHERE PROF_NUM BETWEEN 1 AND 10 OR CLASS_ROOM < (SELECT AVG(CLASS_ROOM) FROM CLASS LIMIT 7) ORDER BY CRS_CODE ASC', 'SELECT CRS_CODE FROM CLASS WHERE PROF_NUM BETWEEN 1 AND 10 ORDER BY CRS_CODE ASC'], ['SELECT ENROLL.STU_NUM, STU_CLASS FROM STUDENT JOIN DEPARTMENT JOIN ENROLL ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE AND ENROLL.STU_NUM = STUDENT.STU_NUM WHERE  PROF_NUM <= 10 ORDER BY STU_CLASS ASC', 'SELECT E.STU_NUM, S.STU_CLASS FROM STUDENT S JOIN DEPARTMENT D ON S.DEPT_CODE = D.DEPT_CODE JOIN ENROLL E ON E.STU_NUM = S.STU_NUM JOIN CLASS C ON C.CLASS_CODE = E.CLASS_CODE WHERE S.PROF_NUM <= 10 ORDER BY S.STU_CLASS ASC'], ['SELECT PROF_NUM, CRS_CREDIT FROM CLASS JOIN COURSE ON COURSE.CRS_CODE = CLASS.CRS_CODE WHERE CRS_CREDIT BETWEEN 1 AND 10 AND  CRS_CREDIT > 54', 'SELECT PROF_NUM, CRS_CREDIT FROM CLASS JOIN COURSE ON COURSE.CRS_CODE = CLASS.CRS_CODE WHERE CRS_CREDIT BETWEEN 1 AND 54;'], ['SELECT q.CLASS_CODE FROM ENROLL AS q WHERE  q.STU_NUM != 66 AND ENROLL_GRADE IN (SELECT ENROLL_GRADE FROM ENROLL AS d WHERE  d.STU_NUM >= 25) ORDER BY q.CLASS_CODE ASC', 'SELECT DISTINCT e.CLASS_CODE FROM ENROLL AS e WHERE e.STU_NUM != 66 AND e.ENROLL_GRADE IN (SELECT ENROLL_GRADE FROM ENROLL WHERE STU_NUM >= 25) ORDER BY e.CLASS_CODE ASC'], ['SELECT COUNT(DISTINCT CLASS.CLASS_CODE), ENROLL_GRADE FROM EMPLOYEE JOIN CLASS JOIN ENROLL ON CLASS.PROF_NUM = EMPLOYEE.EMP_NUM AND CLASS.CLASS_CODE = ENROLL.CLASS_CODE WHERE  EMP_NUM = 72', 'SELECT COUNT(DISTINCT CLASS.CLASS_CODE), ENROLL.ENROLL_GRADE FROM EMPLOYEE JOIN CLASS ON CLASS.PROF_NUM = EMPLOYEE.EMP_NUM JOIN ENROLL ON CLASS.CLASS_CODE = ENROLL.CLASS_CODE WHERE EMPLOYEE.EMP_NUM = 72'], ['SELECT EMPLOYEE.EMP_NUM FROM PROFESSOR JOIN EMPLOYEE JOIN CLASS ON CLASS.PROF_NUM = EMPLOYEE.EMP_NUM AND EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM WHERE  PROF_NUM <= 79 ORDER BY EMPLOYEE.EMP_NUM ASC', 'SELECT EMPLOYEE.EMP_NUM FROM CLASS JOIN EMPLOYEE ON CLASS.PROF_NUM = EMPLOYEE.EMP_NUM JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM WHERE PROFESSOR.EMP_NUM <= 79 ORDER BY EMPLOYEE.EMP_NUM ASC'], ['SELECT PROF_HIGH_DEGREE, EMP_LNAME FROM EMPLOYEE JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM WHERE PROFESSOR.EMP_NUM BETWEEN 1 AND 10', 'SELECT P.PROF_HIGH_DEGREE, E.EMP_LNAME FROM EMPLOYEE E JOIN PROFESSOR P ON E.EMP_NUM = P.EMP_NUM WHERE P.EMP_NUM BETWEEN 1 AND 10']], 'store_product': [['SELECT SUM(Store_ID), Store_ID, Number_of_product_category FROM store WHERE  Ranking != 53 GROUP BY Number_of_product_category HAVING AVG(Area_size) >= 45 ORDER BY Number_of_product_category DESC', 'SELECT Store_ID, Number_of_product_category FROM store WHERE Ranking != 53 GROUP BY Store_ID, Number_of_product_category HAVING AVG(Area_size) >= 45 ORDER BY Number_of_product_category DESC'], ['SELECT COUNT(DISTINCT j.Headquartered_City), j.City_Area, j.City_Population FROM district AS j WHERE  j.District_ID < 3 GROUP BY j.City_Population HAVING AVG(j.City_Population) > 69 ORDER BY j.City_Population ASC LIMIT 4', 'SELECT COUNT(DISTINCT j.Headquartered_City), j.City_Area, j.City_Population FROM district AS j WHERE j.District_ID < 3 GROUP BY j.City_Area, j.City_Population HAVING AVG(j.City_Population) > 69 ORDER BY j.City_Population ASC LIMIT 4'], ['SELECT MAX(k.Area_size) FROM store JOIN store AS k ON store.Store_ID = k.Store_ID WHERE Number_of_product_category < (SELECT MAX(Number_of_product_category) FROM store WHERE Store_ID BETWEEN 1 AND 10 LIMIT 7) LIMIT 10', 'SELECT MAX(Area_size) FROM store WHERE Number_of_product_category < (SELECT MAX(Number_of_product_category) FROM store WHERE Store_ID BETWEEN 1 AND 10) LIMIT 10'], ['SELECT Store_Name, Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID WHERE District_ID IN (SELECT District_ID FROM store_district AS e WHERE e.Store_ID BETWEEN 1 AND 10) ORDER BY Store_Name DESC LIMIT 6', 'SELECT Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID WHERE District_ID IN (SELECT District_ID FROM store_district AS e WHERE e.Store_ID BETWEEN 1 AND 10) ORDER BY Store_Name DESC LIMIT 6'], ['SELECT a.Store_ID, a.Store_ID, store.Ranking FROM store JOIN store AS a ON store.Store_ID = a.Store_ID WHERE  store.Area_size < 90 GROUP BY store.Ranking', 'SELECT Store_ID, Ranking FROM store WHERE Area_size < 90 GROUP BY Ranking'], ['SELECT Headquartered_City FROM district JOIN store JOIN store_district ON store.Store_ID = store_district.Store_ID AND store_district.District_ID = district.District_ID', 'SELECT Headquartered_City FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store.Store_ID = store_district.Store_ID;'], ['SELECT Headquartered_City FROM district WHERE City_Population BETWEEN 1 AND 10 OR City_Area > (SELECT SUM(City_Area) FROM district)', 'SELECT Headquartered_City FROM district WHERE City_Population BETWEEN 1 AND 10 OR City_Area > (SELECT AVG(City_Area) FROM district)'], ['SELECT k.Product_ID FROM store_product AS k WHERE k.Product_ID BETWEEN 1 AND 10 AND  k.Product_ID != 85', 'SELECT k.Product_ID FROM store_product AS k WHERE k.Product_ID BETWEEN 1 AND 10 AND k.Product_ID != 85'], ['SELECT Headquartered_City FROM district JOIN store JOIN store_district ON store.Store_ID = store_district.Store_ID AND store_district.District_ID = district.District_ID WHERE  store_district.Store_ID <= 7', 'SELECT Headquartered_City FROM store_district JOIN store ON store_district.Store_ID = store.Store_ID JOIN district ON store_district.District_ID = district.District_ID WHERE store_district.Store_ID <= 7'], ['SELECT SUM(s.City_Area), s.Headquartered_City FROM district AS s WHERE  s.City_Area != 82 ORDER BY s.Headquartered_City DESC', 'SELECT SUM(d.City_Area), d.Headquartered_City FROM district AS d WHERE  d.City_Area != 82 ORDER BY d.Headquartered_City DESC'], ['SELECT MIN(Ranking), City_Area FROM district JOIN store JOIN store_district ON store.Store_ID = store_district.Store_ID AND store_district.District_ID = district.District_ID WHERE EXISTS (SELECT * FROM district WHERE City_Area BETWEEN 1 AND 10 AND store_district.Store_ID = District_ID LIMIT 10)', 'SELECT MIN(T2.Ranking), T3.City_Area FROM store_district AS T1 INNER JOIN store AS T2 ON T1.Store_ID = T2.Store_ID INNER JOIN district AS T3 ON T1.District_ID = T3.District_ID WHERE T3.City_Area BETWEEN 1 AND 10 GROUP BY T3.City_Area LIMIT 10;'], ['SELECT v.District_ID, v.Store_ID FROM store_district AS v WHERE District_ID <= (SELECT SUM(District_ID) FROM store_district WHERE  Store_ID > 7 LIMIT 8)', 'SELECT v.District_ID, v.Store_ID FROM store_district AS v WHERE District_ID <= (SELECT SUM(District_ID) FROM store_district WHERE Store_ID > 7)'], ['SELECT MAX(o.Store_ID), COUNT(DISTINCT o.Product_ID), o.Product_ID FROM store_product AS o WHERE  o.Store_ID < 75', 'SELECT Store_ID, COUNT(DISTINCT Product_ID) FROM store_product WHERE Store_ID < 75 GROUP BY Store_ID'], ['SELECT Store_ID FROM store WHERE Ranking BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM store_district WHERE store.Store_ID = Store_ID)', 'SELECT Store_ID FROM store WHERE Ranking BETWEEN 1 AND 10 OR Store_ID IN (SELECT Store_ID FROM store_district)']], 'activity_1': [['SELECT COUNT(DISTINCT activity_name), activity_name FROM Activity WHERE  actid < 6 AND EXISTS (SELECT * FROM Participates_in AS i WHERE Activity.actid = i.actid) GROUP BY activity_name LIMIT 9', 'SELECT COUNT(DISTINCT activity_name), activity_name FROM Activity WHERE actid < 6 AND EXISTS (SELECT * FROM Participates_in AS i WHERE Activity.actid = i.actid) GROUP BY activity_name LIMIT 9'], ['SELECT Major, city_code FROM Activity JOIN Participates_in JOIN Student ON Participates_in.actid = Activity.actid AND Student.StuID = Participates_in.stuid WHERE Activity.actid BETWEEN 1 AND 10 AND  Advisor <= 41 ORDER BY city_code DESC', 'SELECT T4.Major, T4.city_code FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid JOIN Student AS T4 ON T2.stuid = T4.StuID WHERE T1.actid BETWEEN 1 AND 10 AND T4.Advisor <= 41 ORDER BY T4.city_code DESC'], ['SELECT COUNT(DISTINCT Activity.actid), Participates_in.actid FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE Activity.actid BETWEEN 1 AND 10 AND  Participates_in.actid <= 79 GROUP BY Participates_in.actid HAVING AVG(stuid) >= 84 ORDER BY Participates_in.actid DESC LIMIT 2', 'SELECT COUNT(DISTINCT Activity.actid), Participates_in.actid FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE Activity.actid BETWEEN 1 AND 10 AND  Participates_in.actid <= 79 GROUP BY Participates_in.actid ORDER BY Participates_in.actid DESC LIMIT 2'], ['SELECT activity_name FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid WHERE FacID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Participates_in WHERE  stuid > 24 AND Activity.actid = actid)', 'SELECT activity_name FROM Activity JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid WHERE FacID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Participates_in WHERE stuid > 24 AND Activity.actid = Participates_in.actid)'], ['SELECT COUNT(DISTINCT stuid) FROM Participates_in WHERE  stuid = 6 AND EXISTS (SELECT * FROM Student WHERE  Major < 6 AND Participates_in.StuID = StuID)', 'SELECT COUNT(DISTINCT stuid) FROM Participates_in pi WHERE stuid = 6 AND EXISTS (SELECT * FROM Student WHERE Major < 6 AND pi.StuID = StuID)'], ['SELECT activity_name, activity_name FROM Activity JOIN Participates_in ON Participates_in.actid = Activity.actid WHERE EXISTS (SELECT * FROM Activity AS e WHERE  e.actid < 13 AND Participates_in.StuID = e.actid LIMIT 1)', 'SELECT T1.activity_name, T2.activity_name FROM Activity AS T1 JOIN Activity AS T2 ON T1.actid = T2.actid WHERE EXISTS (SELECT * FROM Activity AS e WHERE e.actid < 13 AND T1.actid = e.actid LIMIT 1)'], ['SELECT COUNT(DISTINCT actid), actid FROM Participates_in WHERE  stuid != 49 GROUP BY actid HAVING AVG(stuid) <= 28', 'SELECT COUNT(DISTINCT T.actid) FROM (SELECT DISTINCT actid FROM Participates_in WHERE stuid != 49) T']], 'entrepreneur': [['SELECT Name, Investor, Company, Money_Requested FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE  entrepreneur.People_ID != 79 GROUP BY Money_Requested', 'SELECT Name, Investor, Company, AVG(Money_Requested) FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE entrepreneur.People_ID != 79 GROUP BY Name, Investor, Company;'], ['SELECT MIN(People_ID), Height FROM people WHERE  Height != 96 GROUP BY Height', 'SELECT MIN(People_ID), Height FROM people WHERE Height != 96 GROUP BY Height'], ['SELECT l.Name, l.Name FROM people AS l WHERE  l.Weight <= 32', 'SELECT l.Name FROM people AS l WHERE l.Weight <= 32'], ['SELECT j.Investor, j.Investor FROM entrepreneur AS j WHERE  j.Money_Requested != 45 ORDER BY j.Investor ASC LIMIT 10', 'SELECT j.Investor FROM entrepreneur AS j WHERE j.Money_Requested != 45 ORDER BY j.Investor ASC LIMIT 10'], ['SELECT o.Name FROM people AS o JOIN people ON people.People_ID = o.People_ID WHERE  o.People_ID < 11 ORDER BY o.Name ASC', 'SELECT Name FROM people WHERE People_ID < 11 ORDER BY Name ASC;'], ['SELECT AVG(s.People_ID), SUM(s.Money_Requested), s.People_ID FROM entrepreneur AS s WHERE  s.Entrepreneur_ID != 17 GROUP BY s.People_ID', 'SELECT SUM(s.Money_Requested), s.People_ID FROM entrepreneur AS s WHERE  s.Entrepreneur_ID != 17 GROUP BY s.People_ID;'], ['SELECT AVG(b.Weight), b.Date_of_Birth FROM people AS b GROUP BY b.Date_of_Birth HAVING AVG(b.People_ID) <= 71', 'SELECT AVG(b.Weight), b.Date_of_Birth FROM people AS b GROUP BY b.Date_of_Birth HAVING COUNT(b.People_ID) <= 71'], ['SELECT COUNT(DISTINCT people.Height), h.Name FROM people AS h JOIN people ON people.People_ID = h.People_ID WHERE  h.People_ID < 73', 'SELECT COUNT(DISTINCT p.Height), p.Name FROM people AS p WHERE p.People_ID < 73'], ['SELECT people.People_ID FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE entrepreneur.People_ID BETWEEN 1 AND 10 OR  Entrepreneur_ID < 13', 'SELECT T1.People_ID FROM entrepreneur AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.People_ID BETWEEN 1 AND 10 OR T1.Entrepreneur_ID < 13;'], ['SELECT Entrepreneur_ID FROM entrepreneur WHERE People_ID BETWEEN 1 AND 10 OR Money_Requested NOT IN (SELECT Money_Requested FROM entrepreneur AS k WHERE k.Money_Requested BETWEEN 1 AND 10)', 'SELECT Entrepreneur_ID FROM entrepreneur WHERE People_ID BETWEEN 1 AND 10;'], ['SELECT Name, Date_of_Birth, Date_of_Birth FROM people WHERE  Weight < 10 ORDER BY Date_of_Birth DESC LIMIT 8', 'SELECT Name, Date_of_Birth FROM people WHERE Weight < 10 ORDER BY Date_of_Birth DESC LIMIT 8;'], ['SELECT COUNT(DISTINCT entrepreneur.Entrepreneur_ID), entrepreneur.Money_Requested FROM entrepreneur JOIN entrepreneur AS l ON entrepreneur.Entrepreneur_ID = l.Entrepreneur_ID WHERE l.Entrepreneur_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM people AS r WHERE  r.People_ID != 21 AND entrepreneur.Entrepreneur_ID = r.People_ID LIMIT 1)', 'SELECT COUNT(DISTINCT entrepreneur.Entrepreneur_ID), entrepreneur.Money_Requested FROM entrepreneur WHERE entrepreneur.Entrepreneur_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM people AS r WHERE r.People_ID != 21 AND entrepreneur.People_ID = r.People_ID LIMIT 1);'], ['SELECT COUNT(q.Money_Requested), SUM(q.Money_Requested), q.Money_Requested FROM entrepreneur AS q WHERE q.People_ID BETWEEN 1 AND 10 AND  q.People_ID < 13 GROUP BY q.Money_Requested LIMIT 3', 'SELECT COUNT(q.Money_Requested), SUM(q.Money_Requested) FROM entrepreneur AS q WHERE q.People_ID BETWEEN 1 AND 10 AND  q.People_ID < 13 LIMIT 3'], ['SELECT Money_Requested, entrepreneur.People_ID, Company FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID GROUP BY Company LIMIT 4', 'SELECT Money_Requested, entrepreneur.People_ID, Company FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID GROUP BY Money_Requested, entrepreneur.People_ID, Company LIMIT 4']], 'formula_1': [['SELECT z.lng, z.lat, z.lng FROM circuits AS z LIMIT 5', 'SELECT z.lng, z.lat FROM circuits AS z LIMIT 5'], ['SELECT constructorRef, url FROM constructors WHERE constructorRef != (SELECT AVG(constructorRef) FROM constructors WHERE  constructorId >= 32 LIMIT 7) ORDER BY constructorRef DESC', 'SELECT constructorRef, url FROM constructors WHERE constructorRef != (SELECT AVG(constructorRef) FROM constructors WHERE constructorId >= 32 LIMIT 7) ORDER BY constructorRef DESC'], ['SELECT lat, round FROM circuits JOIN races ON races.circuitId = circuits.circuitId WHERE  lat != 49', 'SELECT circuits.lat, races.round FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.lat != 49'], ['SELECT m.number FROM drivers AS m JOIN drivers ON drivers.driverId = m.driverId', 'SELECT m.number FROM drivers AS m JOIN drivers AS d ON d.driverId = m.driverId;'], ['SELECT q.constructorId, q.constructorId, q.constructorRef FROM constructors AS q JOIN constructors ON constructors.constructorId = q.constructorId WHERE  q.constructorId >= 37 ORDER BY q.constructorRef DESC', 'SELECT q.constructorId, q.constructorRef FROM constructors AS q JOIN constructors AS c ON q.constructorId = c.constructorId WHERE q.constructorId >= 37 ORDER BY q.constructorRef DESC'], ['SELECT MAX(round), name FROM races JOIN lapTimes JOIN drivers ON races.raceId = lapTimes.raceId AND lapTimes.driverId = drivers.driverId LIMIT 3', 'SELECT MAX(races.round), drivers.name FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId LIMIT 3'], ['SELECT MAX(w.alt), w.lat, w.name FROM circuits JOIN circuits AS w ON circuits.circuitId = w.circuitId WHERE w.circuitId BETWEEN 1 AND 10 GROUP BY w.name', 'SELECT MAX(alt), lat, name FROM circuits WHERE circuitId BETWEEN 1 AND 10 GROUP BY name, lat'], ['SELECT constructorResultsId, constructorResultsId, name FROM races JOIN constructorResults ON constructorResults.raceId = races.raceId WHERE round BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM constructors AS d WHERE  d.constructorId >= 100 AND constructorResults.constructorResultsId = d.constructorId LIMIT 1) GROUP BY name', 'SELECT T1.constructorResultsId, T2.name FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T3.raceId = T1.raceId WHERE T3.round BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM constructors AS d WHERE  d.constructorId >= 100 AND T1.constructorResultsId = d.constructorId LIMIT 1) GROUP BY T2.name'], ['SELECT COUNT(a.constructorId), a.name, a.nationality FROM constructors AS a WHERE  a.constructorId > 44 GROUP BY a.nationality ORDER BY a.name DESC', 'SELECT COUNT(a.constructorId), a.name, a.nationality FROM constructors AS a WHERE a.constructorId > 44 GROUP BY a.nationality, a.name ORDER BY a.name DESC'], ['SELECT l.raceId, l.positionText FROM driverStandings AS l WHERE  l.driverStandingsId != 20 OR points IN (SELECT points FROM driverStandings AS e WHERE e.position BETWEEN 1 AND 10) ORDER BY l.positionText DESC', 'SELECT l.raceId, l.positionText FROM driverStandings AS l WHERE l.driverStandingsId != 20 OR l.points IN (SELECT e.points FROM driverStandings AS e WHERE e.position BETWEEN 1 AND 10) ORDER BY l.positionText DESC;'], ['SELECT SUM(points), COUNT(DISTINCT constructorResults.constructorId) FROM constructorResults JOIN constructors ON constructors.constructorId = constructorResults.constructorId WHERE  status > 27', 'SELECT SUM(T1.points), COUNT(DISTINCT T1.constructorId) FROM constructorResults AS T1 JOIN status AS T2 ON T1.status = T2.statusId JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.statusId > 27;'], ['SELECT round, races.raceId FROM circuits JOIN races JOIN lapTimes ON races.circuitId = circuits.circuitId AND races.raceId = lapTimes.raceId WHERE  lap < 89', 'SELECT round, races.raceId FROM circuits JOIN races JOIN lapTimes ON races.circuitId = circuits.circuitId AND races.raceId = lapTimes.raceId WHERE  lapTimes.lap < 89'], ['SELECT COUNT(DISTINCT circuitId), url FROM races JOIN lapTimes JOIN constructorResults ON races.raceId = lapTimes.raceId AND constructorResults.raceId = races.raceId WHERE  circuitId > 69 AND EXISTS (SELECT * FROM races WHERE  raceId < 23 AND lapTimes.raceId = raceId) GROUP BY url', 'SELECT COUNT(DISTINCT T2.circuitId), T1.url FROM races AS T1 JOIN lapTimes AS T3 ON T1.raceId = T3.raceId JOIN constructorResults AS T4 ON T1.raceId = T4.raceId JOIN circuits AS T2 ON T2.circuitId = T1.circuitId WHERE T2.circuitId > 69 AND EXISTS (SELECT * FROM races AS r WHERE r.raceId < 23 AND r.raceId = T3.raceId) GROUP BY T1.url'], ['SELECT k.milliseconds, k.driverId FROM pitStops AS k WHERE  k.stop <= 30 LIMIT 2', 'SELECT k.raceId, k.milliseconds, k.driverId FROM pitStops AS k WHERE k.stop <= 30 LIMIT 2;'], ['SELECT circuitId, lapTimes.raceId FROM races JOIN lapTimes JOIN constructorResults ON races.raceId = lapTimes.raceId AND constructorResults.raceId = races.raceId WHERE round BETWEEN 1 AND 10 ORDER BY circuitId ASC', 'SELECT races.circuitId, lapTimes.raceId FROM races JOIN lapTimes JOIN constructorResults ON races.raceId = lapTimes.raceId AND constructorResults.raceId = races.raceId WHERE races.round BETWEEN 1 AND 10 ORDER BY races.circuitId ASC;']], 'wedding': [['SELECT o.Organized_by FROM church AS o WHERE o.Open_Date BETWEEN 1 AND 10 OR  o.Open_Date != 25 GROUP BY o.Organized_by ORDER BY o.Organized_by DESC LIMIT 8', 'SELECT o.Organized_by FROM church AS o WHERE (o.Open_Date BETWEEN 1 AND 10) OR o.Open_Date != 25 GROUP BY o.Organized_by ORDER BY o.Organized_by DESC LIMIT 8;'], ['SELECT MIN(Church_ID), MIN(Year), Male_ID, Female_ID FROM wedding WHERE  Female_ID != 39 GROUP BY Female_ID', 'SELECT Church_ID, Year, Male_ID, Female_ID FROM wedding WHERE Female_ID != 39 GROUP BY Church_ID, Year, Male_ID, Female_ID;'], ['SELECT Country FROM wedding JOIN people ON wedding.Female_ID = people.People_ID AND people.People_ID = wedding.Male_ID WHERE  Year < 85 ORDER BY Country DESC', 'SELECT DISTINCT Country FROM wedding JOIN people ON wedding.Female_ID = people.People_ID WHERE  Year < 85 ORDER BY Country ASC;'], ['SELECT Female_ID FROM wedding WHERE EXISTS (SELECT * FROM church WHERE wedding.Church_ID = Church_ID) LIMIT 7', 'SELECT Female_ID FROM wedding AS w WHERE EXISTS (SELECT * FROM church AS c WHERE c.Church_ID = w.Church_ID) LIMIT 7'], ['SELECT j.Open_Date, j.Open_Date, j.Continuation_of FROM church AS j WHERE  j.Church_ID >= 75 AND Name <= (SELECT AVG(Name) FROM church AS k WHERE  k.Church_ID < 43) GROUP BY j.Continuation_of ORDER BY j.Open_Date ASC', 'SELECT j.Open_Date, j.Continuation_of FROM church AS j WHERE  j.Church_ID >= 75 AND j.Open_Date <= (SELECT AVG(Open_Date) FROM church AS k WHERE  k.Church_ID < 43) GROUP BY j.Continuation_of ORDER BY j.Open_Date ASC']], 'club_1': [['SELECT StuID, Fname, city_code FROM Student WHERE StuID BETWEEN 1 AND 10 OR  Age >= 90 GROUP BY city_code HAVING SUM(Major) > 26 ORDER BY city_code ASC LIMIT 2', 'SELECT StuID, Fname, city_code FROM Student WHERE (StuID BETWEEN 1 AND 10) OR Age >= 90 GROUP BY city_code, StuID, Fname HAVING COUNT(StuID) > 26 ORDER BY city_code ASC LIMIT 2'], ['SELECT s.ClubID, s.ClubID FROM Club AS s WHERE  s.ClubID < 47 OR ClubID NOT IN (SELECT ClubID FROM Club AS y WHERE  y.ClubID > 24)', 'SELECT s.ClubID FROM Club AS s WHERE s.ClubID < 47 OR s.ClubID NOT IN (SELECT ClubID FROM Club AS y WHERE y.ClubID > 24)'], ['SELECT g.ClubLocation FROM Club JOIN Club AS g ON Club.ClubID = g.ClubID WHERE  g.ClubID > 35', 'SELECT ClubLocation FROM Club WHERE ClubID > 35;'], ['SELECT MIN(StuID), Position FROM Member_of_club WHERE  StuID < 50', 'SELECT MIN(StuID), Position FROM Member_of_club WHERE StuID < 50'], ['SELECT ClubDesc FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID ORDER BY ClubDesc ASC', 'SELECT T2.ClubDesc FROM Member_of_club AS T1 JOIN Club AS T2 ON T1.ClubID = T2.ClubID ORDER BY T2.ClubDesc ASC;'], ['SELECT MAX(s.StuID) FROM Member_of_club AS s WHERE s.StuID BETWEEN 1 AND 10 AND  s.ClubID >= 33 LIMIT 3', 'SELECT StuID FROM Member_of_club WHERE StuID BETWEEN 1 AND 10 AND ClubID >= 33 ORDER BY StuID DESC LIMIT 3'], ['SELECT y.ClubDesc FROM Club AS y WHERE  y.ClubID = 85 OR ClubID IN (SELECT ClubID FROM Member_of_club WHERE  ClubID <= 53) LIMIT 10', 'SELECT ClubDesc FROM Club AS y WHERE  y.ClubID = 85 OR y.ClubID IN (SELECT ClubID FROM Member_of_club WHERE  ClubID <= 53) LIMIT 10'], ['SELECT StuID, StuID FROM Member_of_club WHERE  ClubID < 15 LIMIT 8', 'SELECT T1.StuID, T2.StuID FROM Student AS T1 INNER JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID WHERE T2.ClubID < 15 LIMIT 8;'], ['SELECT city_code, Fname FROM Student WHERE Age BETWEEN 1 AND 10 AND  Age <= 85 ORDER BY Fname ASC', 'SELECT city_code, Fname FROM Student WHERE Age BETWEEN 1 AND 85 ORDER BY Fname ASC;'], ['SELECT SUM(Advisor), Age FROM Member_of_club JOIN Student ON Student.StuID = Member_of_club.StuID WHERE Age BETWEEN 1 AND 10 OR Age NOT IN (SELECT Age FROM Student WHERE  Major < 33)', 'SELECT Advisor, Age FROM Student WHERE Age BETWEEN 1 AND 10 OR Advisor NOT IN (SELECT Advisor FROM Student WHERE Major < 33)'], ['SELECT e.LName FROM Student AS e JOIN Student ON Student.StuID = e.StuID WHERE  e.Advisor >= 52 ORDER BY e.LName DESC LIMIT 10', 'SELECT LName FROM Student WHERE Advisor >= 52 ORDER BY LName DESC LIMIT 10;'], ['SELECT COUNT(DISTINCT ClubLocation), ClubLocation, ClubName FROM Club WHERE  ClubID <= 62 ORDER BY ClubLocation DESC', 'SELECT COUNT(DISTINCT ClubLocation), ClubLocation, ClubName FROM Club WHERE ClubID <= 62 GROUP BY ClubLocation, ClubName ORDER BY ClubLocation DESC;']], 'cre_Doc_Workflow': [['SELECT MIN(Staff_in_Processes.document_id), process_outcome_code FROM Documents_Processes JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id WHERE  Staff_in_Processes.document_id = 57 LIMIT 10', 'SELECT MIN(T1.document_id), T1.process_outcome_code FROM Documents_Processes AS T1 JOIN Staff_in_Processes AS T2 ON T1.document_id = T2.document_id AND T1.process_id = T2.process_id WHERE T2.document_id = 57 LIMIT 10'], ['SELECT COUNT(DISTINCT Documents_Processes.process_id), process_description FROM Documents_Processes JOIN Business_Processes JOIN Staff_in_Processes ON Documents_Processes.process_id = Business_Processes.process_id AND Documents_Processes.document_id = Staff_in_Processes.document_id WHERE staff_role_code > (SELECT AVG(staff_role_code) FROM Staff_in_Processes AS t WHERE  t.document_id <= 72)', 'SELECT COUNT(DISTINCT Documents_Processes.process_id), process_description FROM Documents_Processes JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id WHERE staff_role_code > (SELECT MAX(staff_role_code) FROM Staff_in_Processes AS t WHERE  t.document_id <= 72)'], ['SELECT Staff_in_Processes.process_id FROM Process_Outcomes JOIN Documents_Processes JOIN Business_Processes JOIN Staff_in_Processes ON Documents_Processes.process_id = Business_Processes.process_id AND Documents_Processes.document_id = Staff_in_Processes.document_id AND Process_Outcomes.process_outcome_code = Documents_Processes.process_outcome_code WHERE  Business_Processes.process_id = 5 AND document_id IN (SELECT document_id FROM Documents_Processes AS p WHERE  p.document_id != 6) GROUP BY Staff_in_Processes.process_id', 'SELECT sip.process_id FROM Process_Outcomes po JOIN Documents_Processes dp ON po.process_outcome_code = dp.process_outcome_code JOIN Business_Processes bp ON dp.process_id = bp.process_id JOIN Staff_in_Processes sip ON dp.document_id = sip.document_id WHERE bp.process_id = 5 AND sip.document_id NOT IN (SELECT document_id FROM Documents_Processes WHERE document_id = 6) GROUP BY sip.process_id'], ['SELECT d.process_id, d.process_id, d.other_details FROM Business_Processes AS d WHERE  d.next_process_id >= 33 GROUP BY d.other_details LIMIT 4', 'SELECT d.process_id, d.other_details FROM Business_Processes AS d WHERE d.next_process_id >= 33 GROUP BY d.other_details LIMIT 4'], ['SELECT Documents_Processes.process_status_code, other_details FROM Process_Status JOIN Documents_Processes JOIN Business_Processes ON Documents_Processes.process_status_code = Process_Status.process_status_code AND Documents_Processes.process_id = Business_Processes.process_id WHERE document_id BETWEEN 1 AND 10 AND  next_process_id = 25 GROUP BY Documents_Processes.process_status_code HAVING MAX(next_process_id) = 63 ORDER BY Documents_Processes.process_status_code DESC', 'SELECT Documents_Processes.process_status_code, Business_Processes.other_details FROM Process_Status JOIN Documents_Processes ON Documents_Processes.process_status_code = Process_Status.process_status_code JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id WHERE Documents_Processes.document_id BETWEEN 1 AND 10 AND Business_Processes.next_process_id = 25 GROUP BY Documents_Processes.process_status_code ORDER BY Documents_Processes.process_status_code DESC'], ['SELECT MIN(Documents_Processes.process_id), Documents_Processes.process_id FROM Documents JOIN Documents_Processes JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id AND Documents.document_id = Documents_Processes.document_id WHERE  Business_Processes.process_id != 29 ORDER BY Documents_Processes.process_id ASC', 'SELECT MIN(Documents_Processes.process_id), Documents_Processes.process_id FROM Documents JOIN Documents_Processes JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id AND Documents.document_id = Documents_Processes.document_id WHERE  Business_Processes.process_id != 29 ORDER BY Documents_Processes.process_id ASC'], ['SELECT COUNT(DISTINCT process_status_code) FROM Documents_Processes JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id WHERE  Documents_Processes.document_id < 84', 'SELECT COUNT(DISTINCT process_status_code) FROM Documents_Processes JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id AND Documents_Processes.process_id = Staff_in_Processes.process_id WHERE Documents_Processes.document_id < 84'], ['SELECT COUNT(DISTINCT other_details) FROM Staff JOIN Documents_Processes JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id AND Staff_in_Processes.staff_id = Staff.staff_id WHERE  Staff_in_Processes.document_id <= 63', 'SELECT COUNT(DISTINCT sip.other_details) FROM Staff s JOIN Staff_in_Processes sip ON s.staff_id = sip.staff_id JOIN Documents_Processes dp ON sip.document_id = dp.document_id WHERE sip.document_id <= 63'], ['SELECT SUM(Documents_Processes.document_id), AVG(Documents.document_id) FROM Process_Status JOIN Documents JOIN Documents_Processes ON Documents_Processes.process_status_code = Process_Status.process_status_code AND Documents.document_id = Documents_Processes.document_id WHERE document_description IN (SELECT document_description FROM Documents AS j WHERE j.document_id BETWEEN 1 AND 10 AND  j.document_id < 74)', 'SELECT SUM(dp.document_id), AVG(d.document_id) FROM Documents_Processes dp JOIN Process_Status ps ON ps.process_status_code = dp.process_status_code JOIN Documents d ON d.document_id = dp.document_id WHERE d.document_description IN (SELECT document_description FROM Documents j WHERE j.document_id BETWEEN 1 AND 10 AND j.document_id < 74)'], ['SELECT other_details, staff_role_code FROM Staff_in_Processes WHERE  document_id < 56 AND EXISTS (SELECT * FROM Staff AS t WHERE  t.staff_id < 81 AND Staff_in_Processes.document_id = t.staff_id) GROUP BY staff_role_code HAVING COUNT(document_id) < 82', 'SELECT other_details, staff_role_code FROM Staff_in_Processes WHERE document_id < 56 AND EXISTS (SELECT * FROM Staff AS t WHERE t.staff_id < 81 AND Staff_in_Processes.staff_id = t.staff_id) GROUP BY staff_role_code HAVING COUNT(document_id) < 82'], ['SELECT process_id, process_status_code FROM Documents_Processes WHERE  process_id < 0 GROUP BY process_id HAVING MIN(process_id) < 75', 'SELECT document_id, process_id, process_status_code FROM Documents_Processes WHERE process_id < 0 GROUP BY document_id, process_id HAVING MIN(process_id) < 75'], ['SELECT Documents_Processes.document_id FROM Documents JOIN Documents_Processes JOIN Business_Processes JOIN Authors ON Documents_Processes.process_id = Business_Processes.process_id AND Documents.author_name = Authors.author_name AND Documents.document_id = Documents_Processes.document_id WHERE Documents.document_id BETWEEN 1 AND 10 AND  Documents_Processes.document_id > 31 ORDER BY Documents_Processes.document_id ASC', 'SELECT Documents_Processes.document_id FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_id BETWEEN 1 AND 10 AND Documents_Processes.document_id > 31 ORDER BY Documents_Processes.document_id ASC'], ['SELECT MAX(d.document_id), d.author_name FROM Documents AS d WHERE  d.document_id <= 45 AND other_details <= (SELECT MIN(other_details) FROM Staff_in_Processes AS e WHERE  e.document_id = 75 LIMIT 6) LIMIT 9', 'SELECT MAX(d.document_id), d.author_name FROM Documents AS d WHERE  d.document_id <= 45 AND other_details <= (SELECT MIN(other_details) FROM Staff_in_Processes AS e WHERE  e.document_id = 75) LIMIT 9']], 'products_for_hire': [['SELECT COUNT(DISTINCT Products_Booked.product_id), product_description, returned_yn, product_type_code FROM Products_Booked JOIN Products_for_Hire ON Products_Booked.product_id = Products_for_Hire.product_id WHERE  Products_for_Hire.product_id >= 52 GROUP BY product_type_code HAVING MAX(daily_hire_cost) > 5 ORDER BY product_type_code ASC', 'SELECT COUNT(DISTINCT Products_Booked.product_id) as unique_products, product_type_code, MAX(daily_hire_cost) as max_cost FROM Products_Booked JOIN Products_for_Hire ON Products_Booked.product_id = Products_for_Hire.product_id WHERE Products_for_Hire.product_id >= 52 GROUP BY product_type_code HAVING MAX(daily_hire_cost) > 5 ORDER BY product_type_code ASC'], ['SELECT COUNT(DISTINCT u.gender_mf), u.customer_id, u.first_name, u.gender_mf FROM Customers AS u WHERE  u.coupon_id = 96 GROUP BY u.gender_mf LIMIT 7', 'SELECT u.gender_mf, COUNT(DISTINCT u.gender_mf) FROM Customers AS u WHERE u.coupon_id = 96 GROUP BY u.gender_mf LIMIT 7'], ['SELECT coupon_id, coupon_id, date_became_customer FROM Customers WHERE good_or_bad_customer <= (SELECT MAX(good_or_bad_customer) FROM Customers AS h) GROUP BY date_became_customer HAVING MAX(customer_id) = 58 LIMIT 10', 'SELECT coupon_id, date_became_customer FROM Customers WHERE customer_id = 58 LIMIT 10'], ['SELECT COUNT(DISTINCT last_name), first_name FROM Customers WHERE gender_mf NOT IN (SELECT gender_mf FROM Customers WHERE coupon_id BETWEEN 1 AND 10 OR  customer_id = 55)', 'SELECT COUNT(DISTINCT last_name) FROM Customers WHERE gender_mf NOT IN (SELECT gender_mf FROM Customers WHERE coupon_id BETWEEN 1 AND 10 OR  customer_id = 55)'], ['SELECT MAX(customer_id), MAX(coupon_id), coupon_id FROM Customers WHERE  coupon_id != 55', 'SELECT MAX(customer_id), MAX(coupon_id) FROM Customers WHERE coupon_id != 55'], ['SELECT count_hired, last_name, Bookings.customer_id FROM Customers JOIN Bookings ON Bookings.customer_id = Customers.customer_id WHERE Customers.customer_id BETWEEN 1 AND 10 OR  amount_of_refund = 48 GROUP BY Bookings.customer_id HAVING AVG(coupon_id) > 50', 'SELECT last_name, Bookings.customer_id FROM Customers JOIN Bookings ON Bookings.customer_id = Customers.customer_id WHERE Bookings.customer_id BETWEEN 1 AND 10 OR  amount_of_refund = 48 GROUP BY Bookings.customer_id, last_name'], ['SELECT MAX(Customers.coupon_id), gender_mf, first_name FROM Customers JOIN Discount_Coupons ON Customers.coupon_id = Discount_Coupons.coupon_id WHERE  Customers.coupon_id >= 32 GROUP BY gender_mf LIMIT 3', 'SELECT MAX(Customers.coupon_id), gender_mf FROM Customers JOIN Discount_Coupons ON Customers.coupon_id = Discount_Coupons.coupon_id WHERE Customers.coupon_id >= 32 GROUP BY gender_mf LIMIT 3'], ['SELECT COUNT(DISTINCT booked_count), COUNT(DISTINCT booked_count) FROM Products_Booked WHERE  booked_amount > 14', 'SELECT COUNT(DISTINCT booked_count) FROM Products_Booked WHERE booked_amount > 14'], ['SELECT customer_id, last_name, gender_mf FROM Customers JOIN Discount_Coupons ON Customers.coupon_id = Discount_Coupons.coupon_id WHERE coupon_amount BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Customers WHERE coupon_id BETWEEN 1 AND 10 AND Discount_Coupons.coupon_id = coupon_id) GROUP BY gender_mf LIMIT 6', 'SELECT T1.customer_id, T1.last_name, T1.gender_mf FROM Customers AS T1 JOIN Discount_Coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount BETWEEN 1 AND 10 GROUP BY T1.gender_mf LIMIT 6'], ['SELECT COUNT(DISTINCT booking_start_date), amount_of_refund FROM View_Product_Availability JOIN Bookings ON Bookings.booking_id = View_Product_Availability.booking_id WHERE available_yn NOT IN (SELECT available_yn FROM View_Product_Availability) GROUP BY amount_of_refund HAVING MAX(amount_of_refund) < 67 LIMIT 7', "SELECT COUNT(DISTINCT T2.booking_start_date), T2.amount_of_refund FROM View_Product_Availability AS T1 JOIN Bookings AS T2 ON T2.booking_id = T1.booking_id WHERE T2.booking_id NOT IN (SELECT T1.booking_id FROM View_Product_Availability AS T1 WHERE T1.available_yn = 'Y') GROUP BY T2.amount_of_refund HAVING T2.amount_of_refund < 67 LIMIT 7"], ['SELECT COUNT(DISTINCT payment_date), COUNT(DISTINCT amount_due), payment_id FROM Payments WHERE amount_due BETWEEN 1 AND 10 AND  amount_due >= 92 ORDER BY payment_id DESC', 'SELECT COUNT(DISTINCT payment_date), COUNT(DISTINCT amount_due), payment_id FROM Payments WHERE amount_due >= 92 ORDER BY payment_id DESC']], 'flight_1': [['SELECT salary FROM employee WHERE  eid <= 67 GROUP BY salary', 'SELECT salary, COUNT(*) FROM employee WHERE eid <= 67 GROUP BY salary;'], ['SELECT COUNT(DISTINCT distance), COUNT(DISTINCT aircraft.aid), COUNT(DISTINCT aircraft.aid), certificate.aid FROM aircraft JOIN certificate ON certificate.aid = aircraft.aid WHERE  certificate.aid <= 31 GROUP BY certificate.aid ORDER BY certificate.aid DESC LIMIT 8', 'SELECT COUNT(DISTINCT T1.distance), COUNT(DISTINCT T1.aid), T2.aid \nFROM aircraft AS T1 \nJOIN certificate AS T2 \nON T2.aid = T1.aid \nWHERE T2.aid <= 31 \nGROUP BY T2.aid \nORDER BY T2.aid DESC \nLIMIT 8'], ['SELECT MAX(salary) FROM employee WHERE  salary <= 59 OR name IN (SELECT name FROM employee WHERE  eid <= 65)', 'SELECT MAX(salary) FROM employee WHERE salary <= 59 OR eid IN (SELECT eid FROM employee WHERE eid <= 65)'], ['SELECT certificate.aid FROM certificate AS o JOIN certificate ON certificate.eid = o.eid WHERE EXISTS (SELECT * FROM aircraft WHERE  aid <= 4 AND certificate.eid = aid)', 'SELECT o.aid FROM certificate AS o JOIN certificate AS t ON t.eid = o.eid WHERE EXISTS (SELECT * FROM aircraft WHERE aid <= 4 AND t.eid = aid)'], ['SELECT SUM(price), flno, aid FROM flight WHERE  flno >= 3 LIMIT 2', 'SELECT SUM(price), flno, aid FROM flight WHERE flno >= 3 GROUP BY flno, aid LIMIT 2;'], ['SELECT aircraft.name, aircraft.name FROM aircraft AS q JOIN aircraft ON aircraft.aid = q.aid WHERE  q.distance > 83 OR distance IN (SELECT distance FROM flight WHERE  price != 98) ORDER BY aircraft.name DESC LIMIT 1', 'SELECT name FROM aircraft WHERE distance > 83 OR distance IN (SELECT distance FROM flight WHERE price != 98) ORDER BY name DESC LIMIT 1'], ['SELECT SUM(a.distance), a.name FROM aircraft AS a WHERE a.aid BETWEEN 1 AND 10 OR  a.aid = 67 GROUP BY a.name', 'SELECT SUM(a.distance), a.name FROM aircraft AS a WHERE a.aid BETWEEN 1 AND 10 OR a.aid = 67 GROUP BY a.name'], ['SELECT aid, employee.eid FROM employee JOIN certificate ON employee.eid = certificate.eid WHERE name IN (SELECT name FROM employee AS p WHERE  p.salary > 64)', 'SELECT T1.aid, T2.eid FROM certificate AS T1 JOIN employee AS T2 ON T1.eid = T2.eid WHERE T2.name IN (SELECT name FROM employee AS p WHERE p.salary > 64)'], ['SELECT i.name FROM employee AS i WHERE  i.eid < 29 GROUP BY i.name LIMIT 4', 'SELECT i.name FROM employee AS i WHERE  i.eid < 29 LIMIT 4;'], ['SELECT COUNT(DISTINCT eid), salary FROM employee WHERE  eid > 43 GROUP BY salary HAVING MAX(eid) <= 36', 'SELECT COUNT(DISTINCT eid), salary FROM employee WHERE eid > 43 GROUP BY salary'], ['SELECT COUNT(distance), price FROM flight WHERE  price != 25', 'SELECT COUNT(distance), AVG(price) FROM flight WHERE price != 25;']], 'student_assessment': [['SELECT course_description FROM Student_Course_Attendance JOIN Students JOIN Student_Course_Registrations JOIN Courses ON Student_Course_Registrations.course_id = Courses.course_id AND Student_Course_Registrations.student_id = Student_Course_Attendance.student_id AND Students.student_id = Student_Course_Registrations.student_id AND Student_Course_Attendance.course_id = Student_Course_Registrations.course_id WHERE  Student_Course_Registrations.student_id > 47', ''], ['SELECT COUNT(DISTINCT u.course_id), u.course_id FROM Student_Course_Attendance AS u WHERE u.course_id BETWEEN 1 AND 10 AND  u.course_id > 67 ORDER BY u.course_id DESC', 'SELECT COUNT(DISTINCT u.course_id), u.course_id FROM Student_Course_Attendance AS u GROUP BY u.course_id ORDER BY u.course_id DESC'], ['SELECT COUNT(k.person_id), COUNT(DISTINCT k.address_id) FROM People_Addresses AS k JOIN People_Addresses ON People_Addresses.person_address_id = k.person_address_id WHERE People_Addresses.address_id BETWEEN 1 AND 10 OR date_to NOT IN (SELECT date_to FROM People_Addresses AS v WHERE  v.address_id = 49) LIMIT 8', "SELECT COUNT(k.person_id), COUNT(DISTINCT k.address_id) FROM People_Addresses AS k JOIN People_Addresses AS p ON p.person_address_id = k.person_address_id WHERE p.address_id BETWEEN 1 AND 10 OR COALESCE(k.date_to, '1970-01-01 00:00:00') NOT IN (SELECT COALESCE(date_to, '1970-01-01 00:00:00') FROM People_Addresses AS v WHERE v.address_id = 49) LIMIT 8"], ['SELECT candidate_id, candidate_id, candidate_id FROM Candidate_Assessments WHERE EXISTS (SELECT * FROM Candidates WHERE  candidate_id > 93 AND Candidate_Assessments.candidate_id = candidate_id)', 'SELECT candidate_id FROM Candidate_Assessments WHERE EXISTS (SELECT * FROM Candidates c WHERE c.candidate_id = Candidate_Assessments.candidate_id AND c.candidate_id > 93)'], ['SELECT People_Addresses.address_id FROM Addresses JOIN People_Addresses ON People_Addresses.address_id = Addresses.address_id WHERE person_address_id <= (SELECT MAX(person_address_id) FROM People_Addresses AS l WHERE  l.person_id > 40 LIMIT 9) ORDER BY People_Addresses.address_id ASC', 'SELECT address_id FROM People_Addresses WHERE person_address_id <= (SELECT MAX(person_address_id) FROM People_Addresses AS l WHERE  l.person_id > 40 LIMIT 9) ORDER BY address_id ASC'], ['SELECT COUNT(DISTINCT qualification), candidate_id FROM Candidate_Assessments WHERE  candidate_id > 43 LIMIT 8', 'SELECT candidate_id, COUNT(DISTINCT qualification) FROM Candidate_Assessments WHERE candidate_id > 43 GROUP BY candidate_id LIMIT 8;'], ['SELECT SUM(person_id), person_address_id, date_to FROM People_Addresses WHERE person_id BETWEEN 1 AND 10 GROUP BY date_to HAVING MIN(person_address_id) > 62', 'SELECT COUNT(person_id), person_address_id, date_to FROM People_Addresses WHERE person_id BETWEEN 1 AND 10 AND person_address_id > (SELECT MIN(person_address_id) FROM People_Addresses) GROUP BY person_address_id, date_to']], 'manufactory_1': [['SELECT SUM(Revenue), Code FROM Manufacturers WHERE  Code > 20', 'SELECT Revenue, Code FROM Manufacturers WHERE Code > 20'], ['SELECT AVG(Products.Code), Headquarter, Manufacturer FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Revenue BETWEEN 1 AND 10 GROUP BY Manufacturer HAVING MAX(Manufacturers.Code) >= 40', 'SELECT AVG(Products.Price), Headquarter, Manufacturer FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Revenue BETWEEN 1 AND 10 GROUP BY Manufacturer, Headquarter, Manufacturers.Code HAVING MAX(Manufacturers.Code) >= 40'], ['SELECT Headquarter, Name FROM Manufacturers WHERE  Code <= 53 GROUP BY Name HAVING AVG(Code) >= 39', 'SELECT Headquarter, Name, AVG(Code) as avg_code FROM Manufacturers WHERE Code <= 53 GROUP BY Name, Headquarter HAVING AVG(Code) >= 39;'], ['SELECT MAX(Price), Price FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Manufacturers.Code BETWEEN 1 AND 10 OR Manufacturer IN (SELECT Manufacturer FROM Products WHERE Code BETWEEN 1 AND 10) GROUP BY Price', 'SELECT MAX(Price) AS max_price FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Manufacturers.Code BETWEEN 1 AND 10 OR Products.Manufacturer IN (SELECT Manufacturer FROM Products WHERE Code BETWEEN 1 AND 10)'], ['SELECT c.Name, Products.Name FROM Products AS c JOIN Products ON Products.Code = c.Code WHERE  Products.Code < 52 OR Code NOT IN (SELECT Code FROM Manufacturers WHERE  Code != 0 LIMIT 5)', 'SELECT p.Name, m.Name FROM Products AS p JOIN Manufacturers AS m ON p.Manufacturer = m.Code WHERE m.Code < 52 OR m.Code NOT IN (SELECT Code FROM Manufacturers WHERE Code != 0 LIMIT 5)'], ['SELECT Products.Name FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE  Manufacturers.Code > 22', 'SELECT Products.Name FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Manufacturers.Code > 22'], ['SELECT Manufacturers.Headquarter FROM Manufacturers AS p JOIN Manufacturers ON Manufacturers.Code = p.Code WHERE  Manufacturers.Code != 59', 'SELECT Headquarter FROM Manufacturers WHERE Code != 59'], ['SELECT Price, Manufacturer FROM Products WHERE  Manufacturer = 87', "SELECT Price, Manufacturer FROM Products WHERE Manufacturer IN (SELECT Code FROM Manufacturers WHERE Name = 'ManufacturerName')"], ['SELECT Manufacturers.Code, Products.Name, Founder FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE EXISTS (SELECT * FROM Products WHERE Manufacturers.Code = Manufacturer) GROUP BY Products.Name HAVING COUNT(Price) < 91', 'SELECT Manufacturers.Code, Products.Name, Manufacturers.Founder FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE EXISTS (SELECT * FROM Products WHERE Manufacturers.Code = Manufacturer) GROUP BY Manufacturers.Code, Products.Name, Manufacturers.Founder HAVING COUNT(Products.Price) < 91'], ['SELECT SUM(q.Manufacturer), q.Name, q.Name, q.Manufacturer FROM Products AS q WHERE  q.Price != 80 GROUP BY q.Manufacturer ORDER BY q.Manufacturer DESC', 'SELECT SUM(q.Price), q.Name, q.Manufacturer FROM Products AS q WHERE  q.Price != 80 GROUP BY q.Manufacturer ORDER BY q.Manufacturer DESC'], ['SELECT MIN(r.Code), r.Price FROM Products AS r WHERE  r.Price != 5 GROUP BY r.Price HAVING COUNT(r.Manufacturer) < 12', 'SELECT r.Code, MIN(r.Price) FROM Products AS r WHERE r.Price != 5 GROUP BY r.Code HAVING COUNT(r.Manufacturer) < 12;'], ['SELECT x.Name, x.Manufacturer FROM Products AS x GROUP BY x.Manufacturer ORDER BY x.Manufacturer DESC', 'SELECT x.Name, x.Manufacturer FROM Products AS x GROUP BY x.Name, x.Manufacturer ORDER BY x.Manufacturer DESC;'], ['SELECT Revenue FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Headquarter = (SELECT MAX(Headquarter) FROM Manufacturers WHERE  Code >= 35 LIMIT 8) LIMIT 9', 'SELECT Revenue FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Code = (SELECT Code FROM Manufacturers WHERE Code >= 35 ORDER BY Code DESC LIMIT 1) LIMIT 9'], ['SELECT COUNT(Revenue), AVG(Products.Code) FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE  Revenue < 51 AND EXISTS (SELECT * FROM Products AS d WHERE d.Code BETWEEN 1 AND 10 AND Manufacturers.Code = d.Manufacturer LIMIT 2)', 'SELECT COUNT(Revenue), AVG(Products.Price) FROM Manufacturers JOIN Products ON Products.Manufacturer = Manufacturers.Code WHERE Revenue < 51 AND EXISTS (SELECT * FROM Products AS d WHERE d.Code BETWEEN 1 AND 10 AND Manufacturers.Code = d.Manufacturer LIMIT 2)'], ['SELECT Price, Name, Manufacturer FROM Products WHERE  Price < 69 GROUP BY Manufacturer ORDER BY Name DESC', 'SELECT AVG(Price) AS Price, T2.Name, T2.Manufacturer FROM Products AS T1 INNER JOIN Manufacturers AS T2 ON T1.Manufacturer = T2.Code WHERE Price < 69 GROUP BY T2.Manufacturer, T2.Name ORDER BY T2.Name DESC;'], ['SELECT Products.Name, Products.Name FROM Products AS o JOIN Products ON Products.Code = o.Code WHERE  o.Code >= 31 LIMIT 2', 'SELECT DISTINCT o.Name, Products.Name FROM Products AS o JOIN Products ON Products.Code = o.Code WHERE  o.Code >= 31 LIMIT 2'], ['SELECT MIN(Manufacturer), Price FROM Products WHERE  Code <= 18 ORDER BY Price DESC', 'SELECT MIN(Price) FROM Products WHERE Code <= 18 ORDER BY Price DESC;'], ['SELECT COUNT(DISTINCT j.Code) FROM Manufacturers AS j WHERE  j.Revenue = 91 LIMIT 8', 'SELECT COUNT(DISTINCT Code) FROM Manufacturers WHERE Revenue = 91 LIMIT 8;']], 'wrestler': [['SELECT Eliminated_By, Elimination_Move FROM Elimination WHERE EXISTS (SELECT * FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 AND Elimination.Elimination_ID = Wrestler_ID)', "SELECT Eliminated_By, Elimination_Move FROM Elimination WHERE EXISTS (SELECT * FROM wrestler WHERE CAST(wrestler.Wrestler_ID AS TEXT) = Elimination.Elimination_ID AND CAST(wrestler.Wrestler_ID AS TEXT) BETWEEN '1' AND '10')"], ['SELECT COUNT(DISTINCT e.Location), e.Name FROM wrestler AS e WHERE  e.Wrestler_ID < 2', 'SELECT COUNT(DISTINCT e.Location), e.Name FROM wrestler AS e WHERE  e.Wrestler_ID < 2;'], ['SELECT AVG(Wrestler_ID), Wrestler_ID FROM wrestler', "SELECT CAST(REPLACE(Days_held, ',', '') AS number) as Days_held, Wrestler_ID FROM wrestler"], ['SELECT MAX(Wrestler_ID), MIN(Wrestler_ID), COUNT(DISTINCT Event) FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 OR  Wrestler_ID >= 43', 'SELECT MAX(Wrestler_ID), MIN(Wrestler_ID), COUNT(DISTINCT Event) FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 OR Wrestler_ID >= 43'], ['SELECT Location FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 OR  Wrestler_ID < 77', 'SELECT Location FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 OR Wrestler_ID > 77;'], ['SELECT Wrestler_ID FROM wrestler WHERE Wrestler_ID BETWEEN 1 AND 10 OR  Wrestler_ID = 66 ORDER BY Wrestler_ID ASC', 'SELECT Wrestler_ID FROM wrestler WHERE CAST(Wrestler_ID AS TEXT) BETWEEN "1" AND "10" OR CAST(Wrestler_ID AS TEXT) = "66" ORDER BY CAST(Wrestler_ID AS TEXT) ASC;'], ['SELECT Wrestler_ID, Name, Event FROM wrestler WHERE  Wrestler_ID = 64 GROUP BY Event LIMIT 9', 'SELECT Wrestler_ID, Name, Event FROM wrestler WHERE Wrestler_ID = 64;'], ['SELECT y.Name, y.Reign, y.Event FROM wrestler AS y WHERE  y.Wrestler_ID > 82 GROUP BY y.Event ORDER BY y.Name DESC LIMIT 6', 'SELECT y.Name, y.Reign, y.Event FROM wrestler AS y WHERE  y.Wrestler_ID > 82 GROUP BY y.Name, y.Reign, y.Event ORDER BY y.Name DESC LIMIT 6'], ['SELECT COUNT(DISTINCT t.Days_held), t.Wrestler_ID, t.Name FROM wrestler AS t WHERE t.Wrestler_ID BETWEEN 1 AND 10 ORDER BY t.Name ASC LIMIT 6', 'SELECT Wrestler_ID, COUNT(DISTINCT t.Days_held) FROM wrestler AS t WHERE t.Wrestler_ID BETWEEN 1 AND 10 GROUP BY t.Wrestler_ID ORDER BY t.Wrestler_ID ASC LIMIT 6']], 'architecture': [['SELECT MIN(bridge.architect_id), MIN(length_meters) FROM mill JOIN bridge JOIN architect ON architect.id = bridge.architect_id AND mill.architect_id = architect.id WHERE  bridge.architect_id < 69', 'SELECT MIN(bridge.architect_id), MIN(length_meters) FROM mill JOIN bridge JOIN architect ON CAST(architect.id AS number) = bridge.architect_id AND mill.architect_id = CAST(architect.id AS number) WHERE  CAST(architect.id AS number) < 69'], ['SELECT COUNT(DISTINCT notes), architect_id, location FROM mill WHERE  architect_id != 64 GROUP BY location LIMIT 10', 'SELECT COUNT(DISTINCT notes), MIN(architect_id), location FROM mill WHERE architect_id != 64 GROUP BY location LIMIT 10'], ['SELECT MAX(u.length_feet), AVG(u.length_meters) FROM bridge AS u LIMIT 3', 'SELECT MAX(length_feet), AVG(length_meters) FROM bridge;'], ['SELECT notes FROM mill WHERE  architect_id < 15 GROUP BY notes ORDER BY notes DESC LIMIT 5', 'SELECT notes FROM mill WHERE architect_id < "15" GROUP BY notes ORDER BY notes DESC LIMIT 5'], ['SELECT t.name, t.notes FROM mill AS t WHERE  t.id = 42 ORDER BY t.notes ASC LIMIT 8', 'SELECT t.name, t.notes FROM mill AS t WHERE  t.id = 42::number ORDER BY t.notes ASC LIMIT 8'], ['SELECT bridge.id FROM bridge JOIN architect ON architect.id = bridge.architect_id WHERE  length_meters > 19 LIMIT 6', 'SELECT bridge.id FROM bridge INNER JOIN architect ON architect.id = bridge.architect_id WHERE length_meters > 19 LIMIT 6;'], ['SELECT COUNT(DISTINCT length_feet), COUNT(DISTINCT bridge.name), COUNT(DISTINCT built_year), length_feet FROM mill JOIN bridge JOIN architect ON architect.id = bridge.architect_id AND mill.architect_id = architect.id WHERE  mill.id >= 34 GROUP BY length_feet ORDER BY length_feet ASC', 'SELECT COUNT(DISTINCT T2.length_feet), COUNT(DISTINCT T2.name), COUNT(DISTINCT T1.built_year), T2.length_feet FROM mill AS T1 JOIN bridge AS T2 JOIN architect AS T3 ON T3.id = T2.architect_id AND T1.architect_id = T3.id WHERE  T1.id >= 34 GROUP BY T2.length_feet ORDER BY T2.length_feet ASC']], 'train_station': [['SELECT COUNT(Annual_entry_exit), Annual_entry_exit FROM station JOIN train_station ON train_station.Station_ID = station.Station_ID WHERE  Total_Passengers = 39 ORDER BY Annual_entry_exit ASC LIMIT 5', 'SELECT COUNT(station.Annual_entry_exit), station.Annual_entry_exit FROM station JOIN train_station ON train_station.Station_ID = station.Station_ID WHERE station.Total_Passengers = 39 GROUP BY station.Annual_entry_exit ORDER BY station.Annual_entry_exit ASC LIMIT 5;'], ['SELECT Train_ID, Time FROM train WHERE  Train_ID >= 97 LIMIT 3', 'SELECT Train_ID, Time FROM train WHERE Train_ID >= 97 LIMIT 3'], ['SELECT SUM(z.Annual_entry_exit), COUNT(DISTINCT z.Name), z.Name FROM station AS z WHERE  z.Annual_interchanges = 40 OR Name IN (SELECT Name FROM train AS h WHERE h.Train_ID BETWEEN 1 AND 10 LIMIT 5)', 'SELECT SUM(z.Annual_entry_exit), COUNT(DISTINCT z.Name), z.Name FROM station AS z WHERE  z.Annual_interchanges = 40 OR z.Name IN (SELECT h.Name FROM train AS h WHERE h.Train_ID BETWEEN 1 AND 10 LIMIT 5)'], ['SELECT AVG(Train_ID), Name, Time FROM train WHERE  Train_ID > 30 GROUP BY Time HAVING MIN(Train_ID) <= 65 LIMIT 8', 'SELECT AVG(Train_ID), Name, Time FROM train WHERE Train_ID > 30 GROUP BY Time, Name HAVING MIN(Train_ID) <= 65 LIMIT 8'], ['SELECT station.Name FROM station JOIN station AS j ON station.Station_ID = j.Station_ID WHERE  j.Station_ID >= 49 ORDER BY station.Name ASC', 'SELECT Name FROM station WHERE Station_ID >= 49 ORDER BY Name ASC;'], ['SELECT Main_Services, Location FROM station GROUP BY Location ORDER BY Main_Services ASC LIMIT 7', 'SELECT Main_Services, Location FROM station GROUP BY Main_Services, Location ORDER BY Main_Services ASC LIMIT 7;']], 'cre_Doc_and_collections': [['SELECT MIN(Document_Subset_ID), COUNT(DISTINCT Document_Subset_Name), Document_Subset_Name FROM Document_Subsets WHERE  Document_Subset_ID <= 94', 'SELECT MIN(Document_Subset_ID), COUNT(DISTINCT Document_Subset_Name), Document_Subset_Name FROM Document_Subsets WHERE Document_Subset_ID <= 94 GROUP BY Document_Subset_ID, Document_Subset_Name;'], ['SELECT COUNT(DISTINCT Document_Subset_Name), COUNT(DISTINCT Document_Subset_Name), Document_Subset_Details FROM Document_Subsets WHERE  Document_Subset_ID = 8 ORDER BY Document_Subset_Details ASC LIMIT 6', 'SELECT COUNT(DISTINCT Document_Subset_Name), Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_ID = 8 GROUP BY Document_Subset_Details ORDER BY Document_Subset_Details ASC LIMIT 6'], ['SELECT COUNT(DISTINCT r.Collection_Description), r.Parent_Collection_ID FROM Collections AS r WHERE  r.Parent_Collection_ID >= 24 GROUP BY r.Parent_Collection_ID', 'SELECT COUNT(DISTINCT r.Collection_Description) FROM Collections AS r WHERE  r.Parent_Collection_ID >= 24'], ['SELECT Collection_ID, Document_Object_ID FROM Documents_in_Collections WHERE  Collection_ID >= 75 GROUP BY Collection_ID', 'SELECT Collection_ID, COUNT(Document_Object_ID) FROM Documents_in_Collections WHERE Collection_ID >= 75 GROUP BY Collection_ID;'], ['SELECT AVG(n.Document_Subset_ID), n.Document_Subset_ID, n.Document_Subset_Name FROM Document_Subsets AS n WHERE  n.Document_Subset_ID < 5 GROUP BY n.Document_Subset_Name HAVING MIN(n.Document_Subset_ID) <= 46', 'SELECT AVG(n.Document_Subset_ID) AS Average_Document_Subset_ID, n.Document_Subset_ID, n.Document_Subset_Name FROM Document_Subsets AS n WHERE n.Document_Subset_ID < 5 GROUP BY n.Document_Subset_Name, n.Document_Subset_ID HAVING MIN(n.Document_Subset_ID) <= 46'], ['SELECT COUNT(DISTINCT Other_Details), Other_Details, Owner FROM Document_Objects WHERE  Document_Object_ID <= 26 GROUP BY Owner', 'SELECT COUNT(DISTINCT Other_Details), Other_Details, Owner FROM Document_Objects WHERE Document_Object_ID <= 26 GROUP BY Owner, Other_Details;'], ['SELECT Description FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID WHERE  Parent_Document_Object_ID = 54', 'SELECT Description FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Parent_Document_Object_ID = Document_Subset_Members.Document_Object_ID WHERE Document_Subset_Members.Document_Object_ID = 54'], ['SELECT SUM(Related_Collection_ID), Collection_ID FROM Collection_Subset_Members WHERE  Related_Collection_ID = 25 ORDER BY Collection_ID DESC', 'SELECT SUM(Related_Collection_ID) as Total_Related_Collection_ID, Collection_ID FROM Collection_Subset_Members WHERE Related_Collection_ID = 25 GROUP BY Collection_ID ORDER BY Collection_ID DESC;'], ['SELECT Document_Subset_Members.Document_Subset_ID, Owner FROM Document_Subsets JOIN Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID AND Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subset_Name IN (SELECT Document_Subset_Name FROM Document_Subsets AS r WHERE  r.Document_Subset_ID != 99) ORDER BY Owner ASC', 'SELECT Document_Subset_Members.Document_Subset_ID, Owner FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID WHERE Document_Subset_Name IN (SELECT Document_Subset_Name FROM Document_Subsets AS r WHERE r.Document_Subset_ID != 99) ORDER BY Owner ASC'], ['SELECT Document_Subset_Details, Document_Subset_Details FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Subset_Members AS z) GROUP BY Document_Subset_Details ORDER BY Document_Subset_Details DESC', 'SELECT Document_Subset_Details FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subset_Members GROUP BY Document_Subset_ID HAVING COUNT(Document_Object_ID) > 1) GROUP BY Document_Subset_Details ORDER BY Document_Subset_Details DESC']], 'wta_1': [['SELECT COUNT(DISTINCT hand), player_id, first_name FROM players WHERE  player_id != 68 AND hand = (SELECT SUM(hand) FROM players WHERE  player_id < 14 LIMIT 10) LIMIT 5', 'SELECT COUNT(DISTINCT hand), player_id, first_name FROM players WHERE player_id != 68 AND hand = (SELECT hand FROM players WHERE player_id < 14 LIMIT 1) LIMIT 5'], ['SELECT player_id, birth_date FROM players WHERE first_name NOT IN (SELECT first_name FROM players WHERE  player_id >= 94) GROUP BY birth_date', 'SELECT birth_date, COUNT(player_id) FROM players WHERE first_name NOT IN (SELECT first_name FROM players WHERE player_id >= 94) GROUP BY birth_date'], ['SELECT tours FROM rankings WHERE ranking BETWEEN 1 AND 10 AND tours NOT IN (SELECT tours FROM rankings WHERE ranking BETWEEN 1 AND 10) ORDER BY tours DESC', 'SELECT tours FROM rankings WHERE ranking BETWEEN 1 AND 10 ORDER BY tours DESC'], ['SELECT loser_hand, surface, loser_entry FROM players JOIN matches JOIN rankings ON players.player_id = rankings.player_id AND matches.loser_id = players.player_id WHERE  loser_seed = 73', 'SELECT loser_hand, surface, loser_entry FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE loser_seed = 73;'], ['SELECT MIN(tours), winner_rank, draw_size FROM players JOIN matches JOIN rankings ON players.player_id = rankings.player_id AND matches.loser_id = players.player_id WHERE  winner_rank_points > 21 ORDER BY draw_size ASC', 'SELECT MIN(r.tours), m.winner_rank, m.draw_size FROM players p JOIN matches m ON m.loser_id = p.player_id JOIN rankings r ON p.player_id = r.player_id AND m.winner_id = r.player_id WHERE  r.ranking_points > 21 ORDER BY m.draw_size ASC'], ['SELECT AVG(players.player_id), COUNT(DISTINCT x.last_name), x.country_code FROM players JOIN players AS x ON players.player_id = x.player_id WHERE x.player_id BETWEEN 1 AND 10 AND  players.player_id > 37 GROUP BY x.country_code HAVING COUNT(players.player_id) <= 40 ORDER BY x.country_code ASC', 'SELECT AVG(player_id), COUNT(DISTINCT last_name), country_code FROM players WHERE player_id BETWEEN 1 AND 10 OR player_id > 37 GROUP BY country_code HAVING COUNT(player_id) <= 40 ORDER BY country_code ASC'], ['SELECT hand, country_code FROM players WHERE  player_id > 57 GROUP BY hand ORDER BY country_code ASC', 'SELECT hand, COUNT(country_code) FROM players WHERE player_id > 57 GROUP BY hand ORDER BY hand ASC;'], ['SELECT COUNT(DISTINCT players.player_id), loser_hand FROM players JOIN matches JOIN rankings ON players.player_id = rankings.player_id AND matches.loser_id = players.player_id WHERE  winner_seed = 56 LIMIT 9', 'SELECT COUNT(DISTINCT players.player_id), matches.loser_hand FROM players JOIN matches ON matches.loser_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.winner_seed = 56 LIMIT 9'], ['SELECT match_num, round FROM players JOIN matches ON matches.loser_id = players.player_id WHERE EXISTS (SELECT * FROM rankings WHERE  ranking_points > 28 AND players.player_id = player_id) ORDER BY match_num ASC LIMIT 6', 'SELECT match_num, round FROM players JOIN matches ON matches.loser_id = players.player_id WHERE EXISTS (SELECT * FROM rankings WHERE  ranking_points > 28 AND players.player_id = rankings.player_id) ORDER BY match_num ASC LIMIT 6']], 'address_1': [['SELECT t.latitude FROM City AS t LIMIT 2', 'SELECT latitude FROM City AS t LIMIT 2;'], ['SELECT Fname FROM Student WHERE  Major > 82', 'SELECT Fname FROM Student WHERE Age > 82'], ['SELECT Student.city_code FROM Student AS i JOIN Student ON Student.StuID = i.StuID WHERE Advisor = (SELECT SUM(Advisor) FROM Student AS s WHERE  s.Major <= 50)', 'SELECT S1.city_code FROM Student S1 INNER JOIN (SELECT Advisor, COUNT(*) as count FROM Student WHERE Major <= 50 GROUP BY Advisor ORDER BY count DESC LIMIT 1) S2 ON S1.Advisor = S2.Advisor']], 'company_1': [['SELECT COUNT(DISTINCT Dno), Super_ssn FROM employee WHERE  Super_ssn = 18', 'SELECT COUNT(DISTINCT Dno), Super_ssn FROM employee WHERE Super_ssn = 18 GROUP BY Super_ssn;'], ['SELECT Minit, Address FROM employee WHERE Minit < (SELECT SUM(Minit) FROM employee WHERE  Dno = 39 LIMIT 7) GROUP BY Address ORDER BY Minit DESC', 'SELECT Address, AVG(Salary) AS avg_salary FROM employee WHERE Dno = 39 GROUP BY Address ORDER BY avg_salary DESC;'], ['SELECT COUNT(DISTINCT o.Dnumber), department.Mgr_ssn FROM department JOIN department AS o ON department.Dnumber = o.Dnumber WHERE department.Mgr_ssn BETWEEN 1 AND 10 OR Mgr_start_date >= (SELECT MIN(Mgr_start_date) FROM department WHERE  Mgr_ssn > 16) GROUP BY department.Mgr_ssn', 'SELECT COUNT(DISTINCT department.Dnumber), department.Mgr_ssn FROM department WHERE department.Mgr_ssn BETWEEN 1 AND 10 OR department.Mgr_start_date >= (SELECT MIN(Mgr_start_date) FROM department WHERE  Mgr_ssn > 16) GROUP BY department.Mgr_ssn'], ['SELECT Dnumber, Dlocation FROM dept_locations WHERE  Dnumber = 82 GROUP BY Dlocation', 'SELECT Dlocation FROM dept_locations WHERE Dnumber = 1'], ['SELECT c.Mgr_start_date FROM department AS c JOIN department ON department.Dnumber = c.Dnumber WHERE  c.Dnumber <= 17', 'SELECT Mgr_start_date FROM department WHERE Dnumber <= 17'], ['SELECT AVG(Hours), COUNT(DISTINCT Essn), Hours FROM works_on GROUP BY Hours ORDER BY Hours ASC LIMIT 6', 'SELECT Hours, AVG(Hours) AS avg_hours, COUNT(DISTINCT Essn) FROM works_on GROUP BY Hours ORDER BY Hours ASC LIMIT 6']], 'sports_competition': [['SELECT h.Club_ID, h.Club_ID, h.Start_year FROM club AS h WHERE h.Club_ID BETWEEN 1 AND 10 AND  h.Club_ID = 53', 'SELECT h.Club_ID, h.Start_year FROM club AS h WHERE h.Club_ID = 53;'], ['SELECT w.Region, w.name FROM club AS w WHERE  w.Club_ID > 2 GROUP BY w.name HAVING COUNT(w.Club_ID) > 39 LIMIT 5', 'SELECT w.Region, w.name FROM club AS w WHERE  w.Club_ID > 2 GROUP BY w.name HAVING COUNT(w.name) > 39 LIMIT 5'], ['SELECT COUNT(DISTINCT Start_year) FROM club WHERE Club_ID BETWEEN 1 AND 10 OR  Club_ID > 99', 'SELECT COUNT(DISTINCT CAST(Start_year AS number)) FROM club WHERE Club_ID BETWEEN 1 AND 10 OR  Club_ID > 99;'], ['SELECT COUNT(DISTINCT Tries), COUNT(DISTINCT Goals), Position, name FROM player WHERE Player_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club AS h WHERE  h.Club_ID = 16 AND player.Player_ID = h.Club_ID) GROUP BY name', 'SELECT COUNT(DISTINCT Tries), Position, name FROM player WHERE Player_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club AS h WHERE  h.Club_ID = 16 AND player.Club_ID = h.Club_ID) GROUP BY name, Position'], ['SELECT MIN(Apps), Position FROM player', 'SELECT MIN(Apps), Position FROM player GROUP BY Position;'], ['SELECT Club_ID, Goals FROM player WHERE Points BETWEEN 1 AND 10 GROUP BY Goals HAVING AVG(Club_ID) < 68 ORDER BY Club_ID ASC LIMIT 1', 'SELECT Club_ID, AVG(Points) AS avg_points FROM player WHERE Points BETWEEN 1 AND 10 GROUP BY Club_ID HAVING AVG(Points) < 68 ORDER BY Club_ID ASC LIMIT 1'], ['SELECT Points, Goals, name FROM player WHERE Apps BETWEEN 1 AND 10 AND  Club_ID >= 53', 'SELECT CAST(Goals AS number) AS Goals, Points, name FROM player WHERE Apps BETWEEN 1 AND 10 AND Club_ID >= 53'], ['SELECT AVG(player.Club_ID), Apps, club.name FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE  Points = 15 GROUP BY club.name ORDER BY club.name DESC LIMIT 9', 'SELECT AVG(player.Club_ID), AVG(player.Apps), club.name FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE  player.Points = 15 GROUP BY club.name ORDER BY club.name DESC LIMIT 9'], ['SELECT l.Country FROM competition JOIN competition AS l ON competition.Competition_ID = l.Competition_ID WHERE  competition.Year < 1 LIMIT 10', 'SELECT Country FROM competition WHERE Year < 1 LIMIT 10'], ['SELECT COUNT(Points), Goals FROM player WHERE Tries BETWEEN 1 AND 10 ORDER BY Goals DESC', 'SELECT COUNT(Points), Goals FROM player WHERE Tries BETWEEN 1 AND 10'], ['SELECT SUM(d.Year), d.Year FROM competition AS d WHERE  d.Competition_ID != 96 OR Competition_type IN (SELECT Competition_type FROM competition WHERE Year BETWEEN 1 AND 10 OR  Competition_ID < 35)', 'SELECT d.Year FROM competition AS d WHERE  d.Competition_ID != 96 OR d.Competition_type IN (SELECT Competition_type FROM competition WHERE Year BETWEEN 1 AND 10 OR  Competition_ID < 35)'], ['SELECT Apps, Goals, Goals FROM player WHERE  Club_ID <= 89 LIMIT 3', 'SELECT Apps, CAST(Goals AS number), Points FROM player WHERE  Club_ID <= 89 LIMIT 3'], ['SELECT p.Score, p.Score FROM competition_result AS p WHERE  p.Competition_ID < 64 OR Club_ID_2 != (SELECT MAX(Club_ID_2) FROM competition_result AS x WHERE x.Club_ID_2 BETWEEN 1 AND 10 AND  x.Competition_ID >= 74)', 'SELECT p.Score FROM competition_result AS p WHERE  p.Competition_ID < 64 OR p.Club_ID_2 = (SELECT MAX(Club_ID_2) FROM competition_result AS x WHERE x.Club_ID_2 BETWEEN 1 AND 10 AND  x.Competition_ID >= 74)'], ['SELECT r.Competition_ID FROM competition AS r ORDER BY r.Competition_ID DESC LIMIT 5', 'SELECT Competition_ID FROM competition ORDER BY Competition_ID DESC LIMIT 5'], ['SELECT b.Club_ID, player.name FROM player AS b JOIN player ON player.Player_ID = b.Player_ID WHERE b.Tries BETWEEN 1 AND 10 OR  b.Tries <= 53 ORDER BY player.name DESC', 'SELECT b.Club_ID, b.name FROM player AS b WHERE b.Tries BETWEEN 1 AND 10 OR  b.Tries <= 53 ORDER BY b.name DESC']], 'college_2': [['SELECT COUNT(DISTINCT course_id), grade FROM takes WHERE  year <= 50', 'SELECT COUNT(DISTINCT course_id), MAX(grade) FROM takes WHERE year <= 50;'], ['SELECT COUNT(DISTINCT dept_name), dept_name FROM advisor JOIN instructor ON instructor.ID = advisor.i_ID WHERE  salary != 75 OR EXISTS (SELECT * FROM teaches AS e WHERE instructor.ID = e.ID LIMIT 1) GROUP BY dept_name HAVING COUNT(salary) >= 81 LIMIT 5', 'SELECT COUNT(DISTINCT dept_name), dept_name FROM advisor JOIN instructor ON instructor.ID = advisor.i_ID WHERE  instructor.salary != 75 OR EXISTS (SELECT * FROM teaches AS e WHERE instructor.ID = e.ID LIMIT 1) GROUP BY dept_name HAVING COUNT(instructor.salary) >= 81 LIMIT 5'], ['SELECT name, salary FROM instructor WHERE salary BETWEEN 1 AND 10 OR  salary = 55 GROUP BY salary HAVING MIN(salary) = 54 ORDER BY salary DESC LIMIT 3', 'SELECT name, salary FROM instructor WHERE salary BETWEEN 1 AND 10 OR salary = 55 GROUP BY salary HAVING MIN(salary) = 1 OR MAX(salary) = 55 ORDER BY salary DESC LIMIT 3'], ['SELECT MAX(credits), COUNT(DISTINCT prereq_id), prereq_id FROM course JOIN prereq ON course.course_id = prereq.prereq_id AND prereq.course_id = course.course_id WHERE  credits != 100 AND EXISTS (SELECT * FROM prereq WHERE course.course_id = course_id LIMIT 3) GROUP BY prereq_id LIMIT 5', 'SELECT MAX(T1.credits), COUNT(DISTINCT T2.prereq_id), T2.prereq_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id WHERE T1.credits != 100 GROUP BY T2.prereq_id LIMIT 5'], ['SELECT MIN(a.credits), COUNT(a.credits), a.dept_name FROM course AS a JOIN course ON course.course_id = a.course_id GROUP BY a.dept_name ORDER BY a.dept_name DESC', 'SELECT MIN(credits), COUNT(credits), dept_name FROM course GROUP BY dept_name ORDER BY dept_name DESC'], ['SELECT COUNT(DISTINCT course_id), title FROM course WHERE  credits = 96 AND course_id >= (SELECT SUM(course_id) FROM takes AS h WHERE  h.year > 95) ORDER BY title ASC', 'SELECT COUNT(DISTINCT course_id), title FROM course WHERE credits = 96 AND course_id >= (SELECT MAX(course_id) FROM takes AS h WHERE h.year > 95) ORDER BY title ASC'], ['SELECT budget FROM department JOIN course ON course.dept_name = department.dept_name WHERE  credits < 27 OR building NOT IN (SELECT building FROM classroom LIMIT 10)', 'SELECT T1.budget FROM department AS T1 JOIN course AS T2 ON T2.dept_name = T1.dept_name WHERE T2.credits < 27 OR T2.dept_name NOT IN (SELECT T3.dept_name FROM course AS T3 JOIN section AS T4 ON T3.course_id = T4.course_id JOIN classroom AS T5 ON T4.building = T5.building LIMIT 10)'], ['SELECT credits, credits FROM course JOIN prereq ON course.course_id = prereq.prereq_id AND prereq.course_id = course.course_id WHERE  credits >= 42', 'SELECT T1.credits FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.prereq_id WHERE T1.credits >= 42'], ['SELECT MAX(budget), COUNT(DISTINCT building), building FROM department WHERE budget BETWEEN 1 AND 10 OR  budget != 89 GROUP BY building ORDER BY building DESC', 'SELECT MAX(budget), COUNT(dept_name) AS building_count, building FROM department WHERE budget BETWEEN 1 AND 10 OR  budget != 89 GROUP BY building ORDER BY building DESC'], ['SELECT COUNT(DISTINCT grade), sec_id, semester FROM takes WHERE  year > 45 GROUP BY semester', 'SELECT COUNT(DISTINCT grade), sec_id, semester FROM takes WHERE year > 45 GROUP BY semester, sec_id;'], ['SELECT budget, course.dept_name, credits FROM department JOIN course ON course.dept_name = department.dept_name GROUP BY credits HAVING MIN(credits) > 10 LIMIT 10', 'SELECT budget, department.dept_name, credits FROM department JOIN course ON course.dept_name = department.dept_name GROUP BY department.dept_name, course.dept_name HAVING MIN(credits) > 10 LIMIT 10'], ['SELECT COUNT(DISTINCT student.dept_name) FROM department JOIN student JOIN takes ON takes.ID = student.ID AND department.dept_name = student.dept_name WHERE  budget > 80', 'SELECT COUNT(DISTINCT student.dept_name) FROM department JOIN student ON department.dept_name = student.dept_name JOIN takes ON takes.ID = student.ID WHERE budget > 80'], ['SELECT COUNT(DISTINCT salary), i_ID, student.dept_name FROM teaches JOIN student JOIN advisor JOIN instructor ON teaches.ID = instructor.ID AND instructor.ID = advisor.i_ID AND student.ID = advisor.s_ID WHERE salary BETWEEN 1 AND 10 AND  salary >= 82 GROUP BY student.dept_name ORDER BY student.dept_name ASC LIMIT 5', 'SELECT COUNT(DISTINCT i.salary), s.dept_name FROM student s JOIN advisor a ON s.ID = a.s_ID JOIN instructor i ON a.i_ID = i.ID JOIN teaches t ON i.ID = t.ID WHERE i.salary >= 82 GROUP BY s.dept_name ORDER BY COUNT(DISTINCT i.salary) DESC LIMIT 5'], ['SELECT credits, title FROM department JOIN course JOIN prereq ON course.dept_name = department.dept_name AND course.course_id = prereq.prereq_id AND prereq.course_id = course.course_id WHERE  budget < 85 AND course_id NOT IN (SELECT course_id FROM takes AS n WHERE  n.year != 0) GROUP BY title HAVING MAX(budget) >= 40 ORDER BY title ASC', 'SELECT T1.credits, T1.title FROM department AS T0 JOIN course AS T1 ON T0.dept_name = T1.dept_name WHERE T0.budget < 85 AND T1.course_id NOT IN (SELECT course_id FROM takes AS T3 WHERE T3.year != 0) GROUP BY T1.title HAVING MAX(T0.budget) >= 40 ORDER BY T1.title ASC']], 'city_record': [['SELECT Venue FROM hosting_city JOIN match JOIN city ON city.City_ID = hosting_city.Host_City AND hosting_city.Match_ID = match.Match_ID WHERE  City_ID > 28 OR GDP >= (SELECT MAX(GDP) FROM city WHERE  Regional_Population = 95) ORDER BY Venue ASC', 'SELECT T4.Venue FROM city AS T1 INNER JOIN hosting_city AS T2 ON T1.City = T2.Host_City INNER JOIN match AS T4 ON T2.Match_ID = T4.Match_ID WHERE T1.Regional_Population > 28 OR T1.GDP >= (SELECT MAX(T3.GDP) FROM city AS T3) ORDER BY T4.Venue ASC;'], ['SELECT Date, Venue, Competition FROM match WHERE  Match_ID != 89 GROUP BY Competition', 'SELECT Competition, COUNT(Date) as num_matches, COUNT(Venue) as num_venues FROM match WHERE Match_ID != 89 GROUP BY Competition;'], ['SELECT COUNT(DISTINCT Competition), Competition FROM match WHERE  Match_ID > 75 GROUP BY Competition HAVING MAX(Match_ID) < 18', 'SELECT COUNT(DISTINCT Competition), Competition FROM match WHERE Match_ID > 75 GROUP BY Competition'], ['SELECT Match_ID, Match_ID, Venue FROM match WHERE Match_ID BETWEEN 1 AND 10 GROUP BY Venue HAVING AVG(Match_ID) < 91 ORDER BY Venue ASC', 'SELECT Venue, AVG(Match_ID) as Average_Match_ID FROM match WHERE Match_ID BETWEEN 1 AND 10 GROUP BY Venue HAVING AVG(Match_ID) < 91 ORDER BY Venue ASC'], ['SELECT COUNT(DISTINCT h.Date) FROM match AS h JOIN match ON match.Match_ID = h.Match_ID WHERE  h.Match_ID <= 64', 'SELECT COUNT(DISTINCT Date) FROM match WHERE Match_ID <= 64']], 'customers_card_transactions': [['SELECT COUNT(DISTINCT w.transaction_date) FROM Financial_Transactions AS w WHERE  w.transaction_amount > 92 LIMIT 1', 'SELECT COUNT(DISTINCT w.transaction_date) FROM Financial_Transactions AS w WHERE  w.transaction_amount > 92 LIMIT 1'], ['SELECT Customers.customer_id, Customers.customer_address FROM Customers JOIN Customers AS y ON Customers.customer_id = y.customer_id WHERE  Customers.customer_id != 53 ORDER BY Customers.customer_id ASC LIMIT 4', 'SELECT customer_id, customer_address FROM Customers WHERE customer_id != 53 ORDER BY customer_id ASC LIMIT 4;'], ['SELECT COUNT(customer_id), COUNT(DISTINCT card_type_code) FROM Customers_Cards WHERE  customer_id < 95 LIMIT 4', 'SELECT COUNT(customer_id), COUNT(DISTINCT card_type_code) FROM Customers_Cards WHERE customer_id < 95 ORDER BY customer_id LIMIT 4'], ['SELECT customer_id, card_id, other_card_details FROM Customers_Cards WHERE  card_id >= 3 LIMIT 10', 'SELECT customer_id, card_id, other_card_details FROM Customers_Cards WHERE customer_id >= 3 LIMIT 10'], ['SELECT transaction_type, transaction_type FROM Financial_Transactions WHERE  transaction_amount = 28', 'SELECT transaction_type FROM Financial_Transactions WHERE transaction_amount = 28'], ['SELECT COUNT(p.customer_id), p.card_number FROM Customers_Cards AS p', 'SELECT p.customer_id, p.card_number FROM Customers_Cards AS p GROUP BY p.customer_id, p.card_number;'], ['SELECT y.other_account_details, y.account_name FROM Accounts AS y WHERE account_id IN (SELECT account_id FROM Financial_Transactions AS m WHERE  m.transaction_id <= 87) GROUP BY y.account_name', 'SELECT y.other_account_details, y.account_name FROM Accounts AS y WHERE account_id IN (SELECT account_id FROM Financial_Transactions AS m WHERE  m.transaction_id <= 87) GROUP BY y.account_name, y.other_account_details;'], ['SELECT account_name FROM Financial_Transactions JOIN Accounts ON Financial_Transactions.account_id = Accounts.account_id ORDER BY account_name DESC LIMIT 6', 'SELECT account_name FROM Accounts ORDER BY account_name DESC LIMIT 6;'], ['SELECT MIN(account_id), customer_id, other_account_details FROM Accounts GROUP BY other_account_details', 'SELECT MIN(account_id), customer_id, other_account_details FROM Accounts GROUP BY customer_id, other_account_details;'], ['SELECT MIN(e.card_id), e.customer_id FROM Customers_Cards AS e WHERE  e.card_id > 39 ORDER BY e.customer_id ASC', 'SELECT MIN(e.card_id), e.customer_id FROM Customers_Cards AS e WHERE e.card_id > 39 GROUP BY e.customer_id ORDER BY e.customer_id ASC;'], ['SELECT transaction_amount, transaction_id FROM Financial_Transactions WHERE account_id IN (SELECT account_id FROM Financial_Transactions WHERE previous_transaction_id BETWEEN 1 AND 10 OR  account_id > 75 LIMIT 9) ORDER BY transaction_id DESC', 'SELECT transaction_amount, transaction_id FROM Financial_Transactions WHERE account_id IN (SELECT account_id FROM Financial_Transactions WHERE previous_transaction_id BETWEEN 1 AND 10 OR  account_id > 75 LIMIT 9) ORDER BY transaction_id DESC']], 'bakery_1': [['SELECT COUNT(Id), FirstName FROM customers JOIN receipts ON receipts.CustomerId = customers.Id WHERE  ReceiptNumber = 41 ORDER BY FirstName DESC', 'SELECT COUNT(customers.Id), customers.FirstName FROM customers JOIN receipts ON receipts.CustomerId = customers.Id WHERE receipts.ReceiptNumber = 41 ORDER BY customers.FirstName DESC;'], ['SELECT MAX(ReceiptNumber), MIN(ReceiptNumber), COUNT(DISTINCT CustomerId), FirstName FROM customers JOIN receipts ON receipts.CustomerId = customers.Id GROUP BY FirstName HAVING MAX(Id) >= 84 LIMIT 1', 'SELECT MAX(T2.ReceiptNumber), MIN(T2.ReceiptNumber), COUNT(DISTINCT T2.CustomerId), T1.FirstName FROM customers T1 JOIN receipts T2 ON T2.CustomerId = T1.Id GROUP BY T1.FirstName HAVING MAX(T2.ReceiptNumber) >= 84 LIMIT 1'], ['SELECT CustomerId, ReceiptNumber, Date FROM receipts GROUP BY Date', 'SELECT CustomerId, ReceiptNumber, Date FROM receipts GROUP BY CustomerId, ReceiptNumber, Date;'], ['SELECT c.Id FROM customers AS c WHERE c.Id BETWEEN 1 AND 10 ORDER BY c.Id ASC LIMIT 7', 'SELECT c.Id FROM customers AS c WHERE c.Id BETWEEN 1 AND 10 ORDER BY c.Id ASC LIMIT 7'], ['SELECT MIN(Receipt), SUM(Receipt) FROM items WHERE EXISTS (SELECT * FROM goods AS v WHERE  v.Price != 74 AND items.Receipt = v.Id LIMIT 5) LIMIT 10', 'SELECT MIN(Receipt), SUM(Receipt) FROM items WHERE Item IN (SELECT Id FROM goods WHERE Price != 74)'], ['SELECT Id, FirstName FROM customers WHERE  Id >= 48 GROUP BY FirstName ORDER BY Id ASC', 'SELECT Id, FirstName FROM customers WHERE Id >= 48 ORDER BY Id ASC'], ['SELECT SUM(customers.Id), f.FirstName, customers.FirstName FROM customers JOIN customers AS f ON customers.Id = f.Id WHERE  f.Id = 97 OR LastName IN (SELECT LastName FROM customers AS j LIMIT 8) GROUP BY customers.FirstName HAVING MIN(f.Id) >= 45', 'SELECT c.FirstName, COUNT(r.ReceiptNumber) FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE c.Id = 97 OR c.LastName IN (SELECT LastName FROM customers LIMIT 8) GROUP BY c.FirstName HAVING MIN(r.ReceiptNumber) >= 45'], ['SELECT Price FROM goods JOIN items ON items.Item = goods.Id WHERE  Receipt >= 95', 'SELECT Price FROM goods JOIN items ON items.Item = goods.Id WHERE items.Receipt >= 95'], ['SELECT COUNT(DISTINCT Id), COUNT(DISTINCT Food), Id, Food FROM goods WHERE  Price = 68 GROUP BY Food', 'SELECT COUNT(DISTINCT Id), COUNT(DISTINCT Food) FROM goods WHERE Price = 68;']], 'local_govt_mdm': [['SELECT c.cmi_cross_ref_id FROM Benefits_Overpayments AS c JOIN Benefits_Overpayments ON Benefits_Overpayments.council_tax_id = c.council_tax_id', 'SELECT c.cmi_cross_ref_id FROM Benefits_Overpayments AS c JOIN Council_Tax ON Council_Tax.council_tax_id = c.council_tax_id'], ['SELECT source_system_code FROM CMI_Cross_References JOIN Benefits_Overpayments JOIN Customer_Master_Index ON CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id AND Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE CMI_Cross_References.cmi_cross_ref_id BETWEEN 1 AND 10 AND  Benefits_Overpayments.cmi_cross_ref_id < 58 LIMIT 7', 'SELECT source_system_code FROM CMI_Cross_References JOIN Customer_Master_Index ON CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id JOIN Benefits_Overpayments ON CMI_Cross_References.cmi_cross_ref_id = Benefits_Overpayments.cmi_cross_ref_id WHERE CMI_Cross_References.cmi_cross_ref_id BETWEEN 1 AND 10 AND Benefits_Overpayments.cmi_cross_ref_id < 58 LIMIT 7'], ['SELECT MAX(cmi_cross_ref_id), cmi_cross_ref_id, council_tax_id FROM Benefits_Overpayments WHERE  cmi_cross_ref_id > 53 GROUP BY cmi_cross_ref_id', 'SELECT MAX(cmi_cross_ref_id) AS max_cmi_cross_ref_id FROM Benefits_Overpayments WHERE cmi_cross_ref_id > 53'], ['SELECT Council_Tax.cmi_cross_ref_id FROM Council_Tax JOIN CMI_Cross_References ON Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE master_customer_id BETWEEN 1 AND 10 OR cmi_cross_ref_id IN (SELECT cmi_cross_ref_id FROM Rent_Arrears)', 'SELECT Council_Tax.cmi_cross_ref_id FROM Council_Tax JOIN CMI_Cross_References ON Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE CMI_Cross_References.master_customer_id BETWEEN 1 AND 10 OR cmi_cross_ref_id IN (SELECT cmi_cross_ref_id FROM Rent_Arrears)'], ['SELECT Business_Rates.business_rates_id, q.cmi_cross_ref_id FROM Business_Rates AS q JOIN Business_Rates ON Business_Rates.business_rates_id = q.business_rates_id WHERE  q.business_rates_id = 51 GROUP BY q.cmi_cross_ref_id LIMIT 9', 'SELECT business_rates_id, cmi_cross_ref_id FROM Business_Rates WHERE business_rates_id = 51 LIMIT 9'], ['SELECT council_tax_id, source_system_code FROM CMI_Cross_References JOIN Council_Tax JOIN Electoral_Register JOIN Customer_Master_Index ON CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id AND CMI_Cross_References.cmi_cross_ref_id = Electoral_Register.cmi_cross_ref_id AND Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE  Customer_Master_Index.master_customer_id < 50 LIMIT 1', 'SELECT T1.council_tax_id, T4.source_system_code FROM Council_Tax T1 JOIN CMI_Cross_References T4 ON T1.cmi_cross_ref_id = T4.cmi_cross_ref_id JOIN Customer_Master_Index T3 ON T4.master_customer_id = T3.master_customer_id JOIN Electoral_Register T2 ON T4.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T3.master_customer_id < 50 LIMIT 1'], ['SELECT Benefits_Overpayments.cmi_cross_ref_id FROM CMI_Cross_References JOIN Benefits_Overpayments JOIN Electoral_Register ON CMI_Cross_References.cmi_cross_ref_id = Electoral_Register.cmi_cross_ref_id AND Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE  council_tax_id <= 73 ORDER BY Benefits_Overpayments.cmi_cross_ref_id ASC', 'SELECT Benefits_Overpayments.cmi_cross_ref_id FROM CMI_Cross_References JOIN Benefits_Overpayments ON Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id JOIN Electoral_Register ON CMI_Cross_References.cmi_cross_ref_id = Electoral_Register.cmi_cross_ref_id WHERE Benefits_Overpayments.council_tax_id <= 73 ORDER BY Benefits_Overpayments.cmi_cross_ref_id ASC'], ['SELECT source_system_code FROM Council_Tax JOIN Benefits_Overpayments JOIN CMI_Cross_References JOIN Rent_Arrears ON Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id AND Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id AND Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id', 'SELECT source_system_code FROM Council_Tax JOIN CMI_Cross_References ON Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id JOIN Benefits_Overpayments ON Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id JOIN Rent_Arrears ON Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id;'], ['SELECT source_system_code, source_system_code, Rent_Arrears.cmi_cross_ref_id FROM CMI_Cross_References JOIN Benefits_Overpayments JOIN Rent_Arrears ON Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id AND Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE  Benefits_Overpayments.cmi_cross_ref_id <= 91 GROUP BY Rent_Arrears.cmi_cross_ref_id LIMIT 5', 'SELECT source_system_code, Rent_Arrears.cmi_cross_ref_id FROM CMI_Cross_References JOIN Benefits_Overpayments JOIN Rent_Arrears ON Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id AND Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE  Benefits_Overpayments.cmi_cross_ref_id <= 91 GROUP BY Rent_Arrears.cmi_cross_ref_id, source_system_code LIMIT 5;'], ['SELECT AVG(Rent_Arrears.cmi_cross_ref_id), COUNT(DISTINCT t.cmi_cross_ref_id) FROM Rent_Arrears AS t JOIN Rent_Arrears ON Rent_Arrears.council_tax_id = t.council_tax_id WHERE  t.cmi_cross_ref_id >= 25', 'SELECT AVG(Rent_Arrears.cmi_cross_ref_id), COUNT(DISTINCT Rent_Arrears.cmi_cross_ref_id) FROM Rent_Arrears WHERE Rent_Arrears.cmi_cross_ref_id >= 25'], ['SELECT e.master_customer_id, e.cmi_details FROM Customer_Master_Index AS e WHERE e.master_customer_id BETWEEN 1 AND 10 OR  e.master_customer_id <= 66 GROUP BY e.cmi_details HAVING SUM(e.master_customer_id) >= 6 LIMIT 3', 'SELECT e.master_customer_id, e.cmi_details FROM Customer_Master_Index AS e WHERE e.master_customer_id BETWEEN 1 AND 10 OR e.master_customer_id <= 66 GROUP BY e.master_customer_id, e.cmi_details LIMIT 3'], ['SELECT COUNT(electoral_register_id), COUNT(DISTINCT electoral_register_id), cmi_cross_ref_id FROM Electoral_Register WHERE  electoral_register_id <= 95 AND electoral_register_id <= (SELECT MIN(electoral_register_id) FROM Electoral_Register WHERE  electoral_register_id <= 2 LIMIT 1) GROUP BY cmi_cross_ref_id HAVING MIN(cmi_cross_ref_id) < 8 ORDER BY cmi_cross_ref_id DESC', 'SELECT COUNT(electoral_register_id), COUNT(DISTINCT electoral_register_id), cmi_cross_ref_id FROM Electoral_Register WHERE electoral_register_id <= 95 AND electoral_register_id <= (SELECT MIN(electoral_register_id) FROM Electoral_Register WHERE electoral_register_id <= 2 LIMIT 1) AND cmi_cross_ref_id < 8 GROUP BY cmi_cross_ref_id ORDER BY cmi_cross_ref_id DESC'], ['SELECT cmi_cross_ref_id FROM Electoral_Register WHERE EXISTS (SELECT * FROM CMI_Cross_References AS w WHERE Electoral_Register.electoral_register_id = w.cmi_cross_ref_id)', 'SELECT cmi_cross_ref_id FROM Electoral_Register WHERE EXISTS (SELECT * FROM CMI_Cross_References AS w WHERE Electoral_Register.cmi_cross_ref_id = w.cmi_cross_ref_id)'], ['SELECT council_tax_id, source_system_code FROM CMI_Cross_References JOIN Benefits_Overpayments ON Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id WHERE  CMI_Cross_References.cmi_cross_ref_id > 69', 'SELECT T1.council_tax_id, T2.source_system_code FROM Benefits_Overpayments AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.cmi_cross_ref_id > 69'], ['SELECT COUNT(DISTINCT master_customer_id), master_customer_id FROM Customer_Master_Index WHERE  master_customer_id != 68 LIMIT 3', 'SELECT COUNT(DISTINCT master_customer_id) FROM Customer_Master_Index WHERE master_customer_id != 68 LIMIT 1;'], ['SELECT CMI_Cross_References.cmi_cross_ref_id, source_system_code FROM CMI_Cross_References JOIN Electoral_Register ON CMI_Cross_References.cmi_cross_ref_id = Electoral_Register.cmi_cross_ref_id WHERE  master_customer_id < 29', 'SELECT CMI_Cross_References.cmi_cross_ref_id, source_system_code FROM CMI_Cross_References JOIN Electoral_Register ON CMI_Cross_References.cmi_cross_ref_id = Electoral_Register.cmi_cross_ref_id WHERE CMI_Cross_References.master_customer_id < 29;']], 'movie_1': [['SELECT g.year, g.year, g.mID FROM Movie AS g WHERE  g.year = 23', 'SELECT g.year, g.mID FROM Movie AS g WHERE g.year = 2023'], ['SELECT MAX(mID), mID, mID FROM Movie WHERE  year < 98 LIMIT 7', 'SELECT MAX(mID) FROM Movie WHERE year < 98 LIMIT 1'], ['SELECT MAX(r.rID), r.name, Reviewer.name FROM Reviewer JOIN Reviewer AS r ON Reviewer.rID = r.rID WHERE Reviewer.rID BETWEEN 1 AND 10 GROUP BY Reviewer.name ORDER BY Reviewer.name ASC LIMIT 4', 'SELECT MAX(r.rID), r.name FROM Reviewer AS r GROUP BY r.name ORDER BY r.name ASC LIMIT 4'], ['SELECT COUNT(DISTINCT w.name), w.rID, w.name FROM Reviewer AS w WHERE  w.rID >= 19 GROUP BY w.name LIMIT 5', 'SELECT COUNT(DISTINCT w.name), w.rID, w.name FROM Reviewer AS w WHERE  w.rID >= 19 GROUP BY w.rID, w.name ORDER BY COUNT(w.name) DESC LIMIT 5;'], ['SELECT COUNT(Reviewer.rID), COUNT(DISTINCT Reviewer.rID), Reviewer.name FROM Reviewer JOIN Reviewer AS p ON Reviewer.rID = p.rID WHERE  p.rID >= 63 LIMIT 2', 'SELECT COUNT(rID), COUNT(DISTINCT rID), name FROM Reviewer WHERE rID >= 63 LIMIT 2'], ['SELECT MAX(Rating.rID), director FROM Reviewer JOIN Movie JOIN Rating ON Rating.rID = Reviewer.rID AND Movie.mID = Rating.mID WHERE Movie.mID BETWEEN 1 AND 10 AND  stars >= 49 LIMIT 6', 'SELECT MAX(Rating.rID), Movie.director FROM Rating JOIN Reviewer ON Rating.rID = Reviewer.rID JOIN Movie ON Rating.mID = Movie.mID WHERE Movie.mID BETWEEN 1 AND 10 AND Rating.stars >= 4 LIMIT 6'], ['SELECT Movie.year FROM Movie JOIN Movie AS u ON Movie.mID = u.mID WHERE  u.year = 77', 'SELECT year FROM Movie WHERE year = 1977;'], ['SELECT COUNT(DISTINCT director), COUNT(DISTINCT director), mID FROM Movie WHERE  mID != 43 ORDER BY mID DESC', 'SELECT COUNT(DISTINCT director), MAX(mID) AS max_mID FROM Movie WHERE mID != 43 ORDER BY max_mID DESC;'], ['SELECT MIN(m.year), m.mID FROM Movie AS m WHERE  m.mID < 37 AND title NOT IN (SELECT title FROM Movie AS w) LIMIT 5', 'SELECT MIN(m.year) AS min_year FROM Movie AS m WHERE m.title IS NOT NULL AND m.mID < 37 LIMIT 5'], ['SELECT SUM(i.rID), MIN(i.stars), COUNT(i.mID) FROM Rating AS i WHERE i.stars BETWEEN 1 AND 10 AND  i.stars > 20', 'SELECT SUM(i.mID), MIN(i.stars), COUNT(i.mID) FROM Rating AS i WHERE i.stars BETWEEN 1 AND 10'], ['SELECT rID FROM Movie JOIN Rating ON Movie.mID = Rating.mID WHERE  stars > 37 ORDER BY rID ASC', 'SELECT rID FROM Rating JOIN Reviewer ON Rating.rID = Reviewer.rID WHERE stars > 3.7 ORDER BY rID ASC;']], 'music_4': [['SELECT Result, Song FROM music_festival JOIN volume ON music_festival.Volume = volume.Volume_ID WHERE EXISTS (SELECT * FROM volume WHERE  Weeks_on_Top <= 54 AND music_festival.ID = Volume_ID) GROUP BY Song HAVING MIN(Weeks_on_Top) = 15 ORDER BY Song DESC', 'SELECT Result, Song FROM music_festival JOIN volume ON music_festival.Volume = volume.Volume_ID WHERE EXISTS (SELECT * FROM volume v2 WHERE v2.Weeks_on_Top <= 54 AND music_festival.Volume = v2.Volume_ID) GROUP BY Song HAVING MIN(Weeks_on_Top) = 15 ORDER BY Song DESC;'], ['SELECT ID FROM music_festival WHERE Volume BETWEEN 1 AND 10', 'SELECT ID FROM music_festival WHERE Volume BETWEEN 1 AND 10'], ['SELECT s.Age, s.Age, s.Famous_Title FROM artist AS s WHERE  s.Artist_ID != 78 GROUP BY s.Famous_Title HAVING COUNT(s.Age) > 54 ORDER BY s.Age ASC', 'SELECT AVG(s.Age) AS average_age, s.Famous_Title FROM artist AS s WHERE s.Artist_ID != 78 GROUP BY s.Famous_Title HAVING COUNT(s.Age) > 54 ORDER BY AVG(s.Age) ASC'], ['SELECT a.Weeks_on_Top, a.Weeks_on_Top FROM volume AS a WHERE  a.Weeks_on_Top != 14', 'SELECT a.Weeks_on_Top FROM volume AS a WHERE a.Weeks_on_Top != 14;'], ['SELECT volume.Artist_ID, volume.Weeks_on_Top, volume.Song FROM volume AS z JOIN volume ON volume.Volume_ID = z.Volume_ID WHERE  volume.Volume_ID >= 76 GROUP BY volume.Song HAVING AVG(z.Artist_ID) >= 74', 'SELECT v1.Artist_ID, v1.Weeks_on_Top, v1.Song FROM volume AS v1 JOIN volume AS v2 ON v1.Volume_ID = v2.Volume_ID WHERE v1.Volume_ID >= 76 GROUP BY v1.Song HAVING AVG(v2.Weeks_on_Top) >= 74'], ['SELECT MAX(Volume_ID), Volume_ID, Volume_Issue FROM volume WHERE  Weeks_on_Top <= 15', 'SELECT MAX(Volume_ID) FROM volume WHERE Weeks_on_Top <= 15;'], ['SELECT c.Age, c.Famous_Title FROM artist AS c WHERE  c.Age >= 76 GROUP BY c.Famous_Title HAVING COUNT(c.Artist_ID) = 32 ORDER BY c.Famous_Title DESC LIMIT 5', 'SELECT c.Age, c.Famous_Title FROM artist AS c WHERE  c.Age >= 76 GROUP BY c.Age, c.Famous_Title HAVING COUNT(c.Artist_ID) = 32 ORDER BY c.Famous_Title DESC LIMIT 5'], ['SELECT MAX(Age), Famous_Release_date FROM music_festival JOIN artist JOIN volume ON volume.Artist_ID = artist.Artist_ID AND music_festival.Volume = volume.Volume_ID WHERE  artist.Artist_ID < 15 OR EXISTS (SELECT * FROM artist AS q WHERE  q.Artist_ID < 76 AND volume.Volume_ID = q.Artist_ID LIMIT 8) GROUP BY Famous_Release_date HAVING MIN(Volume_ID) > 1 LIMIT 6', 'SELECT MAX(T1.Age), T1.Famous_Release_date FROM artist AS T1 JOIN volume AS T2 ON T2.Artist_ID = T1.Artist_ID JOIN music_festival AS T3 ON T3.Volume = T2.Volume_ID WHERE T1.Artist_ID < 15 OR T1.Artist_ID > 76 GROUP BY T1.Famous_Release_date HAVING MIN(T2.Volume_ID) > 1 LIMIT 6'], ['SELECT m.Music_Festival, m.Date_of_ceremony FROM music_festival AS m WHERE  m.ID < 84 GROUP BY m.Date_of_ceremony ORDER BY m.Date_of_ceremony DESC LIMIT 5', 'SELECT m.Music_Festival, m.Date_of_ceremony FROM music_festival AS m WHERE  m.ID < 84 GROUP BY m.Date_of_ceremony ORDER BY STR_TO_DATE(m.Date_of_ceremony, "%Y-%m-%d") DESC LIMIT 5'], ['SELECT f.Result, f.Result FROM music_festival AS f WHERE  f.ID != 15 OR ID < (SELECT AVG(ID) FROM music_festival AS k WHERE k.ID BETWEEN 1 AND 10)', 'SELECT f.Result FROM music_festival AS f WHERE f.ID != 15 OR f.ID < (SELECT AVG(ID) FROM music_festival AS k WHERE k.ID BETWEEN 1 AND 10)'], ['SELECT MIN(volume.Artist_ID), Famous_Release_date, Famous_Title FROM artist JOIN volume ON volume.Artist_ID = artist.Artist_ID WHERE  Volume_ID = 78 LIMIT 2', 'SELECT MIN(volume.Artist_ID), artist.Famous_Release_date, artist.Famous_Title FROM artist JOIN volume ON volume.Artist_ID = artist.Artist_ID WHERE  volume.Volume_ID = 78 LIMIT 1'], ['SELECT COUNT(DISTINCT n.Famous_Release_date) FROM artist AS n WHERE Famous_Release_date NOT IN (SELECT Famous_Release_date FROM artist WHERE  Artist_ID != 71)', 'SELECT COUNT(DISTINCT Famous_Release_date) FROM artist WHERE Famous_Release_date NOT IN (SELECT Famous_Release_date FROM artist WHERE Artist_ID != 71)'], ['SELECT COUNT(artist.Artist_ID), p.Famous_Title FROM artist JOIN artist AS p ON artist.Artist_ID = p.Artist_ID GROUP BY p.Famous_Title ORDER BY p.Famous_Title DESC', 'SELECT Famous_Title FROM artist ORDER BY Famous_Title DESC;'], ['SELECT Famous_Title, Famous_Title FROM artist WHERE  Artist_ID <= 71 ORDER BY Famous_Title ASC', 'SELECT Famous_Title FROM artist WHERE Artist_ID <= 71 ORDER BY Famous_Title ASC']], 'movie_2': [['SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters JOIN MovieTheaters AS e ON MovieTheaters.Code = e.Code WHERE Movie IN (SELECT Movie FROM MovieTheaters WHERE Movie BETWEEN 1 AND 10 LIMIT 4) LIMIT 10', 'SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters JOIN Movies AS e ON MovieTheaters.Movie = e.Code WHERE MovieTheaters.Movie IN (SELECT Movie FROM MovieTheaters WHERE Movie BETWEEN 1 AND 10 LIMIT 4) LIMIT 10'], ['SELECT AVG(Code), COUNT(Code), Title FROM Movies GROUP BY Title HAVING MAX(Code) = 6', "SELECT Title, AVG(CAST(SUBSTR(Rating, INSTR(Rating, '/') + 1) AS REAL)) AS avg_rating, COUNT(Code) FROM Movies GROUP BY Title HAVING MAX(Code) = 6"], ['SELECT COUNT(DISTINCT Movie), COUNT(DISTINCT Title), COUNT(DISTINCT MovieTheaters.Code), Rating FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code GROUP BY Rating HAVING SUM(Movies.Code) <= 85', 'SELECT COUNT(DISTINCT Movies.Title), COUNT(DISTINCT MovieTheaters.Code), Rating FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code GROUP BY Rating HAVING COUNT(Movies.Code) <= 85'], ['SELECT b.Code, b.Code, b.Code FROM Movies AS b WHERE  b.Code > 28 ORDER BY b.Code DESC', 'SELECT b.Code FROM Movies AS b WHERE b.Code > 28 ORDER BY b.Code DESC;'], ['SELECT COUNT(DISTINCT Movie), Title FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE  MovieTheaters.Code <= 54 ORDER BY Title ASC LIMIT 10', 'SELECT COUNT(DISTINCT MovieTheaters.Movie) AS MovieCount, Movies.Title FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE  MovieTheaters.Code <= 54 GROUP BY Movies.Title ORDER BY Movies.Title ASC LIMIT 10'], ['SELECT g.Title FROM Movies AS g GROUP BY g.Title HAVING MAX(g.Code) > 41 ORDER BY g.Title DESC', 'SELECT Movies.Title FROM Movies AS Movies GROUP BY Movies.Title HAVING MAX(Movies.Code) > 41 ORDER BY Movies.Title DESC'], ['SELECT j.Title, j.Title FROM Movies AS j WHERE  j.Code = 82 LIMIT 8', 'SELECT m.Title FROM Movies AS m WHERE m.Code = 82 LIMIT 8;'], ['SELECT SUM(Code) FROM Movies WHERE  Code > 69', 'SELECT SUM(Code) FROM Movies WHERE Code > 69;'], ['SELECT MovieTheaters.Code, Movie FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE  Movie <= 17 LIMIT 7', 'SELECT MovieTheaters.Code, Movies.Code FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE Movies.Code <= 17 LIMIT 7'], ['SELECT Name, Name FROM MovieTheaters WHERE  Code > 29 GROUP BY Name LIMIT 2', 'SELECT DISTINCT Name FROM MovieTheaters WHERE Code > 29 LIMIT 2;'], ['SELECT Rating, Rating FROM Movies WHERE  Code >= 88 GROUP BY Rating HAVING AVG(Code) >= 98', 'SELECT Rating FROM Movies WHERE Code >= 88 GROUP BY Rating'], ['SELECT Rating FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE  Movie < 82', 'SELECT Rating FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE Movies.Code < 82'], ['SELECT COUNT(DISTINCT Code), COUNT(DISTINCT Title), Code, Rating FROM Movies WHERE  Code < 17 GROUP BY Rating', 'SELECT COUNT(DISTINCT Code), COUNT(DISTINCT Rating), Code, Rating FROM Movies WHERE Code < 17 GROUP BY Rating, Code;'], ['SELECT SUM(Movie), Name, Name FROM MovieTheaters WHERE  Movie <= 42', 'SELECT COUNT(Movie), Name FROM MovieTheaters GROUP BY Name HAVING COUNT(Movie) <= 42;']], 'local_govt_and_lot': [['SELECT b.Status_of_Thing_Code FROM Timed_Status_of_Things AS b WHERE b.thing_id BETWEEN 1 AND 10 AND  b.thing_id <= 20 LIMIT 9', 'SELECT b.Status_of_Thing_Code FROM Timed_Status_of_Things AS b WHERE b.thing_id BETWEEN 1 AND 10 LIMIT 9'], ['SELECT Timed_Locations_of_Things.Location_Code, x.Location_Code, x.Date_and_Time FROM Timed_Locations_of_Things AS x JOIN Timed_Locations_of_Things ON Timed_Locations_of_Things.thing_id = x.thing_id WHERE  x.thing_id != 34 GROUP BY x.Date_and_Time ORDER BY Timed_Locations_of_Things.Location_Code ASC', 'SELECT T1.Location_Code, T2.Location_Code, T2.Date_and_Time FROM Timed_Locations_of_Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T2.thing_id != 34 AND T1.Date_and_Time < T2.Date_and_Time GROUP BY T2.Date_and_Time ORDER BY T1.Location_Code ASC;'], ['SELECT property_id FROM Customer_Event_Notes WHERE Customer_Event_ID BETWEEN 1 AND 10 OR  Customer_Event_Note_ID >= 6 GROUP BY property_id ORDER BY property_id DESC', 'SELECT property_id FROM Customer_Event_Notes WHERE (Customer_Event_ID BETWEEN 1 AND 10) OR Customer_Event_Note_ID >= 6 GROUP BY property_id ORDER BY property_id DESC'], ['SELECT Residents.property_id, Properties.other_details, date_moved_out FROM Residents JOIN Properties ON Residents.property_id = Properties.property_id WHERE  resident_id != 75 GROUP BY date_moved_out', 'SELECT Residents.property_id, Properties.other_details, date_moved_out FROM Residents JOIN Properties ON Residents.property_id = Properties.property_id WHERE resident_id != 75 GROUP BY Residents.property_id, Properties.other_details, date_moved_out'], ['SELECT COUNT(Things.thing_id), Timed_Status_of_Things.thing_id FROM Things JOIN Timed_Status_of_Things ON Things.thing_id = Timed_Status_of_Things.thing_id WHERE  organization_id >= 77 LIMIT 10', 'SELECT COUNT(T1.thing_id), T2.thing_id FROM Things AS T1 JOIN Timed_Status_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.organization_id >= 77 LIMIT 10'], ['SELECT j.other_details, j.other_details, j.property_id FROM Residents AS j WHERE  j.resident_id >= 78 GROUP BY j.property_id HAVING MAX(j.property_id) > 65 LIMIT 2', 'SELECT j.other_details, j.property_id FROM Residents AS j WHERE j.resident_id >= 78 GROUP BY j.property_id HAVING MAX(j.property_id) > 65 LIMIT 2'], ['SELECT customer_details, customer_details FROM Customer_Events JOIN Customers ON Customers.customer_id = Customer_Events.customer_id WHERE  Customer_Events.customer_id <= 89 ORDER BY customer_details DESC', 'SELECT customer_details FROM Customer_Events JOIN Customers ON Customers.customer_id = Customer_Events.customer_id WHERE Customer_Events.customer_id <= 89 ORDER BY LOWER(customer_details) DESC;'], ['SELECT COUNT(d.organization_id), d.organization_id FROM Services AS d WHERE d.organization_id BETWEEN 1 AND 10 GROUP BY d.organization_id HAVING MIN(d.service_id) <= 52 ORDER BY d.organization_id ASC LIMIT 8', 'SELECT COUNT(d.organization_id), d.organization_id FROM Services AS d WHERE d.organization_id BETWEEN 1 AND 10 GROUP BY d.organization_id HAVING MIN(d.service_id) <= 52 ORDER BY d.organization_id ASC LIMIT 8'], ['SELECT h.service_details FROM Services JOIN Services AS h ON Services.service_id = h.service_id WHERE EXISTS (SELECT * FROM Organizations AS g WHERE  g.parent_organization_id >= 100 AND Services.service_id = g.organization_id LIMIT 9) LIMIT 3', 'SELECT h.service_details FROM Services JOIN Services AS h ON Services.service_id = h.service_id WHERE EXISTS (SELECT * FROM Organizations AS g WHERE  g.parent_organization_id >= 100 AND Services.service_id = g.organization_id LIMIT 9) LIMIT 3'], ['SELECT MAX(Customer_Events.resident_id), service_type_code, Customer_Event_Notes.resident_id FROM Customer_Events JOIN Customer_Event_Notes ON Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID WHERE  Customer_Event_Notes.resident_id = 17 GROUP BY Customer_Event_Notes.resident_id ORDER BY service_type_code ASC', 'SELECT MAX(Customer_Events.resident_id), service_type_code FROM Customer_Events JOIN Customer_Event_Notes ON Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID WHERE Customer_Event_Notes.resident_id = 17 GROUP BY service_type_code ORDER BY service_type_code ASC'], ['SELECT organization_id, service_id FROM Services WHERE organization_id BETWEEN 1 AND 10 AND  organization_id <= 73 ORDER BY organization_id ASC LIMIT 10', 'SELECT organization_id, service_id FROM Services WHERE organization_id BETWEEN 1 AND 10 ORDER BY organization_id ASC LIMIT 10'], ['SELECT thing_id FROM Timed_Status_of_Things WHERE thing_id BETWEEN 1 AND 10 OR  thing_id != 12', 'SELECT thing_id FROM Timed_Status_of_Things WHERE thing_id BETWEEN 1 AND 10 OR thing_id != 12;'], ['SELECT MIN(Customer_Events.thing_id) FROM Customer_Events JOIN Customer_Events AS k ON Customer_Events.Customer_Event_ID = k.Customer_Event_ID WHERE  k.resident_id > 4', 'SELECT MIN(thing_id) FROM Customer_Events WHERE resident_id > 4'], ['SELECT COUNT(w.thing_id), Timed_Locations_of_Things.thing_id FROM Timed_Locations_of_Things JOIN Timed_Locations_of_Things AS w ON Timed_Locations_of_Things.thing_id = w.thing_id', 'SELECT COUNT(thing_id), thing_id FROM Timed_Locations_of_Things;'], ['SELECT Customer_Events.property_id, Customer_Event_Notes.Customer_Event_ID, customer_id FROM Customer_Events JOIN Customer_Event_Notes ON Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID WHERE Customer_Event_Notes.resident_id BETWEEN 1 AND 10 OR  Customer_Events.resident_id >= 76', 'SELECT T1.customer_id, T2.Customer_Event_ID, T1.resident_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T2.Customer_Event_ID = T1.Customer_Event_ID WHERE T2.resident_id BETWEEN 1 AND 10 OR T1.resident_id >= 76'], ['SELECT Type_of_Thing_Code, service_type_code FROM Organizations JOIN Things ON Things.organization_id = Organizations.organization_id WHERE  Organizations.organization_id != 83 AND EXISTS (SELECT * FROM Services AS d WHERE d.organization_id BETWEEN 1 AND 10 OR  d.organization_id = 60 AND Organizations.organization_id = d.organization_id) GROUP BY service_type_code HAVING MAX(parent_organization_id) >= 41', 'SELECT T.Type_of_Thing_Code, S.service_type_code FROM Organizations AS O JOIN Services AS S ON O.organization_id = S.organization_id JOIN Things AS T ON O.organization_id = T.organization_id WHERE O.organization_id != 83 AND EXISTS (SELECT * FROM Services AS d WHERE d.organization_id BETWEEN 1 AND 10 OR d.organization_id = 60 AND O.organization_id = d.organization_id) GROUP BY S.service_type_code HAVING MAX(O.parent_organization_id) >= 41'], ['SELECT w.property_id, Residents.property_id FROM Residents AS w JOIN Residents ON Residents.resident_id = w.resident_id WHERE  w.resident_id <= 81 GROUP BY Residents.property_id HAVING COUNT(w.property_id) <= 47 ORDER BY Residents.property_id ASC', 'SELECT w.property_id, Residents.property_id FROM Residents AS w JOIN Residents_Services ON Residents.resident_id = Residents_Services.resident_id WHERE w.resident_id <= 81 GROUP BY Residents.property_id HAVING COUNT(w.property_id) <= 47 ORDER BY Residents.property_id ASC'], ['SELECT resident_id, Customer_Event_ID FROM Customer_Event_Notes WHERE resident_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Customer_Events WHERE Customer_Event_ID BETWEEN 1 AND 10 OR  thing_id < 15 AND Customer_Event_Notes.Customer_Event_Note_ID = Customer_Event_ID) GROUP BY resident_id ORDER BY resident_id DESC', 'SELECT resident_id, Customer_Event_ID FROM Customer_Event_Notes WHERE resident_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Customer_Events WHERE Customer_Event_ID BETWEEN 1 AND 10 AND Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID) GROUP BY resident_id ORDER BY resident_id DESC'], ['SELECT MAX(j.service_id), COUNT(DISTINCT Services.service_id), j.organization_id FROM Services AS j JOIN Services ON Services.service_id = j.service_id WHERE Services.organization_id BETWEEN 1 AND 10 OR  Services.service_id != 5 LIMIT 6', 'SELECT MAX(service_id), COUNT(DISTINCT service_id), organization_id FROM Services WHERE organization_id BETWEEN 1 AND 10 AND service_id != 5 LIMIT 6']], 'swimming': [['SELECT ID, City FROM stadium WHERE  ID < 27 OR City NOT IN (SELECT City FROM stadium AS w)', 'SELECT ID, City FROM stadium WHERE ID < 27;'], ['SELECT MIN(Capacity), MAX(stadium.ID) FROM event JOIN stadium ON event.Stadium_ID = stadium.ID WHERE  stadium.ID = 30 LIMIT 4', 'SELECT MIN(stadium.Capacity), MAX(stadium.ID) FROM event JOIN stadium ON event.Stadium_ID = stadium.ID WHERE event.Stadium_ID = 30;'], ['SELECT Capacity, Name FROM event JOIN stadium ON event.Stadium_ID = stadium.ID WHERE  stadium.ID = 99 GROUP BY Capacity', 'SELECT Capacity, Name FROM event JOIN stadium ON event.Stadium_ID = stadium.ID WHERE stadium.ID = 99 GROUP BY Capacity, Name;'], ['SELECT Swimmer_ID, ID FROM record WHERE  Event_ID >= 79 ORDER BY Swimmer_ID DESC LIMIT 5', 'SELECT Swimmer_ID FROM record WHERE Event_ID >= 79 ORDER BY Swimmer_ID DESC LIMIT 5'], ['SELECT Stadium_ID, Name FROM event WHERE  ID = 29 GROUP BY Name HAVING MIN(Stadium_ID) < 16 ORDER BY Name DESC LIMIT 8', 'SELECT Stadium_ID, Name FROM event WHERE ID = 29 ORDER BY Name DESC;']], 'gymnast': [['SELECT MAX(g.People_ID), COUNT(DISTINCT people.People_ID) FROM people AS g JOIN people ON people.People_ID = g.People_ID WHERE  people.Height = 75 LIMIT 10', 'SELECT MAX(People_ID), COUNT(DISTINCT People_ID) FROM people WHERE Height = 75 LIMIT 10'], ['SELECT MIN(Age), Hometown, Name FROM people WHERE  Height = 2 AND Name IN (SELECT Name FROM people AS p WHERE  p.Age > 100 LIMIT 9) ORDER BY Hometown ASC', 'SELECT MIN(Age), Hometown, Name FROM people WHERE Height = 72 AND Name IN (SELECT Name FROM people AS p WHERE p.Age > 100 LIMIT 9) ORDER BY Hometown ASC;'], ['SELECT COUNT(DISTINCT Height), Height, Name FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE  Rings_Points <= 67', 'SELECT COUNT(DISTINCT people.Height), people.Height, people.Name FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE gymnast.Rings_Points <= 67 GROUP BY people.Height, people.Name;'], ['SELECT Parallel_Bars_Points, Age FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE  Total_Points < 82 GROUP BY Age ORDER BY Age DESC', 'SELECT g.Parallel_Bars_Points, p.Age FROM people p JOIN gymnast g ON g.Gymnast_ID = p.People_ID WHERE  g.Total_Points < 82 GROUP BY p.Age ORDER BY p.Age DESC'], ['SELECT SUM(Total_Points), Pommel_Horse_Points FROM gymnast WHERE  Total_Points < 25 ORDER BY Pommel_Horse_Points DESC LIMIT 9', 'SELECT SUM(Total_Points), Pommel_Horse_Points FROM gymnast WHERE Total_Points < 25 GROUP BY Pommel_Horse_Points ORDER BY Pommel_Horse_Points DESC LIMIT 9;'], ['SELECT c.Parallel_Bars_Points, gymnast.Total_Points FROM gymnast AS c JOIN gymnast ON gymnast.Gymnast_ID = c.Gymnast_ID WHERE  gymnast.Parallel_Bars_Points >= 44 LIMIT 4', 'SELECT c.Parallel_Bars_Points, c.Total_Points FROM gymnast AS c WHERE c.Parallel_Bars_Points >= 44 LIMIT 4;'], ['SELECT MIN(Total_Points), Pommel_Horse_Points FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE  Age < 9 GROUP BY Pommel_Horse_Points HAVING AVG(Rings_Points) >= 81 ORDER BY Pommel_Horse_Points ASC LIMIT 4', 'SELECT MIN(T1.Total_Points), T1.Pommel_Horse_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.Age < 9 GROUP BY T1.Pommel_Horse_Points HAVING AVG(T1.Rings_Points) >= 81 ORDER BY T1.Pommel_Horse_Points ASC LIMIT 4'], ['SELECT COUNT(DISTINCT Horizontal_Bar_Points), People_ID, Total_Points FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE  Parallel_Bars_Points > 73 GROUP BY Total_Points LIMIT 6', 'SELECT COUNT(DISTINCT Horizontal_Bar_Points), People_ID, Total_Points FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE Parallel_Bars_Points > 73 GROUP BY People_ID, Total_Points LIMIT 6'], ['SELECT w.Horizontal_Bar_Points, w.Pommel_Horse_Points FROM gymnast AS w GROUP BY w.Pommel_Horse_Points LIMIT 4', 'SELECT w.Horizontal_Bar_Points, w.Pommel_Horse_Points FROM gymnast AS w GROUP BY w.Horizontal_Bar_Points, w.Pommel_Horse_Points LIMIT 4'], ['SELECT COUNT(DISTINCT q.Pommel_Horse_Points), q.Vault_Points FROM gymnast AS q WHERE  q.Gymnast_ID != 94', 'SELECT COUNT(DISTINCT q.Pommel_Horse_Points), AVG(q.Vault_Points) FROM gymnast AS q WHERE  q.Gymnast_ID != 94'], ['SELECT Parallel_Bars_Points, Floor_Exercise_Points FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE  Parallel_Bars_Points = 76 AND EXISTS (SELECT * FROM gymnast WHERE  Horizontal_Bar_Points <= 56 AND people.People_ID = Gymnast_ID)', 'SELECT Parallel_Bars_Points, Floor_Exercise_Points FROM people JOIN gymnast ON gymnast.Gymnast_ID = people.People_ID WHERE gymnast.Gymnast_ID = 76 AND EXISTS (SELECT * FROM gymnast WHERE Horizontal_Bar_Points <= 56)'], ['SELECT AVG(e.Gymnast_ID) FROM gymnast AS e WHERE Pommel_Horse_Points >= (SELECT MIN(Pommel_Horse_Points) FROM gymnast)', 'SELECT AVG(e.Pommel_Horse_Points) FROM gymnast AS e WHERE Pommel_Horse_Points >= (SELECT MIN(Pommel_Horse_Points) FROM gymnast)'], ['SELECT SUM(u.Height), u.People_ID, u.People_ID, u.Age FROM people AS u WHERE u.Height BETWEEN 1 AND 10 OR Name IN (SELECT Name FROM people WHERE  Height < 60) GROUP BY u.Age', 'SELECT AVG(u.Height) AS Average_Height, u.People_ID, u.Name, u.Age FROM people AS u WHERE u.Height BETWEEN 1 AND 10 OR u.Name IN (SELECT Name FROM people WHERE  Height < 60) GROUP BY u.People_ID, u.Name, u.Age;'], ['SELECT Name, Name FROM people WHERE EXISTS (SELECT * FROM gymnast WHERE  Total_Points <= 85 AND people.People_ID = Gymnast_ID LIMIT 5)', 'SELECT Name FROM people p WHERE EXISTS (SELECT * FROM gymnast g WHERE g.Total_Points <= 85 AND g.Gymnast_ID = p.People_ID LIMIT 5)'], ['SELECT SUM(Age), People_ID FROM people WHERE Height BETWEEN 1 AND 10 AND  People_ID <= 40', 'SELECT SUM(Age) FROM people WHERE Height BETWEEN 1 AND 10 AND People_ID <= 40;']], 'employee_hire_evaluation': [['SELECT Name, City, Name FROM employee WHERE  Employee_ID > 14 LIMIT 10', 'SELECT Name, City FROM employee WHERE Employee_ID > 14 LIMIT 10;'], ['SELECT c.Bonus, evaluation.Bonus FROM evaluation JOIN evaluation AS c ON evaluation.Employee_ID = c.Employee_ID WHERE Year_awarded NOT IN (SELECT Year_awarded FROM evaluation LIMIT 5) ORDER BY c.Bonus ASC LIMIT 7', 'SELECT e.Bonus FROM evaluation e WHERE e.Year_awarded NOT IN (SELECT e2.Year_awarded FROM evaluation e2 ORDER BY e2.Year_awarded LIMIT 5) ORDER BY e.Bonus ASC LIMIT 7'], ['SELECT y.Shop_ID, y.Shop_ID, y.Number_products FROM shop AS y WHERE  y.Shop_ID <= 80 GROUP BY y.Number_products HAVING AVG(y.Number_products) >= 58', 'SELECT y.Shop_ID, y.Number_products FROM shop AS y WHERE  y.Shop_ID <= 80 GROUP BY y.Shop_ID, y.Number_products HAVING y.Number_products >= 58'], ['SELECT COUNT(Shop_ID), MAX(Shop_ID), District, Name FROM shop WHERE Number_products BETWEEN 1 AND 10 OR  Number_products < 10 GROUP BY Name', 'SELECT COUNT(*), MAX(Number_products), District, Name FROM shop WHERE Number_products BETWEEN 1 AND 10 GROUP BY District, Name;'], ['SELECT COUNT(DISTINCT shop.Name), shop.Name, u.Manager_name FROM shop AS u JOIN shop ON shop.Shop_ID = u.Shop_ID WHERE  shop.Shop_ID <= 30 GROUP BY u.Manager_name HAVING MAX(u.Shop_ID) < 81', 'SELECT COUNT(DISTINCT s.Name), s.Name, s.Manager_name FROM shop AS s WHERE s.Shop_ID <= 30 GROUP BY s.Name, s.Manager_name HAVING MAX(s.Shop_ID) < 81'], ['SELECT Start_from FROM hiring WHERE Shop_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM shop AS x WHERE  x.Number_products <= 68 AND hiring.Employee_ID = x.Shop_ID)', 'SELECT Start_from FROM hiring WHERE Shop_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM shop AS x WHERE  x.Number_products <= 68 AND hiring.Shop_ID = x.Shop_ID)'], ['SELECT Shop_ID FROM shop WHERE EXISTS (SELECT * FROM hiring AS v WHERE shop.Shop_ID = v.Shop_ID)', 'SELECT Shop_ID FROM shop AS s WHERE EXISTS (SELECT * FROM hiring AS v WHERE v.Shop_ID = s.Shop_ID)'], ['SELECT MIN(Bonus) FROM evaluation WHERE Bonus BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM employee WHERE  Employee_ID != 25 AND evaluation.Employee_ID = Employee_ID)', "SELECT MIN(Bonus) FROM evaluation WHERE Bonus BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM employee WHERE  CAST(Employee_ID AS TEXT) != '25' AND CAST(evaluation.Employee_ID AS TEXT) = CAST(employee.Employee_ID AS TEXT))"], ['SELECT r.City, r.City FROM employee AS r WHERE  r.Age >= 52 LIMIT 9', 'SELECT r.City FROM employee AS r WHERE r.Age >= 52 LIMIT 9'], ['SELECT COUNT(m.Bonus), m.Bonus FROM evaluation AS m WHERE  m.Bonus = 89 ORDER BY m.Bonus ASC LIMIT 5', 'SELECT COUNT(m.Bonus) FROM evaluation AS m WHERE m.Bonus = 89'], ['SELECT SUM(u.Employee_ID), MAX(hiring.Shop_ID) FROM hiring JOIN hiring AS u ON hiring.Employee_ID = u.Employee_ID WHERE hiring.Employee_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM shop AS v WHERE hiring.Employee_ID = v.Shop_ID)', 'SELECT COUNT(hiring.Employee_ID), MAX(hiring.Shop_ID) FROM hiring WHERE hiring.Employee_ID BETWEEN 1 AND 10 AND hiring.Shop_ID IN (SELECT Shop_ID FROM shop)']], 'vehicle_driver': [['SELECT AVG(Vehicle_ID) FROM vehicle WHERE  Power > 16 LIMIT 2', 'SELECT AVG(Power) FROM vehicle WHERE Power > 16;'], ['SELECT t.Driver_ID FROM driver AS t WHERE t.Driver_ID BETWEEN 1 AND 10 AND  t.Driver_ID = 86 ORDER BY t.Driver_ID DESC LIMIT 9', 'SELECT t.Driver_ID FROM driver AS t WHERE t.Driver_ID BETWEEN 1 AND 10 ORDER BY t.Driver_ID DESC LIMIT 9'], ['SELECT o.Driver_ID FROM vehicle_driver AS o WHERE  o.Driver_ID != 83', 'SELECT o.Driver_ID FROM vehicle_driver AS o WHERE  o.Driver_ID != 83'], ['SELECT COUNT(DISTINCT vehicle.Model) FROM vehicle JOIN vehicle AS m ON vehicle.Vehicle_ID = m.Vehicle_ID WHERE  m.Top_Speed = 95 LIMIT 1', 'SELECT COUNT(DISTINCT Model) FROM vehicle WHERE Top_Speed = 95']], 'scientist_1': [['SELECT Scientists.Name FROM AssignedTo JOIN Projects JOIN Scientists ON AssignedTo.Project = Projects.Code AND Scientists.SSN = AssignedTo.Scientist WHERE Scientist BETWEEN 1 AND 10 AND  Hours >= 37 ORDER BY Scientists.Name ASC', 'SELECT T1.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T1.SSN >= 1 AND T1.SSN <= 10 AND T3.Hours >= 37 ORDER BY T1.Name ASC;'], ['SELECT COUNT(DISTINCT j.Code), j.Hours FROM Projects AS j WHERE  j.Hours < 74 GROUP BY j.Hours', 'SELECT COUNT(DISTINCT j.Code) FROM Projects AS j WHERE  j.Hours < 74;'], ['SELECT COUNT(DISTINCT Name) FROM Projects WHERE  Hours > 25 AND Hours IN (SELECT Hours FROM Projects AS h WHERE  h.Hours = 5)', 'SELECT COUNT(DISTINCT Name) FROM Projects WHERE Hours = 5'], ['SELECT Code FROM AssignedTo JOIN Projects ON AssignedTo.Project = Projects.Code WHERE Code NOT IN (SELECT Code FROM Projects WHERE  Hours = 32 LIMIT 10) LIMIT 10', 'SELECT T2.Code FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code AND T1.Scientist = (SELECT SSN FROM Scientists) WHERE T2.Code NOT IN (SELECT Code FROM Projects WHERE Hours = 32 LIMIT 10) LIMIT 10'], ['SELECT AVG(Scientist), Project, Project FROM AssignedTo WHERE  Scientist != 98 LIMIT 5', 'SELECT AVG(Hours), Project FROM AssignedTo AS at INNER JOIN Projects AS p ON at.Project = p.Code WHERE at.Project != 98 GROUP BY at.Project LIMIT 5;'], ['SELECT AVG(b.Hours), b.Hours FROM Projects AS b WHERE  b.Hours < 92', 'SELECT AVG(b.Hours) FROM Projects AS b WHERE b.Hours < 92;'], ['SELECT SSN FROM AssignedTo JOIN Projects JOIN Scientists ON AssignedTo.Project = Projects.Code AND Scientists.SSN = AssignedTo.Scientist WHERE Hours BETWEEN 1 AND 10 OR  SSN > 45 ORDER BY SSN DESC', 'SELECT T1.SSN FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T3.Hours BETWEEN 1 AND 10 AND T1.SSN > 45 ORDER BY T1.SSN DESC;'], ['SELECT Code, Code FROM Projects WHERE  Hours <= 46', 'SELECT Code FROM Projects WHERE Hours <= 46;'], ['SELECT Name FROM Scientists WHERE SSN >= (SELECT MAX(SSN) FROM Scientists AS u WHERE u.SSN BETWEEN 1 AND 10 AND  u.SSN <= 84) ORDER BY Name DESC', 'SELECT Name FROM Scientists WHERE SSN >= (SELECT MAX(SSN) FROM Scientists WHERE SSN BETWEEN 1 AND 10 AND SSN <= 84) ORDER BY Name DESC'], ['SELECT COUNT(DISTINCT Project), COUNT(DISTINCT Scientist) FROM AssignedTo JOIN Projects ON AssignedTo.Project = Projects.Code WHERE EXISTS (SELECT * FROM Projects AS v WHERE  v.Hours != 64 AND AssignedTo.Scientist = v.Code LIMIT 2)', 'SELECT COUNT(DISTINCT at.Project), COUNT(DISTINCT at.Scientist) FROM AssignedTo at JOIN Projects p ON at.Project = p.Code WHERE EXISTS (SELECT * FROM Projects v WHERE v.Code = at.Project AND v.Hours != 64)'], ['SELECT AVG(Hours), MIN(Hours), Name FROM Projects WHERE  Hours > 89 GROUP BY Name HAVING AVG(Hours) = 68', 'SELECT Name, AVG(Hours) FROM Projects WHERE Hours < 90 GROUP BY Name HAVING AVG(Hours) = 68;'], ['SELECT COUNT(SSN), MAX(SSN), Name FROM Scientists WHERE SSN BETWEEN 1 AND 10 OR Name NOT IN (SELECT Name FROM Projects WHERE  Hours > 1) ORDER BY Name DESC', 'SELECT COUNT(SSN), MAX(SSN), Name FROM Scientists WHERE SSN BETWEEN 1 AND 10 OR Name NOT IN (SELECT T2.Name FROM AssignedTo AS T1 INNER JOIN Projects AS T2 ON T1.Project = T2.Code WHERE T2.Hours > 1) ORDER BY Name DESC'], ['SELECT MAX(Hours), Scientist, Project FROM AssignedTo JOIN Projects ON AssignedTo.Project = Projects.Code WHERE Hours BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM AssignedTo WHERE Projects.Code = Project) GROUP BY Project HAVING COUNT(Hours) <= 75', 'SELECT MAX(T2.Hours), T1.Scientist, T2.Code AS Project FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code JOIN Scientists AS T3 ON T1.Scientist = T3.SSN WHERE T2.Hours BETWEEN 1 AND 10 GROUP BY T2.Code, T1.Scientist HAVING COUNT(T2.Hours) <= 75']], 'entertainment_awards': [['SELECT MIN(nomination.Artwork_ID), Festival_Name FROM artwork JOIN nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID AND artwork.Artwork_ID = nomination.Artwork_ID WHERE Year BETWEEN 1 AND 10 AND Year NOT IN (SELECT Year FROM festival_detail AS n WHERE n.Num_of_Audience BETWEEN 1 AND 10) LIMIT 6', 'SELECT MIN(T1.Artwork_ID), T3.Festival_Name FROM nomination AS T1 INNER JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID INNER JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID WHERE T3.Year BETWEEN 1 AND 10 AND T3.Year NOT IN (SELECT Year FROM festival_detail AS n WHERE n.Num_of_Audience BETWEEN 1 AND 10) LIMIT 6'], ['SELECT MAX(r.Artwork_ID), r.Artwork_ID, artwork.Name FROM artwork AS r JOIN artwork ON artwork.Artwork_ID = r.Artwork_ID GROUP BY artwork.Name LIMIT 2', 'SELECT T1.Max_Artwork_ID, T2.Artwork_ID, T2.Name FROM (SELECT Name, MAX(Artwork_ID) AS Max_Artwork_ID FROM artwork GROUP BY Name) T1 JOIN artwork T2 ON T1.Name = T2.Name AND T1.Max_Artwork_ID = T2.Artwork_ID LIMIT 2'], ['SELECT COUNT(DISTINCT c.Result) FROM nomination AS c WHERE c.Artwork_ID BETWEEN 1 AND 10 AND  c.Festival_ID < 21', 'SELECT COUNT(DISTINCT c.Result) FROM nomination AS c WHERE c.Artwork_ID BETWEEN 1 AND 10 AND  c.Festival_ID < 21'], ['SELECT COUNT(DISTINCT h.Type) FROM artwork AS h WHERE h.Artwork_ID BETWEEN 1 AND 10 OR  h.Artwork_ID <= 14', 'SELECT COUNT(DISTINCT h.Type) FROM artwork AS h WHERE h.Artwork_ID BETWEEN 1 AND 10 OR  h.Artwork_ID <= 14'], ['SELECT Num_of_Audience, Result FROM artwork JOIN nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID AND artwork.Artwork_ID = nomination.Artwork_ID WHERE Festival_ID IN (SELECT Festival_ID FROM festival_detail AS n)', 'SELECT T3.Num_of_Audience, T2.Result FROM artwork AS T1 JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID WHERE T3.Festival_ID IN (SELECT Festival_ID FROM festival_detail)'], ['SELECT Festival_Name FROM nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID WHERE EXISTS (SELECT * FROM nomination AS a WHERE festival_detail.Festival_ID = a.Festival_ID) ORDER BY Festival_Name ASC', 'SELECT Festival_Name FROM festival_detail WHERE Festival_ID IN (SELECT Festival_ID FROM nomination) ORDER BY Festival_Name ASC;'], ['SELECT COUNT(DISTINCT Chair_Name), COUNT(DISTINCT Chair_Name), Location FROM festival_detail ORDER BY Location DESC', 'SELECT COUNT(DISTINCT Chair_Name), Location FROM festival_detail ORDER BY Location DESC'], ['SELECT Name, Type, Name FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID', 'SELECT Name, Type FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID'], ['SELECT l.Name FROM artwork AS l GROUP BY l.Name HAVING MIN(l.Artwork_ID) = 36', 'SELECT Name FROM artwork WHERE Artwork_ID = 36;'], ['SELECT Result, Type FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID WHERE EXISTS (SELECT * FROM artwork AS c WHERE nomination.Artwork_ID = c.Artwork_ID) ORDER BY Type ASC', 'SELECT Result, Type FROM nomination JOIN artwork ON nomination.Artwork_ID = artwork.Artwork_ID ORDER BY Type ASC;'], ['SELECT COUNT(Num_of_Audience), Type, Chair_Name FROM artwork JOIN nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID AND artwork.Artwork_ID = nomination.Artwork_ID WHERE festival_detail.Festival_ID BETWEEN 1 AND 10 OR  nomination.Festival_ID < 47 GROUP BY Chair_Name LIMIT 1', 'SELECT COUNT(DISTINCT T3.Num_of_Audience), T1.Type, T2.Chair_Name FROM artwork AS T1 INNER JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID INNER JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID WHERE T3.Festival_ID BETWEEN 1 AND 10 OR T2.Festival_ID < 47 GROUP BY T2.Chair_Name LIMIT 1'], ['SELECT Year FROM artwork JOIN nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID AND artwork.Artwork_ID = nomination.Artwork_ID WHERE  Year >= 74 ORDER BY Year ASC', 'SELECT T3.Year FROM artwork AS T1 INNER JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID INNER JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID WHERE T3.Year >= 1974 ORDER BY T3.Year ASC;'], ['SELECT COUNT(Artwork_ID), Artwork_ID FROM artwork WHERE Artwork_ID BETWEEN 1 AND 10 AND  Artwork_ID >= 16', 'SELECT Artwork_ID, COUNT(*) FROM artwork WHERE Artwork_ID BETWEEN 1 AND 10 OR Artwork_ID >= 16 GROUP BY Artwork_ID;'], ['SELECT AVG(Artwork_ID), AVG(Artwork_ID), MAX(Artwork_ID) FROM artwork', 'SELECT AVG(Artwork_ID), MAX(Artwork_ID) FROM artwork;'], ['SELECT SUM(e.Artwork_ID), COUNT(DISTINCT e.Festival_ID), COUNT(DISTINCT e.Result) FROM nomination AS e WHERE e.Artwork_ID BETWEEN 1 AND 10 OR  e.Festival_ID = 83', 'SELECT COUNT(e.Artwork_ID), COUNT(DISTINCT e.Festival_ID), COUNT(DISTINCT e.Result) FROM nomination AS e WHERE e.Artwork_ID BETWEEN 1 AND 10 OR  e.Festival_ID = 83'], ['SELECT b.Artwork_ID, b.Type FROM artwork AS b WHERE  b.Artwork_ID > 99 GROUP BY b.Type ORDER BY b.Artwork_ID DESC', 'SELECT b.Artwork_ID, b.Type FROM artwork AS b WHERE  b.Artwork_ID > 99 GROUP BY b.Type ORDER BY b.Artwork_ID DESC'], ['SELECT SUM(f.Artwork_ID), artwork.Artwork_ID, artwork.Name FROM artwork AS f JOIN artwork ON artwork.Artwork_ID = f.Artwork_ID WHERE f.Artwork_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM nomination AS x WHERE  x.Festival_ID > 84 AND artwork.Artwork_ID = x.Artwork_ID LIMIT 3) GROUP BY artwork.Name HAVING MAX(artwork.Artwork_ID) <= 47 LIMIT 2', 'SELECT COUNT(artwork.Artwork_ID), artwork.Artwork_ID, artwork.Name FROM artwork JOIN nomination AS n ON artwork.Artwork_ID = n.Artwork_ID WHERE n.Festival_ID > 84 AND artwork.Artwork_ID BETWEEN 1 AND 10 GROUP BY artwork.Name, artwork.Artwork_ID HAVING MAX(n.Festival_ID) <= 47 LIMIT 2'], ['SELECT y.Location, y.Chair_Name FROM festival_detail AS y WHERE Festival_ID NOT IN (SELECT Festival_ID FROM nomination) ORDER BY y.Chair_Name DESC', 'SELECT Location, Chair_Name FROM festival_detail WHERE Festival_ID NOT IN (SELECT Festival_ID FROM nomination) ORDER BY Chair_Name DESC;']], 'real_estate_properties': [['SELECT MIN(room_count), room_count FROM Other_Property_Features JOIN Ref_Feature_Types JOIN Other_Available_Features JOIN Properties ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code AND Other_Available_Features.feature_id = Other_Property_Features.feature_id AND Other_Property_Features.property_id = Properties.property_id WHERE apt_feature_1 NOT IN (SELECT apt_feature_1 FROM Properties WHERE  agreed_selling_price < 44)', 'SELECT MIN(T1.room_count), T1.room_count FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id JOIN Ref_Feature_Types AS T4 ON T3.feature_type_code = T4.feature_type_code WHERE T1.apt_feature_1 NOT IN (SELECT apt_feature_1 FROM Properties WHERE agreed_selling_price < 44)'], ['SELECT COUNT(DISTINCT feature_type_name) FROM Ref_Feature_Types WHERE EXISTS (SELECT * FROM Other_Available_Features WHERE feature_id BETWEEN 1 AND 10 AND  feature_id = 81 AND Ref_Feature_Types.feature_type_code = feature_type_code LIMIT 10)', 'SELECT COUNT(DISTINCT feature_type_name) FROM Ref_Feature_Types WHERE EXISTS (SELECT * FROM Other_Available_Features WHERE feature_id = 81 AND Ref_Feature_Types.feature_type_code = feature_type_code LIMIT 10)'], ['SELECT AVG(feature_id), Other_Available_Features.feature_type_code FROM Ref_Feature_Types JOIN Other_Available_Features ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code WHERE feature_id BETWEEN 1 AND 10 GROUP BY Other_Available_Features.feature_type_code HAVING SUM(feature_id) = 95', 'SELECT AVG(Other_Available_Features.feature_id), Other_Available_Features.feature_type_code FROM Other_Available_Features JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code WHERE Other_Available_Features.feature_id BETWEEN 1 AND 10 GROUP BY Other_Available_Features.feature_type_code HAVING SUM(Other_Available_Features.feature_id) = 95'], ['SELECT Other_Available_Features.feature_type_code, apt_feature_2, shp_feature_1 FROM Other_Property_Features JOIN Ref_Feature_Types JOIN Other_Available_Features JOIN Properties ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code AND Other_Available_Features.feature_id = Other_Property_Features.feature_id AND Other_Property_Features.property_id = Properties.property_id LIMIT 8', 'SELECT Other_Available_Features.feature_type_code, apt_feature_2, shp_feature_1 FROM Other_Property_Features JOIN Properties ON Other_Property_Features.property_id = Properties.property_id JOIN Other_Available_Features ON Other_Property_Features.feature_id = Other_Available_Features.feature_id JOIN Ref_Feature_Types ON Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code LIMIT 8'], ['SELECT COUNT(buyer_offered_price), vendor_requested_price, buyer_offered_price FROM Other_Property_Features JOIN Properties ON Other_Property_Features.property_id = Properties.property_id WHERE feature_id BETWEEN 1 AND 10 OR fld_feature_3 IN (SELECT fld_feature_3 FROM Properties AS p WHERE p.vendor_requested_price BETWEEN 1 AND 10) ORDER BY vendor_requested_price ASC', 'SELECT COUNT(opf.feature_id), vendor_requested_price, buyer_offered_price FROM Other_Property_Features AS opf JOIN Properties AS p ON opf.property_id = p.property_id WHERE opf.feature_id BETWEEN 1 AND 10 OR p.fld_feature_3 IN (SELECT fld_feature_3 FROM Properties AS p WHERE p.vendor_requested_price BETWEEN 1 AND 10) ORDER BY vendor_requested_price ASC'], ['SELECT COUNT(DISTINCT apt_feature_1), COUNT(DISTINCT date_sold), Other_Property_Features.property_id FROM Other_Property_Features JOIN Properties ON Other_Property_Features.property_id = Properties.property_id WHERE  buyer_offered_price > 17 AND hse_feature_3 <= (SELECT MIN(hse_feature_3) FROM Properties WHERE  room_count >= 100 LIMIT 5)', 'SELECT COUNT(DISTINCT T1.apt_feature_1), COUNT(DISTINCT T1.date_sold), T2.property_id FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T1.buyer_offered_price > 17 AND T1.hse_feature_3 <= (SELECT MIN(hse_feature_3) FROM Properties WHERE room_count >= 100 LIMIT 5)'], ['SELECT AVG(feature_id), COUNT(DISTINCT date_on_market), agreed_selling_price FROM Other_Property_Features JOIN Properties ON Other_Property_Features.property_id = Properties.property_id WHERE agreed_selling_price BETWEEN 1 AND 10 OR shp_feature_3 NOT IN (SELECT shp_feature_3 FROM Properties WHERE  vendor_requested_price >= 22 LIMIT 9) ORDER BY agreed_selling_price ASC', 'SELECT AVG(Other_Property_Features.feature_id), COUNT(DISTINCT Properties.date_on_market), Properties.agreed_selling_price FROM Other_Property_Features JOIN Properties ON Other_Property_Features.property_id = Properties.property_id WHERE Properties.agreed_selling_price BETWEEN 1 AND 10 OR Properties.shp_feature_3 NOT IN (SELECT shp_feature_3 FROM Properties WHERE  vendor_requested_price >= 22 LIMIT 9) ORDER BY Properties.agreed_selling_price ASC']], 'car_road_race': [['SELECT a.Driver_ID FROM driver AS a JOIN driver ON driver.Driver_ID = a.Driver_ID WHERE  a.Driver_ID > 91', 'SELECT a.Driver_ID FROM driver AS a JOIN race ON race.Driver_ID = a.Driver_ID WHERE a.Driver_ID > 91'], ['SELECT Driver_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE race.Driver_ID BETWEEN 1 AND 10 OR  driver.Driver_ID > 77 LIMIT 2', 'SELECT Driver_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE (race.Driver_ID BETWEEN 1 AND 10) OR (driver.Driver_ID > 77) LIMIT 2;'], ['SELECT COUNT(Driver_ID), Age FROM driver WHERE Age BETWEEN 1 AND 10 OR Chassis NOT IN (SELECT Chassis FROM driver AS c WHERE  c.Age >= 55 LIMIT 10) LIMIT 5', 'SELECT COUNT(Driver_ID) FROM driver WHERE Age BETWEEN 1 AND 10 OR Chassis NOT IN (SELECT Chassis FROM driver AS c WHERE  c.Age >= 55 LIMIT 10) LIMIT 5'], ['SELECT COUNT(Road), Fastest_Lap, Winning_team FROM race WHERE Winning_team <= (SELECT SUM(Winning_team) FROM race AS c LIMIT 3) GROUP BY Winning_team', 'SELECT COUNT(Road), Fastest_Lap, Winning_team FROM race WHERE Winning_team IN (SELECT Winning_team FROM race GROUP BY Winning_team ORDER BY COUNT(Winning_team) DESC LIMIT 3) GROUP BY Winning_team'], ['SELECT MAX(t.Road), t.Fastest_Lap, t.Race_Name FROM race AS t WHERE  t.Driver_ID = 91 AND Fastest_Lap IN (SELECT Fastest_Lap FROM race WHERE Road BETWEEN 1 AND 10) GROUP BY t.Race_Name HAVING SUM(t.Road) < 31 ORDER BY t.Fastest_Lap ASC', "SELECT MAX(t.Road), t.Fastest_Lap, t.Race_Name FROM race AS t WHERE  t.Driver_ID = 91 AND SUBSTR(t.Fastest_Lap, 1, INSTR(t.Fastest_Lap, ':') - 1) || SUBSTR(t.Fastest_Lap, INSTR(t.Fastest_Lap, ':') + 1) IN (SELECT SUBSTR(Fastest_Lap, 1, INSTR(Fastest_Lap, ':') - 1) || SUBSTR(Fastest_Lap, INSTR(Fastest_Lap, ':') + 1) FROM race WHERE Road BETWEEN 1 AND 10) GROUP BY t.Race_Name, t.Fastest_Lap HAVING SUM(t.Road) < 31 ORDER BY CAST(SUBSTR(t.Fastest_Lap, 1, INSTR(t.Fastest_Lap, ':') - 1) AS NUMBER) ASC"], ['SELECT COUNT(DISTINCT Driver_Name), Driver_Name FROM driver WHERE Age BETWEEN 1 AND 10 OR  Driver_ID <= 17 GROUP BY Driver_Name HAVING MAX(Age) > 89 LIMIT 10', 'SELECT Driver_Name, COUNT(DISTINCT Driver_Name) FROM driver WHERE Age BETWEEN 1 AND 10 OR  Driver_ID <= 17 GROUP BY Driver_Name HAVING MAX(Age) > 89 LIMIT 10'], ['SELECT COUNT(DISTINCT Race_Name), Road, Report FROM race WHERE  Driver_ID = 29 GROUP BY Report HAVING SUM(Driver_ID) < 38', 'SELECT COUNT(DISTINCT Race_Name), Report, Road FROM race WHERE Driver_ID = 29 GROUP BY Report, Road HAVING COUNT(Driver_ID) < 38;'], ['SELECT COUNT(DISTINCT Report), COUNT(DISTINCT Winning_team), Road, Fastest_Lap FROM race GROUP BY Fastest_Lap HAVING MIN(Road) = 94', 'SELECT COUNT(DISTINCT Report), COUNT(DISTINCT Winning_team), Road, Fastest_Lap FROM race GROUP BY Fastest_Lap, Road HAVING Road = 94;'], ['SELECT COUNT(DISTINCT d.Age), COUNT(DISTINCT d.Driver_Name), COUNT(DISTINCT d.Chassis), driver.Chassis FROM driver AS d JOIN driver ON driver.Driver_ID = d.Driver_ID WHERE  d.Age > 1 OR Driver_Name IN (SELECT Driver_Name FROM driver WHERE Age BETWEEN 1 AND 10) GROUP BY driver.Chassis HAVING SUM(driver.Driver_ID) <= 6 LIMIT 1', 'SELECT COUNT(DISTINCT Driver_Name) FROM driver WHERE Age > 1 OR Chassis IN (SELECT Chassis FROM driver WHERE Age > 1 AND Age BETWEEN 1 AND 10) GROUP BY Chassis HAVING SUM(CASE WHEN Age > 1 THEN 1 ELSE 0 END) <= 6 LIMIT 1'], ['SELECT r.Age, r.Age FROM driver AS r WHERE r.Age BETWEEN 1 AND 10', 'SELECT r.Age FROM driver AS r WHERE r.Age BETWEEN 1 AND 10'], ['SELECT race.Road, q.Report FROM race AS q JOIN race ON race.Road = q.Road WHERE  q.Road < 3 GROUP BY q.Report HAVING AVG(race.Road) >= 77 LIMIT 1', 'SELECT Road, Report FROM race WHERE Road < 3 GROUP BY Report HAVING AVG(Road) >= 77 LIMIT 1'], ['SELECT COUNT(DISTINCT i.Pole_Position), i.Pole_Position FROM race JOIN race AS i ON race.Road = i.Road WHERE  i.Road <= 15', 'SELECT COUNT(DISTINCT Pole_Position), Pole_Position FROM race WHERE Road <= 15'], ['SELECT COUNT(driver.Driver_ID), MAX(r.Driver_ID), driver.Age FROM driver AS r JOIN driver ON driver.Driver_ID = r.Driver_ID GROUP BY driver.Age', 'SELECT COUNT(Driver_ID), MAX(Driver_ID), Age FROM driver GROUP BY Age;']], 'country_language': [['SELECT MIN(politics_score), COUNT(DISTINCT health_score) FROM countries WHERE health_score BETWEEN 1 AND 10 AND  id != 93', 'SELECT MIN(politics_score), COUNT(DISTINCT health_score) FROM countries WHERE health_score BETWEEN 1 AND 10 AND  id != 93'], ['SELECT COUNT(DISTINCT justice_score), name FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE  justice_score < 82 GROUP BY name HAVING SUM(country_id) = 20 ORDER BY name ASC', 'SELECT COUNT(DISTINCT c.justice_score), c.name FROM countries c JOIN official_languages ol ON ol.country_id = c.id WHERE c.justice_score < 82 GROUP BY c.name ORDER BY c.name ASC;'], ['SELECT MAX(id), id FROM languages ORDER BY id DESC', 'SELECT MAX(id) FROM languages'], ['SELECT country_id, justice_score, name FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE  education_score < 21 LIMIT 6', 'SELECT id, justice_score, name FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE education_score < 21 LIMIT 6'], ['SELECT COUNT(id), id, name FROM languages GROUP BY name HAVING COUNT(id) > 21 ORDER BY id ASC', 'SELECT COUNT(id), id, name FROM languages GROUP BY name, id HAVING COUNT(id) > 21 ORDER BY id ASC'], ['SELECT id FROM languages WHERE  id <= 57', 'SELECT id FROM languages WHERE id <= 57'], ['SELECT COUNT(DISTINCT y.language_id), y.language_id, y.country_id FROM official_languages JOIN official_languages AS y ON official_languages.language_id = y.language_id GROUP BY y.country_id HAVING COUNT(official_languages.language_id) > 5 LIMIT 7', 'SELECT COUNT(DISTINCT y.language_id), y.country_id FROM official_languages AS y GROUP BY y.country_id HAVING COUNT(y.language_id) > 5 LIMIT 7'], ['SELECT MIN(education_score), AVG(education_score) FROM languages JOIN countries JOIN official_languages ON official_languages.country_id = countries.id AND languages.id = official_languages.language_id WHERE language_id BETWEEN 1 AND 10 OR  education_score >= 26', 'SELECT MIN(c.education_score), AVG(c.education_score) FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id JOIN countries AS c ON ol.country_id = c.id WHERE (ol.language_id BETWEEN 1 AND 10) OR c.education_score >= 26;'], ['SELECT MAX(language_id), countries.name FROM languages JOIN countries JOIN official_languages ON official_languages.country_id = countries.id AND languages.id = official_languages.language_id WHERE health_score != (SELECT MAX(health_score) FROM countries AS y WHERE  y.id = 40) ORDER BY countries.name ASC', 'SELECT MAX(languages.id), countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE countries.health_score != (SELECT MAX(countries.health_score) FROM countries) ORDER BY countries.name ASC'], ['SELECT COUNT(DISTINCT overall_score), name, name, politics_score FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE  education_score != 18 GROUP BY politics_score HAVING AVG(politics_score) = 1 ORDER BY name ASC LIMIT 9', 'SELECT COUNT(DISTINCT T1.overall_score), T1.name, T1.politics_score FROM countries AS T1 JOIN official_languages AS T2 ON T2.country_id = T1.id WHERE T1.education_score != 18 GROUP BY T1.name, T1.politics_score HAVING AVG(T1.politics_score) = 1 ORDER BY T1.name ASC LIMIT 9'], ['SELECT id, name FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE  justice_score != 26 ORDER BY id ASC LIMIT 3', 'SELECT countries.id, countries.name FROM countries JOIN official_languages ON official_languages.country_id = countries.id JOIN languages ON official_languages.language_id = languages.id WHERE countries.justice_score != 26 ORDER BY countries.id ASC LIMIT 3'], ['SELECT health_score, name FROM countries JOIN official_languages ON official_languages.country_id = countries.id WHERE  politics_score < 41 GROUP BY name ORDER BY name ASC LIMIT 8', 'SELECT T2.health_score, T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T2.politics_score < 41 GROUP BY T2.name ORDER BY T2.name ASC LIMIT 8'], ['SELECT COUNT(DISTINCT country_id), country_id FROM official_languages WHERE country_id IN (SELECT country_id FROM official_languages) GROUP BY country_id HAVING SUM(country_id) > 52', 'SELECT COUNT(DISTINCT country_id), country_id FROM official_languages WHERE country_id IN (SELECT country_id FROM official_languages) GROUP BY country_id HAVING COUNT(language_id) > 52'], ['SELECT MIN(politics_score), health_score, overall_score FROM countries GROUP BY overall_score HAVING AVG(economics_score) < 96 ORDER BY overall_score DESC LIMIT 7', 'SELECT MIN(politics_score), health_score, overall_score FROM countries GROUP BY overall_score, health_score HAVING AVG(economics_score) < 96 ORDER BY overall_score DESC LIMIT 7'], ['SELECT languages.name FROM languages JOIN languages AS k ON languages.id = k.id WHERE k.id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM official_languages WHERE languages.id = language_id LIMIT 5) LIMIT 9', 'SELECT name FROM languages WHERE id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM official_languages WHERE languages.id = language_id LIMIT 5) LIMIT 9'], ['SELECT languages.name, languages.name FROM languages JOIN languages AS p ON languages.id = p.id WHERE  languages.id >= 26 GROUP BY languages.name HAVING MAX(p.id) <= 29 ORDER BY languages.name ASC', 'SELECT name FROM languages WHERE id BETWEEN 26 AND 29 ORDER BY name ASC;']], 'tracking_share_transactions': [['SELECT MAX(a.lot_id), a.lot_id, a.investor_id FROM Lots AS a GROUP BY a.investor_id ORDER BY a.lot_id ASC LIMIT 9', 'SELECT MAX(a.lot_id), a.investor_id FROM Lots AS a GROUP BY a.investor_id ORDER BY MAX(a.lot_id) ASC LIMIT 9'], ['SELECT SUM(v.investor_id), v.Investor_details FROM Investors AS v WHERE  v.investor_id >= 6 GROUP BY v.Investor_details ORDER BY v.Investor_details DESC', 'SELECT COUNT(v.investor_id), v.Investor_details FROM Investors AS v WHERE  v.investor_id >= 6 GROUP BY v.Investor_details ORDER BY v.Investor_details DESC'], ['SELECT transaction_id FROM Transactions WHERE investor_id BETWEEN 1 AND 10 AND investor_id NOT IN (SELECT investor_id FROM Lots AS r)', 'SELECT transaction_id FROM Transactions WHERE investor_id BETWEEN 1 AND 10 AND investor_id NOT IN (SELECT investor_id FROM Lots)'], ['SELECT COUNT(DISTINCT e.sales_transaction_id), e.sales_transaction_id, e.sales_details FROM Sales AS e WHERE  e.sales_transaction_id <= 11 GROUP BY e.sales_details ORDER BY e.sales_transaction_id DESC LIMIT 6', 'SELECT COUNT(DISTINCT e.sales_transaction_id), MAX(e.sales_transaction_id) AS sales_transaction_id, e.sales_details FROM Sales AS e WHERE  e.sales_transaction_id <= 11 GROUP BY e.sales_details ORDER BY sales_transaction_id DESC LIMIT 6'], ['SELECT AVG(transaction_id), transaction_type_code FROM Purchases JOIN Investors JOIN Transactions ON Investors.investor_id = Transactions.investor_id AND Purchases.purchase_transaction_id = Transactions.transaction_id WHERE  Transactions.investor_id = 14', 'SELECT AVG(T.transaction_id), T.transaction_type_code FROM Purchases P JOIN Transactions T ON P.purchase_transaction_id = T.transaction_id JOIN Investors I ON T.investor_id = I.investor_id WHERE T.investor_id = 14'], ['SELECT AVG(y.purchase_transaction_id) FROM Purchases AS y WHERE  y.purchase_transaction_id >= 57 AND purchase_details >= (SELECT SUM(purchase_details) FROM Purchases WHERE  purchase_transaction_id <= 73 LIMIT 8) LIMIT 4', 'SELECT MAX(y.purchase_transaction_id) FROM Purchases AS y WHERE  y.purchase_transaction_id >= 57 AND y.purchase_details >= (SELECT MAX(purchase_details) FROM Purchases WHERE  purchase_transaction_id <= 73 LIMIT 8) LIMIT 4'], ['SELECT lot_details, lot_details, lot_details FROM Lots', 'SELECT lot_details FROM Lots;'], ['SELECT Investor_details, share_count FROM Investors JOIN Ref_Transaction_Types JOIN Transactions ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code AND Investors.investor_id = Transactions.investor_id WHERE  Investors.investor_id <= 25 GROUP BY share_count ORDER BY share_count DESC LIMIT 8', 'SELECT Investor_details, SUM(CAST(share_count AS INT)) as share_count FROM Investors JOIN Transactions ON Investors.investor_id = Transactions.investor_id JOIN Ref_Transaction_Types ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code WHERE Investors.investor_id <= 25 GROUP BY Investor_details ORDER BY SUM(CAST(share_count AS INT)) DESC LIMIT 8'], ['SELECT Investor_details FROM Purchases JOIN Investors JOIN Ref_Transaction_Types JOIN Transactions ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code AND Investors.investor_id = Transactions.investor_id AND Purchases.purchase_transaction_id = Transactions.transaction_id WHERE  amount_of_transaction != 97 ORDER BY Investor_details DESC', 'SELECT T4.Investor_details FROM Purchases AS T1 JOIN Transactions AS T2 ON T1.purchase_transaction_id = T2.transaction_id JOIN Investors AS T3 ON T2.investor_id = T3.investor_id JOIN Ref_Transaction_Types AS T4 ON T2.transaction_type_code = T4.transaction_type_code WHERE T2.amount_of_transaction != 97 ORDER BY T3.Investor_details DESC;'], ['SELECT MAX(transaction_id), AVG(Transactions_Lots.lot_id) FROM Lots JOIN Transactions_Lots ON Lots.lot_id = Transactions_Lots.lot_id WHERE  investor_id < 43', 'SELECT MAX(TL.transaction_id), AVG(T.amount_of_transaction) FROM Lots L JOIN Transactions_Lots TL ON L.lot_id = TL.lot_id JOIN Transactions T ON TL.transaction_id = T.transaction_id WHERE L.investor_id < 43'], ['SELECT AVG(investor_id), Investor_details FROM Investors WHERE investor_id BETWEEN 1 AND 10 GROUP BY Investor_details', 'SELECT AVG(investor_id) FROM Investors WHERE investor_id BETWEEN 1 AND 10;'], ['SELECT transaction_id, investor_id, transaction_type_code FROM Transactions GROUP BY transaction_type_code', 'SELECT transaction_id, investor_id, transaction_type_code FROM Transactions GROUP BY transaction_type_code, investor_id;'], ['SELECT COUNT(DISTINCT transaction_type_code) FROM Purchases JOIN Transactions_Lots JOIN Investors JOIN Transactions ON Transactions.transaction_id = Transactions_Lots.transaction_id AND Investors.investor_id = Transactions.investor_id AND Purchases.purchase_transaction_id = Transactions.transaction_id WHERE  Transactions.investor_id > 66 LIMIT 4', 'SELECT COUNT(DISTINCT Ref_Transaction_Types.transaction_type_code) FROM Purchases JOIN Transactions ON Purchases.purchase_transaction_id = Transactions.transaction_id JOIN Transactions_Lots ON Transactions.transaction_id = Transactions_Lots.transaction_id JOIN Lots ON Transactions_Lots.lot_id = Lots.lot_id JOIN Investors ON Lots.investor_id = Investors.investor_id JOIN Ref_Transaction_Types ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code WHERE Investors.investor_id > 66 LIMIT 4'], ['SELECT lot_details FROM Lots WHERE investor_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Transactions_Lots WHERE Lots.lot_id = lot_id) ORDER BY lot_details DESC', 'SELECT lot_details FROM Lots AS L WHERE investor_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Transactions_Lots AS TL WHERE L.lot_id = TL.lot_id) ORDER BY lot_details DESC']], 'protein_institute': [['SELECT e.Floors FROM building JOIN building AS e ON building.building_id = e.building_id WHERE  e.Floors = 34 ORDER BY e.Floors DESC', 'SELECT Floors FROM building WHERE Floors = 34 ORDER BY Floors DESC'], ['SELECT divergence_from_human_lineage, divergence_from_human_lineage, sequence_length FROM protein WHERE  divergence_from_human_lineage = 18 ORDER BY divergence_from_human_lineage ASC', 'SELECT divergence_from_human_lineage, sequence_length FROM protein WHERE divergence_from_human_lineage = 18 ORDER BY divergence_from_human_lineage ASC'], ['SELECT building_id, Location FROM Institution WHERE Enrollment BETWEEN 1 AND 10 OR Founded > (SELECT MAX(Founded) FROM Institution WHERE  Founded = 46)', 'SELECT Institution_id, Location FROM Institution WHERE Enrollment BETWEEN 1 AND 10 OR Founded > (SELECT MAX(Founded) FROM Institution WHERE  Founded = 46)'], ['SELECT COUNT(DISTINCT Institution_id), COUNT(DISTINCT Founded), Location FROM Institution WHERE Primary_Conference <= (SELECT MAX(Primary_Conference) FROM Institution AS c WHERE  c.Founded = 21) GROUP BY Location', 'SELECT COUNT(DISTINCT Institution_id), COUNT(DISTINCT Founded), Location FROM Institution WHERE Founded <= (SELECT MAX(Founded) FROM Institution AS c WHERE  c.Primary_Conference = "21") GROUP BY Location'], ['SELECT g.Enrollment, g.Team FROM Institution AS g WHERE  g.Founded <= 71 LIMIT 4', 'SELECT Enrollment, Team FROM Institution WHERE Founded <= 1971 LIMIT 4'], ['SELECT o.Height_feet, o.Floors FROM building AS o WHERE  o.Height_feet < 69 GROUP BY o.Floors HAVING AVG(o.Height_feet) = 2 ORDER BY o.Floors ASC', 'SELECT o.Height_feet, o.Floors FROM building AS o WHERE  o.Height_feet < 69 GROUP BY o.Floors HAVING AVG(o.Height_feet) = 2 ORDER BY MIN(o.Floors) ASC'], ['SELECT protein.sequence_length, protein.Institution_id FROM protein JOIN protein AS d ON protein.common_name = d.common_name GROUP BY protein.Institution_id LIMIT 3', 'SELECT protein.sequence_length, protein.Institution_id FROM protein GROUP BY protein.sequence_length, protein.Institution_id LIMIT 3'], ['SELECT sequence_length, Institution_id FROM protein WHERE  divergence_from_human_lineage = 27 GROUP BY Institution_id ORDER BY sequence_length DESC', 'SELECT Institution_id, MAX(sequence_length) as max_sequence_length FROM protein WHERE divergence_from_human_lineage = 27 GROUP BY Institution_id ORDER BY max_sequence_length DESC;'], ['SELECT Enrollment, building_id, Location FROM Institution WHERE  Enrollment <= 74 GROUP BY Location LIMIT 8', 'SELECT Enrollment, building_id, Location FROM Institution WHERE  Enrollment <= 74 GROUP BY building_id, Location LIMIT 8'], ['SELECT MAX(Height_feet), Floors, Years_as_tallest FROM building WHERE Height_feet BETWEEN 1 AND 10 AND Floors NOT IN (SELECT Floors FROM building AS c WHERE  c.Floors > 47 LIMIT 6) GROUP BY Years_as_tallest LIMIT 7', 'SELECT MAX(Height_feet), Floors, GROUP_CONCAT(Years_as_tallest) AS Years_as_tallest FROM building WHERE Height_feet BETWEEN 1 AND 10 AND Floors NOT IN (SELECT Floors FROM building AS c WHERE  c.Floors > 47 LIMIT 6) GROUP BY Floors LIMIT 7'], ['SELECT Institution.Founded, Institution.Location FROM Institution AS j JOIN Institution ON Institution.Institution_id = j.Institution_id WHERE  Institution.Founded != 93 ORDER BY Institution.Founded DESC', 'SELECT j.Founded, j.Location FROM Institution AS j JOIN Institution AS i ON i.Institution_id = j.Institution_id WHERE  i.Founded != 93 ORDER BY i.Founded DESC'], ['SELECT o.Enrollment, o.Enrollment FROM Institution AS o WHERE  o.Founded != 45 LIMIT 3', 'SELECT Enrollment FROM Institution WHERE Founded != 1950 ORDER BY Enrollment DESC LIMIT 3;'], ['SELECT divergence_from_human_lineage, sequence_length FROM protein WHERE divergence_from_human_lineage BETWEEN 1 AND 10 OR  sequence_length = 78 GROUP BY sequence_length HAVING COUNT(divergence_from_human_lineage) < 90', 'SELECT sequence_length, MAX(divergence_from_human_lineage) FROM protein WHERE divergence_from_human_lineage BETWEEN 1 AND 10 OR sequence_length = 78 GROUP BY sequence_length HAVING MAX(divergence_from_human_lineage) < 90'], ['SELECT sequence_length, Founded FROM protein JOIN building JOIN Institution ON Institution.building_id = building.building_id AND protein.Institution_id = Institution.Institution_id WHERE  Floors < 98 ORDER BY sequence_length ASC', 'SELECT sequence_length, Institution.Founded FROM protein JOIN Institution ON protein.Institution_id = Institution.Institution_id JOIN building ON Institution.building_id = building.building_id WHERE Floors < 98 ORDER BY sequence_length ASC'], ['SELECT protein.Institution_id, l.sequence_identity_to_human_protein FROM protein JOIN protein AS l ON protein.common_name = l.common_name WHERE  l.divergence_from_human_lineage >= 63 GROUP BY l.sequence_identity_to_human_protein HAVING COUNT(l.divergence_from_human_lineage) < 59', 'SELECT protein.Institution_id, l.sequence_identity_to_human_protein FROM protein AS l JOIN protein AS r ON l.common_name = r.common_name WHERE  l.divergence_from_human_lineage >= 63 GROUP BY l.sequence_identity_to_human_protein HAVING COUNT(l.divergence_from_human_lineage) < 59'], ['SELECT Enrollment, Founded FROM protein JOIN building JOIN Institution ON Institution.building_id = building.building_id AND protein.Institution_id = Institution.Institution_id', 'SELECT Enrollment, Founded FROM protein JOIN Institution ON protein.Institution_id = Institution.Institution_id JOIN building ON Institution.building_id = building.building_id;'], ['SELECT COUNT(DISTINCT r.Years_as_tallest), building.Floors FROM building AS r JOIN building ON building.building_id = r.building_id WHERE Name NOT IN (SELECT Name FROM building AS b WHERE  b.Height_feet = 27) GROUP BY building.Floors ORDER BY building.Floors ASC', 'SELECT COUNT(DISTINCT r.Years_as_tallest), r.Floors FROM building AS r JOIN building AS b2 ON r.building_id = b2.building_id WHERE r.Name NOT IN (SELECT Name FROM building AS b WHERE  b.Height_feet = 27) GROUP BY r.Floors ORDER BY r.Floors ASC'], ['SELECT COUNT(DISTINCT Team), Founded, Location FROM Institution WHERE  Enrollment >= 51 GROUP BY Location HAVING AVG(Enrollment) >= 89 LIMIT 4', 'SELECT COUNT(DISTINCT Team), MIN(Founded) AS Founded, Location FROM Institution WHERE Enrollment >= 51 GROUP BY Location HAVING AVG(Enrollment) >= 89 LIMIT 4']], 'device': [['SELECT MAX(Shop_ID), Open_Date FROM shop WHERE  Shop_ID != 67 ORDER BY Open_Date ASC', 'SELECT MAX(SHOP_ID), Open_Date FROM shop WHERE SHOP_ID != 67 ORDER BY Open_Date ASC'], ['SELECT i.Quantity, i.Quantity FROM stock AS i WHERE  i.Quantity > 3 LIMIT 9', 'SELECT i.Quantity FROM stock AS i WHERE i.Quantity > 3 LIMIT 9'], ['SELECT MIN(stock.Shop_ID), n.Device_ID FROM stock AS n JOIN stock ON stock.Shop_ID = n.Shop_ID WHERE Shop_ID IN (SELECT Shop_ID FROM shop WHERE  Shop_ID > 16 LIMIT 2) ORDER BY n.Device_ID ASC', 'SELECT n.Shop_ID, n.Device_ID FROM stock AS n WHERE n.Shop_ID IN (SELECT Shop_ID FROM shop WHERE Shop_ID > 16 LIMIT 2) ORDER BY n.Device_ID ASC'], ['SELECT Device_ID FROM device WHERE  Device_ID > 32 ORDER BY Device_ID DESC', 'SELECT Device_ID FROM device WHERE Device_ID > 32 ORDER BY Device_ID DESC'], ['SELECT Shop_ID FROM stock WHERE  Quantity <= 0', 'SELECT Shop_ID FROM stock WHERE Quantity <= 0'], ['SELECT MAX(stock.Device_ID), Quantity, device.Device_ID FROM device JOIN shop JOIN stock ON stock.Device_ID = device.Device_ID AND shop.Shop_ID = stock.Shop_ID WHERE Quantity <= (SELECT AVG(Quantity) FROM stock WHERE Device_ID BETWEEN 1 AND 10) ORDER BY Quantity ASC', 'SELECT MAX(T2.Device_ID) AS Device_ID, T3.Quantity FROM device AS T1 INNER JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID INNER JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T2.Quantity <= (SELECT AVG(T2.Quantity) FROM stock AS T2 INNER JOIN device AS T1 ON T1.Device_ID = T2.Device_ID WHERE T1.Device_ID BETWEEN 1 AND 10) GROUP BY T3.Quantity ORDER BY T3.Quantity ASC'], ['SELECT MAX(Device_ID), COUNT(DISTINCT Device_ID), COUNT(DISTINCT Software_Platform), Applications FROM device WHERE  Device_ID < 76 GROUP BY Applications', 'SELECT Applications, MAX(Device_ID) as max_device_id, COUNT(DISTINCT Device_ID) as distinct_devices, COUNT(DISTINCT Software_Platform) as distinct_software FROM device WHERE Device_ID < 76 GROUP BY Applications;'], ['SELECT COUNT(DISTINCT Software_Platform), Carrier FROM device WHERE  Device_ID >= 83 ORDER BY Carrier DESC LIMIT 8', 'SELECT COUNT(DISTINCT Software_Platform) FROM device WHERE Device_ID >= 83']], 'department_store': [['SELECT Staff.staff_id, staff_name FROM Staff_Department_Assignments JOIN Staff ON Staff_Department_Assignments.staff_id = Staff.staff_id WHERE Staff.staff_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Staff_Department_Assignments AS v WHERE  v.department_id >= 27 AND Staff.staff_id = v.staff_id) GROUP BY staff_name ORDER BY Staff.staff_id DESC', 'SELECT Staff.staff_id, staff_name FROM Staff_Department_Assignments JOIN Staff ON Staff_Department_Assignments.staff_id = Staff.staff_id WHERE Staff.staff_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Staff_Department_Assignments AS v WHERE  v.staff_id = Staff.staff_id AND v.department_id >= 27) GROUP BY Staff.staff_name ORDER BY Staff.staff_id DESC'], ['SELECT COUNT(department_id), department_id FROM Departments WHERE department_name >= (SELECT AVG(department_name) FROM Departments AS y) LIMIT 5', 'SELECT COUNT(department_id), department_id FROM Departments GROUP BY department_id ORDER BY department_id DESC LIMIT 5'], ['SELECT MIN(Department_Stores.dept_store_chain_id), AVG(dept_store_id), COUNT(DISTINCT dept_store_id), dept_store_chain_name FROM Department_Stores JOIN Department_Store_Chain ON Department_Stores.dept_store_chain_id = Department_Store_Chain.dept_store_chain_id WHERE  Department_Stores.dept_store_chain_id = 73 GROUP BY dept_store_chain_name', 'SELECT MIN(Department_Store_Chain.dept_store_chain_id), AVG(Department_Stores.dept_store_id), COUNT(DISTINCT Department_Stores.dept_store_id), Department_Store_Chain.dept_store_chain_name FROM Department_Stores JOIN Department_Store_Chain ON Department_Stores.dept_store_chain_id = Department_Store_Chain.dept_store_chain_id WHERE Department_Stores.dept_store_chain_id = 73 GROUP BY Department_Store_Chain.dept_store_chain_name'], ['SELECT COUNT(DISTINCT n.dept_store_chain_id), n.store_email FROM Department_Stores AS n', 'SELECT COUNT(DISTINCT n.dept_store_chain_id), n.store_email FROM Department_Stores AS n GROUP BY n.store_email;'], ['SELECT COUNT(DISTINCT u.order_item_id), u.order_id FROM Order_Items AS u WHERE u.product_id BETWEEN 1 AND 10 AND  u.product_id = 18 LIMIT 9', 'SELECT COUNT(DISTINCT u.order_item_id), u.order_id FROM Order_Items AS u WHERE u.product_id BETWEEN 1 AND 18 LIMIT 9'], ['SELECT MAX(customer_id), customer_id, customer_email FROM Customers WHERE  customer_id = 80 OR EXISTS (SELECT * FROM Customer_Addresses WHERE Customers.customer_id = customer_id) ORDER BY customer_id DESC', 'SELECT MAX(customer_id), customer_id, customer_email FROM Customers WHERE customer_id = 80 OR EXISTS (SELECT * FROM Customer_Addresses WHERE Customers.customer_id = Customer_Addresses.customer_id) ORDER BY customer_id DESC;'], ['SELECT COUNT(DISTINCT Departments.department_name) FROM Departments AS h JOIN Departments ON Departments.department_id = h.department_id WHERE Departments.department_id BETWEEN 1 AND 10', 'SELECT COUNT(DISTINCT department_name) FROM Departments WHERE department_id BETWEEN 1 AND 10;'], ['SELECT b.dept_store_id, b.store_phone FROM Department_Stores AS b WHERE  b.dept_store_id > 19 GROUP BY b.store_phone', 'SELECT b.dept_store_id, b.store_phone FROM Department_Stores AS b WHERE  b.dept_store_id > 19 GROUP BY b.dept_store_id'], ['SELECT MIN(Products.product_id), product_name FROM Product_Suppliers JOIN Products JOIN Order_Items ON Order_Items.product_id = Products.product_id AND Products.product_id = Product_Suppliers.product_id GROUP BY product_name LIMIT 6', 'SELECT MIN(Products.product_id), Products.product_name FROM Product_Suppliers INNER JOIN Products ON Product_Suppliers.product_id = Products.product_id INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_name LIMIT 6'], ['SELECT COUNT(DISTINCT staff_gender), COUNT(DISTINCT staff_id), staff_id, staff_name FROM Staff WHERE  staff_id >= 69 GROUP BY staff_name HAVING AVG(staff_id) <= 67 ORDER BY staff_name DESC', 'SELECT COUNT(DISTINCT staff_gender), COUNT(DISTINCT staff_id), staff_id, staff_name FROM Staff WHERE staff_id >= 69 GROUP BY staff_name, staff_id ORDER BY staff_name DESC'], ['SELECT customer_id, customer_name FROM Customers WHERE customer_id BETWEEN 1 AND 10 AND  customer_id = 13 GROUP BY customer_name ORDER BY customer_name ASC', 'SELECT customer_id, customer_name FROM Customers WHERE customer_id BETWEEN 1 AND 10 ORDER BY customer_name ASC']], 'insurance_and_eClaims': [['SELECT Document_Type_Code, Document_Type_Code FROM Claims_Documents ORDER BY Document_Type_Code DESC', 'SELECT Document_Type_Code FROM Claims_Documents ORDER BY Document_Type_Code DESC;'], ['SELECT Claims_Processing.Claim_Outcome_Code, h.Claim_Outcome_Code FROM Claims_Processing JOIN Claims_Processing AS h ON Claims_Processing.Claim_Processing_ID = h.Claim_Processing_ID WHERE  h.Claim_Processing_ID != 21 LIMIT 1', 'SELECT Claims_Processing.Claim_Outcome_Code, h.Claim_Outcome_Code FROM Claims_Processing JOIN Claims_Processing AS h ON Claims_Processing.Claim_ID = h.Claim_ID WHERE  h.Claim_ID != 21 LIMIT 1'], ['SELECT COUNT(Staff_ID), Staff_ID FROM Staff WHERE  Staff_ID = 76 LIMIT 8', 'SELECT COUNT(Staff_ID) FROM Staff WHERE Staff_ID = 76 LIMIT 1'], ['SELECT r.Customer_Details, r.Customer_Details FROM Customers AS r WHERE  r.Customer_ID > 51 GROUP BY r.Customer_Details HAVING SUM(r.Customer_ID) = 30', 'SELECT DISTINCT r.Customer_Details FROM Customers AS r WHERE r.Customer_ID > 51'], ['SELECT SUM(x.Customer_ID), AVG(x.Customer_ID), MAX(x.Customer_ID), x.Customer_Details FROM Customers AS x WHERE  x.Customer_ID >= 62 GROUP BY x.Customer_Details', 'SELECT SUM(x.Customer_ID) AS sum_customer_id, AVG(x.Customer_ID) AS avg_customer_id, MAX(x.Customer_ID) AS max_customer_id FROM Customers AS x WHERE x.Customer_ID >= 62'], ['SELECT Claims_Processing.Claim_Outcome_Code, Claims_Processing.Claim_Outcome_Code FROM Claims_Processing JOIN Claims_Processing AS q ON Claims_Processing.Claim_Processing_ID = q.Claim_Processing_ID WHERE Claims_Processing.Claim_ID BETWEEN 1 AND 10 OR  q.Staff_ID = 63 GROUP BY Claims_Processing.Claim_Outcome_Code', 'SELECT Claims_Processing.Claim_Outcome_Code FROM Claims_Processing JOIN Claims_Processing AS q ON Claims_Processing.Claim_Processing_ID = q.Claim_Processing_ID WHERE Claims_Processing.Claim_ID BETWEEN 1 AND 10 OR q.Staff_ID = 63 GROUP BY Claims_Processing.Claim_Outcome_Code'], ['SELECT MIN(Customer_ID), Customer_ID FROM Customers WHERE  Customer_ID > 67 OR Customer_Details IN (SELECT Customer_Details FROM Customers WHERE  Customer_ID >= 35)', 'SELECT MIN(Customer_ID), Customer_ID FROM Customers WHERE Customer_ID > 67 OR Customer_ID >= 35'], ['SELECT MIN(Claim_Headers.Policy_ID) FROM Claim_Headers JOIN Claim_Headers AS n ON Claim_Headers.Claim_Header_ID = n.Claim_Header_ID LIMIT 4', 'SELECT MIN(Claim_Headers.Policy_ID) FROM Claim_Headers JOIN Policies AS p ON Claim_Headers.Policy_ID = p.Policy_ID LIMIT 1'], ['SELECT Customer_ID, Customer_Details, Customer_Details FROM Customers WHERE  Customer_ID <= 18 GROUP BY Customer_Details HAVING MIN(Customer_ID) <= 18 ORDER BY Customer_Details DESC', 'SELECT Customer_ID, Customer_Details FROM Customers WHERE Customer_ID <= 18 GROUP BY Customer_Details HAVING MIN(Customer_ID) <= 18 ORDER BY Customer_Details DESC'], ['SELECT MAX(Policy_ID), Policy_ID FROM Policies WHERE Policy_ID BETWEEN 1 AND 10 AND  Customer_ID > 63 ORDER BY Policy_ID ASC LIMIT 10', 'SELECT Policy_ID FROM Policies WHERE Policy_ID BETWEEN 1 AND 10 AND Customer_ID > 63 ORDER BY Policy_ID ASC LIMIT 10'], ['SELECT Staff_ID, Claim_ID, Claim_ID FROM Claims_Documents JOIN Staff ON Claims_Documents.Created_by_Staff_ID = Staff.Staff_ID WHERE Created_Date BETWEEN 1 AND 10 ORDER BY Staff_ID ASC LIMIT 1', 'SELECT Staff_ID, Claim_ID FROM Claims_Documents JOIN Staff ON Claims_Documents.Created_by_Staff_ID = Staff.Staff_ID WHERE Created_Date BETWEEN 1 AND 10 ORDER BY Staff_ID ASC LIMIT 1']], 'manufacturer': [['SELECT h.Num_of_Component, h.Name, h.Name FROM furniture AS h WHERE h.Num_of_Component BETWEEN 1 AND 10 OR Market_Rate = (SELECT AVG(Market_Rate) FROM furniture AS l WHERE l.Furniture_ID BETWEEN 1 AND 10 LIMIT 8) ORDER BY h.Name ASC LIMIT 4', 'SELECT Num_of_Component, Name FROM furniture AS h WHERE Num_of_Component BETWEEN 1 AND 10 OR Market_Rate = (SELECT AVG(Market_Rate) FROM furniture AS l) ORDER BY Name ASC LIMIT 4'], ['SELECT Name, Name FROM manufacturer WHERE  Num_of_Factories >= 87 ORDER BY Name DESC LIMIT 10', 'SELECT Name FROM manufacturer WHERE Num_of_Factories >= 87 ORDER BY Name DESC LIMIT 10'], ['SELECT SUM(j.Num_of_Component), j.Name FROM furniture AS j LIMIT 2', 'SELECT j.Name, SUM(j.Num_of_Component) FROM furniture AS j GROUP BY j.Name LIMIT 2;'], ['SELECT o.Name, o.Name FROM furniture AS o WHERE  o.Furniture_ID != 97 OR Name IN (SELECT Name FROM furniture AS e WHERE  e.Market_Rate <= 13 LIMIT 7)', 'SELECT o.Name FROM furniture AS o WHERE o.Furniture_ID != 97 AND o.Name IN (SELECT e.Name FROM furniture AS e WHERE e.Market_Rate <= 13 LIMIT 7)'], ['SELECT y.Open_Year, manufacturer.Name FROM manufacturer JOIN manufacturer AS y ON manufacturer.Manufacturer_ID = y.Manufacturer_ID WHERE  y.Manufacturer_ID != 93 GROUP BY manufacturer.Name HAVING AVG(y.Num_of_Shops) <= 100 LIMIT 3', 'SELECT Open_Year, Name FROM manufacturer WHERE Manufacturer_ID != 93 GROUP BY Name HAVING AVG(Num_of_Shops) <= 100 LIMIT 3'], ['SELECT SUM(Manufacturer_ID), Num_of_Factories, Manufacturer_ID FROM manufacturer WHERE Num_of_Shops BETWEEN 1 AND 10 AND Manufacturer_ID IN (SELECT Manufacturer_ID FROM manufacturer AS e) ORDER BY Num_of_Factories ASC LIMIT 8', 'SELECT Manufacturer_ID, Num_of_Factories FROM manufacturer WHERE Num_of_Shops BETWEEN 1 AND 10 ORDER BY Num_of_Factories ASC LIMIT 8']], 'browser_web': [['SELECT SUM(id), COUNT(DISTINCT Operating_system), Client FROM Web_client_accelerator WHERE  id >= 60 GROUP BY Client', 'SELECT Client, SUM(id), COUNT(DISTINCT Operating_system) FROM Web_client_accelerator WHERE id >= 60 GROUP BY Client;'], ['SELECT Connection, Client FROM accelerator_compatible_browser JOIN browser JOIN Web_client_accelerator ON accelerator_compatible_browser.browser_id = browser.id AND Web_client_accelerator.id = accelerator_compatible_browser.accelerator_id WHERE  accelerator_id = 17', 'SELECT T1.Connection, T1.Client FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T3.id = T2.browser_id WHERE T2.accelerator_id = 17;'], ['SELECT e.market_share, e.market_share, e.name FROM browser AS e GROUP BY e.name', 'SELECT e.market_share, e.name FROM browser AS e GROUP BY e.name, e.market_share'], ['SELECT MAX(market_share), id FROM browser WHERE  market_share = 40 ORDER BY id ASC', 'SELECT market_share, id FROM browser WHERE market_share = 40 ORDER BY id ASC;'], ['SELECT MAX(id), Client FROM Web_client_accelerator WHERE EXISTS (SELECT * FROM accelerator_compatible_browser WHERE Web_client_accelerator.id = accelerator_id) ORDER BY Client ASC', 'SELECT MAX(id), Client FROM Web_client_accelerator WHERE EXISTS (SELECT * FROM accelerator_compatible_browser WHERE Web_client_accelerator.id = accelerator_compatible_browser.accelerator_id) ORDER BY Web_client_accelerator.Client ASC;'], ['SELECT x.name FROM browser AS x WHERE  x.market_share = 80 ORDER BY x.name ASC', 'SELECT x.name FROM browser AS x WHERE x.market_share = 80.0 ORDER BY x.name ASC'], ['SELECT Web_client_accelerator.id FROM Web_client_accelerator AS u JOIN Web_client_accelerator ON Web_client_accelerator.id = u.id WHERE  Web_client_accelerator.id = 95 AND id NOT IN (SELECT id FROM browser AS f WHERE f.id BETWEEN 1 AND 10) LIMIT 4', 'SELECT w.id FROM Web_client_accelerator AS w WHERE w.id IN (SELECT a.accelerator_id FROM accelerator_compatible_browser AS a WHERE a.browser_id NOT IN (SELECT id FROM browser WHERE id BETWEEN 1 AND 10)) AND w.id = 95 LIMIT 1'], ['SELECT COUNT(DISTINCT accelerator_compatible_browser.accelerator_id), o.compatible_since_year FROM accelerator_compatible_browser AS o JOIN accelerator_compatible_browser ON accelerator_compatible_browser.accelerator_id = o.accelerator_id WHERE  accelerator_compatible_browser.compatible_since_year = 28 GROUP BY o.compatible_since_year HAVING MIN(accelerator_compatible_browser.accelerator_id) >= 48 ORDER BY o.compatible_since_year DESC LIMIT 5', 'SELECT COUNT(DISTINCT t1.accelerator_id), t1.compatible_since_year FROM accelerator_compatible_browser AS t1 JOIN browser AS t2 ON t1.browser_id = t2.id WHERE t1.compatible_since_year = 28 GROUP BY t1.compatible_since_year HAVING MIN(t1.accelerator_id) >= 48 ORDER BY t1.compatible_since_year DESC LIMIT 5'], ['SELECT name, name FROM browser GROUP BY name', 'SELECT name FROM browser GROUP BY name;'], ['SELECT COUNT(DISTINCT name), name, name FROM browser WHERE market_share BETWEEN 1 AND 10 AND  market_share >= 47 ORDER BY name ASC LIMIT 6', 'SELECT COUNT(DISTINCT name), name FROM browser WHERE market_share BETWEEN 1 AND 10 ORDER BY name ASC LIMIT 6']], 'orchestra': [['SELECT COUNT(DISTINCT Year_of_Work), Conductor_ID FROM conductor WHERE  Conductor_ID < 66 LIMIT 8', 'SELECT Conductor_ID, COUNT(DISTINCT Year_of_Work) FROM conductor WHERE Conductor_ID < 66 GROUP BY Conductor_ID LIMIT 8;'], ['SELECT MIN(Year_of_Work), Nationality FROM conductor WHERE  Age = 10 GROUP BY Nationality HAVING COUNT(Year_of_Work) < 84', 'SELECT MIN(Year_of_Work), Nationality FROM conductor WHERE Age = 10 GROUP BY Nationality HAVING COUNT(Year_of_Work) < 84'], ['SELECT COUNT(DISTINCT Weekly_rank) FROM performance WHERE Performance_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM show WHERE  Attendance > 91 AND performance.Performance_ID = Performance_ID)', 'SELECT COUNT(DISTINCT Weekly_rank) FROM performance WHERE Performance_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM show WHERE Attendance > 91 AND performance.Performance_ID = show.Performance_ID)'], ['SELECT j.Name, j.Name, j.Year_of_Work FROM conductor AS j WHERE  j.Conductor_ID = 58 GROUP BY j.Year_of_Work HAVING MIN(j.Age) >= 44 ORDER BY j.Year_of_Work DESC LIMIT 10', 'SELECT j.Name, j.Year_of_Work FROM conductor AS j WHERE j.Conductor_ID = 58 GROUP BY j.Year_of_Work HAVING MIN(j.Age) >= 44 ORDER BY j.Year_of_Work DESC LIMIT 10'], ['SELECT w.Age FROM conductor AS w WHERE  w.Conductor_ID > 95 GROUP BY w.Age ORDER BY w.Age ASC', 'SELECT Age FROM conductor WHERE Conductor_ID > 95 ORDER BY Age ASC'], ['SELECT Record_Company FROM performance JOIN show JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID AND show.Performance_ID = performance.Performance_ID WHERE  Year_of_Founded <= 95 ORDER BY Record_Company ASC', 'SELECT Record_Company FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE Year_of_Founded <= 95 ORDER BY Record_Company ASC;'], ['SELECT Result, Result FROM show WHERE  Attendance > 38', 'SELECT Result FROM show WHERE Attendance > 38;']], 'machine_repair': [['SELECT d.Team, d.Team FROM technician AS d ORDER BY d.Team DESC', 'SELECT d.Team FROM technician AS d ORDER BY d.Team DESC;'], ['SELECT name, name FROM repair WHERE  repair_ID >= 8', 'SELECT name FROM repair WHERE repair_ID >= 8;'], ['SELECT COUNT(repair_assignment.technician_id), Machine_ID FROM technician JOIN repair_assignment ON repair_assignment.technician_id = technician.technician_id WHERE  technician.technician_id != 89 GROUP BY Machine_ID', 'SELECT COUNT(DISTINCT T1.technician_id), T1.Machine_ID FROM repair_assignment AS T1 INNER JOIN technician AS T2 ON T1.technician_id = T2.technician_id WHERE T2.technician_id != 89 GROUP BY T1.Machine_ID'], ['SELECT COUNT(s.repair_ID), s.repair_ID FROM repair AS s WHERE  s.repair_ID < 95 LIMIT 4', 'SELECT COUNT(s.repair_ID), s.repair_ID FROM repair AS s WHERE  s.repair_ID < 95 GROUP BY s.repair_ID LIMIT 4'], ['SELECT machine.Machine_series, a.Making_Year FROM machine JOIN machine AS a ON machine.Machine_ID = a.Machine_ID WHERE a.quality_rank BETWEEN 1 AND 10 AND Machine_series <= (SELECT SUM(Machine_series) FROM machine AS n WHERE n.quality_rank BETWEEN 1 AND 10 LIMIT 7) GROUP BY a.Making_Year', 'SELECT machine.Machine_series, a.Making_Year FROM machine JOIN machine AS a ON machine.Machine_ID = a.Machine_ID WHERE a.quality_rank BETWEEN 1 AND 10 AND machine.Machine_series IN (SELECT Machine_series FROM machine AS n WHERE n.quality_rank BETWEEN 1 AND 10 GROUP BY n.Machine_series ORDER BY COUNT(n.Machine_series) DESC LIMIT 7) GROUP BY a.Making_Year'], ['SELECT value_points, Team FROM machine WHERE  value_points < 63 GROUP BY Team', 'SELECT SUM(value_points) AS total_value_points, Team FROM machine WHERE value_points < 63 GROUP BY Team;'], ['SELECT COUNT(technician.Age), technician.Team FROM technician JOIN technician AS s ON technician.technician_id = s.technician_id WHERE  technician.Age = 18 ORDER BY technician.Team ASC LIMIT 5', 'SELECT COUNT(technician.Age), technician.Team FROM technician WHERE technician.Age = 18 GROUP BY technician.Team ORDER BY technician.Team ASC LIMIT 5;}\n\nNote: The original query seems to be trying to count the number of technicians of a certain age and group them by team. Since the join operation was incorrect, it has been removed. The COUNT aggregation function now correctly counts the number of technicians for each team, and the results are grouped by team and ordered as requested.'], ['SELECT technician_id FROM repair JOIN repair_assignment ON repair.repair_ID = repair_assignment.repair_ID WHERE Notes >= (SELECT MAX(Notes) FROM repair AS z WHERE  z.repair_ID > 95) ORDER BY technician_id DESC LIMIT 2', 'SELECT technician_id FROM repair JOIN repair_assignment ON repair.repair_ID = repair_assignment.repair_ID WHERE LENGTH(Notes) >= (SELECT MAX(LENGTH(Notes)) FROM repair AS z WHERE  z.repair_ID > 95) ORDER BY technician_id DESC LIMIT 2'], ['SELECT Starting_Year, Name FROM technician JOIN repair JOIN repair_assignment ON repair_assignment.technician_id = technician.technician_id AND repair.repair_ID = repair_assignment.repair_ID WHERE  repair.repair_ID < 18 GROUP BY Starting_Year', 'SELECT T1.Starting_Year, T1.Name FROM technician AS T1 INNER JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id INNER JOIN repair AS T3 ON T2.repair_ID = T3.repair_ID WHERE T3.repair_ID < 18 GROUP BY T1.Starting_Year, T1.Name;'], ['SELECT technician_id, Launch_Date, Class, repair_assignment.Machine_ID FROM repair JOIN repair_assignment JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID AND repair.repair_ID = repair_assignment.repair_ID GROUP BY repair_assignment.Machine_ID', 'SELECT T1.technician_id, T1.Launch_Date, T3.Class, T3.Machine_ID FROM repair AS T1 INNER JOIN repair_assignment AS T2 ON T1.repair_ID = T2.repair_ID INNER JOIN machine AS T3 ON T3.Machine_ID = T2.Machine_ID GROUP BY T2.Machine_ID, T1.technician_id, T1.Launch_Date, T3.Class'], ['SELECT AVG(r.technician_id), r.repair_ID FROM repair_assignment AS r WHERE  r.technician_id > 16', 'SELECT AVG(r.technician_id), r.repair_ID FROM repair_assignment AS r WHERE  r.technician_id > 16 GROUP BY r.repair_ID;'], ['SELECT f.Team, f.Team FROM technician AS f WHERE  f.technician_id < 29', 'SELECT f.Team FROM technician AS f WHERE f.technician_id < 29'], ['SELECT j.Team, j.Team, j.Starting_Year FROM technician AS j WHERE technician_id IN (SELECT technician_id FROM technician AS j WHERE  j.technician_id != 30 LIMIT 1) GROUP BY j.Starting_Year HAVING MIN(j.technician_id) <= 23 ORDER BY j.Starting_Year DESC', 'SELECT DISTINCT j.Team, j.Starting_Year FROM technician AS j WHERE j.technician_id != 30 AND j.technician_id <= 23 ORDER BY j.Starting_Year DESC'], ['SELECT COUNT(repair_ID), Launch_Date, name FROM repair WHERE repair_ID BETWEEN 1 AND 10 GROUP BY name HAVING MIN(repair_ID) > 90', 'SELECT COUNT(r.repair_ID), r.Launch_Date, r.name FROM repair r INNER JOIN repair_assignment ra ON r.repair_ID = ra.repair_ID WHERE r.repair_ID BETWEEN 1 AND 10 GROUP BY r.name, r.Launch_Date HAVING MIN(r.repair_ID) > 90']], 'book_1': [['SELECT amount FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder WHERE IdOrder NOT IN (SELECT IdOrder FROM Books_Order) ORDER BY amount DESC LIMIT 3', 'SELECT amount FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder WHERE Books_Order.IdOrder NOT IN (SELECT IdOrder FROM Orders WHERE IdOrder NOT IN (SELECT IdOrder FROM Books_Order)) ORDER BY amount DESC LIMIT 3'], ['SELECT COUNT(DISTINCT amount) FROM Books_Order JOIN Book JOIN Orders ON Book.ISBN = Books_Order.ISBN AND Books_Order.IdOrder = Orders.IdOrder LIMIT 10', 'SELECT COUNT(DISTINCT T1.amount) FROM Books_Order AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN JOIN Orders AS T3 ON T1.IdOrder = T3.IdOrder LIMIT 10'], ['SELECT MAX(j.SalePrice), j.Title FROM Book AS j WHERE PurchasePrice NOT IN (SELECT PurchasePrice FROM Book AS w LIMIT 6) ORDER BY j.Title DESC LIMIT 9', 'SELECT MAX(j.SalePrice), j.Title FROM Book AS j WHERE j.PurchasePrice NOT IN (SELECT w.PurchasePrice FROM Book AS w ORDER BY w.PurchasePrice LIMIT 6) ORDER BY j.Title DESC LIMIT 9'], ['SELECT e.Author, Author_Book.Author FROM Author_Book AS e JOIN Author_Book ON Author_Book.ISBN = e.ISBN WHERE  Author_Book.Author <= 37', 'SELECT DISTINCT T2.Name FROM Author_Book AS T1 INNER JOIN Author AS T2 ON T2.idAuthor = T1.Author WHERE T2.idAuthor <= 37'], ['SELECT COUNT(DISTINCT Book.SalePrice) FROM Book AS e JOIN Book ON Book.ISBN = e.ISBN WHERE e.PurchasePrice BETWEEN 1 AND 10 OR  Book.PurchasePrice != 17', 'SELECT COUNT(DISTINCT B1.SalePrice) FROM Book AS B1 JOIN Book AS B2 ON B2.ISBN = B1.ISBN WHERE (B1.PurchasePrice BETWEEN 1 AND 10) OR B2.PurchasePrice != 17;'], ['SELECT k.IdOrder FROM Books_Order AS k WHERE  k.amount < 37 OR amount NOT IN (SELECT amount FROM Books_Order) ORDER BY k.IdOrder DESC', 'SELECT k.IdOrder FROM Books_Order AS k WHERE  k.amount < 37 OR k.amount NOT IN (SELECT amount FROM Books_Order) ORDER BY k.IdOrder DESC'], ['SELECT MAX(amount), COUNT(DISTINCT IdOrder) FROM Books_Order WHERE  amount = 70', 'SELECT MAX(amount), COUNT(DISTINCT IdOrder) FROM Books_Order WHERE amount = 70']], 'soccer_2': [['SELECT pID FROM Tryout WHERE  pID != 96 ORDER BY pID DESC', 'SELECT pID FROM Tryout WHERE  pID != 96 ORDER BY pID DESC'], ['SELECT cName FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE  HS > 33 OR EXISTS (SELECT * FROM Player AS z WHERE  z.pID <= 64 AND Tryout.pID = z.pID) ORDER BY cName ASC LIMIT 5', 'SELECT T2.cName FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 33 OR EXISTS (SELECT * FROM Player AS z WHERE z.pID <= 64 AND T2.pID = z.pID) ORDER BY T2.cName ASC LIMIT 5;'], ['SELECT pID, yCard, HS FROM Player WHERE HS BETWEEN 1 AND 10 OR  HS >= 85 GROUP BY HS', 'SELECT pID, yCard, HS FROM Player WHERE HS BETWEEN 1 AND 10 OR HS >= 85;'], ['SELECT pPos, decision FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE  Player.pID = 36 AND decision IN (SELECT decision FROM Tryout WHERE  pID >= 16) ORDER BY pPos DESC LIMIT 7', 'SELECT T2.pPos, T2.decision FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID WHERE  T2.pID = 36 AND T2.decision IN (SELECT decision FROM Tryout WHERE  pID >= 16) ORDER BY T2.pPos DESC LIMIT 7'], ['SELECT College.state, College.cName FROM College AS g JOIN College ON College.cName = g.cName WHERE  College.enr > 70 ORDER BY College.cName DESC', 'SELECT state, cName FROM College WHERE enr > 70 ORDER BY cName DESC;'], ['SELECT AVG(pID), pName, yCard FROM Player WHERE pID BETWEEN 1 AND 10 ORDER BY pName ASC', 'SELECT AVG(pID) FROM (SELECT pID FROM Player WHERE pID BETWEEN 1 AND 10) AS subquery;'], ['SELECT COUNT(DISTINCT College.cName) FROM Player JOIN Tryout JOIN College ON Tryout.cName = College.cName AND Player.pID = Tryout.pID WHERE  Player.pID <= 77 LIMIT 6', 'SELECT COUNT(DISTINCT College.cName) FROM Player JOIN Tryout JOIN College ON Tryout.cName = College.cName AND Player.pID = Tryout.pID WHERE Player.pID <= 77 LIMIT 6'], ['SELECT Tryout.pID, yCard, HS FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE  HS != 49 GROUP BY HS', 'SELECT Tryout.pID, yCard, HS FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE HS != 49 GROUP BY Tryout.pID, yCard, HS;'], ['SELECT enr, state FROM Player JOIN Tryout JOIN College ON Tryout.cName = College.cName AND Player.pID = Tryout.pID WHERE  HS > 21 ORDER BY state DESC LIMIT 7', 'SELECT T2.enr, T2.state FROM Player AS T1 JOIN Tryout AS T3 ON T1.pID = T3.pID JOIN College AS T2 ON T3.cName = T2.cName WHERE T1.HS > 21 ORDER BY T2.state DESC LIMIT 7'], ['SELECT Player.pID, pName FROM Player JOIN Tryout ON Player.pID = Tryout.pID WHERE  HS <= 16 GROUP BY pName HAVING SUM(Player.pID) = 100 LIMIT 5', 'SELECT T.pID, P.pName FROM Tryout T JOIN Player P ON T.pID = P.pID WHERE P.HS <= 16 GROUP BY P.pName HAVING COUNT(T.pID) = 100 ORDER BY P.pName LIMIT 5'], ['SELECT COUNT(DISTINCT decision), pPos FROM Tryout JOIN College ON Tryout.cName = College.cName WHERE  enr != 97 ORDER BY pPos DESC', 'SELECT COUNT(DISTINCT decision), pPos FROM Tryout JOIN College ON Tryout.cName = College.cName WHERE College.enr != 97 ORDER BY pPos DESC;'], ['SELECT MIN(pID), COUNT(DISTINCT pID) FROM Player', 'SELECT MIN(pID) AS min_player_id, COUNT(DISTINCT pID) AS distinct_player_count FROM Player;']], 'insurance_fnol': [['SELECT COUNT(DISTINCT t.Customer_name), t.Customer_name FROM Customers AS t WHERE  t.Customer_ID >= 62 GROUP BY t.Customer_name HAVING COUNT(t.Customer_ID) >= 81 ORDER BY t.Customer_name ASC', 'SELECT COUNT(DISTINCT Customers.Customer_name), Customers.Customer_name FROM Customers WHERE Customers.Customer_ID >= 62 GROUP BY Customers.Customer_name HAVING COUNT(Customers.Customer_ID) >= 81 ORDER BY Customers.Customer_name ASC'], ['SELECT MIN(b.Customer_ID), COUNT(DISTINCT b.Customer_ID) FROM Customers AS b', 'SELECT MIN(Customer_ID), COUNT(DISTINCT Customer_ID) FROM Customers'], ['SELECT Customers_Policies.Policy_ID, Customers_Policies.Customer_ID FROM Customers_Policies JOIN Services JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID AND First_Notification_of_Loss.Policy_ID = Customers_Policies.Policy_ID AND Services.Service_ID = First_Notification_of_Loss.Service_ID WHERE  Customers_Policies.Customer_ID > 17 ORDER BY Customers_Policies.Policy_ID ASC LIMIT 5', 'SELECT Customers_Policies.Policy_ID, Customers_Policies.Customer_ID FROM Customers_Policies JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID AND Customers_Policies.Policy_ID = First_Notification_of_Loss.Policy_ID JOIN Services ON First_Notification_of_Loss.Service_ID = Services.Service_ID WHERE Customers_Policies.Customer_ID > 17 ORDER BY Customers_Policies.Policy_ID ASC LIMIT 5'], ['SELECT Service_name FROM Customers_Policies JOIN Services JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID AND First_Notification_of_Loss.Policy_ID = Customers_Policies.Policy_ID AND Services.Service_ID = First_Notification_of_Loss.Service_ID WHERE Customers_Policies.Customer_ID BETWEEN 1 AND 10 OR  Customers_Policies.Policy_ID < 80 ORDER BY Service_name ASC', 'SELECT T3.Service_name FROM Customers_Policies AS T1 INNER JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID AND T1.Policy_ID = T2.Policy_ID INNER JOIN Services AS T3 ON T2.Service_ID = T3.Service_ID WHERE T1.Customer_ID BETWEEN 1 AND 10 OR T1.Policy_ID < 80 ORDER BY T3.Service_name ASC;'], ['SELECT n.Service_name FROM Services JOIN Services AS n ON Services.Service_ID = n.Service_ID WHERE  Services.Service_ID = 15', 'SELECT Service_name FROM Services WHERE Service_ID = 15;'], ['SELECT MIN(h.Claim_ID), h.FNOL_ID FROM Claims AS h WHERE  h.Claim_ID < 90 ORDER BY h.FNOL_ID DESC', 'SELECT MIN(h.Claim_ID) FROM Claims AS h WHERE h.Claim_ID < 90'], ['SELECT MIN(Available_Policies.Policy_ID) FROM Available_Policies JOIN Available_Policies AS a ON Available_Policies.Policy_ID = a.Policy_ID WHERE  a.Policy_ID = 25', 'SELECT Policy_ID FROM Available_Policies WHERE Policy_ID = 25']], 'station_weather': [['SELECT network_name, network_name, local_authority FROM station WHERE id BETWEEN 1 AND 10 OR network_name IN (SELECT network_name FROM station AS g WHERE g.id BETWEEN 1 AND 10) GROUP BY local_authority HAVING AVG(id) >= 21', 'SELECT network_name, local_authority FROM station WHERE id BETWEEN 1 AND 10 GROUP BY local_authority HAVING AVG(id) >= 21'], ['SELECT COUNT(DISTINCT r.train_number), COUNT(DISTINCT r.name), r.train_number FROM train AS r WHERE  r.id = 27 AND destination NOT IN (SELECT destination FROM train WHERE train_number BETWEEN 1 AND 10 LIMIT 5)', 'SELECT COUNT(DISTINCT r.train_number), COUNT(DISTINCT r.name) FROM train AS r WHERE  r.id = 27 AND destination NOT IN (SELECT destination FROM train WHERE train_number BETWEEN 1 AND 10 LIMIT 5)'], ['SELECT origin FROM train JOIN route ON train.id = route.train_id WHERE train_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM station AS o WHERE o.id BETWEEN 1 AND 10 OR  o.id = 95 AND route.train_id = o.id LIMIT 9)', 'SELECT origin FROM train JOIN route ON train.id = route.train_id WHERE train_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM station AS o WHERE o.id BETWEEN 1 AND 10 OR  o.id = 95 AND route.station_id = o.id LIMIT 9)'], ['SELECT services FROM station JOIN weekly_weather JOIN route ON route.station_id = station.id AND station.id = weekly_weather.station_id WHERE low_temperature BETWEEN 1 AND 10 OR  route.station_id >= 83 ORDER BY services DESC', 'SELECT services FROM station JOIN weekly_weather ON station.id = weekly_weather.station_id JOIN route ON route.station_id = station.id WHERE low_temperature BETWEEN 1 AND 10 OR route.station_id >= 83 ORDER BY services DESC;'], ['SELECT COUNT(DISTINCT q.station_id), q.station_id FROM route AS q WHERE  q.station_id != 96 GROUP BY q.station_id', 'SELECT COUNT(DISTINCT q.station_id) FROM route AS q WHERE q.station_id != 96;'], ['SELECT MIN(train_number), destination, network_name FROM station JOIN weekly_weather JOIN train JOIN route ON route.station_id = station.id AND station.id = weekly_weather.station_id AND train.id = route.train_id WHERE  precipitation != 42 GROUP BY network_name LIMIT 1', 'SELECT MIN(train_number), T.destination, S.network_name FROM station S JOIN route R ON S.id = R.station_id JOIN train T ON R.train_id = T.id JOIN weekly_weather W ON S.id = W.station_id WHERE W.precipitation != 42 GROUP BY S.network_name LIMIT 1'], ['SELECT COUNT(DISTINCT network_name), station_id FROM station JOIN route ON route.station_id = station.id WHERE station_id BETWEEN 1 AND 10 AND  id > 75 GROUP BY station_id HAVING AVG(station_id) <= 79 ORDER BY station_id DESC', 'SELECT COUNT(DISTINCT T3.network_name) FROM station AS T3 JOIN route AS T2 ON T3.id = T2.station_id WHERE T3.id BETWEEN 1 AND 10 AND T2.train_id > 75 GROUP BY T3.network_name ORDER BY T3.network_name DESC'], ['SELECT interval FROM train JOIN route ON train.id = route.train_id WHERE train_number BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM route WHERE  station_id <= 15 AND train.id = train_id LIMIT 9) ORDER BY interval ASC', 'SELECT interval FROM train JOIN route ON train.id = route.train_id WHERE train_number BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM route WHERE station_id <= 15 AND route.train_id = train.id LIMIT 9) ORDER BY interval ASC'], ['SELECT precipitation FROM station JOIN weekly_weather ON station.id = weekly_weather.station_id WHERE low_temperature BETWEEN 1 AND 10 OR wind_speed_mph != (SELECT SUM(wind_speed_mph) FROM weekly_weather WHERE high_temperature BETWEEN 1 AND 10) ORDER BY precipitation DESC', 'SELECT precipitation FROM station JOIN weekly_weather ON station.id = weekly_weather.station_id WHERE low_temperature BETWEEN 1 AND 10 OR wind_speed_mph != (SELECT AVG(wind_speed_mph) FROM weekly_weather WHERE high_temperature BETWEEN 1 AND 10) ORDER BY precipitation DESC;'], ['SELECT u.id, u.id FROM station AS u WHERE  u.id < 73', 'SELECT u.id FROM station AS u WHERE u.id < 73;'], ['SELECT MIN(a.id) FROM train AS a WHERE a.id BETWEEN 1 AND 10', 'SELECT MIN(id) FROM train WHERE id BETWEEN 1 AND 10'], ['SELECT v.train_id FROM route AS v WHERE v.station_id BETWEEN 1 AND 10 OR  v.train_id >= 68 LIMIT 6', 'SELECT v.train_id FROM route AS v WHERE v.train_id >= 68 LIMIT 6'], ['SELECT AVG(station.id), COUNT(DISTINCT station.network_name), station.id FROM station JOIN station AS g ON station.id = g.id WHERE station.id BETWEEN 1 AND 10 OR  station.id >= 83 LIMIT 8', 'SELECT AVG(id), COUNT(DISTINCT network_name), id FROM station WHERE id BETWEEN 1 AND 10 OR id >= 83 LIMIT 8'], ['SELECT MIN(train_id), time, origin FROM train JOIN route ON train.id = route.train_id WHERE  train_number <= 55 LIMIT 7', 'SELECT MIN(train.id), train.time, train.origin FROM train JOIN route ON train.id = route.train_id WHERE train.train_number <= 55 LIMIT 7'], ['SELECT local_authority FROM station JOIN route ON route.station_id = station.id WHERE  id != 33 ORDER BY local_authority ASC', 'SELECT T1.local_authority FROM station AS T1 JOIN route AS T2 ON T2.station_id = T1.id WHERE T1.id != 33 ORDER BY T1.local_authority ASC;']], 'soccer_3': [['SELECT COUNT(Club_ID), Manager FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM club AS h)', 'SELECT COUNT(DISTINCT T2.Club_ID), T1.Manager FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Manager'], ['SELECT Events_number, Events_number, Name, Wins_count FROM player WHERE Player_ID BETWEEN 1 AND 10 GROUP BY Wins_count HAVING MIN(Player_ID) = 82 LIMIT 7', 'SELECT Events_number, Name, SUM(Wins_count) as Wins_count FROM player WHERE Player_ID BETWEEN 1 AND 10 GROUP BY Events_number, Name ORDER BY SUM(Wins_count) DESC LIMIT 7'], ['SELECT o.Club_ID, o.Club_ID FROM club AS o WHERE  o.Club_ID <= 0 LIMIT 9', 'SELECT o.Club_ID FROM club AS o WHERE  o.Name IS NOT NULL LIMIT 9'], ['SELECT Club_ID, Manufacturer, Name FROM club WHERE  Club_ID <= 29 OR EXISTS (SELECT * FROM player WHERE club.Club_ID = Club_ID) GROUP BY Name ORDER BY Club_ID ASC LIMIT 7', 'SELECT T1.Club_ID, T1.Manufacturer, T1.Name FROM club AS T1 WHERE  T1.Club_ID <= 29 OR EXISTS (SELECT * FROM player WHERE T1.Club_ID = player.Club_ID) GROUP BY T1.Name ORDER BY T1.Club_ID ASC LIMIT 7'], ['SELECT MIN(club.Club_ID), AVG(Events_number) FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE EXISTS (SELECT * FROM player AS x WHERE  x.Events_number = 48 AND club.Club_ID = x.Club_ID)', 'SELECT MIN(club.Club_ID), AVG(player.Events_number) FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE EXISTS (SELECT * FROM player WHERE player.Events_number = 48 AND player.Club_ID = club.Club_ID)'], ['SELECT COUNT(club.Club_ID), Player_ID FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE Player_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club AS v WHERE player.Player_ID = v.Club_ID LIMIT 1) ORDER BY Player_ID ASC', 'SELECT COUNT(club.Club_ID), Player_ID FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE Player_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club AS v WHERE player.Club_ID = v.Club_ID LIMIT 1) ORDER BY Player_ID ASC'], ['SELECT AVG(n.Player_ID), COUNT(DISTINCT n.Player_ID), n.Name FROM player AS n WHERE n.Player_ID BETWEEN 1 AND 10 AND  n.Wins_count != 58 ORDER BY n.Name ASC', 'SELECT n.Name, AVG(n.Earnings) as avg_earnings, COUNT(DISTINCT n.Player_ID) as distinct_players FROM player AS n WHERE n.Player_ID BETWEEN 1 AND 10 AND  n.Wins_count != 58 GROUP BY n.Name ORDER BY n.Name ASC'], ['SELECT COUNT(s.Events_number), player.Country FROM player AS s JOIN player ON player.Player_ID = s.Player_ID WHERE s.Player_ID BETWEEN 1 AND 10 OR  s.Earnings != 54 LIMIT 6', 'SELECT COUNT(s.Events_number), s.Country FROM player AS s WHERE (s.Player_ID BETWEEN 1 AND 10) OR s.Earnings != 54 LIMIT 6;'], ['SELECT Country, Name, Country FROM player WHERE Club_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club WHERE  Club_ID < 40 AND player.Player_ID = Club_ID)', 'SELECT Country, Name FROM player WHERE Club_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM club WHERE Club_ID < 40 AND player.Club_ID = club.Club_ID);'], ['SELECT COUNT(DISTINCT Club_ID), Wins_count, Name FROM player ORDER BY Wins_count ASC LIMIT 9', 'SELECT COUNT(DISTINCT T1.Club_ID), T2.Wins_count, T2.Name FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T2.Name, T2.Wins_count ORDER BY T2.Wins_count ASC LIMIT 9'], ['SELECT Wins_count FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE Captain NOT IN (SELECT Captain FROM club) ORDER BY Wins_count DESC LIMIT 9', 'SELECT player.Wins_count FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE player.Captain NOT IN (SELECT Captain FROM club) ORDER BY player.Wins_count DESC LIMIT 9'], ['SELECT SUM(Player_ID), Earnings, Country FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE  Earnings = 5 ORDER BY Earnings ASC', 'SELECT COUNT(Player_ID), Earnings, Country FROM club JOIN player ON player.Club_ID = club.Club_ID WHERE Earnings = 5 ORDER BY Earnings ASC'], ['SELECT Club_ID, Club_ID, Captain FROM club WHERE  Club_ID >= 22 GROUP BY Captain', 'SELECT Club_ID, COUNT(Captain) FROM club WHERE Club_ID >= 22 GROUP BY Club_ID;']], 'advertising_agencies': [['SELECT staff_details, staff_details FROM Staff_in_Meetings JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE  Staff_in_Meetings.staff_id >= 61', 'SELECT staff_details FROM Staff_in_Meetings JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE Staff_in_Meetings.staff_id >= 61;'], ['SELECT MIN(Clients.client_id), AVG(Staff_in_Meetings.meeting_id) FROM Agencies JOIN Staff_in_Meetings JOIN Meetings JOIN Clients ON Clients.agency_id = Agencies.agency_id AND Clients.client_id = Meetings.client_id AND Meetings.meeting_id = Staff_in_Meetings.meeting_id WHERE  staff_id < 85', 'SELECT MIN(Clients.client_id), AVG(Staff_in_Meetings.meeting_id) FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id JOIN Meetings ON Meetings.client_id = Clients.client_id JOIN Staff_in_Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Staff_in_Meetings.staff_id < 85'], ['SELECT Invoices.client_id, Meetings.client_id FROM Meetings JOIN Payments JOIN Invoices JOIN Clients ON Clients.client_id = Meetings.client_id AND Invoices.client_id = Clients.client_id AND Payments.invoice_id = Invoices.invoice_id WHERE  Payments.invoice_id > 15', 'SELECT Invoices.client_id, Meetings.client_id FROM Meetings JOIN Invoices ON Meetings.client_id = Invoices.client_id JOIN Payments ON Invoices.invoice_id = Payments.invoice_id WHERE Payments.invoice_id > 15;'], ['SELECT COUNT(client_id), COUNT(client_id) FROM Meetings WHERE  client_id < 35 OR other_details <= (SELECT MAX(other_details) FROM Meetings WHERE  client_id = 1) LIMIT 7', 'SELECT COUNT(client_id), COUNT(client_id) FROM Meetings WHERE client_id < 35 OR other_details = (SELECT MAX(other_details) FROM Meetings WHERE client_id = 1) LIMIT 7'], ['SELECT Invoices.invoice_id, billable_yn, other_details FROM Meetings JOIN Payments JOIN Invoices JOIN Clients ON Clients.client_id = Meetings.client_id AND Invoices.client_id = Clients.client_id AND Payments.invoice_id = Invoices.invoice_id WHERE  Invoices.client_id = 98 ORDER BY Invoices.invoice_id ASC LIMIT 9', 'SELECT Invoices.invoice_id, billable_yn, other_details FROM Meetings JOIN Invoices ON Invoices.client_id = Meetings.client_id JOIN Payments ON Payments.invoice_id = Invoices.invoice_id WHERE Invoices.client_id = 98 ORDER BY Invoices.invoice_id ASC LIMIT 9'], ['SELECT COUNT(o.meeting_id), MIN(o.meeting_id), o.purpose_of_meeting FROM Meetings JOIN Meetings AS o ON Meetings.meeting_id = o.meeting_id WHERE  o.meeting_id >= 72 GROUP BY o.purpose_of_meeting ORDER BY o.purpose_of_meeting ASC LIMIT 3', 'SELECT COUNT(meeting_id), MIN(meeting_id), purpose_of_meeting FROM Meetings WHERE meeting_id >= 72 GROUP BY purpose_of_meeting ORDER BY purpose_of_meeting ASC LIMIT 3'], ['SELECT SUM(Clients.client_id), Clients.client_id, Meetings.client_id FROM Meetings JOIN Clients ON Clients.client_id = Meetings.client_id WHERE  Clients.client_id = 27', 'SELECT Clients.client_id, Meetings.client_id FROM Meetings JOIN Clients ON Clients.client_id = Meetings.client_id WHERE Clients.client_id = 27 GROUP BY Clients.client_id, Meetings.client_id'], ['SELECT Staff.staff_details, y.agency_id FROM Staff JOIN Staff AS y ON Staff.staff_id = y.staff_id WHERE  y.staff_id = 4 GROUP BY y.agency_id HAVING AVG(Staff.staff_id) <= 13 ORDER BY Staff.staff_details DESC', 'SELECT staff_details, agency_id FROM Staff WHERE staff_id = 4 ORDER BY staff_details DESC'], ['SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Agencies AS g ON Agencies.agency_id = g.agency_id WHERE Agencies.agency_id BETWEEN 1 AND 10 OR agency_id NOT IN (SELECT agency_id FROM Agencies AS n WHERE  n.agency_id = 7) LIMIT 9', 'SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies WHERE Agencies.agency_id BETWEEN 1 AND 10 AND agency_id != 7 LIMIT 9'], ['SELECT COUNT(DISTINCT meeting_outcome), COUNT(DISTINCT meeting_outcome), other_details FROM Meetings WHERE  client_id < 48 ORDER BY other_details DESC', 'SELECT COUNT(DISTINCT meeting_outcome), other_details FROM Meetings WHERE client_id < 48 ORDER BY other_details DESC'], ['SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id), Staff_in_Meetings.staff_id FROM Staff_in_Meetings JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE  agency_id <= 76 AND staff_details IN (SELECT staff_details FROM Staff) ORDER BY Staff_in_Meetings.staff_id ASC', 'SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) FROM Staff_in_Meetings JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE Staff.agency_id <= 76 AND Staff.staff_details IN (SELECT staff_details FROM Staff)']], 'customers_and_invoices': [['SELECT COUNT(DISTINCT login_password), Customers.customer_id FROM Customers JOIN Invoices JOIN Accounts JOIN Orders ON Orders.customer_id = Customers.customer_id AND Invoices.order_id = Orders.order_id AND Customers.customer_id = Accounts.customer_id WHERE  Orders.customer_id <= 9 LIMIT 5', 'SELECT COUNT(DISTINCT C.login_password), C.customer_id FROM Customers C JOIN Orders O ON C.customer_id = O.customer_id JOIN Invoices I ON O.order_id = I.order_id JOIN Accounts A ON C.customer_id = A.customer_id WHERE C.customer_id <= 9 GROUP BY C.customer_id LIMIT 5'], ['SELECT u.unit_price, u.unit_price FROM Products AS u WHERE u.unit_price BETWEEN 1 AND 10 OR  u.parent_product_id >= 92', 'SELECT u.unit_price FROM Products AS u WHERE (u.unit_price BETWEEN 1 AND 10) OR (u.parent_product_id >= 92)'], ['SELECT Orders.order_id, Orders.customer_id, account_id FROM Customers JOIN Invoices JOIN Accounts JOIN Orders ON Orders.customer_id = Customers.customer_id AND Invoices.order_id = Orders.order_id AND Customers.customer_id = Accounts.customer_id WHERE Orders.order_id BETWEEN 1 AND 10 AND email_address NOT IN (SELECT email_address FROM Customers AS d WHERE d.customer_id BETWEEN 1 AND 10 OR  d.customer_id = 24)', 'SELECT T1.order_id, T1.customer_id, T3.account_id FROM Customers AS T2 JOIN Accounts AS T3 ON T2.customer_id = T3.customer_id JOIN Orders AS T1 ON T2.customer_id = T1.customer_id JOIN Invoices AS T4 ON T1.order_id = T4.order_id WHERE T1.order_id BETWEEN 1 AND 10 AND email_address NOT IN (SELECT email_address FROM Customers AS d WHERE d.customer_id BETWEEN 1 AND 10 OR  d.customer_id = 24)'], ['SELECT Customers.customer_id FROM Customers JOIN Accounts JOIN Orders ON Orders.customer_id = Customers.customer_id AND Customers.customer_id = Accounts.customer_id WHERE EXISTS (SELECT * FROM Customers AS d WHERE  d.customer_id > 22 AND Accounts.account_id = d.customer_id) ORDER BY Customers.customer_id DESC LIMIT 1', 'SELECT Customers.customer_id FROM Customers JOIN Accounts JOIN Orders ON Orders.customer_id = Customers.customer_id AND Accounts.customer_id = Customers.customer_id WHERE EXISTS (SELECT * FROM Customers AS d WHERE  d.customer_id > 22 AND Accounts.customer_id = d.customer_id) ORDER BY Customers.customer_id DESC LIMIT 1'], ['SELECT e.invoice_number FROM Invoices AS e ORDER BY e.invoice_number ASC', 'SELECT e.invoice_number FROM Invoices AS e ORDER BY e.invoice_number ASC'], ['SELECT Invoices.invoice_number FROM Invoices AS e JOIN Invoices ON Invoices.invoice_number = e.invoice_number WHERE  e.invoice_number = 16 AND EXISTS (SELECT * FROM Orders AS r WHERE  r.customer_id >= 59 AND Invoices.invoice_number = r.order_id) ORDER BY Invoices.invoice_number ASC LIMIT 6', 'SELECT i.invoice_number FROM Invoices AS i JOIN Orders AS r ON i.order_id = r.order_id WHERE i.invoice_number = 16 AND r.customer_id >= 59 ORDER BY i.invoice_number ASC LIMIT 6'], ['SELECT e.vat_rating FROM Product_Categories AS e WHERE  e.vat_rating >= 84 GROUP BY e.vat_rating HAVING COUNT(e.vat_rating) < 16 ORDER BY e.vat_rating ASC', 'SELECT vat_rating FROM Product_Categories WHERE vat_rating >= 84 GROUP BY vat_rating HAVING COUNT(vat_rating) < 16 ORDER BY vat_rating ASC'], ['SELECT country FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE  Orders.customer_id > 29 LIMIT 8', 'SELECT country FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE Orders.customer_id > 29 LIMIT 8'], ['SELECT phone_number FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE  Orders.customer_id >= 53 ORDER BY phone_number ASC', 'SELECT T1.phone_number FROM Customers AS T1 JOIN Orders AS T2 ON T2.customer_id = T1.customer_id WHERE T2.customer_id >= 53 ORDER BY T1.phone_number ASC'], ['SELECT AVG(invoice_number), invoice_number FROM Financial_Transactions WHERE  transaction_amount = 36 ORDER BY invoice_number ASC', 'SELECT AVG(transaction_amount), invoice_number FROM Financial_Transactions WHERE transaction_amount = 36 ORDER BY invoice_number ASC'], ['SELECT Customers.customer_id FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE customer_id > (SELECT MIN(customer_id) FROM Accounts AS i LIMIT 5) LIMIT 6', 'SELECT Customers.customer_id FROM Customers JOIN Orders ON Orders.customer_id = Customers.customer_id WHERE customer_id > (SELECT MIN(customer_id) FROM Accounts AS i LIMIT 5) LIMIT 6']], 'battle_death': [['SELECT caused_by_ship_id FROM ship JOIN battle JOIN death ON ship.lost_in_battle = battle.id AND death.caused_by_ship_id = ship.id WHERE  killed < 46 ORDER BY caused_by_ship_id DESC', 'SELECT T3.caused_by_ship_id FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id INNER JOIN death AS T3 ON T3.caused_by_ship_id = T1.id WHERE T3.killed < 46 ORDER BY T3.caused_by_ship_id DESC;'], ['SELECT latin_commander FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE battle.id BETWEEN 1 AND 10 AND name NOT IN (SELECT name FROM battle WHERE id BETWEEN 1 AND 10) ORDER BY latin_commander ASC', 'SELECT battle.latin_commander FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE battle.id BETWEEN 1 AND 10 AND battle.name NOT IN (SELECT name FROM battle WHERE id BETWEEN 1 AND 10) ORDER BY battle.latin_commander ASC;'], ['SELECT MAX(ship.id), location FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE  ship.id > 2 ORDER BY location ASC', 'SELECT ship.id, location FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE ship.id > 2 ORDER BY ship.id DESC LIMIT 1'], ['SELECT AVG(lost_in_battle), ship.id, ship.name FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE name IN (SELECT name FROM ship AS v WHERE  v.lost_in_battle = 15) GROUP BY ship.name ORDER BY ship.id ASC', 'SELECT AVG(ship.lost_in_battle), ship.id, ship.name FROM ship JOIN battle ON ship.lost_in_battle = battle.id WHERE name IN (SELECT name FROM ship AS v WHERE  v.lost_in_battle = 15) GROUP BY ship.id, ship.name ORDER BY ship.id ASC'], ['SELECT killed FROM death WHERE EXISTS (SELECT * FROM ship WHERE  lost_in_battle >= 24 AND death.id = id)', 'SELECT killed FROM death WHERE EXISTS (SELECT * FROM ship WHERE  lost_in_battle >= 24 AND death.caused_by_ship_id = ship.id)'], ['SELECT death.id FROM ship JOIN death ON death.caused_by_ship_id = ship.id WHERE lost_in_battle NOT IN (SELECT lost_in_battle FROM ship AS o WHERE  o.lost_in_battle < 88)', 'SELECT T2.id FROM ship AS T1 JOIN death AS T2 ON T2.caused_by_ship_id = T1.lost_in_battle WHERE T1.lost_in_battle NOT IN (SELECT lost_in_battle FROM ship AS T3 WHERE T3.lost_in_battle < 88)'], ['SELECT lost_in_battle FROM ship WHERE EXISTS (SELECT * FROM battle AS q WHERE  q.id = 16 AND ship.id = q.id)', 'SELECT lost_in_battle FROM ship WHERE EXISTS (SELECT * FROM battle AS q WHERE q.id = 16 AND ship.lost_in_battle = q.id)'], ['SELECT death.id, lost_in_battle FROM ship JOIN battle JOIN death ON ship.lost_in_battle = battle.id AND death.caused_by_ship_id = ship.id WHERE  death.id >= 50', 'SELECT T3.id, T1.lost_in_battle FROM ship AS T1 INNER JOIN battle AS T2 ON T1.lost_in_battle = T2.id INNER JOIN death AS T3 ON T3.caused_by_ship_id = T1.id WHERE T3.id >= 50'], ['SELECT v.id, battle.id, battle.bulgarian_commander FROM battle AS v JOIN battle ON battle.id = v.id WHERE  v.id <= 14 ORDER BY battle.bulgarian_commander ASC', 'SELECT battle.id, battle.bulgarian_commander FROM battle WHERE battle.id <= 14 ORDER BY battle.bulgarian_commander ASC'], ['SELECT AVG(death.id), AVG(death.id) FROM ship JOIN death ON death.caused_by_ship_id = ship.id LIMIT 8', 'SELECT AVG(death.killed), AVG(death.injured) FROM ship JOIN death ON death.caused_by_ship_id = ship.id LIMIT 8'], ['SELECT COUNT(DISTINCT latin_commander), latin_commander, latin_commander FROM battle WHERE  id < 85', 'SELECT COUNT(DISTINCT latin_commander), latin_commander FROM battle WHERE id < 85 GROUP BY latin_commander;']], 'university_rank': [['SELECT Rank, Major_ID FROM major_ranking GROUP BY Major_ID ORDER BY Major_ID DESC', 'SELECT Rank, Major_ID FROM major_ranking ORDER BY Major_ID DESC;'], ['SELECT SUM(j.Major_ID), j.Major_Code FROM major AS j WHERE j.Major_Code BETWEEN 1 AND 10 GROUP BY j.Major_Code LIMIT 9', 'SELECT j.Major_ID, j.Major_Code FROM major AS j WHERE j.Major_Code BETWEEN 1 AND 10 GROUP BY j.Major_ID, j.Major_Code LIMIT 9'], ['SELECT Team_Name FROM university WHERE  Enrollment > 76 GROUP BY Team_Name', 'SELECT Team_Name FROM university WHERE Enrollment > 76;'], ['SELECT Major_ID, University_ID FROM major_ranking WHERE Rank BETWEEN 1 AND 10 AND  Rank = 57 GROUP BY Major_ID HAVING MIN(Rank) = 77', 'SELECT Major_ID, University_ID FROM major_ranking WHERE Rank BETWEEN 1 AND 57 GROUP BY Major_ID, University_ID HAVING MIN(Rank) = 57;'], ['SELECT a.University_ID FROM university AS a WHERE Home_Conference NOT IN (SELECT Home_Conference FROM university AS p) ORDER BY a.University_ID DESC', 'SELECT a.University_ID FROM university AS a WHERE a.Home_Conference NOT IN (SELECT p.Home_Conference FROM university AS p WHERE p.University_ID != a.University_ID) ORDER BY a.University_ID DESC'], ['SELECT MIN(major.Major_ID), major.Major_ID, Major_Name FROM university JOIN major JOIN major_ranking ON university.University_ID = major_ranking.University_ID AND major_ranking.Major_ID = major.Major_ID WHERE  Major_Code != 59 GROUP BY Major_Name HAVING COUNT(major_ranking.Major_ID) = 2 LIMIT 4', 'SELECT MIN(major.Major_ID), Major_Name FROM university JOIN major JOIN major_ranking ON university.University_ID = major_ranking.University_ID AND major_ranking.Major_ID = major.Major_ID WHERE Major_Code != 59 GROUP BY Major_Name HAVING COUNT(major_ranking.Major_ID) = 2 LIMIT 4'], ['SELECT COUNT(Major_Code), State FROM university JOIN major JOIN major_ranking ON university.University_ID = major_ranking.University_ID AND major_ranking.Major_ID = major.Major_ID WHERE  major_ranking.University_ID >= 16', 'SELECT COUNT(major.Major_Code), university.State FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID JOIN major ON major.Major_ID = major_ranking.Major_ID WHERE major_ranking.University_ID >= 16'], ['SELECT z.Major_Name FROM major AS z WHERE z.Major_Code BETWEEN 1 AND 10 AND  z.Major_Code = 35 ORDER BY z.Major_Name ASC', 'SELECT Major_Name FROM major WHERE Major_Code = 35 ORDER BY Major_Name ASC;'], ['SELECT AVG(Major_ID), Major_ID FROM major WHERE EXISTS (SELECT * FROM major_ranking WHERE major.Major_ID = Major_ID LIMIT 6) ORDER BY Major_ID ASC', 'SELECT DISTINCT major.Major_ID FROM major WHERE EXISTS (SELECT * FROM major_ranking WHERE major.Major_ID = major_ranking.Major_ID LIMIT 6) ORDER BY major.Major_ID ASC']], 'insurance_policies': [['SELECT e.Customer_ID, e.Customer_Details FROM Customers AS e WHERE  e.Customer_ID = 13 GROUP BY e.Customer_Details ORDER BY e.Customer_Details DESC', 'SELECT Customer_ID, Customer_Details FROM Customers WHERE Customer_ID = 13 ORDER BY Customer_Details DESC'], ['SELECT Customer_Details FROM Customers WHERE EXISTS (SELECT * FROM Customer_Policies AS m WHERE Customers.Customer_ID = m.Customer_ID)', 'SELECT Customer_Details FROM Customers AS c WHERE EXISTS (SELECT * FROM Customer_Policies AS cp WHERE c.Customer_ID = cp.Customer_ID)'], ['SELECT AVG(w.Customer_ID), w.Customer_Details FROM Customers AS w ORDER BY w.Customer_Details DESC LIMIT 8', 'SELECT Customer_ID, Customer_Details FROM Customers ORDER BY Customer_Details DESC LIMIT 8'], ['SELECT Payment_Method_Code, Claims.Policy_ID FROM Claims JOIN Settlements JOIN Customer_Policies JOIN Payments ON Claims.Policy_ID = Customer_Policies.Policy_ID AND Settlements.Claim_ID = Claims.Claim_ID AND Payments.Settlement_ID = Settlements.Settlement_ID WHERE  Settlements.Amount_Settled != 34 GROUP BY Claims.Policy_ID', 'SELECT T4.Payment_Method_Code, T2.Policy_ID FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID JOIN Payments AS T4 ON T2.Settlement_ID = T4.Settlement_ID JOIN Customer_Policies AS T3 ON T2.Customer_Policy_ID = T3.Policy_ID WHERE T2.Amount_Settled != 34 GROUP BY T2.Policy_ID;'], ['SELECT MAX(Payments.Settlement_ID), Claim_ID FROM Settlements JOIN Payments ON Payments.Settlement_ID = Settlements.Settlement_ID', 'SELECT MAX(Payments.Settlement_ID), Claim_ID FROM Settlements JOIN Payments ON Payments.Settlement_ID = Settlements.Settlement_ID GROUP BY Claim_ID;'], ['SELECT n.Customer_Policy_ID, n.Amount_Settled FROM Settlements AS n JOIN Settlements ON Settlements.Settlement_ID = n.Settlement_ID WHERE  n.Claim_ID < 36 ORDER BY n.Amount_Settled DESC', 'SELECT Customer_Policy_ID, Amount_Settled FROM Settlements WHERE Claim_ID < 36 ORDER BY Amount_Settled DESC;'], ['SELECT j.Customer_Details FROM Customers AS j JOIN Customers ON Customers.Customer_ID = j.Customer_ID WHERE  Customers.Customer_ID != 12 LIMIT 5', 'SELECT Customer_Details FROM Customers WHERE Customer_ID != 12 LIMIT 5;'], ['SELECT z.Amount_Settled, z.Amount_Settled FROM Claims AS z', 'SELECT z.Amount_Settled FROM Claims AS z'], ['SELECT Customer_ID, End_Date FROM Customer_Policies WHERE Policy_Type_Code < (SELECT MIN(Policy_Type_Code) FROM Customer_Policies AS d) GROUP BY End_Date HAVING MIN(Policy_ID) <= 22 ORDER BY Customer_ID ASC', 'SELECT Customer_ID, End_Date FROM Customer_Policies GROUP BY End_Date HAVING MIN(Policy_ID) <= 22 ORDER BY Customer_ID ASC'], ['SELECT v.Settlement_ID FROM Payments AS v JOIN Payments ON Payments.Payment_ID = v.Payment_ID WHERE Settlement_ID NOT IN (SELECT Settlement_ID FROM Payments AS o WHERE  o.Amount_Payment = 91)', 'SELECT v.Settlement_ID FROM Payments AS v JOIN Payments AS p ON p.Payment_ID = v.Payment_ID WHERE v.Settlement_ID NOT IN (SELECT o.Settlement_ID FROM Payments AS o WHERE o.Amount_Payment = 91)'], ['SELECT MAX(Customer_Policy_ID), COUNT(DISTINCT Claims.Date_Claim_Settled) FROM Claims JOIN Settlements JOIN Customer_Policies JOIN Payments ON Claims.Policy_ID = Customer_Policies.Policy_ID AND Settlements.Claim_ID = Claims.Claim_ID AND Payments.Settlement_ID = Settlements.Settlement_ID WHERE Settlements.Amount_Settled BETWEEN 1 AND 10 AND Customer_ID <= (SELECT MIN(Customer_ID) FROM Customers AS a WHERE  a.Customer_ID <= 17)', 'SELECT MAX(s.Customer_Policy_ID), COUNT(DISTINCT c.Date_Claim_Settled) FROM Claims c JOIN Customer_Policies cp ON c.Policy_ID = cp.Policy_ID JOIN Settlements s ON s.Claim_ID = c.Claim_ID JOIN Payments p ON p.Settlement_ID = s.Settlement_ID WHERE s.Amount_Settled BETWEEN 1 AND 10 AND cp.Customer_ID <= (SELECT MIN(Customer_ID) FROM Customers AS a WHERE a.Customer_ID <= 17)'], ['SELECT Payment_Method_Code, Payment_Method_Code, Payment_Method_Code, Claims.Amount_Settled FROM Claims JOIN Settlements JOIN Payments ON Settlements.Claim_ID = Claims.Claim_ID AND Payments.Settlement_ID = Settlements.Settlement_ID WHERE EXISTS (SELECT * FROM Claims WHERE Amount_Settled BETWEEN 1 AND 10 AND Settlements.Settlement_ID = Claim_ID) GROUP BY Claims.Amount_Settled HAVING COUNT(Payments.Settlement_ID) >= 19', 'SELECT Payment_Method_Code, Claims.Amount_Settled FROM Claims JOIN Settlements ON Settlements.Claim_ID = Claims.Claim_ID JOIN Payments ON Payments.Settlement_ID = Settlements.Settlement_ID WHERE Claims.Amount_Settled BETWEEN 1 AND 10 GROUP BY Claims.Amount_Settled HAVING COUNT(Payments.Settlement_ID) >= 19'], ['SELECT Customer_Details, Customer_Details, Customer_Details FROM Customers WHERE Customer_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Customer_Policies AS k WHERE k.Policy_ID BETWEEN 1 AND 10 AND Customers.Customer_ID = k.Customer_ID)', 'SELECT Customer_Details FROM Customers WHERE Customer_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Customer_Policies AS k WHERE k.Policy_ID BETWEEN 1 AND 10 AND Customers.Customer_ID = k.Customer_ID)'], ['SELECT COUNT(DISTINCT Customer_Policies.Start_Date), Customer_Policies.Policy_Type_Code FROM Customer_Policies AS r JOIN Customer_Policies ON Customer_Policies.Policy_ID = r.Policy_ID WHERE r.Policy_ID BETWEEN 1 AND 10 ORDER BY Customer_Policies.Policy_Type_Code DESC', 'SELECT COUNT(DISTINCT Start_Date), Policy_Type_Code FROM Customer_Policies WHERE Policy_ID BETWEEN 1 AND 10 GROUP BY Policy_Type_Code ORDER BY Policy_Type_Code DESC'], ['SELECT v.Payment_ID FROM Payments AS v JOIN Payments ON Payments.Payment_ID = v.Payment_ID WHERE  v.Settlement_ID < 33 ORDER BY v.Payment_ID DESC', 'SELECT Payment_ID FROM Payments WHERE Settlement_ID < 33 ORDER BY Payment_ID DESC;']], 'museum_visit': [['SELECT Num_of_Staff FROM museum LIMIT 5', 'SELECT Num_of_Staff FROM museum LIMIT 5'], ['SELECT COUNT(DISTINCT visitor_ID), Num_of_Ticket FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE  Age >= 56 GROUP BY Num_of_Ticket', 'SELECT COUNT(DISTINCT CAST(visit.visitor_ID AS number)) AS count, visit.Num_of_Ticket FROM visit JOIN visitor ON CAST(visit.visitor_ID AS number) = visitor.ID WHERE visitor.Age >= 56 GROUP BY visit.Num_of_Ticket;'], ['SELECT Level_of_membership, ID, Name FROM visitor WHERE  ID != 52 LIMIT 6', 'SELECT Level_of_membership, ID, Name FROM visitor WHERE ID != 52 LIMIT 6'], ['SELECT ID, Name, Name FROM visitor ORDER BY ID DESC', 'SELECT ID, Name FROM visitor ORDER BY ID DESC;'], ['SELECT COUNT(DISTINCT ID), Name FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE Num_of_Ticket BETWEEN 1 AND 10 LIMIT 2', 'SELECT COUNT(DISTINCT CAST(visitor.ID AS TEXT)), visitor.Name FROM visit JOIN visitor ON visit.visitor_ID = CAST(visitor.ID AS TEXT) WHERE Num_of_Ticket BETWEEN 1 AND 10 LIMIT 2'], ['SELECT SUM(Num_of_Staff), Age FROM visit JOIN museum JOIN visitor ON visit.visitor_ID = visitor.ID AND museum.Museum_ID = visit.Museum_ID WHERE  Num_of_Staff != 53 LIMIT 1', 'SELECT SUM(T2.Num_of_Staff), T3.Age FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID INNER JOIN visitor AS T3 ON CAST(T1.visitor_ID AS NUMBER) = T3.ID WHERE T2.Num_of_Staff != 53 LIMIT 1'], ['SELECT COUNT(Num_of_Staff), Num_of_Staff FROM visit JOIN museum ON museum.Museum_ID = visit.Museum_ID WHERE visit.Museum_ID BETWEEN 1 AND 10 AND  visit.Museum_ID = 18 LIMIT 1', 'SELECT COUNT(museum.Num_of_Staff), museum.Num_of_Staff FROM visit JOIN museum ON museum.Museum_ID = visit.Museum_ID WHERE visit.Museum_ID BETWEEN 1 AND 10'], ['SELECT visitor_ID, visitor_ID FROM visit WHERE Museum_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM visitor WHERE Age BETWEEN 1 AND 10 AND visit.Museum_ID = ID) ORDER BY visitor_ID ASC LIMIT 8', 'SELECT CAST(visitor_ID AS INTEGER), CAST(visitor_ID AS INTEGER) FROM visit WHERE Museum_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM visitor WHERE Age BETWEEN 1 AND 10 AND CAST(visit.visitor_ID AS INTEGER) = visitor.ID) ORDER BY CAST(visitor_ID AS INTEGER) ASC LIMIT 8'], ['SELECT a.Name, a.Num_of_Staff FROM museum AS a WHERE Num_of_Staff IN (SELECT Num_of_Staff FROM museum WHERE  Num_of_Staff >= 54) GROUP BY a.Num_of_Staff HAVING SUM(a.Num_of_Staff) > 16', 'SELECT Name, Num_of_Staff FROM museum WHERE Num_of_Staff >= 54'], ['SELECT Name FROM museum WHERE  Museum_ID < 92 GROUP BY Name', 'SELECT Name FROM museum WHERE Museum_ID < 92'], ['SELECT COUNT(DISTINCT q.Age) FROM visitor AS q WHERE q.Level_of_membership BETWEEN 1 AND 10 OR  q.Level_of_membership >= 96', 'SELECT COUNT(DISTINCT Age) FROM visitor AS q WHERE q.Level_of_membership BETWEEN 1 AND 10 OR q.Level_of_membership >= 96;']], 'news_report': [['SELECT journalist.journalist_ID, journalist.Name FROM journalist JOIN journalist AS f ON journalist.journalist_ID = f.journalist_ID WHERE  journalist.journalist_ID < 0 GROUP BY journalist.Name', 'SELECT journalist_ID, Name FROM journalist WHERE journalist_ID > 0 ORDER BY Name;'], ['SELECT Date, Age FROM event JOIN news_report JOIN journalist ON news_report.Event_ID = event.Event_ID AND journalist.journalist_ID = news_report.journalist_ID WHERE  Event_Attendance >= 80 OR Name > (SELECT SUM(Name) FROM event LIMIT 6) GROUP BY Date ORDER BY Age DESC LIMIT 6', 'SELECT event.Date, journalist.Age FROM event JOIN news_report ON news_report.Event_ID = event.Event_ID JOIN journalist ON journalist.journalist_ID = news_report.journalist_ID WHERE event.Event_Attendance >= 80 OR event.Name IN (SELECT Name FROM event ORDER BY Event_Attendance DESC LIMIT 6) GROUP BY event.Date, journalist.Age ORDER BY journalist.Age DESC LIMIT 6'], ['SELECT journalist_ID FROM journalist WHERE Years_working BETWEEN 1 AND 10 AND  Years_working >= 81', 'SELECT journalist_ID FROM journalist WHERE Years_working BETWEEN 1 AND 10 OR Years_working >= 81;'], ['SELECT Nationality FROM journalist WHERE  Years_working > 87', 'SELECT Nationality FROM journalist WHERE Years_working > 87'], ['SELECT i.Event_Attendance, i.Event_Attendance FROM event AS i WHERE Event_Attendance NOT IN (SELECT Event_Attendance FROM event WHERE  Event_ID < 27) ORDER BY i.Event_Attendance ASC', 'SELECT i.Event_Attendance FROM event AS i WHERE Event_Attendance NOT IN (SELECT Event_Attendance FROM event WHERE Event_ID < 27) ORDER BY i.Event_Attendance ASC'], ['SELECT Date, Name FROM event WHERE  Event_Attendance = 88 GROUP BY Name ORDER BY Name ASC LIMIT 10', 'SELECT Date, Name FROM event WHERE Event_Attendance = 88 GROUP BY Date, Name ORDER BY Name ASC LIMIT 10'], ['SELECT MIN(Event_ID), Event_ID FROM event WHERE EXISTS (SELECT * FROM news_report AS o WHERE  o.journalist_ID != 43 AND event.Event_ID = o.Event_ID)', 'SELECT MIN(Event_ID), Event_ID FROM event WHERE Event_ID IN (SELECT o.Event_ID FROM news_report AS o WHERE o.journalist_ID != 43)'], ['SELECT MIN(journalist.Years_working), COUNT(DISTINCT i.Years_working), journalist.Years_working FROM journalist AS i JOIN journalist ON journalist.journalist_ID = i.journalist_ID WHERE  i.journalist_ID != 68 GROUP BY journalist.Years_working HAVING MIN(journalist.Years_working) = 63', 'SELECT MIN(Years_working), COUNT(DISTINCT Years_working), Years_working FROM journalist WHERE journalist_ID != 68 GROUP BY Years_working HAVING MIN(Years_working) = 63'], ['SELECT Work_Type FROM news_report WHERE  journalist_ID > 92 ORDER BY Work_Type ASC', 'SELECT Work_Type FROM news_report WHERE journalist_ID > 92 ORDER BY Work_Type ASC'], ['SELECT b.Years_working, b.journalist_ID FROM journalist AS b WHERE Nationality = (SELECT MAX(Nationality) FROM journalist AS g) LIMIT 4', 'SELECT Years_working, journalist_ID FROM journalist WHERE Nationality = (SELECT Nationality FROM journalist ORDER BY Nationality DESC LIMIT 1) ORDER BY Years_working DESC LIMIT 4;'], ['SELECT AVG(Years_working), Years_working FROM journalist WHERE  journalist_ID >= 16 AND Age IN (SELECT Age FROM journalist AS s WHERE s.journalist_ID BETWEEN 1 AND 10)', 'SELECT AVG(Years_working), Years_working FROM journalist WHERE journalist_ID >= 16 AND Age IN (SELECT Age FROM journalist AS s WHERE s.journalist_ID BETWEEN 1 AND 10)'], ['SELECT Name, Age FROM journalist WHERE  journalist_ID <= 91 ORDER BY Name ASC LIMIT 8', 'SELECT Name, Age FROM journalist WHERE journalist_ID <= 91 ORDER BY Name ASC LIMIT 8']], 'sing_contest': [['SELECT i.original_artist, i.name, i.language FROM songs AS i WHERE i.id BETWEEN 1 AND 10 AND  i.id <= 28 GROUP BY i.language HAVING AVG(i.id) > 52 LIMIT 7', 'SELECT i.original_artist, i.name, i.language FROM songs AS i WHERE i.id BETWEEN 1 AND 10 AND  i.id <= 28 GROUP BY i.language HAVING COUNT(i.language) > 0 LIMIT 7;'], ['SELECT language FROM performance_score JOIN songs ON performance_score.songs_id = songs.id WHERE  rhythm_tempo = 37 ORDER BY language ASC LIMIT 1', 'SELECT language FROM performance_score JOIN songs ON performance_score.songs_id = songs.id WHERE rhythm_tempo = 37 ORDER BY participant_id, songs_id, language ASC LIMIT 1'], ['SELECT COUNT(stage_presence), COUNT(DISTINCT stage_presence), id FROM performance_score JOIN participants ON participants.id = performance_score.participant_id WHERE  popularity = 90 LIMIT 5', 'SELECT COUNT(stage_presence), COUNT(DISTINCT stage_presence), id FROM performance_score JOIN participants ON participants.id = performance_score.participant_id WHERE participants.popularity = 90 LIMIT 5'], ['SELECT name FROM participants WHERE id BETWEEN 1 AND 10 AND popularity NOT IN (SELECT popularity FROM participants AS w WHERE w.popularity BETWEEN 1 AND 10 OR  w.popularity = 41 LIMIT 8) GROUP BY name', 'SELECT name FROM participants WHERE id BETWEEN 1 AND 10 AND popularity NOT IN (SELECT popularity FROM participants AS w WHERE w.popularity BETWEEN 1 AND 10 OR  w.popularity = 41 LIMIT 8)'], ['SELECT COUNT(participant_id), MAX(participant_id), COUNT(DISTINCT participant_id) FROM performance_score WHERE  stage_presence = 60', 'SELECT COUNT(participant_id), MAX(participant_id), COUNT(DISTINCT participant_id) FROM performance_score WHERE stage_presence = 60;'], ['SELECT english_translation FROM songs WHERE  id = 61 OR original_artist < (SELECT MIN(original_artist) FROM songs AS s LIMIT 2)', 'SELECT english_translation FROM songs WHERE id = 61 OR id < (SELECT MIN(id) FROM songs AS s LIMIT 1 OFFSET 1)'], ['SELECT COUNT(DISTINCT voice_sound_quality), songs_id, rhythm_tempo FROM performance_score WHERE songs_id BETWEEN 1 AND 10 OR  songs_id > 20 GROUP BY rhythm_tempo', 'SELECT COUNT(DISTINCT voice_sound_quality), participant_id, songs_id, rhythm_tempo FROM performance_score WHERE songs_id BETWEEN 1 AND 10 OR songs_id > 20 GROUP BY participant_id, songs_id, rhythm_tempo'], ['SELECT name FROM performance_score JOIN participants ON participants.id = performance_score.participant_id WHERE  popularity < 75 OR popularity <= (SELECT MAX(popularity) FROM participants LIMIT 9)', 'SELECT name FROM participants WHERE popularity < 75 OR popularity = (SELECT MAX(popularity) FROM participants ORDER BY popularity DESC LIMIT 1)'], ['SELECT songs.id, original_artist, english_translation FROM participants JOIN performance_score JOIN songs ON performance_score.songs_id = songs.id AND participants.id = performance_score.participant_id WHERE  participants.id != 70', 'SELECT s.id, s.original_artist, s.english_translation FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id WHERE p.id != 70']], 'singer': [['SELECT g.Title FROM song AS g WHERE  g.Singer_ID > 8 GROUP BY g.Title', 'SELECT DISTINCT g.Title FROM song AS g WHERE g.Singer_ID > 8;'], ['SELECT COUNT(Singer_ID), Highest_Position, Sales FROM song WHERE  Song_ID != 60 AND Song_ID >= (SELECT AVG(Song_ID) FROM song WHERE  Sales <= 77) GROUP BY Sales HAVING SUM(Highest_Position) <= 70', 'SELECT COUNT(Singer_ID), SUM(Highest_Position), Sales FROM song WHERE Song_ID != 60 AND Song_ID >= (SELECT AVG(Song_ID) FROM song WHERE Sales <= 77) GROUP BY Sales HAVING SUM(Highest_Position) <= 70'], ['SELECT MAX(j.Net_Worth_Millions), MIN(j.Birth_Year), SUM(j.Singer_ID) FROM singer AS j WHERE  j.Birth_Year <= 63', 'SELECT MAX(j.Net_Worth_Millions), MIN(j.Birth_Year), COUNT(j.Singer_ID) FROM singer AS j WHERE j.Birth_Year <= 1963;'], ['SELECT Birth_Year, Song_ID, song.Singer_ID FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE EXISTS (SELECT * FROM singer AS h WHERE h.Singer_ID BETWEEN 1 AND 10 AND song.Song_ID = h.Singer_ID LIMIT 5) GROUP BY song.Singer_ID', 'SELECT T1.Birth_Year, T2.Song_ID, T2.Singer_ID FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Singer_ID BETWEEN 1 AND 10 GROUP BY T1.Birth_Year, T2.Song_ID, T2.Singer_ID LIMIT 5;'], ['SELECT n.Net_Worth_Millions, n.Citizenship FROM singer AS n WHERE n.Singer_ID BETWEEN 1 AND 10 OR Birth_Year NOT IN (SELECT Birth_Year FROM singer AS g LIMIT 7) GROUP BY n.Citizenship', 'SELECT AVG(n.Net_Worth_Millions) AS Net_Worth_Millions, n.Citizenship FROM singer AS n WHERE n.Singer_ID BETWEEN 1 AND 10 OR n.Birth_Year NOT IN (SELECT Birth_Year FROM singer AS g LIMIT 7) GROUP BY n.Citizenship;'], ['SELECT m.Highest_Position, m.Title FROM song AS m WHERE  m.Singer_ID = 34 AND Sales <= (SELECT AVG(Sales) FROM song WHERE Singer_ID BETWEEN 1 AND 10) LIMIT 2', 'SELECT Highest_Position, Title FROM song WHERE Singer_ID = 34 AND Sales <= (SELECT AVG(Sales) FROM song WHERE Singer_ID BETWEEN 1 AND 10) LIMIT 2'], ['SELECT AVG(singer.Singer_ID), Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE  Net_Worth_Millions < 48', 'SELECT singer.Singer_ID, Name, AVG(song.Sales) FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Net_Worth_Millions < 48 GROUP BY singer.Singer_ID, Name;'], ['SELECT SUM(Singer_ID), Citizenship FROM singer WHERE Birth_Year BETWEEN 1 AND 10 OR  Singer_ID = 44 ORDER BY Citizenship ASC LIMIT 8', 'SELECT COUNT(Singer_ID), Citizenship FROM singer WHERE Birth_Year BETWEEN 1 AND 10 OR Singer_ID = 44 GROUP BY Citizenship ORDER BY Citizenship ASC LIMIT 8;'], ['SELECT SUM(Highest_Position), AVG(Song_ID), Title, Singer_ID FROM song WHERE  Highest_Position = 3 OR Sales IN (SELECT Sales FROM song AS z WHERE z.Singer_ID BETWEEN 1 AND 10) GROUP BY Singer_ID HAVING MAX(Highest_Position) <= 63 ORDER BY Singer_ID DESC LIMIT 1', 'SELECT SUM(Highest_Position), AVG(Song_ID), Title, Singer_ID FROM song WHERE Highest_Position = 3 OR Sales IN (SELECT Sales FROM song AS z WHERE z.Singer_ID BETWEEN 1 AND 10) GROUP BY Singer_ID, Title HAVING MAX(Highest_Position) <= 63 ORDER BY Singer_ID DESC LIMIT 1'], ['SELECT MAX(t.Net_Worth_Millions), t.Name FROM singer AS t', 'SELECT MAX(Net_Worth_Millions) FROM singer;'], ['SELECT e.Singer_ID, singer.Singer_ID, singer.Citizenship FROM singer AS e JOIN singer ON singer.Singer_ID = e.Singer_ID WHERE  singer.Birth_Year != 84 GROUP BY singer.Citizenship HAVING MIN(e.Net_Worth_Millions) < 54 ORDER BY singer.Citizenship ASC LIMIT 1', 'SELECT s1.Singer_ID, s2.Singer_ID, s2.Citizenship FROM singer AS s1 JOIN singer AS s2 ON s2.Singer_ID = s1.Singer_ID WHERE s2.Birth_Year != 84 GROUP BY s2.Citizenship HAVING MIN(s1.Net_Worth_Millions) < 54 ORDER BY s2.Citizenship ASC LIMIT 1'], ['SELECT COUNT(DISTINCT l.Citizenship), l.Name FROM singer AS l JOIN singer ON singer.Singer_ID = l.Singer_ID WHERE singer.Birth_Year BETWEEN 1 AND 10 OR  l.Birth_Year != 27 GROUP BY l.Name', 'SELECT l.Citizenship, COUNT(l.Name) FROM singer AS l GROUP BY l.Citizenship;'], ['SELECT MIN(Highest_Position) FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Singer_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM singer WHERE song.Song_ID = Singer_ID) LIMIT 5', 'SELECT MIN(Highest_Position) FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID WHERE singer.Singer_ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM singer AS s WHERE song.Singer_ID = s.Singer_ID) LIMIT 5'], ['SELECT Name FROM singer WHERE  Birth_Year > 60 OR Net_Worth_Millions = (SELECT SUM(Net_Worth_Millions) FROM singer WHERE Net_Worth_Millions BETWEEN 1 AND 10 OR  Net_Worth_Millions > 7) LIMIT 9', 'SELECT Name FROM singer WHERE Birth_Year > 1960 OR Net_Worth_Millions = (SELECT SUM(Net_Worth_Millions) FROM singer WHERE Net_Worth_Millions BETWEEN 1 AND 10) LIMIT 9'], ['SELECT Song_ID, Song_ID FROM song WHERE Sales BETWEEN 1 AND 10 AND  Highest_Position <= 61 ORDER BY Song_ID DESC LIMIT 2', 'SELECT Song_ID FROM song WHERE Sales BETWEEN 1 AND 10 AND Highest_Position <= 61 ORDER BY Song_ID DESC LIMIT 2'], ['SELECT SUM(m.Sales), COUNT(m.Singer_ID), m.Highest_Position FROM song AS m WHERE  m.Singer_ID != 69 GROUP BY m.Highest_Position HAVING MIN(m.Singer_ID) < 87 ORDER BY m.Highest_Position DESC LIMIT 9', 'SELECT SUM(s.Sales), COUNT(s.Singer_ID), s.Highest_Position FROM song AS s WHERE  s.Singer_ID != 69 GROUP BY s.Highest_Position HAVING MIN(s.Singer_ID) < 87 ORDER BY s.Highest_Position DESC LIMIT 9']], 'products_gen_characteristics': [['SELECT AVG(characteristic_id), Ref_Characteristic_Types.characteristic_type_code FROM Characteristics JOIN Ref_Characteristic_Types ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code WHERE  characteristic_id = 64 ORDER BY Ref_Characteristic_Types.characteristic_type_code DESC', 'SELECT COUNT(characteristic_id), Ref_Characteristic_Types.characteristic_type_code FROM Characteristics JOIN Ref_Characteristic_Types ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code WHERE characteristic_id = 64 ORDER BY Ref_Characteristic_Types.characteristic_type_code DESC;'], ['SELECT product_id, product_id, other_product_details, product_category_code FROM Ref_Colors JOIN Products ON Products.color_code = Ref_Colors.color_code WHERE typical_selling_price IN (SELECT typical_selling_price FROM Products WHERE product_id BETWEEN 1 AND 10) GROUP BY product_category_code', 'SELECT product_id, other_product_details, product_category_code FROM Products JOIN Ref_Colors ON Products.color_code = Ref_Colors.color_code WHERE typical_selling_price IN (SELECT typical_selling_price FROM Products WHERE product_id BETWEEN 1 AND 10);'], ['SELECT SUM(Characteristics.characteristic_id), Product_Characteristics.characteristic_id FROM Characteristics JOIN Ref_Characteristic_Types JOIN Product_Characteristics ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code AND Characteristics.characteristic_id = Product_Characteristics.characteristic_id WHERE  Characteristics.characteristic_id > 54 ORDER BY Product_Characteristics.characteristic_id DESC LIMIT 3', 'SELECT COUNT(*), Product_Characteristics.characteristic_id FROM Characteristics JOIN Ref_Characteristic_Types ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code JOIN Product_Characteristics ON Characteristics.characteristic_id = Product_Characteristics.characteristic_id WHERE Characteristics.characteristic_id > 54 GROUP BY Product_Characteristics.characteristic_id ORDER BY Product_Characteristics.characteristic_id DESC LIMIT 3'], ['SELECT Product_Characteristics.product_id, product_category_description FROM Ref_Colors JOIN Ref_Product_Categories JOIN Product_Characteristics JOIN Products ON Products.color_code = Ref_Colors.color_code AND Products.product_id = Product_Characteristics.product_id AND Ref_Product_Categories.product_category_code = Products.product_category_code', 'SELECT Product_Characteristics.product_id, product_category_description FROM Products JOIN Ref_Colors ON Products.color_code = Ref_Colors.color_code JOIN Ref_Product_Categories ON Ref_Product_Categories.product_category_code = Products.product_category_code JOIN Product_Characteristics ON Products.product_id = Product_Characteristics.product_id;'], ['SELECT color_code FROM Ref_Colors WHERE color_code NOT IN (SELECT color_code FROM Ref_Colors)', 'SELECT color_code FROM Ref_Colors WHERE color_code NOT IN (SELECT color_code FROM Products)'], ['SELECT Characteristics.characteristic_id, Characteristics.characteristic_name, r.characteristic_data_type FROM Characteristics AS r JOIN Characteristics ON Characteristics.characteristic_id = r.characteristic_id WHERE  Characteristics.characteristic_id <= 23 GROUP BY r.characteristic_data_type HAVING SUM(Characteristics.characteristic_id) = 44 ORDER BY Characteristics.characteristic_name DESC LIMIT 6', 'SELECT C.characteristic_id, C.characteristic_name, C.characteristic_data_type FROM Characteristics AS C JOIN Product_Characteristics AS PC ON C.characteristic_id = PC.characteristic_id WHERE C.characteristic_id <= 23 GROUP BY C.characteristic_data_type HAVING SUM(C.characteristic_id) = 44 ORDER BY C.characteristic_name DESC LIMIT 6'], ['SELECT COUNT(product_id), typical_selling_price FROM Products WHERE product_id BETWEEN 1 AND 10 OR  product_id < 36 ORDER BY typical_selling_price DESC LIMIT 7', 'SELECT COUNT(product_id), CAST(REPLACE(typical_selling_price, ",", "") AS REAL) AS typical_selling_price FROM Products WHERE product_id BETWEEN 1 AND 10 OR product_id < 36 ORDER BY CAST(REPLACE(typical_selling_price, ",", "") AS REAL) DESC LIMIT 7'], ['SELECT COUNT(product_id), product_description FROM Ref_Colors JOIN Ref_Product_Categories JOIN Products ON Products.color_code = Ref_Colors.color_code AND Ref_Product_Categories.product_category_code = Products.product_category_code WHERE  product_id != 44 GROUP BY product_description HAVING COUNT(product_id) >= 68', 'SELECT COUNT(p.product_id), p.product_description FROM Ref_Colors AS rc JOIN Ref_Product_Categories AS rpc JOIN Products AS p ON p.color_code = rc.color_code AND rpc.product_category_code = p.product_category_code WHERE p.product_id != 44 GROUP BY p.product_description HAVING COUNT(p.product_id) >= 68'], ['SELECT SUM(product_id), product_characteristic_value FROM Product_Characteristics WHERE  product_id <= 43 AND characteristic_id IN (SELECT characteristic_id FROM Product_Characteristics AS o LIMIT 2)', 'SELECT product_characteristic_value, SUM(1) FROM Product_Characteristics WHERE product_id <= 43 AND characteristic_id IN (SELECT characteristic_id FROM Product_Characteristics AS o LIMIT 2) GROUP BY product_characteristic_value;'], ['SELECT COUNT(DISTINCT characteristic_id), characteristic_data_type FROM Characteristics WHERE characteristic_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Product_Characteristics WHERE Characteristics.characteristic_id = characteristic_id LIMIT 6) GROUP BY characteristic_data_type HAVING AVG(characteristic_id) >= 2', 'SELECT COUNT(DISTINCT characteristic_id), characteristic_data_type FROM Characteristics WHERE characteristic_id BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Product_Characteristics WHERE Product_Characteristics.characteristic_id = Characteristics.characteristic_id LIMIT 6) GROUP BY characteristic_data_type HAVING AVG(characteristic_id) >= 2'], ['SELECT COUNT(DISTINCT product_id), COUNT(DISTINCT product_id), product_characteristic_value FROM Product_Characteristics WHERE product_id BETWEEN 1 AND 10 AND  characteristic_id = 37 ORDER BY product_characteristic_value ASC', 'SELECT COUNT(DISTINCT product_id), product_characteristic_value FROM Product_Characteristics WHERE product_id BETWEEN 1 AND 10 AND characteristic_id = 37 ORDER BY product_characteristic_value ASC'], ['SELECT MAX(characteristic_id), MIN(characteristic_id), characteristic_id, other_characteristic_details FROM Characteristics JOIN Ref_Characteristic_Types ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code WHERE  characteristic_id >= 12 GROUP BY other_characteristic_details HAVING AVG(characteristic_id) < 84', 'SELECT MAX(Characteristics.characteristic_id), MIN(Characteristics.characteristic_id), Characteristics.characteristic_id, other_characteristic_details FROM Characteristics JOIN Ref_Characteristic_Types ON Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code WHERE Characteristics.characteristic_id >= 12 GROUP BY other_characteristic_details HAVING AVG(Characteristics.characteristic_id) < 84;'], ['SELECT p.typical_buying_price, p.product_category_code, p.product_description FROM Products AS p WHERE  p.product_id = 87 GROUP BY p.product_description HAVING SUM(p.product_id) = 70 ORDER BY p.product_category_code DESC LIMIT 4', 'SELECT p.typical_buying_price, p.product_category_code, p.product_description FROM Products AS p WHERE p.product_id = 87 GROUP BY p.product_category_code, p.product_description ORDER BY p.product_category_code DESC LIMIT 4']], 'department_management': [['SELECT r.Department_ID, r.Ranking FROM department AS r WHERE  r.Department_ID = 46 LIMIT 2', 'SELECT Department_ID, Ranking FROM department WHERE Department_ID = 46 LIMIT 1;'], ['SELECT AVG(department_ID), SUM(department_ID), temporary_acting FROM management WHERE  head_ID = 89', 'SELECT COUNT(department_ID), temporary_acting FROM management WHERE head_ID = 89'], ['SELECT a.Department_ID FROM department AS a WHERE a.Budget_in_Billions BETWEEN 1 AND 10 OR Budget_in_Billions > (SELECT AVG(Budget_in_Billions) FROM department AS s WHERE  s.Ranking >= 55) ORDER BY a.Department_ID DESC LIMIT 1', 'SELECT Department_ID FROM department WHERE Budget_in_Billions BETWEEN 1 AND 10 OR Budget_in_Billions > (SELECT AVG(Budget_in_Billions) FROM department WHERE Ranking >= 55) ORDER BY Department_ID DESC LIMIT 1'], ['SELECT AVG(p.Num_Employees), p.Name FROM department AS p WHERE Num_Employees NOT IN (SELECT Num_Employees FROM department WHERE  Department_ID > 70) LIMIT 1', 'SELECT AVG(p.Num_Employees), p.Name FROM department AS p WHERE p.Num_Employees NOT IN (SELECT Num_Employees FROM department AS d WHERE d.Department_ID > 70) LIMIT 1'], ['SELECT age, management.head_ID, name FROM management JOIN head ON management.head_ID = head.head_ID WHERE  management.head_ID >= 54 GROUP BY name ORDER BY name DESC', 'SELECT head.age, management.head_ID, head.name FROM management JOIN head ON management.head_ID = head.head_ID WHERE  management.head_ID >= 54 GROUP BY head.name ORDER BY head.name DESC;'], ['SELECT k.Department_ID FROM department AS k WHERE  k.Ranking = 27', 'SELECT Department_ID FROM department WHERE Ranking = 27'], ['SELECT c.name FROM head AS c JOIN head ON head.head_ID = c.head_ID WHERE  head.age != 92 AND head_ID = (SELECT MAX(head_ID) FROM management AS n WHERE  n.head_ID >= 63) ORDER BY c.name ASC', 'SELECT c.name FROM head AS c JOIN head AS h ON h.head_ID = c.head_ID WHERE h.age != 92 AND h.head_ID = (SELECT MAX(n.head_ID) FROM management AS n WHERE n.head_ID >= 63) ORDER BY c.name ASC'], ['SELECT COUNT(i.age), COUNT(DISTINCT i.age), i.head_ID FROM head AS i WHERE i.age BETWEEN 1 AND 10 OR head_ID NOT IN (SELECT head_ID FROM head WHERE age BETWEEN 1 AND 10) ORDER BY i.head_ID ASC LIMIT 7', 'SELECT COUNT(i.age), COUNT(DISTINCT i.age), i.head_ID FROM head AS i WHERE i.age BETWEEN 1 AND 10 OR head_ID NOT IN (SELECT head_ID FROM head WHERE age BETWEEN 1 AND 10) ORDER BY i.head_ID ASC LIMIT 7'], ['SELECT MAX(Ranking), Name FROM department WHERE  Num_Employees <= 18 ORDER BY Name DESC', 'SELECT MAX(Ranking) AS max_ranking, Name FROM department WHERE Num_Employees <= 18 ORDER BY Name DESC;'], ['SELECT COUNT(Department_ID), Creation FROM department JOIN management ON department.Department_ID = management.department_ID WHERE head_ID BETWEEN 1 AND 10 AND Creation NOT IN (SELECT Creation FROM department AS w WHERE w.Num_Employees BETWEEN 1 AND 10) ORDER BY Creation ASC LIMIT 6', 'SELECT COUNT(department.Department_ID), department.Creation FROM department JOIN management ON department.Department_ID = management.department_ID WHERE head_ID BETWEEN 1 AND 10 AND department.Creation NOT IN (SELECT Creation FROM department WHERE department.Num_Employees BETWEEN 1 AND 10) ORDER BY department.Creation ASC LIMIT 6'], ['SELECT age, name FROM management JOIN head ON management.head_ID = head.head_ID GROUP BY name ORDER BY name DESC LIMIT 7', 'SELECT h.age, h.name FROM management m JOIN head h ON m.head_ID = h.head_ID GROUP BY h.name, h.age ORDER BY h.name DESC LIMIT 7'], ['SELECT Budget_in_Billions FROM department JOIN management ON department.Department_ID = management.department_ID WHERE  Ranking < 8', 'SELECT T2.Budget_in_Billions FROM management AS T1 JOIN department AS T2 ON T1.department_ID = T2.Department_ID WHERE T2.Ranking < 8;'], ['SELECT k.name, k.born_state FROM head AS k WHERE  k.age <= 55 GROUP BY k.name HAVING MIN(k.age) <= 93', 'SELECT k.name, k.born_state FROM head AS k WHERE k.age <= 55 GROUP BY k.name, k.born_state HAVING MIN(k.age) <= 93']], 'academic': [['SELECT l.oid, l.oid, l.name FROM organization AS l WHERE  l.oid > 30 GROUP BY l.name HAVING MIN(l.oid) < 36', 'SELECT oid, name FROM organization AS l WHERE  l.oid > 30 AND l.oid < 36'], ['SELECT journal.homepage, title FROM journal JOIN conference JOIN domain_conference JOIN publication ON publication.cid = conference.cid AND domain_conference.cid = conference.cid AND journal.jid = publication.jid WHERE publication.jid BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM domain_conference WHERE did BETWEEN 1 AND 10 AND conference.cid = cid)', 'SELECT journal.homepage, title FROM publication JOIN conference ON publication.cid = conference.cid JOIN domain_conference ON conference.cid = domain_conference.cid JOIN journal ON publication.jid = journal.jid WHERE publication.jid BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM domain_conference WHERE domain_conference.did BETWEEN 1 AND 10 AND domain_conference.cid = publication.cid)'], ['SELECT COUNT(p.jid) FROM journal AS p WHERE  p.jid <= 22 LIMIT 9', 'SELECT COUNT(j.jid) FROM journal AS j WHERE  j.jid <= 22 LIMIT 9'], ['SELECT MIN(publication.cid), AVG(pid) FROM conference JOIN domain_conference JOIN publication ON publication.cid = conference.cid AND domain_conference.cid = conference.cid WHERE did BETWEEN 1 AND 10 LIMIT 6', 'SELECT MIN(publication.cid), AVG(pid) FROM conference JOIN domain_conference ON conference.cid = domain_conference.cid JOIN publication ON publication.cid = conference.cid WHERE domain_conference.did BETWEEN 1 AND 10 LIMIT 6'], ['SELECT abstract FROM journal JOIN conference JOIN domain_journal JOIN publication ON publication.cid = conference.cid AND domain_journal.jid = journal.jid AND journal.jid = publication.jid WHERE  citation_num > 81 AND EXISTS (SELECT * FROM journal WHERE  jid = 1 AND domain_journal.did = jid)', 'SELECT abstract FROM publication AS T1 INNER JOIN conference AS T2 ON T1.cid = T2.cid INNER JOIN domain_journal AS T3 ON T3.jid = T1.jid INNER JOIN journal AS T4 ON T4.jid = T3.jid WHERE citation_num > 81 AND EXISTS (SELECT * FROM journal AS T5 INNER JOIN domain_journal AS T6 ON T5.jid = T6.jid WHERE T5.jid = 1)'], ['SELECT COUNT(y.jid), COUNT(DISTINCT y.jid), y.jid FROM domain_journal JOIN domain_journal AS y ON domain_journal.did = y.did WHERE y.did BETWEEN 1 AND 10 GROUP BY y.jid HAVING AVG(y.did) > 100 ORDER BY y.jid ASC', 'SELECT COUNT(y.jid), COUNT(DISTINCT y.jid), y.jid FROM domain_journal JOIN domain_journal AS y ON domain_journal.did = y.did WHERE y.did BETWEEN 1 AND 10 GROUP BY y.jid ORDER BY y.jid ASC'], ['SELECT k.oid, k.oid, k.continent FROM organization AS k JOIN organization ON organization.oid = k.oid WHERE homepage NOT IN (SELECT homepage FROM conference WHERE  cid = 39) GROUP BY k.continent HAVING MAX(k.oid) > 39', 'SELECT k.oid, k.oid, k.continent FROM organization AS k JOIN organization AS o ON o.oid = k.oid WHERE homepage NOT IN (SELECT homepage FROM conference WHERE  cid = 39) GROUP BY k.continent HAVING MAX(k.oid) > 39'], ['SELECT oid, name FROM author WHERE  aid = 93 GROUP BY name', 'SELECT oid, name FROM author WHERE aid = 93'], ['SELECT MAX(year), reference_num, did FROM journal JOIN conference JOIN domain_journal JOIN publication ON publication.cid = conference.cid AND domain_journal.jid = journal.jid AND journal.jid = publication.jid WHERE  year < 67 ORDER BY reference_num ASC', 'SELECT MAX(p.year), p.reference_num, dj.did FROM journal j JOIN domain_journal dj ON j.jid = dj.jid JOIN publication p ON p.jid = j.jid WHERE  p.year < 1967 ORDER BY p.reference_num ASC;'], ['SELECT writes.aid, name, oid FROM author JOIN domain_author JOIN writes ON domain_author.aid = author.aid AND author.aid = writes.aid WHERE writes.aid BETWEEN 1 AND 10 AND  oid != 79 GROUP BY oid HAVING AVG(domain_author.aid) >= 54', 'SELECT T2.oid, T2.name, T1.oid FROM (SELECT T1.oid, AVG(T3.aid) AS avg_aid FROM domain_author AS T1 INNER JOIN domain AS T2 ON T1.did = T2.did INNER JOIN author AS T3 ON T1.aid = T3.aid INNER JOIN writes AS T4 ON T1.aid = T4.aid WHERE T4.aid BETWEEN 1 AND 10 AND T1.oid != 79 GROUP BY T1.oid) AS T1 INNER JOIN author AS T2 ON T1.oid = T2.oid WHERE T1.avg_aid >= 54;'], ['SELECT year, jid FROM cite JOIN publication ON publication.pid = cite.cited AND cite.citing = publication.pid WHERE  year <= 61', 'SELECT publication.year, publication.jid FROM cite JOIN publication ON cite.citing = publication.pid WHERE publication.year <= 61']], 'climbing': [['SELECT Prominence, Prominence FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Mountain_ID BETWEEN 1 AND 10 OR  Height < 1 LIMIT 4', 'SELECT T1.Prominence, T2.Name FROM mountain AS T1 JOIN climber AS T2 ON T2.Mountain_ID = T1.Mountain_ID WHERE T2.Mountain_ID BETWEEN 1 AND 10 OR T1.Height < 1 LIMIT 4'], ['SELECT Name FROM mountain WHERE Prominence BETWEEN 1 AND 10 OR Range > (SELECT MAX(Range) FROM mountain AS k LIMIT 10) GROUP BY Name HAVING MIN(Height) < 49', "SELECT Name, MIN(Height) FROM mountain WHERE Prominence BETWEEN 1 AND 10 OR CAST(REPLACE(REPLACE(Range, ',', ''), ' \\$', '') AS REAL) > (SELECT MAX(CAST(REPLACE(REPLACE(Range, ',', ''), ' \\$', '') AS REAL)) FROM mountain) GROUP BY Name HAVING MIN(Height) < 49"], ['SELECT mountain.Country, mountain.Country FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE  climber.Mountain_ID != 55 ORDER BY mountain.Country DESC', 'SELECT mountain.Country FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE climber.Mountain_ID != 55 ORDER BY mountain.Country DESC;'], ['SELECT SUM(Height), Prominence, Mountain_ID FROM mountain WHERE  Mountain_ID = 97 ORDER BY Prominence ASC LIMIT 10', 'SELECT SUM(Height) FROM mountain WHERE Mountain_ID = 97'], ['SELECT MAX(Mountain_ID) FROM climber WHERE  Points = 72 AND EXISTS (SELECT * FROM mountain WHERE  Mountain_ID >= 16 AND climber.Climber_ID = Mountain_ID)', 'SELECT MAX(Mountain_ID) FROM climber WHERE Points = 72 AND EXISTS (SELECT * FROM mountain WHERE Mountain_ID >= 16 AND climber.Mountain_ID = mountain.Mountain_ID)'], ['SELECT COUNT(DISTINCT Height), COUNT(DISTINCT climber.Country), Points, Range FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE EXISTS (SELECT * FROM mountain WHERE  Mountain_ID = 53 AND climber.Climber_ID = Mountain_ID) GROUP BY Range HAVING AVG(Climber_ID) <= 26 ORDER BY Points DESC LIMIT 3', 'SELECT COUNT(DISTINCT mountain.Height), COUNT(DISTINCT climber.Country), AVG(climber.Points) AS avg_points, mountain.Range FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE mountain.Mountain_ID = 53 GROUP BY mountain.Range HAVING COUNT(climber.Climber_ID) <= 26 ORDER BY avg_points DESC, mountain.Range LIMIT 3'], ['SELECT p.Time FROM climber AS p JOIN climber ON climber.Climber_ID = p.Climber_ID WHERE p.Mountain_ID BETWEEN 1 AND 10 ORDER BY p.Time ASC LIMIT 3', 'SELECT p.Time FROM climber AS p JOIN climber AS c ON c.Climber_ID = p.Climber_ID WHERE p.Mountain_ID BETWEEN 1 AND 10 ORDER BY STR_TO_DATE(p.Time, "%H:%i:%s") ASC LIMIT 3'], ['SELECT COUNT(DISTINCT Points), Height FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID LIMIT 9', 'SELECT COUNT(DISTINCT T2.Points), T1.Height FROM mountain AS T1 JOIN climber AS T2 ON T2.Mountain_ID = T1.Mountain_ID GROUP BY T1.Height LIMIT 9'], ['SELECT mountain.Country, climber.Country FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE  Height < 14 LIMIT 5', 'SELECT mountain.Country, climber.Country FROM mountain JOIN climber ON climber.Mountain_ID = mountain.Mountain_ID WHERE mountain.Height < 14 LIMIT 5'], ['SELECT COUNT(Points), Time FROM climber WHERE Points NOT IN (SELECT Points FROM climber AS a WHERE  a.Points < 32)', 'SELECT COUNT(Points) FROM climber WHERE Points NOT IN (SELECT Points FROM climber AS a WHERE a.Points < 32)'], ['SELECT COUNT(DISTINCT Name), Country, Name FROM climber WHERE  Points > 34 GROUP BY Name HAVING COUNT(Mountain_ID) > 70 ORDER BY Country DESC LIMIT 1', 'SELECT COUNT(DISTINCT T1.Name), T1.Country, T1.Name FROM climber AS T1 INNER JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Points > 34 GROUP BY T1.Name, T1.Country HAVING COUNT(T1.Mountain_ID) > 70 ORDER BY T1.Country DESC LIMIT 1'], ['SELECT COUNT(DISTINCT u.Prominence), COUNT(DISTINCT u.Range), u.Name FROM mountain AS u WHERE  u.Mountain_ID > 34', 'SELECT u.Name, COUNT(DISTINCT u.Prominence) AS prom_count, COUNT(DISTINCT u.Range) AS range_count FROM mountain AS u WHERE u.Mountain_ID > 34 GROUP BY u.Name;'], ['SELECT q.Country, climber.Country, q.Points FROM climber AS q JOIN climber ON climber.Climber_ID = q.Climber_ID WHERE  q.Mountain_ID > 52 GROUP BY q.Points HAVING COUNT(q.Climber_ID) >= 69 ORDER BY q.Country ASC', 'SELECT q.Country, q.Points FROM climber AS q JOIN climber AS c ON c.Climber_ID = q.Climber_ID WHERE  q.Mountain_ID > 52 GROUP BY q.Country, q.Points HAVING COUNT(q.Climber_ID) >= 69 ORDER BY q.Country ASC'], ['SELECT COUNT(DISTINCT Mountain_ID), Prominence, Height FROM mountain WHERE  Prominence != 79 GROUP BY Height HAVING SUM(Prominence) > 66 ORDER BY Height DESC', 'SELECT Mountain_ID, COUNT(DISTINCT Prominence), Sum(Height) FROM mountain WHERE Prominence != 79 GROUP BY Mountain_ID HAVING SUM(Prominence) > 66 ORDER BY Mountain_ID DESC'], ['SELECT z.Mountain_ID, z.Points FROM climber AS z WHERE  z.Climber_ID < 64', 'SELECT z.Mountain_ID, z.Points FROM climber AS z WHERE z.Climber_ID < 64;'], ['SELECT m.Climber_ID, m.Mountain_ID, m.Time FROM climber AS m WHERE m.Climber_ID BETWEEN 1 AND 10 OR Country IN (SELECT Country FROM mountain AS o WHERE o.Prominence BETWEEN 1 AND 10 OR  o.Mountain_ID = 20) GROUP BY m.Time', 'SELECT m.Climber_ID, m.Mountain_ID, m.Time FROM climber AS m WHERE m.Climber_ID BETWEEN 1 AND 10 OR m.Country IN (SELECT o.Country FROM mountain AS o WHERE o.Prominence BETWEEN 1 AND 10 OR  o.Mountain_ID = 20) GROUP BY m.Climber_ID, m.Mountain_ID, m.Time;']], 'e_government': [['SELECT individual_id FROM Individuals WHERE EXISTS (SELECT * FROM Organization_Contact_Individuals WHERE  individual_id > 7 AND Individuals.individual_id = individual_id) LIMIT 4', 'SELECT individual_id FROM Individuals WHERE EXISTS (SELECT * FROM Organization_Contact_Individuals WHERE individual_id > 7 AND Individuals.individual_id = Organization_Contact_Individuals.individual_id) LIMIT 4'], ['SELECT x.individual_first_name FROM Individuals AS x JOIN Individuals ON Individuals.individual_id = x.individual_id WHERE  Individuals.individual_id >= 33 ORDER BY x.individual_first_name ASC', 'SELECT individual_first_name FROM Individuals WHERE individual_id >= 33 ORDER BY individual_first_name ASC'], ['SELECT COUNT(DISTINCT x.date_contact_to), x.individual_id FROM Organization_Contact_Individuals AS x WHERE  x.individual_id < 6 AND date_contact_from > (SELECT SUM(date_contact_from) FROM Organization_Contact_Individuals WHERE  individual_id != 60 LIMIT 2)', 'SELECT COUNT(DISTINCT x.date_contact_to), x.individual_id FROM Organization_Contact_Individuals AS x WHERE x.individual_id < 6 AND date_contact_from > (SELECT MAX(date_contact_from) FROM Organization_Contact_Individuals WHERE individual_id != 60)'], ['SELECT AVG(individual_id), COUNT(DISTINCT individual_id) FROM Organization_Contact_Individuals WHERE date_contact_from < (SELECT MIN(date_contact_from) FROM Organization_Contact_Individuals WHERE individual_id BETWEEN 1 AND 10 AND  individual_id >= 36 LIMIT 6)', 'SELECT AVG(individual_id), COUNT(DISTINCT individual_id) FROM Organization_Contact_Individuals WHERE (individual_id, organization_id) IN (SELECT individual_id, organization_id FROM Organization_Contact_Individuals WHERE individual_id BETWEEN 1 AND 10 AND individual_id >= 36 ORDER BY date_contact_from LIMIT 6)'], ['SELECT customer_id FROM Party_Services JOIN Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Services.service_id = Party_Services.service_id AND Party_Services.customer_id = Parties.party_id WHERE  booking_id > 14 ORDER BY customer_id ASC LIMIT 1', 'SELECT customer_id FROM Party_Services JOIN Services ON Party_Services.service_id = Services.service_id JOIN Party_Forms ON Party_Services.customer_id = Party_Forms.party_id JOIN Parties ON Party_Forms.party_id = Parties.party_id WHERE booking_id > 14 ORDER BY customer_id ASC LIMIT 1'], ['SELECT COUNT(DISTINCT service_id), form_id, form_type_code FROM Forms WHERE  service_id >= 93 GROUP BY form_type_code ORDER BY form_type_code DESC', 'SELECT COUNT(DISTINCT service_id), form_type_code FROM Forms WHERE service_id >= 93 GROUP BY form_type_code ORDER BY form_type_code DESC'], ['SELECT x.party_id, x.party_id FROM Parties AS x WHERE x.party_id BETWEEN 1 AND 10 AND  x.party_id < 49', 'SELECT x.party_id FROM Parties AS x WHERE x.party_id BETWEEN 1 AND 49;'], ['SELECT form_type_code FROM Forms JOIN Party_Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Forms.form_id = Party_Forms.form_id AND Party_Services.customer_id = Parties.party_id WHERE Party_Forms.form_id BETWEEN 1 AND 10 AND  booking_id != 84 LIMIT 9', 'SELECT form_type_code FROM Forms JOIN Party_Forms ON Forms.form_id = Party_Forms.form_id JOIN Parties ON Parties.party_id = Party_Forms.party_id JOIN Party_Services ON Party_Services.customer_id = Parties.party_id WHERE Party_Forms.form_id BETWEEN 1 AND 10 AND booking_id != 84 LIMIT 9'], ['SELECT service_id FROM Party_Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Party_Services.customer_id = Parties.party_id WHERE booking_id BETWEEN 1 AND 10 OR  customer_id = 38', 'SELECT T1.service_id FROM Party_Services AS T1 JOIN Party_Forms AS T2 ON T1.customer_id = T2.party_id JOIN Parties AS T3 ON T3.party_id = T2.party_id WHERE T1.booking_id BETWEEN 1 AND 10 OR T1.customer_id = 38'], ['SELECT SUM(e.service_id), COUNT(DISTINCT e.service_id) FROM Forms AS e WHERE  e.form_id >= 41', 'SELECT COUNT(e.service_id), COUNT(DISTINCT e.service_id) FROM Forms AS e WHERE  e.form_id >= 41'], ['SELECT COUNT(Services.service_id), booking_id FROM Forms JOIN Party_Services JOIN Services ON Forms.service_id = Services.service_id AND Services.service_id = Party_Services.service_id WHERE  Forms.service_id < 56 ORDER BY booking_id DESC', 'SELECT COUNT(Services.service_id), Party_Services.booking_id FROM Forms INNER JOIN Party_Services ON Forms.service_id = Party_Services.service_id INNER JOIN Services ON Forms.service_id = Services.service_id WHERE Forms.service_id < 56 ORDER BY Party_Services.booking_id DESC'], ['SELECT MIN(service_id), service_id, form_name FROM Forms WHERE  form_id = 90 GROUP BY form_name', 'SELECT MIN(service_id), service_id, form_name FROM Forms WHERE form_id = 90 GROUP BY form_name, service_id'], ['SELECT MAX(Forms.service_id), MIN(Party_Forms.form_id) FROM Forms JOIN Party_Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Forms.form_id = Party_Forms.form_id AND Party_Services.customer_id = Parties.party_id WHERE  Party_Forms.form_id < 38 AND EXISTS (SELECT * FROM Forms WHERE  service_id > 11 AND Party_Forms.party_id = form_id)', 'SELECT MAX(Forms.service_id), MIN(Party_Forms.form_id) FROM Forms JOIN Party_Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Forms.form_id = Party_Forms.form_id AND Party_Services.customer_id = Parties.party_id WHERE Party_Forms.form_id < 38 AND EXISTS (SELECT * FROM Forms AS F WHERE F.service_id > 11 AND F.form_id = Party_Forms.form_id)'], ['SELECT SUM(form_id), form_description FROM Forms LIMIT 5', 'SELECT SUM(form_id) FROM Forms LIMIT 5'], ['SELECT AVG(Party_Forms.party_id), booking_id FROM Party_Services JOIN Party_Forms JOIN Parties ON Parties.party_id = Party_Forms.party_id AND Party_Services.customer_id = Parties.party_id WHERE  service_id = 18 LIMIT 7', 'SELECT AVG(Party_Forms.party_id), booking_id \n                    FROM Party_Services \n                    JOIN Parties ON Party_Services.customer_id = Parties.party_id \n                    JOIN Party_Forms ON Parties.party_id = Party_Forms.party_id \n                    WHERE service_id = 18 \n                    LIMIT 7']], 'online_exams': [['SELECT Student_Answer_ID FROM Questions_in_Exams JOIN Student_Answers ON Questions_in_Exams.Exam_ID = Student_Answers.Exam_ID AND Student_Answers.Question_ID = Questions_in_Exams.Question_ID WHERE  Student_Answers.Exam_ID >= 78 ORDER BY Student_Answer_ID DESC LIMIT 5', 'SELECT T2.Student_Answer_ID FROM Questions_in_Exams AS T1 JOIN Questions AS T3 ON T1.Question_ID = T3.Question_ID JOIN Student_Answers AS T2 ON T1.Exam_ID = T2.Exam_ID AND T2.Question_ID = T3.Question_ID WHERE T2.Exam_ID >= 78 ORDER BY T2.Student_Answer_ID DESC LIMIT 5'], ['SELECT COUNT(DISTINCT Question_Text), Valid_Answers.Question_ID, Valid_Answer_ID FROM Questions JOIN Valid_Answers ON Valid_Answers.Question_ID = Questions.Question_ID WHERE  Valid_Answer_ID = 20 GROUP BY Valid_Answers.Question_ID', 'SELECT COUNT(DISTINCT Question_Text), Valid_Answer_ID FROM Questions JOIN Valid_Answers ON Valid_Answers.Question_ID = Questions.Question_ID WHERE Valid_Answer_ID = 20'], ['SELECT MAX(p.Question_ID), Questions.Question_Text FROM Questions JOIN Questions AS p ON Questions.Question_ID = p.Question_ID WHERE  Questions.Question_ID != 91 AND EXISTS (SELECT * FROM Valid_Answers WHERE Questions.Question_ID = Question_ID) LIMIT 1', 'SELECT Question_Text FROM Questions WHERE Question_ID = ( SELECT MAX(Question_ID) FROM Questions WHERE Question_ID != 91 AND Question_ID IN ( SELECT Question_ID FROM Valid_Answers ) )'], ['SELECT COUNT(DISTINCT Question_Text), Question_Text, Question_Text, Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING MIN(Question_ID) = 5 LIMIT 3', 'SELECT COUNT(DISTINCT Question_Text), Question_Text, Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING MIN(Question_ID) = 5 LIMIT 3'], ['SELECT d.Subject_Code, d.Subject_Code, d.Exam_Name FROM Exams AS d WHERE Exam_Name IN (SELECT Exam_Name FROM Exams WHERE Exam_ID BETWEEN 1 AND 10 OR  Exam_ID > 62 LIMIT 9) GROUP BY d.Exam_Name HAVING MAX(d.Exam_ID) < 26 ORDER BY d.Subject_Code ASC', 'SELECT d.Subject_Code, d.Exam_Name FROM Exams AS d WHERE Exam_Name IN (SELECT Exam_Name FROM Exams WHERE Exam_ID BETWEEN 1 AND 10 OR  Exam_ID > 62 LIMIT 9) GROUP BY d.Exam_Name, d.Subject_Code HAVING MAX(d.Exam_ID) < 26 ORDER BY d.Subject_Code ASC'], ['SELECT Student_Answer_Text, Student_Answer_Text, Comments FROM Student_Answers', 'SELECT Student_Answer_Text, Comments FROM Student_Answers'], ['SELECT COUNT(DISTINCT u.Cell_Mobile_Phone), u.Last_Name FROM Students AS u WHERE u.Student_ID BETWEEN 1 AND 10 LIMIT 10', 'SELECT COUNT(DISTINCT Students.Cell_Mobile_Phone), Students.Last_Name FROM Students AS Students WHERE Students.Student_ID BETWEEN 1 AND 10 LIMIT 10'], ['SELECT MIN(Student_ID), MAX(Student_ID), MIN(Student_ID) FROM Students WHERE  Student_ID = 52', 'SELECT MIN(Student_ID), MAX(Student_ID) FROM Students WHERE Student_ID = 52'], ['SELECT Valid_Answer_ID, Question_ID FROM Valid_Answers WHERE  Question_ID != 64 GROUP BY Question_ID HAVING AVG(Valid_Answer_ID) >= 52', 'SELECT Question_ID, AVG(Valid_Answer_ID) FROM Valid_Answers WHERE Question_ID != 64 GROUP BY Question_ID HAVING AVG(Valid_Answer_ID) >= 52;'], ['SELECT Valid_Answers.Question_ID FROM Questions JOIN Questions_in_Exams JOIN Valid_Answers JOIN Student_Answers ON Questions_in_Exams.Exam_ID = Student_Answers.Exam_ID AND Student_Answers.Question_ID = Questions_in_Exams.Question_ID AND Questions.Question_ID = Questions_in_Exams.Question_ID AND Valid_Answers.Question_ID = Questions.Question_ID WHERE  Student_Answers.Question_ID > 82 ORDER BY Valid_Answers.Question_ID ASC', 'SELECT Valid_Answers.Question_ID FROM Questions JOIN Questions_in_Exams ON Questions.Question_ID = Questions_in_Exams.Question_ID JOIN Valid_Answers ON Valid_Answers.Question_ID = Questions_in_Exams.Question_ID JOIN Student_Answers ON Questions_in_Exams.Exam_ID = Student_Answers.Exam_ID AND Student_Answers.Question_ID = Questions_in_Exams.Question_ID JOIN Students ON Student_Answers.Student_ID = Students.Student_ID WHERE Student_Answers.Question_ID > 82 ORDER BY Valid_Answers.Question_ID ASC']], 'behavior_monitoring': [['SELECT MAX(Teachers.address_id), COUNT(DISTINCT n.cell_mobile_number), n.address_id FROM Teachers JOIN Teachers AS n ON Teachers.teacher_id = n.teacher_id WHERE  Teachers.address_id > 49 GROUP BY n.address_id', 'SELECT MAX(T.address_id), COUNT(DISTINCT T.cell_mobile_number), T.address_id FROM Teachers T GROUP BY T.address_id HAVING T.address_id > 49'], ['SELECT COUNT(DISTINCT m.address_id), m.address_id FROM Addresses AS m WHERE  m.address_id >= 67', 'SELECT COUNT(DISTINCT m.address_id) FROM Addresses AS m WHERE  m.address_id >= 67'], ['SELECT COUNT(DISTINCT d.cell_mobile_number), COUNT(DISTINCT d.last_name), d.address_id FROM Teachers JOIN Teachers AS d ON Teachers.teacher_id = d.teacher_id ORDER BY d.address_id ASC LIMIT 1', 'SELECT COUNT(DISTINCT T.cell_mobile_number), COUNT(DISTINCT T.last_name), T.address_id FROM Teachers AS T ORDER BY T.address_id ASC LIMIT 1;'], ['SELECT SUM(student_id), line_1, email_address FROM Students JOIN Addresses ON Students.address_id = Addresses.address_id WHERE  Addresses.address_id < 85 OR cell_mobile_number IN (SELECT cell_mobile_number FROM Students WHERE  student_id > 4) GROUP BY email_address LIMIT 7', 'SELECT COUNT(Students.student_id), line_1, email_address FROM Students JOIN Addresses ON Students.address_id = Addresses.address_id WHERE  Addresses.address_id < 85 OR cell_mobile_number IN (SELECT cell_mobile_number FROM Students WHERE  student_id > 4) GROUP BY email_address, line_1 LIMIT 7'], ['SELECT AVG(Addresses.address_id), first_name FROM Students JOIN Ref_Incident_Type JOIN Addresses JOIN Behavior_Incident ON Students.address_id = Addresses.address_id AND Behavior_Incident.student_id = Students.student_id AND Ref_Incident_Type.incident_type_code = Behavior_Incident.incident_type_code WHERE  Students.address_id >= 27 GROUP BY first_name', 'SELECT AVG(Addresses.address_id), first_name FROM Students JOIN Addresses ON Students.address_id = Addresses.address_id JOIN Behavior_Incident ON Students.student_id = Behavior_Incident.student_id WHERE  Students.address_id >= 27 GROUP BY first_name'], ['SELECT incident_id, other_details FROM Behavior_Incident WHERE incident_summary IN (SELECT incident_summary FROM Behavior_Incident AS s WHERE s.student_id BETWEEN 1 AND 10 LIMIT 4) ORDER BY other_details DESC', 'SELECT detention_id, other_details FROM Behavior_Incident WHERE incident_summary IN (SELECT incident_summary FROM Behavior_Incident AS s WHERE s.student_id BETWEEN 1 AND 10 LIMIT 4) ORDER BY other_details DESC'], ['SELECT AVG(Students.student_id), city FROM Students JOIN Addresses JOIN Students_in_Detention ON Students.address_id = Addresses.address_id AND Students.student_id = Students_in_Detention.student_id ORDER BY city DESC', 'SELECT COUNT(Students.student_id), city FROM Students JOIN Addresses ON Students.address_id = Addresses.address_id JOIN Students_in_Detention ON Students.student_id = Students_in_Detention.student_id ORDER BY city DESC'], ['SELECT other_details FROM Behavior_Incident WHERE  student_id = 23', 'SELECT other_details FROM Behavior_Incident WHERE incident_id = 23;']], 'flight_4': [['SELECT c.apid FROM airports JOIN airports AS c ON airports.apid = c.apid WHERE  airports.apid >= 60 ORDER BY c.apid ASC LIMIT 10', 'SELECT apid FROM airports WHERE apid >= 60 ORDER BY apid ASC LIMIT 10'], ['SELECT COUNT(DISTINCT airline), airports.country, airports.iata, active FROM routes JOIN airlines JOIN airports ON routes.alid = airlines.alid AND routes.dst_apid = airports.apid AND airports.apid = routes.src_apid WHERE  airlines.alid != 49 GROUP BY active', 'SELECT COUNT(DISTINCT airlines.iata), airports.country, airports.iata, airlines.active FROM routes JOIN airlines ON routes.alid = airlines.alid JOIN airports ON routes.dst_apid = airports.apid WHERE airlines.alid != 49 GROUP BY airlines.active, airports.country, airports.iata'], ['SELECT COUNT(DISTINCT g.airline), g.dst_apid, g.rid, g.src_apid FROM routes AS g WHERE  g.rid >= 83 GROUP BY g.src_apid', 'SELECT COUNT(DISTINCT g.airline), g.dst_apid, g.rid, g.src_apid FROM routes AS g WHERE g.rid >= 83 GROUP BY g.dst_apid, g.rid, g.src_apid;'], ['SELECT icao, country, iata FROM airlines WHERE alid BETWEEN 1 AND 10 AND  alid >= 60 GROUP BY iata LIMIT 6', 'SELECT icao, country, iata FROM airlines WHERE alid BETWEEN 1 AND 10 OR alid >= 60 LIMIT 6;'], ['SELECT MIN(e.elevation), MIN(e.x), e.apid, e.country FROM airports AS e WHERE  e.x > 17 GROUP BY e.country HAVING SUM(e.x) > 71 LIMIT 4', 'SELECT MIN(e.elevation), MIN(e.x), e.country FROM airports AS e WHERE e.x > 17 GROUP BY e.country HAVING MIN(e.x) > 71 LIMIT 4'], ['SELECT COUNT(DISTINCT src_apid), rid, alid FROM routes WHERE  dst_apid >= 97 OR EXISTS (SELECT * FROM airports AS s WHERE  s.apid < 1 AND routes.rid = s.apid LIMIT 7) ORDER BY alid ASC', 'SELECT COUNT(DISTINCT src_apid), rid, alid FROM routes WHERE dst_apid >= 97 OR EXISTS (SELECT * FROM airports AS s WHERE s.apid < 1 AND routes.src_apid = s.apid LIMIT 7) ORDER BY alid ASC'], ['SELECT MIN(s.dst_apid), MIN(s.src_apid), s.codeshare FROM routes AS s WHERE s.dst_apid BETWEEN 1 AND 10 ORDER BY s.codeshare DESC LIMIT 4', 'SELECT MIN(s.dst_apid), MIN(s.src_apid), s.codeshare FROM routes AS s WHERE s.dst_apid BETWEEN 1 AND 10 ORDER BY s.codeshare DESC LIMIT 4'], ['SELECT dst_apid, codeshare FROM routes JOIN airlines ON routes.alid = airlines.alid', 'SELECT T2.dst_apid, T2.codeshare FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid'], ['SELECT AVG(alid), dst_ap FROM routes GROUP BY dst_ap', 'SELECT AVG(alid), dst_ap FROM routes GROUP BY dst_ap'], ['SELECT rid, airports.iata FROM routes JOIN airlines JOIN airports ON routes.alid = airlines.alid AND routes.dst_apid = airports.apid AND airports.apid = routes.src_apid WHERE  rid < 44 ORDER BY airports.iata ASC LIMIT 9', 'SELECT rid, airports.iata FROM routes JOIN airports ON routes.dst_apid = airports.apid JOIN airlines ON airlines.alid = routes.alid WHERE rid < 44 ORDER BY airports.iata ASC LIMIT 9'], ['SELECT MIN(p.alid), p.icao, p.callsign FROM airlines AS p WHERE p.alid BETWEEN 1 AND 10 AND  p.alid = 99', 'SELECT MIN(p.alid), p.icao, p.callsign FROM airlines AS p WHERE p.alid BETWEEN 1 AND 10;'], ['SELECT alid, src_ap FROM routes JOIN airports ON routes.dst_apid = airports.apid AND airports.apid = routes.src_apid WHERE y BETWEEN 1 AND 10 GROUP BY src_ap HAVING MIN(rid) <= 86 ORDER BY alid ASC', 'SELECT airlines.alid, routes.src_ap FROM routes JOIN airports ON routes.dst_apid = airports.apid JOIN airlines ON routes.alid = airlines.alid WHERE airports.y BETWEEN 1 AND 10 GROUP BY routes.src_ap HAVING MIN(routes.rid) <= 86 ORDER BY airlines.alid ASC;'], ['SELECT AVG(u.rid), u.rid, u.codeshare FROM routes AS u WHERE  u.dst_apid != 55', 'SELECT AVG(u.rid) FROM routes AS u WHERE u.dst_apid != 55;'], ['SELECT o.x FROM airports AS o WHERE o.apid BETWEEN 1 AND 10 OR  o.apid <= 100', 'SELECT o.x FROM airports AS o WHERE o.apid BETWEEN 1 AND 10 OR o.apid <= 100'], ['SELECT src_apid, alid FROM routes WHERE  src_apid <= 72 GROUP BY alid', 'SELECT src_apid, alid FROM routes WHERE src_apid <= 72 GROUP BY alid;'], ['SELECT COUNT(DISTINCT country), apid FROM routes JOIN airports ON routes.dst_apid = airports.apid AND airports.apid = routes.src_apid WHERE  y = 63 AND EXISTS (SELECT * FROM airports WHERE  x > 63 AND routes.rid = apid) ORDER BY apid ASC', 'SELECT COUNT(DISTINCT T2.country), T2.apid FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.y = 63 AND EXISTS (SELECT * FROM airports AS T3 WHERE T3.x > 63 AND T3.apid = T1.src_apid) ORDER BY T2.apid ASC'], ['SELECT m.country, m.name FROM airports AS m WHERE  m.x > 54 ORDER BY m.country ASC', 'SELECT airports.country, airports.name FROM airports AS m WHERE  airports.x > 54 ORDER BY airports.country ASC'], ['SELECT COUNT(DISTINCT src_apid), dst_apid, airline FROM routes WHERE  dst_apid <= 98', 'SELECT COUNT(DISTINCT r.src_apid), r.dst_apid, r.airline FROM routes r JOIN airports a ON r.dst_apid = a.apid WHERE r.dst_apid <= 98 GROUP BY r.dst_apid, r.airline;'], ['SELECT alid, codeshare FROM routes JOIN airports ON routes.dst_apid = airports.apid AND airports.apid = routes.src_apid WHERE  y < 20 LIMIT 6', 'SELECT r.alid, r.codeshare FROM routes r JOIN airports a ON r.dst_apid = a.apid WHERE a.y < 20 LIMIT 6;']], 'solvency_ii': [['SELECT Location_ID FROM Locations WHERE Location_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Events WHERE Locations.Location_ID = Location_ID) ORDER BY Location_ID ASC', 'SELECT Location_ID FROM Locations WHERE Location_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM Events WHERE Events.Location_ID = Locations.Location_ID) ORDER BY Location_ID ASC'], ['SELECT i.Event_ID, i.Asset_ID FROM Assets_in_Events JOIN Assets_in_Events AS i ON Assets_in_Events.Asset_ID = i.Asset_ID WHERE  i.Asset_ID >= 29', 'SELECT Asset_ID, Event_ID FROM Assets_in_Events WHERE Asset_ID >= 29;'], ['SELECT Event_Type_Code FROM Finances JOIN Events JOIN Assets_in_Events ON Events.Finance_ID = Finances.Finance_ID AND Events.Event_ID = Assets_in_Events.Event_ID AND Assets_in_Events.Event_ID = Events.Event_ID WHERE  Finances.Finance_ID <= 57 OR Asset_ID IN (SELECT Asset_ID FROM Assets AS k WHERE  k.Asset_ID = 9) ORDER BY Event_Type_Code ASC', 'SELECT Event_Type_Code FROM Finances JOIN Events JOIN Assets_in_Events ON Events.Finance_ID = Finances.Finance_ID AND Events.Event_ID = Assets_in_Events.Event_ID WHERE  Finances.Finance_ID <= 57 OR Assets_in_Events.Asset_ID IN (SELECT k.Asset_ID FROM Assets AS k WHERE  k.Asset_ID = 9) ORDER BY Event_Type_Code ASC'], ['SELECT Party_ID FROM Locations JOIN Events JOIN Parties_in_Events JOIN Assets_in_Events ON Events.Location_ID = Locations.Location_ID AND Events.Event_ID = Assets_in_Events.Event_ID AND Parties_in_Events.Event_ID = Events.Event_ID AND Assets_in_Events.Event_ID = Events.Event_ID WHERE  Party_ID > 8 OR Role_Code IN (SELECT Role_Code FROM Parties_in_Events WHERE  Event_ID > 26 LIMIT 10) LIMIT 3', ''], ['SELECT COUNT(DISTINCT Party_ID), Events.Location_ID, Events.Address_ID FROM Addresses JOIN Locations JOIN Events JOIN Parties_in_Events ON Events.Location_ID = Locations.Location_ID AND Parties_in_Events.Event_ID = Events.Event_ID AND Addresses.Address_ID = Events.Address_ID WHERE  Channel_ID >= 17 OR EXISTS (SELECT * FROM Assets_in_Events WHERE Asset_ID BETWEEN 1 AND 10 OR  Asset_ID <= 89 AND Events.Event_ID = Event_ID) GROUP BY Events.Address_ID HAVING COUNT(Events.Event_ID) < 6', 'SELECT COUNT(DISTINCT Party_ID), Events.Location_ID, Events.Address_ID FROM Addresses JOIN Locations JOIN Events JOIN Parties_in_Events ON Events.Location_ID = Locations.Location_ID AND Parties_in_Events.Event_ID = Events.Event_ID AND Addresses.Address_ID = Events.Address_ID WHERE  Channel_ID >= 17 OR EXISTS (SELECT * FROM Assets_in_Events WHERE Asset_ID BETWEEN 1 AND 10 OR  Asset_ID <= 89 AND Events.Event_ID = Assets_in_Events.Event_ID) GROUP BY Events.Address_ID HAVING COUNT(Events.Event_ID) < 6'], ['SELECT SUM(Channel_ID), Other_Details FROM Channels ORDER BY Other_Details DESC', 'SELECT SUM(Channel_ID), Other_Details FROM Channels GROUP BY Other_Details ORDER BY Other_Details DESC;'], ['SELECT Parties_in_Events.Party_ID, f.Role_Code FROM Parties_in_Events JOIN Parties_in_Events AS f ON Parties_in_Events.Party_ID = f.Party_ID', 'SELECT p1.Party_ID, p1.Role_Code FROM Parties_in_Events p1 JOIN Parties_in_Events p2 ON p1.Event_ID = p2.Event_ID'], ['SELECT Event_ID, Addresses.Address_ID, address_details FROM Addresses JOIN Locations JOIN Events ON Events.Location_ID = Locations.Location_ID AND Addresses.Address_ID = Events.Address_ID WHERE  Addresses.Address_ID > 68 LIMIT 9', 'SELECT Event_ID, Addresses.Address_ID, address_details FROM Addresses JOIN Events ON Addresses.Address_ID = Events.Address_ID WHERE  Addresses.Address_ID > 68 LIMIT 9'], ['SELECT MIN(Event_ID), Party_Details FROM Parties_in_Events JOIN Parties ON Parties.Party_ID = Parties_in_Events.Party_ID WHERE Party_ID NOT IN (SELECT Party_ID FROM Parties AS e WHERE e.Party_ID BETWEEN 1 AND 10 AND  e.Party_ID = 62)', 'SELECT MIN(T2.Event_ID), T1.Party_Details FROM Parties AS T1 JOIN Parties_in_Events AS T2 ON T1.Party_ID = T2.Party_ID WHERE T1.Party_ID NOT IN (SELECT T4.Party_ID FROM Parties AS T4 WHERE T4.Party_ID BETWEEN 1 AND 10 AND  T4.Party_ID = 62)'], ['SELECT Parties_in_Events.Event_ID, Channel_ID FROM Events JOIN Parties_in_Events ON Parties_in_Events.Event_ID = Events.Event_ID WHERE  Party_ID = 3 GROUP BY Channel_ID ORDER BY Parties_in_Events.Event_ID ASC', 'SELECT Parties_in_Events.Event_ID, Channels.Channel_ID FROM Events JOIN Parties_in_Events ON Parties_in_Events.Event_ID = Events.Event_ID JOIN Channels ON Channels.Channel_ID = Events.Channel_ID WHERE Parties_in_Events.Party_ID = 3 ORDER BY Parties_in_Events.Event_ID ASC'], ['SELECT COUNT(Products_in_Events.Event_ID), l.Event_ID FROM Products_in_Events AS l JOIN Products_in_Events ON Products_in_Events.Product_in_Event_ID = l.Product_in_Event_ID WHERE  Products_in_Events.Product_ID <= 75 AND Product_in_Event_ID IN (SELECT Product_in_Event_ID FROM Products_in_Events WHERE  Product_ID <= 45) ORDER BY l.Event_ID ASC', 'SELECT COUNT(l.Product_in_Event_ID), l.Event_ID FROM Products_in_Events AS l WHERE l.Product_ID <= 75 AND l.Product_in_Event_ID IN (SELECT Product_in_Event_ID FROM Products_in_Events WHERE Product_ID <= 45) ORDER BY l.Event_ID ASC'], ['SELECT SUM(Finances.Finance_ID), Event_Type_Code FROM Finances JOIN Events ON Events.Finance_ID = Finances.Finance_ID WHERE  Event_ID >= 56 GROUP BY Event_Type_Code HAVING MIN(Finances.Finance_ID) = 84 ORDER BY Event_Type_Code DESC LIMIT 10', 'SELECT COUNT(Finances.Finance_ID), Event_Type_Code FROM Finances JOIN Events ON Events.Finance_ID = Finances.Finance_ID WHERE Event_ID >= 56 GROUP BY Event_Type_Code HAVING MIN(Finances.Finance_ID) = 84 ORDER BY Event_Type_Code DESC LIMIT 10'], ['SELECT Event_ID, Event_ID FROM Agreements LIMIT 9', 'SELECT Event_ID FROM Agreements LIMIT 9'], ['SELECT Channel_ID, Parties_in_Events.Event_ID FROM Events JOIN Parties_in_Events ON Parties_in_Events.Event_ID = Events.Event_ID WHERE Location_ID BETWEEN 1 AND 10 AND  Party_ID >= 83 ORDER BY Channel_ID DESC', 'SELECT E.Channel_ID, PIE.Event_ID FROM Events E JOIN Parties_in_Events PIE ON E.Event_ID = PIE.Event_ID WHERE E.Location_ID BETWEEN 1 AND 10 AND PIE.Party_ID >= 83 ORDER BY E.Channel_ID DESC'], ['SELECT COUNT(DISTINCT Product_Type_Code), Product_ID, Product_Price FROM Products WHERE  Product_Price <= 68 ORDER BY Product_ID ASC', 'SELECT COUNT(DISTINCT Product_Type_Code), Product_ID, MAX(Product_Price) AS max_price FROM Products WHERE Product_Price <= 68 GROUP BY Product_ID ORDER BY Product_ID ASC'], ['SELECT COUNT(DISTINCT Parties.Party_ID), Parties.Party_Details FROM Parties AS a JOIN Parties ON Parties.Party_ID = a.Party_ID WHERE  a.Party_ID <= 2 ORDER BY Parties.Party_Details DESC', 'SELECT COUNT(DISTINCT Party_ID), Party_Details FROM Parties WHERE Party_ID <= 2 ORDER BY Party_Details DESC'], ['SELECT COUNT(Location_ID), Location_ID FROM Locations WHERE Location_ID BETWEEN 1 AND 10 LIMIT 2', 'SELECT Location_ID, COUNT(Location_ID) FROM Locations WHERE Location_ID BETWEEN 1 AND 10 GROUP BY Location_ID LIMIT 2'], ['SELECT Event_Type_Code FROM Events JOIN Assets_in_Events ON Events.Event_ID = Assets_in_Events.Event_ID AND Assets_in_Events.Event_ID = Events.Event_ID WHERE  Channel_ID >= 26 AND Event_ID IN (SELECT Event_ID FROM Products_in_Events AS g WHERE  g.Event_ID >= 44) ORDER BY Event_Type_Code ASC', 'SELECT Event_Type_Code FROM Events JOIN Assets_in_Events ON Events.Event_ID = Assets_in_Events.Event_ID WHERE Channel_ID >= 26 AND Event_ID IN (SELECT Event_ID FROM Products_in_Events AS g WHERE g.Event_ID >= 44) ORDER BY Event_Type_Code ASC'], ['SELECT AVG(m.Event_ID), COUNT(DISTINCT Assets_in_Events.Asset_ID), m.Event_ID FROM Assets_in_Events AS m JOIN Assets_in_Events ON Assets_in_Events.Asset_ID = m.Asset_ID WHERE m.Asset_ID BETWEEN 1 AND 10 OR Event_ID < (SELECT MIN(Event_ID) FROM Parties_in_Events AS e WHERE  e.Party_ID = 26) GROUP BY m.Event_ID HAVING MAX(m.Event_ID) >= 56 ORDER BY m.Event_ID DESC', 'SELECT AVG(m.Event_ID), COUNT(DISTINCT m.Asset_ID), m.Event_ID FROM Assets_in_Events AS m WHERE m.Asset_ID BETWEEN 1 AND 10 OR m.Event_ID < (SELECT MIN(e.Event_ID) FROM Parties_in_Events AS e WHERE  e.Party_ID = 26) GROUP BY m.Event_ID HAVING MAX(m.Event_ID) >= 56 ORDER BY m.Event_ID DESC'], ['SELECT AVG(Channel_ID), Event_Type_Code FROM Events JOIN Assets_in_Events ON Events.Event_ID = Assets_in_Events.Event_ID AND Assets_in_Events.Event_ID = Events.Event_ID WHERE Location_ID NOT IN (SELECT Location_ID FROM Locations AS a WHERE  a.Location_ID <= 29) ORDER BY Event_Type_Code DESC', 'SELECT AVG(Channel_ID), Event_Type_Code FROM Events JOIN Assets_in_Events ON Events.Event_ID = Assets_in_Events.Event_ID WHERE Location_ID NOT IN (SELECT Location_ID FROM Locations AS a WHERE  a.Location_ID <= 29) ORDER BY Event_Type_Code DESC']], 'concert_singer': [['SELECT SUM(u.concert_ID), MAX(u.concert_ID), u.Singer_ID FROM singer_in_concert AS u WHERE  u.concert_ID > 46', 'SELECT MAX(u.concert_ID), u.Singer_ID FROM singer_in_concert AS u WHERE u.concert_ID > 46 GROUP BY u.Singer_ID'], ['SELECT SUM(x.Lowest), COUNT(DISTINCT x.Capacity) FROM stadium AS x WHERE  x.Stadium_ID <= 0', 'SELECT SUM(Lowest), COUNT(DISTINCT Capacity) FROM stadium'], ['SELECT COUNT(Singer_ID), Age FROM singer WHERE  Singer_ID <= 95 AND Singer_ID NOT IN (SELECT Singer_ID FROM singer AS y WHERE  y.Age != 99) LIMIT 9', 'SELECT COUNT(Singer_ID), Age FROM singer WHERE Singer_ID <= 95 AND Singer_ID NOT IN (SELECT Singer_ID FROM singer AS y WHERE y.Age != 99) LIMIT 9'], ['SELECT Capacity, concert.Stadium_ID FROM stadium JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Stadium_ID BETWEEN 1 AND 10 OR Capacity IN (SELECT Capacity FROM stadium AS k WHERE  k.Capacity <= 68) ORDER BY Capacity ASC', 'SELECT Capacity, concert.Stadium_ID FROM stadium JOIN concert ON CAST(stadium.Stadium_ID AS text) = concert.Stadium_ID WHERE CAST(stadium.Stadium_ID AS text) BETWEEN "1" AND "10" OR Capacity IN (SELECT Capacity FROM stadium AS k WHERE  k.Capacity <= 68) ORDER BY Capacity ASC'], ['SELECT Singer_ID FROM singer_in_concert WHERE  concert_ID != 53', 'SELECT Singer_ID FROM singer_in_concert WHERE CAST(concert_ID AS TEXT) != "53";'], ['SELECT COUNT(DISTINCT singer_in_concert.Singer_ID) FROM singer_in_concert JOIN concert JOIN singer ON concert.concert_ID = singer_in_concert.concert_ID AND singer_in_concert.Singer_ID = singer.Singer_ID WHERE  Age != 95', 'SELECT COUNT(DISTINCT singer.Singer_ID) FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer.Age != 95;'], ['SELECT y.concert_ID FROM concert AS y WHERE y.concert_ID BETWEEN 1 AND 10 OR  y.concert_ID = 89', 'SELECT y.concert_ID FROM concert AS y WHERE y.concert_ID BETWEEN 1 AND 10 OR  y.concert_ID = 89'], ['SELECT COUNT(DISTINCT w.Highest), w.Lowest FROM stadium JOIN stadium AS w ON stadium.Stadium_ID = w.Stadium_ID WHERE  w.Stadium_ID <= 90 GROUP BY w.Lowest LIMIT 8', 'SELECT COUNT(DISTINCT Highest), Lowest FROM stadium WHERE Stadium_ID <= 90 GROUP BY Lowest LIMIT 8'], ['SELECT MAX(concert.concert_ID), concert_Name FROM singer_in_concert JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE  singer_in_concert.concert_ID = 29 GROUP BY concert_Name ORDER BY concert_Name DESC', 'SELECT concert_Name FROM singer_in_concert JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE singer_in_concert.concert_ID = 29 ORDER BY concert_Name DESC;'], ['SELECT Singer_ID FROM singer_in_concert WHERE concert_ID BETWEEN 1 AND 10 AND  concert_ID != 89', 'SELECT Singer_ID FROM singer_in_concert WHERE concert_ID BETWEEN 1 AND 10 AND concert_ID != 89'], ['SELECT Age, Song_release_year FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE  Age < 97', 'SELECT Age, Song_release_year FROM singer_in_concert JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE  Age < 97']], 'real_estate_rentals': [['SELECT MAX(user_address_id), MAX(property_id), COUNT(property_address_id), date_on_market FROM Ref_Property_Types JOIN Users JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code AND Properties.owner_user_id = Users.user_id WHERE price_max BETWEEN 1 AND 10 OR  property_id < 32 GROUP BY date_on_market HAVING MAX(vendor_requested_price) <= 93', 'SELECT MAX(property_address_id), MAX(property_id), COUNT(property_address_id), date_on_market FROM Ref_Property_Types JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code JOIN Users ON Properties.owner_user_id = Users.user_id WHERE price_max BETWEEN 1 AND 10 OR  property_id < 32 GROUP BY date_on_market HAVING MAX(vendor_requested_price) <= 93'], ['SELECT COUNT(DISTINCT Properties.property_id), z.price_max, z.owner_user_id, z.room_count FROM Properties AS z JOIN Properties ON Properties.property_id = z.property_id WHERE  Properties.vendor_requested_price < 29 GROUP BY z.room_count', 'SELECT COUNT(DISTINCT T1.property_id), T1.price_max, T1.owner_user_id, T1.room_count FROM Properties AS T1 WHERE T1.vendor_requested_price < 29 GROUP BY T1.price_max, T1.owner_user_id, T1.room_count'], ['SELECT line_3_area_locality FROM Addresses JOIN Ref_Property_Types JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code AND Addresses.address_id = Properties.property_address_id WHERE  vendor_requested_price != 32 ORDER BY line_3_area_locality DESC', 'SELECT line_3_area_locality FROM Addresses JOIN Properties ON Addresses.address_id = Properties.property_address_id JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE vendor_requested_price != 32 ORDER BY line_3_area_locality DESC'], ['SELECT line_2_number_street, property_type_description FROM Addresses JOIN Ref_Property_Types JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code AND Addresses.address_id = Properties.property_address_id WHERE  price_min != 57 GROUP BY property_type_description HAVING MIN(price_min) >= 93 LIMIT 9', 'SELECT T2.line_2_number_street, T3.property_type_description FROM Properties AS T1 INNER JOIN Addresses AS T2 ON T2.address_id = T1.property_address_id INNER JOIN Ref_Property_Types AS T3 ON T3.property_type_code = T1.property_type_code WHERE T1.price_min != 57 GROUP BY T3.property_type_description HAVING MIN(T1.price_min) >= 93 LIMIT 9'], ['SELECT first_name FROM Users WHERE EXISTS (SELECT * FROM User_Searches WHERE  user_id = 20 AND Users.user_id = user_id) ORDER BY first_name ASC LIMIT 10', 'SELECT first_name FROM Users WHERE EXISTS (SELECT * FROM User_Searches WHERE user_id = 20 AND Users.user_id = User_Searches.user_id) ORDER BY first_name ASC LIMIT 10'], ['SELECT AVG(k.address_id), k.address_id FROM Addresses AS k WHERE  k.address_id = 31 ORDER BY k.address_id ASC', 'SELECT k.address_id FROM Addresses AS k WHERE k.address_id = 31 ORDER BY k.address_id ASC;'], ['SELECT COUNT(DISTINCT line_2_number_street), line_1_number_building FROM User_Property_History JOIN Addresses JOIN Ref_Property_Types JOIN Properties ON Properties.property_type_code = Ref_Property_Types.property_type_code AND User_Property_History.property_id = Properties.property_id AND Addresses.address_id = Properties.property_address_id ORDER BY line_1_number_building DESC LIMIT 1', 'SELECT COUNT(DISTINCT Addresses.line_2_number_street), Addresses.line_1_number_building FROM User_Property_History JOIN Properties ON User_Property_History.property_id = Properties.property_id JOIN Addresses ON Properties.property_address_id = Addresses.address_id JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code ORDER BY Addresses.line_1_number_building DESC LIMIT 1'], ['SELECT COUNT(DISTINCT o.feature_id), o.feature_description, o.feature_name FROM Features AS o JOIN Features ON Features.feature_id = o.feature_id WHERE Features.feature_id BETWEEN 1 AND 10 AND feature_id < (SELECT SUM(feature_id) FROM Property_Features LIMIT 4) GROUP BY o.feature_name ORDER BY o.feature_name ASC', 'SELECT COUNT(DISTINCT o.feature_id), o.feature_description, o.feature_name FROM Features AS o JOIN Property_Features AS pf ON pf.feature_id = o.feature_id WHERE o.feature_id BETWEEN 1 AND 10 AND o.feature_id < (SELECT SUM(feature_id) FROM Property_Features LIMIT 4) GROUP BY o.feature_name ORDER BY o.feature_name ASC']], 'company_office': [['SELECT id, name FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id WHERE move_in_year BETWEEN 1 AND 10 OR  Profits_billion = 78 GROUP BY name HAVING SUM(building_id) <= 27', 'SELECT T1.id, T1.name FROM Companies AS T1 INNER JOIN Office_locations AS T2 ON T1.id = T2.company_id WHERE T2.move_in_year BETWEEN 1 AND 10 OR T1.Profits_billion = 78 GROUP BY T1.id, T1.name HAVING COUNT(T2.building_id) <= 27'], ['SELECT AVG(Height), Height, name FROM buildings WHERE  Height >= 10 GROUP BY name', 'SELECT AVG(Height), name FROM buildings WHERE Height >= 10 GROUP BY name'], ['SELECT name FROM Office_locations JOIN buildings ON buildings.id = Office_locations.building_id WHERE  move_in_year = 93 ORDER BY name DESC', 'SELECT T1.name FROM Office_locations AS T2 JOIN buildings AS T1 ON T1.id = T2.building_id WHERE  T2.move_in_year = 93 ORDER BY T1.name DESC'], ['SELECT City FROM buildings WHERE  id < 3 ORDER BY City DESC LIMIT 2', 'SELECT City FROM buildings WHERE id < 3 ORDER BY City DESC LIMIT 2'], ['SELECT id, name FROM buildings WHERE id BETWEEN 1 AND 10 GROUP BY name ORDER BY id DESC', 'SELECT id, name FROM buildings WHERE id BETWEEN 1 AND 10 GROUP BY id, name ORDER BY id DESC'], ['SELECT COUNT(id), name FROM Companies WHERE Sales_billion BETWEEN 1 AND 10 OR  Profits_billion > 37', 'SELECT COUNT(*), name FROM Companies WHERE Sales_billion BETWEEN 1 AND 10 OR Profits_billion > 37'], ['SELECT company_id, company_id FROM Office_locations WHERE  building_id = 22 GROUP BY company_id HAVING SUM(building_id) < 40 ORDER BY company_id ASC', 'SELECT company_id FROM Office_locations WHERE building_id = 22 GROUP BY company_id HAVING COUNT(building_id) > 0 ORDER BY company_id ASC;'], ['SELECT COUNT(DISTINCT Profits_billion), COUNT(DISTINCT Profits_billion), Assets_billion, Industry FROM Companies WHERE  id >= 34 GROUP BY Industry LIMIT 6', 'SELECT COUNT(DISTINCT Profits_billion), SUM(Assets_billion) AS Assets_billion, Industry FROM Companies WHERE id >= 34 GROUP BY Industry LIMIT 6'], ['SELECT City, Height FROM buildings WHERE  Stories <= 22 AND EXISTS (SELECT * FROM Office_locations AS h WHERE h.company_id BETWEEN 1 AND 10 AND  h.building_id != 23 AND buildings.id = h.building_id) GROUP BY Height HAVING COUNT(id) = 65 ORDER BY City DESC LIMIT 3', 'SELECT City, Height FROM buildings WHERE Stories <= 22 AND EXISTS (SELECT * FROM Office_locations AS h WHERE h.company_id BETWEEN 1 AND 10 AND h.building_id != 23 AND buildings.id = h.building_id) GROUP BY City, Height HAVING COUNT(id) = 65 ORDER BY City DESC LIMIT 3;'], ['SELECT Profits_billion FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id WHERE  Sales_billion < 61', 'SELECT Profits_billion FROM Companies WHERE Sales_billion < 61'], ['SELECT COUNT(m.building_id), m.building_id FROM Office_locations AS m WHERE m.move_in_year BETWEEN 1 AND 10 OR  m.building_id != 33 ORDER BY m.building_id DESC LIMIT 5', 'SELECT COUNT(m.building_id), m.building_id FROM Office_locations AS m WHERE m.move_in_year BETWEEN 1 AND 10 OR  m.building_id != 33 ORDER BY m.building_id DESC LIMIT 5'], ['SELECT MAX(g.Stories), g.Height, g.City FROM buildings AS g WHERE  g.Height != 81 GROUP BY g.City HAVING COUNT(g.id) < 37 ORDER BY g.Height ASC', 'SELECT MAX(b.Stories) AS max_stories, b.Height, b.City FROM buildings AS b WHERE b.Height != 81 GROUP BY b.City HAVING COUNT(b.id) < 37 ORDER BY b.Height ASC'], ['SELECT COUNT(DISTINCT building_id), Height FROM Companies JOIN Office_locations JOIN buildings ON Office_locations.company_id = Companies.id AND buildings.id = Office_locations.building_id WHERE  buildings.id > 86 AND EXISTS (SELECT * FROM Office_locations AS j WHERE  j.company_id >= 52 AND Companies.id = j.company_id) GROUP BY Height ORDER BY Height ASC', 'SELECT COUNT(DISTINCT T3.building_id), T3.Height FROM Companies AS T1 JOIN Office_locations AS T2 ON T1.id = T2.company_id JOIN buildings AS T3 ON T2.building_id = T3.id WHERE T3.id > 86 AND EXISTS (SELECT * FROM Office_locations AS j WHERE j.company_id >= 52 AND T1.id = j.company_id) GROUP BY T3.Height ORDER BY T3.Height ASC'], ['SELECT building_id, Assets_billion FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id LIMIT 7', 'SELECT Office_locations.building_id, Companies.Assets_billion FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id LIMIT 7;'], ['SELECT Market_Value_billion, name FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id WHERE EXISTS (SELECT * FROM Companies AS d WHERE  d.id >= 21 AND Office_locations.building_id = d.id LIMIT 4) LIMIT 6', 'SELECT Market_Value_billion, name FROM Companies JOIN Office_locations ON Office_locations.company_id = Companies.id WHERE EXISTS (SELECT * FROM buildings AS d WHERE  d.id >= 21 AND Office_locations.building_id = d.id LIMIT 4) LIMIT 6'], ['SELECT Stories, Height FROM buildings WHERE Stories NOT IN (SELECT Stories FROM buildings AS d WHERE d.Height BETWEEN 1 AND 10) GROUP BY Height', 'SELECT AVG(Stories) AS Stories, Height FROM buildings WHERE Stories NOT IN (SELECT Stories FROM buildings AS d WHERE d.Height BETWEEN 1 AND 10) GROUP BY Height;']], 'roller_coaster': [['SELECT AVG(roller_coaster.Country_ID), country.Name FROM roller_coaster JOIN country ON roller_coaster.Country_ID = country.Country_ID WHERE Height BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM roller_coaster WHERE  Height = 24 AND country.Country_ID = Country_ID)', 'SELECT AVG(roller_coaster.Country_ID), country.Name FROM roller_coaster JOIN country ON roller_coaster.Country_ID = country.Country_ID WHERE Height BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM roller_coaster WHERE  Height = 24 AND roller_coaster.Country_ID = country.Country_ID)'], ['SELECT COUNT(DISTINCT Speed), Name FROM roller_coaster WHERE Park NOT IN (SELECT Park FROM roller_coaster WHERE  Length >= 59)', 'SELECT COUNT(DISTINCT Speed), Name FROM roller_coaster WHERE Park NOT IN (SELECT Park FROM roller_coaster WHERE  Length >= 59)'], ['SELECT l.Status, l.Status FROM roller_coaster AS l WHERE  l.Roller_Coaster_ID >= 37 ORDER BY l.Status DESC', 'SELECT l.Status FROM roller_coaster AS l WHERE l.Roller_Coaster_ID >= 37 ORDER BY l.Status DESC'], ['SELECT COUNT(DISTINCT Height), Status FROM roller_coaster WHERE  Length = 16 ORDER BY Status ASC', 'SELECT COUNT(DISTINCT Height), Status FROM roller_coaster WHERE Length = 16 GROUP BY Status ORDER BY Status ASC;'], ['SELECT p.Population, p.Area, p.Area FROM country AS p JOIN country ON country.Country_ID = p.Country_ID WHERE  p.Area >= 51 LIMIT 3', 'SELECT c.Population, c.Area FROM country AS c JOIN roller_coaster AS r ON c.Country_ID = r.Country_ID LIMIT 3'], ['SELECT MAX(Country_ID) FROM roller_coaster WHERE Opened NOT IN (SELECT Opened FROM roller_coaster)', "SELECT MAX(Country_ID) FROM roller_coaster WHERE Country_ID NOT IN (SELECT Country_ID FROM roller_coaster WHERE Status = 'Closed')"], ['SELECT MIN(u.Country_ID), country.Name FROM country AS u JOIN country ON country.Country_ID = u.Country_ID WHERE  u.Population = 58 GROUP BY country.Name LIMIT 1', 'SELECT MIN(T.Country_ID), T.Name FROM ( SELECT c.Country_ID, c.Name FROM country AS c WHERE c.Population = 58 ) T LIMIT 1;'], ['SELECT COUNT(DISTINCT Speed), Roller_Coaster_ID, Country_ID FROM roller_coaster WHERE Country_ID BETWEEN 1 AND 10 AND Speed <= (SELECT SUM(Speed) FROM roller_coaster AS b WHERE b.Height BETWEEN 1 AND 10) GROUP BY Country_ID HAVING MIN(Height) > 2', 'SELECT COUNT(DISTINCT CAST(Speed AS REAL)) AS Speed_Count, Country_ID FROM roller_coaster WHERE Country_ID BETWEEN 1 AND 10 AND CAST(Speed AS REAL) <= (SELECT MAX(Height) FROM roller_coaster AS b WHERE b.Height BETWEEN 1 AND 10) GROUP BY Country_ID HAVING MIN(Height) > 2'], ['SELECT COUNT(DISTINCT country.Population), country.Population, country.Area FROM country AS w JOIN country ON country.Country_ID = w.Country_ID WHERE  w.Area = 14 GROUP BY country.Area ORDER BY country.Population DESC LIMIT 8', 'SELECT COUNT(DISTINCT T1.Population), T1.Population, T1.Area FROM country AS T1 GROUP BY T1.Population, T1.Area ORDER BY T1.Population DESC LIMIT 8'], ['SELECT COUNT(DISTINCT r.Population), r.Population FROM country AS r WHERE  r.Country_ID != 74 LIMIT 4', 'SELECT COUNT(DISTINCT r.Population) FROM country AS r WHERE r.Country_ID != 74']], 'journal_committee': [['SELECT MAX(Sales), COUNT(DISTINCT Theme) FROM journal', 'SELECT MAX(Sales), COUNT(DISTINCT Theme) FROM journal'], ['SELECT AVG(n.Editor_ID), n.Name FROM editor AS n WHERE Age IN (SELECT Age FROM editor WHERE  Age <= 87 LIMIT 6) LIMIT 2', 'SELECT AVG(n.Age), n.Name FROM editor AS n WHERE Age IN (SELECT Age FROM editor WHERE Age <= 87 LIMIT 6) GROUP BY n.Name LIMIT 2;'], ['SELECT editor.Name, d.Name FROM editor AS d JOIN editor ON editor.Editor_ID = d.Editor_ID WHERE  editor.Editor_ID <= 35 GROUP BY d.Name HAVING MIN(editor.Age) < 2 ORDER BY d.Name DESC', 'SELECT editor.Name FROM editor WHERE editor.Editor_ID <= 35 GROUP BY editor.Name HAVING MIN(editor.Age) < 2 ORDER BY editor.Name DESC;'], ['SELECT Work_Type, Work_Type FROM journal_committee WHERE  Editor_ID >= 53 ORDER BY Work_Type DESC', 'SELECT DISTINCT Work_Type FROM journal_committee WHERE Editor_ID >= 53 ORDER BY Work_Type DESC;'], ['SELECT Editor_ID, Editor_ID FROM editor WHERE EXISTS (SELECT * FROM journal_committee AS o WHERE editor.Editor_ID = o.Editor_ID)', 'SELECT Editor_ID FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee);'], ['SELECT COUNT(DISTINCT journal.Journal_ID), journal.Sales, t.Date FROM journal JOIN journal AS t ON journal.Journal_ID = t.Journal_ID WHERE  t.Journal_ID <= 60 GROUP BY t.Date ORDER BY t.Date ASC', 'SELECT COUNT(DISTINCT Journal_ID), Sales, Date FROM journal WHERE Journal_ID <= 60 GROUP BY Date ORDER BY Date ASC;'], ['SELECT x.Editor_ID, x.Work_Type FROM journal_committee AS x ORDER BY x.Editor_ID ASC', 'SELECT Editor_ID, Work_Type FROM journal_committee ORDER BY Editor_ID ASC;'], ['SELECT Sales, Journal_ID, Journal_ID FROM journal', 'SELECT Sales, Journal_ID FROM journal']]}
Refinement Summary: {'1': 1290, '2': 585, '3': 353, '4': 0}
Still Not Good: 1799
Total: 5726
