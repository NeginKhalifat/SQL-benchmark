query
"SELECT course_id, course_description FROM Courses WHERE subject_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Subjects AS d WHERE  d.subject_id != 50 AND Courses.subject_id = d.subject_id)"
"SELECT COUNT(DISTINCT j.date_of_registration), Students.student_id, j.personal_name FROM Students JOIN Students AS j ON Students.student_id = j.student_id WHERE (j.student_id BETWEEN 1 AND 10) OR j.student_id <= 1 ORDER BY Students.student_id ASC LIMIT 7"
SELECT MAX(Courses.author_id) FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id JOIN Subjects ON Courses.subject_id = Subjects.subject_id WHERE Courses.course_id != 12
"SELECT SUM(Student_Course_Enrolment.course_id), COUNT(DISTINCT Courses.author_id), author_tutor_ATB FROM Course_Authors_and_Tutors JOIN Student_Course_Enrolment JOIN Student_Tests_Taken JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id AND Course_Authors_and_Tutors.author_id = Courses.author_id AND Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id"
SELECT course_id FROM Courses WHERE course_id != 12 ORDER BY course_id DESC LIMIT 3
"SELECT MIN(registration_id), test_result FROM Student_Tests_Taken"
SELECT Course_Authors_and_Tutors.author_id FROM Course_Authors_and_Tutors JOIN Course_Authors_and_Tutors AS g ON Course_Authors_and_Tutors.author_id = g.author_id ORDER BY Course_Authors_and_Tutors.author_id DESC LIMIT 3
"SELECT T1.course_name, T4.family_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Student_Tests_Taken AS T3 ON T2.registration_id = T3.registration_id JOIN Students AS T4 ON T2.student_id = T4.student_id WHERE T2.course_id BETWEEN 1 AND 10 OR T2.registration_id IN (SELECT registration_id FROM Student_Tests_Taken WHERE registration_id = 18) ORDER BY T1.course_name ASC LIMIT 8"
"SELECT subject_id, subject_name FROM Subjects WHERE subject_id < 99 ORDER BY subject_id"
"SELECT MAX(Student_Course_Enrolment.student_id), Student_Course_Enrolment.registration_id FROM Students JOIN Student_Tests_Taken JOIN Student_Course_Enrolment ON Student_Course_Enrolment.student_id = Students.student_id AND Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id ORDER BY Student_Course_Enrolment.registration_id DESC LIMIT 8"
"SELECT Student_Course_Enrolment.course_id, Student_Course_Enrolment.student_id FROM Student_Course_Enrolment AS x JOIN Student_Course_Enrolment ON Student_Course_Enrolment.registration_id = x.registration_id WHERE date_of_completion > (SELECT MIN(date_of_completion) FROM Student_Course_Enrolment AS e WHERE  e.student_id <= 38) GROUP BY Student_Course_Enrolment.student_id, Student_Course_Enrolment.course_id"
"SELECT T1.address_line_1, T3.course_description FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T3 ON T1.author_id = T3.author_id JOIN Student_Course_Enrolment AS T2 ON T3.course_id = T2.course_id WHERE T1.author_id NOT IN (SELECT author_id FROM Course_Authors_and_Tutors WHERE author_id < 14) GROUP BY T1.address_line_1, T3.course_description ORDER BY T3.course_description DESC;"
"SELECT AVG(author_id), course_name, subject_id FROM Courses WHERE  subject_id <= 29 GROUP BY subject_id"
SELECT student_id FROM Students WHERE date_of_latest_logon NOT IN (SELECT date_of_latest_logon FROM Students AS n WHERE  n.student_id <= 37) ORDER BY student_id DESC LIMIT 4
SELECT Courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON Course_Authors_and_Tutors.author_id = Courses.author_id JOIN Student_Course_Enrolment ON Courses.course_id = Student_Course_Enrolment.course_id WHERE Courses.subject_id != 57 GROUP BY Courses.author_id HAVING MAX(Student_Course_Enrolment.course_id) = 96 ORDER BY Courses.author_id ASC
"SELECT T1.personal_name, T1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.author_id <= 8 ORDER BY T1.personal_name DESC"
"SELECT COUNT(DISTINCT z.gender_mf), Course_Authors_and_Tutors.login_name, z.password FROM Course_Authors_and_Tutors JOIN Course_Authors_and_Tutors AS z ON Course_Authors_and_Tutors.author_id = z.author_id GROUP BY Course_Authors_and_Tutors.login_name, z.password ORDER BY z.password DESC"
"SELECT COUNT(Student_Course_Enrolment.course_id), student_id FROM Student_Course_Enrolment JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id GROUP BY student_id;"
SELECT MAX(subject_id) FROM Courses WHERE  author_id = 66
"SELECT COUNT(DISTINCT course_name), subject_id FROM Courses WHERE author_id BETWEEN 1 AND 10 GROUP BY subject_id HAVING MAX(course_id) > 95 ORDER BY subject_id DESC"
SELECT course_id FROM Courses WHERE author_id BETWEEN 1 AND 10 AND  course_id != 23 LIMIT 1
SELECT course_name FROM Courses WHERE author_id >= 51 ORDER BY course_name DESC;
SELECT test_result FROM Student_Tests_Taken JOIN Student_Course_Enrolment ON Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id WHERE Student_Tests_Taken.registration_id BETWEEN 1 AND 10
"SELECT COUNT(Course_Authors_and_Tutors.author_id), COUNT(DISTINCT student_id), Courses.author_id FROM Course_Authors_and_Tutors JOIN Student_Course_Enrolment JOIN Student_Tests_Taken JOIN Courses ON Courses.course_id = Student_Course_Enrolment.course_id AND Course_Authors_and_Tutors.author_id = Courses.author_id AND Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id WHERE Courses.course_id BETWEEN 1 AND 10 AND author_tutor_ATB NOT IN (SELECT author_tutor_ATB FROM Course_Authors_and_Tutors WHERE  author_id = 12 LIMIT 8)"
"SELECT MIN(registration_id), test_result FROM Student_Tests_Taken WHERE registration_id BETWEEN 1 AND 10 ORDER BY test_result ASC"
SELECT registration_id FROM Student_Tests_Taken WHERE  registration_id < 11 ORDER BY registration_id DESC LIMIT 10
SELECT password FROM Students WHERE student_id = 67 AND EXISTS (SELECT * FROM Student_Course_Enrolment AS g WHERE Students.student_id = g.student_id) LIMIT 1;
"SELECT COUNT(author_id), COUNT(DISTINCT subject_id), COUNT(DISTINCT subject_id) FROM Courses WHERE  course_id < 76"
"SELECT MAX(T1.subject_id), T1.subject_name FROM Subjects AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T1.subject_id = 0 LIMIT 8"
