sql,hardness
"SELECT MAX(a.lot_id), a.investor_id FROM Lots AS a GROUP BY a.investor_id ORDER BY MAX(a.lot_id) ASC LIMIT 9",hard
"SELECT COUNT(v.investor_id), v.Investor_details FROM Investors AS v WHERE  v.investor_id >= 6 GROUP BY v.Investor_details ORDER BY v.Investor_details DESC",hard
"SELECT investor_id, investor_id FROM Ref_Transaction_Types JOIN Transactions ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code WHERE  transaction_id <= 19",medium
SELECT investor_id FROM Investors WHERE  investor_id < 62,easy
SELECT transaction_id FROM Transactions WHERE investor_id BETWEEN 1 AND 10 AND investor_id NOT IN (SELECT investor_id FROM Lots),extra
SELECT amount_of_transaction FROM Ref_Transaction_Types JOIN Transactions ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code WHERE transaction_id BETWEEN 1 AND 10 OR  transaction_id < 69,hard
"SELECT COUNT(DISTINCT e.sales_transaction_id), MAX(e.sales_transaction_id) AS sales_transaction_id, e.sales_details FROM Sales AS e WHERE  e.sales_transaction_id <= 11 GROUP BY e.sales_details ORDER BY sales_transaction_id DESC LIMIT 6",extra
SELECT COUNT(DISTINCT purchase_details) FROM Purchases WHERE purchase_transaction_id BETWEEN 1 AND 10 AND purchase_transaction_id = (SELECT MAX(purchase_transaction_id) FROM Purchases WHERE purchase_transaction_id > 37),extra
"SELECT AVG(T.transaction_id), T.transaction_type_code FROM Purchases P JOIN Transactions T ON P.purchase_transaction_id = T.transaction_id JOIN Investors I ON T.investor_id = I.investor_id WHERE T.investor_id = 14",hard
SELECT MAX(y.purchase_transaction_id) FROM Purchases AS y WHERE  y.purchase_transaction_id >= 57 AND y.purchase_details >= (SELECT MAX(purchase_details) FROM Purchases WHERE  purchase_transaction_id <= 73 LIMIT 8) LIMIT 4,extra
"SELECT investor_id, lot_details FROM Lots WHERE EXISTS (SELECT * FROM Transactions_Lots AS k WHERE k.lot_id BETWEEN 1 AND 10 AND Lots.lot_id = k.lot_id) GROUP BY lot_details HAVING AVG(investor_id) = 72",extra
SELECT lot_details FROM Lots;,easy
"SELECT q.amount_of_transaction, q.transaction_type_code FROM Transactions AS q WHERE q.amount_of_transaction BETWEEN 1 AND 10 AND other_details NOT IN (SELECT other_details FROM Transactions WHERE amount_of_transaction BETWEEN 1 AND 10)",extra
"SELECT MAX(TL.transaction_id), AVG(T.amount_of_transaction) FROM Lots L JOIN Transactions_Lots TL ON L.lot_id = TL.lot_id JOIN Transactions T ON TL.transaction_id = T.transaction_id WHERE L.investor_id < 43",hard
SELECT AVG(investor_id) FROM Investors WHERE investor_id BETWEEN 1 AND 10;,easy
"SELECT transaction_id, investor_id, transaction_type_code FROM Transactions GROUP BY transaction_type_code, investor_id;",medium
SELECT purchase_transaction_id FROM Transactions JOIN Purchases ON Purchases.purchase_transaction_id = Transactions.transaction_id WHERE amount_of_transaction BETWEEN 1 AND 10,medium
SELECT COUNT(DISTINCT Ref_Transaction_Types.transaction_type_code) FROM Purchases JOIN Transactions ON Purchases.purchase_transaction_id = Transactions.transaction_id JOIN Transactions_Lots ON Transactions.transaction_id = Transactions_Lots.transaction_id JOIN Lots ON Transactions_Lots.lot_id = Lots.lot_id JOIN Investors ON Lots.investor_id = Investors.investor_id JOIN Ref_Transaction_Types ON Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code WHERE Investors.investor_id > 66 LIMIT 4,extra
"SELECT COUNT(DISTINCT Lots.lot_id), SUM(Transactions.share_count) FROM Lots JOIN Transactions_Lots ON Lots.lot_id = Transactions_Lots.lot_id JOIN Transactions ON Transactions.transaction_id = Transactions_Lots.transaction_id WHERE Transactions.investor_id NOT IN (SELECT investor_id FROM Transactions WHERE investor_id >= 55) LIMIT 1",extra
SELECT lot_details FROM Lots AS L WHERE investor_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Transactions_Lots AS TL WHERE L.lot_id = TL.lot_id) ORDER BY lot_details DESC,extra
