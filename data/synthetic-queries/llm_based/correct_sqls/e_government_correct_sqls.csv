sql,hardness
SELECT service_type_code FROM Services WHERE service_name != 'Emergency',easy
"SELECT COUNT(T1.form_id), T2.service_name FROM Forms AS T1 JOIN Services AS T2 ON T1.service_id = T2.service_id WHERE T1.form_number > '100' ORDER BY COUNT(T1.form_id) ASC",hard
"SELECT SUM(T1.service_id) AS sum_service_id, COUNT(DISTINCT T1.service_id) AS count_service_id FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id LIMIT 10",extra
SELECT COUNT(DISTINCT Forms.service_id) FROM Forms WHERE Forms.service_id >= 1,easy
SELECT T1.individual_first_name FROM Individuals AS T1 WHERE T1.individual_id IN (SELECT T2.individual_id FROM Organization_Contact_Individuals AS T2 WHERE T2.organization_id = 5) AND T1.individual_last_name = 'Smith',extra
SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE NOT EXISTS (SELECT T3.party_id FROM Parties AS T3 JOIN Party_Services AS T4 ON T3.party_id = T4.customer_id WHERE T4.service_id = T1.service_id AND T3.party_phone = '1234567890'),extra
"SELECT T1.service_name, MAX(T2.form_number) FROM Services AS T1 JOIN Forms AS T2 ON T1.service_id = T2.service_id WHERE T1.service_id NOT IN (SELECT T3.service_id FROM Services AS T3 JOIN Party_Services AS T4 ON T3.service_id = T4.service_id) GROUP BY T1.service_id LIMIT 10",extra
SELECT AVG(T1.service_id) FROM Services AS T1 WHERE T1.service_id != 1,easy
SELECT T1.service_name FROM Services AS T1 WHERE T1.service_descriptio BETWEEN 'a' AND 'b' OR T1.service_descriptio NOT IN (SELECT T2.service_descriptio FROM Services AS T2) OR T1.service_id IN (SELECT T3.service_id FROM Party_Services AS T3) ORDER BY T1.service_id ASC LIMIT 10,extra
SELECT T1.organization_name FROM Organizations AS T1 JOIN Organization_Contact_Individuals AS T2 ON T1.organization_id = T2.organization_id WHERE T2.date_contact_from > '2020-01-01' ORDER BY T1.organization_name DESC LIMIT 10,extra
SELECT COUNT(DISTINCT T1.form_id) FROM Party_Forms AS T1,easy
SELECT T1.party_phone FROM Parties AS T1 JOIN Party_Forms AS T2 ON T1.party_id = T2.party_id JOIN Forms AS T3 ON T2.form_id = T3.form_id JOIN Party_Services AS T4 ON T1.party_id = T4.customer_id JOIN Services AS T5 ON T4.service_id = T5.service_id WHERE T3.form_number >= 100,extra
"SELECT T1.town_city, T2.individual_first_name FROM Addresses AS T1 JOIN Party_Addresses AS T3 ON T1.address_id = T3.address_id JOIN Individuals AS T2 ON T2.individual_address = T1.address_id",medium
"SELECT T1.service_name, T2.form_name FROM Services AS T1 INNER JOIN Forms AS T2 ON T1.service_id = T2.service_id INNER JOIN Party_Services AS T3 ON T1.service_id = T3.service_id WHERE T2.form_type_code = 'online' AND T3.service_datetime BETWEEN '2020-01-01' AND '2020-12-31' AND T1.service_descriptio = 'test'",hard
"SELECT T1.individual_first_name, T2.service_name FROM Individuals AS T1 JOIN Party_Services AS T3 ON T1.individual_id = T3.customer_id JOIN Services AS T2 ON T3.service_id = T2.service_id WHERE T1.individual_first_name = 'John' AND T2.service_name = 'Service1' AND T3.service_datetime NOT IN (SELECT T3.service_datetime FROM Party_Services AS T3 JOIN Services AS T2 ON T3.service_id = T2.service_id WHERE T2.service_name = 'Service2') ORDER BY T2.service_name DESC",extra
"SELECT T1.individual_first_name, T2.service_name FROM Individuals AS T1 JOIN Party_Services AS T3 ON T1.individual_id = T3.customer_id JOIN Services AS T2 ON T3.service_id = T2.service_id ORDER BY T2.service_name DESC",hard
SELECT COUNT(DISTINCT T1.form_id) FROM Forms AS T1 JOIN Party_Forms AS T2 ON T1.form_id = T2.form_id WHERE T2.date_completion_started BETWEEN '2020-01-01' AND '2020-12-31' LIMIT 10,hard
SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE T1.service_type_code = 'health',medium
SELECT T1.party_phone FROM Parties AS T1 JOIN Party_Forms AS T2 ON T1.party_id = T2.party_id WHERE NOT EXISTS (SELECT 1 FROM Forms AS T3 WHERE T3.form_id = T2.form_id AND T3.service_id = 1 AND T3.form_type_code = 'service_type_code'),extra
SELECT T1.town_city FROM Addresses AS T1 WHERE T1.state_province_county = 'City' OR T1.zip_postcode IN (SELECT T2.zip_postcode FROM Addresses AS T2 WHERE T2.state_province_county = 'City') GROUP BY T1.town_city HAVING MIN(T1.address_id) > 1000 ORDER BY T1.town_city DESC,extra
SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE T1.service_name BETWEEN 'Service_A' AND 'Service_Z' AND T1.service_id > 100 ORDER BY T1.service_name DESC,hard
SELECT * FROM Services WHERE service_type_code LIKE 'abc%' OR service_id BETWEEN 10 AND 20 OR service_id IN (SELECT service_id FROM Forms),extra
SELECT COUNT(DISTINCT T1.individual_id) FROM Individuals AS T1 JOIN Organization_Contact_Individuals AS T2 ON T1.individual_id = T2.individual_id JOIN Organizations AS T3 ON T2.organization_id = T3.organization_id WHERE T2.date_contact_from < '2020-01-01' AND T3.date_formed > '2019-01-01' ORDER BY T1.individual_id ASC,extra
SELECT COUNT(DISTINCT T1.party_id) FROM Parties AS T1 JOIN Party_Addresses AS T2 ON T1.party_id = T2.party_id WHERE T2.address_type_code = 'HOME',medium
SELECT T1.address_id FROM Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.address_id < 10,medium
SELECT COUNT(T1.party_id) FROM Party_Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.zip_postcode BETWEEN 'AB10 1AB' AND 'AB10 1ZZ' OR T2.zip_postcode IN (SELECT zip_postcode FROM Addresses WHERE country = 'Scotland') ORDER BY T1.party_id DESC,extra
