sql,hardness
"SELECT T1.problem_category_description, MAX(T2.log_entry_date) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T1.problem_category_code NOT IN (SELECT problem_category_code FROM Problem_Log WHERE problem_status_code = 'OPEN') GROUP BY T1.problem_category_description ORDER BY MAX(T2.log_entry_date) ASC LIMIT 10",extra
SELECT COUNT(problem_category_code) FROM Problem_Category_Codes WHERE problem_category_code != 'NA',easy
SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code < 'code1',easy
"SELECT T1.problem_category_description, MAX(T2.log_entry_date) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code JOIN Problem_Log AS T3 ON T2.problem_log_id = T3.problem_log_id JOIN Problems AS T4 ON T3.problem_id = T4.problem_id WHERE T2.log_entry_date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.log_entry_fix = 'Yes' OR T4.problem_description = 'Hardware Issue' GROUP BY T1.problem_category_description LIMIT 10",extra
SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code BETWEEN 'code1' AND 'code2' ORDER BY problem_category_code ASC,medium
"SELECT COUNT(T4.problem_category_code), COUNT(T2.problem_status_code), T3.product_name FROM Problems AS T1 JOIN Product AS T3 ON T1.product_id = T3.product_id JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id JOIN Problem_Category_Codes AS T4 ON T2.problem_category_code = T4.problem_category_code WHERE T2.log_entry_date >= '2020-01-01'",extra
SELECT COUNT(problem_log_id) FROM Problem_Log AS T1 WHERE T1.problem_status_code != 'closed',easy
"SELECT T1.problem_id, SUM(T2.log_entry_date) FROM Problems AS T1 JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id JOIN Staff AS T3 ON T2.assigned_to_staff_id = T3.staff_id WHERE T2.log_entry_date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.staff_first_name = 'John' OR T1.problem_description LIKE '%issue%' GROUP BY T1.problem_id HAVING SUM(T2.log_entry_date) > 10 ORDER BY T1.problem_id DESC",extra
SELECT T1.problem_log_id FROM Problem_Log AS T1 WHERE T1.problem_category_code = 'code1' OR T1.problem_id IN (SELECT T2.problem_id FROM Problems AS T2 WHERE T2.product_id = 1),extra
"SELECT COUNT(DISTINCT T1.staff_first_name), COUNT(DISTINCT T2.staff_last_name), T1.staff_id FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id = 5 OR T1.staff_id BETWEEN 10 AND 20 OR T2.staff_id > 3 ORDER BY T1.staff_id ASC",extra
"SELECT COUNT(DISTINCT T1.problem_category_code), COUNT(DISTINCT T1.problem_category_description), T1.problem_category_description FROM Problem_Category_Codes AS T1 WHERE T1.problem_category_code = 'Code1' OR T1.problem_category_description = 'Description1' OR T1.problem_category_code NOT IN (SELECT T2.problem_category_code FROM Problem_Log AS T2)",extra
"SELECT T1.problem_category_code, COUNT(T2.problem_log_id) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_status_code != 'CLOSED' GROUP BY T1.problem_category_code LIMIT 10",extra
SELECT MAX(T3.log_entry_date) FROM Problems AS T1 INNER JOIN Product AS T2 ON T1.product_id = T2.product_id INNER JOIN Problem_Log AS T3 ON T1.problem_id = T3.problem_id WHERE T3.log_entry_date <= '2020-01-01' ORDER BY T3.log_entry_date DESC LIMIT 1,extra
"SELECT T1.problem_category_description, COUNT(T2.problem_log_id), SUM(T2.problem_log_id) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.log_entry_date > '2020-01-01'",extra
SELECT T1.staff_first_name FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id > 10 ORDER BY T1.staff_id ASC,hard
SELECT problem_id FROM Problems WHERE problem_id BETWEEN 1 AND 100 AND product_id = 5,medium
SELECT COUNT(*) FROM Problems WHERE problem_id < 10 LIMIT 5,medium
"SELECT T1.problem_category_code, COUNT(T2.problem_log_id) FROM Problem_Log AS T1 JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id WHERE EXISTS (SELECT 1 FROM Problem_Log AS T3 WHERE T3.problem_id = T1.problem_id AND T3.log_entry_date > T1.log_entry_date) GROUP BY T1.problem_category_code",extra
"SELECT T1.product_name, COUNT(T2.problem_id) FROM Product AS T1 JOIN Problems AS T2 ON T1.product_id = T2.product_id WHERE T2.date_problem_closed > '2020-01-01' ORDER BY COUNT(T2.problem_id) DESC LIMIT 10",extra
"SELECT problem_category_code, COUNT(problem_category_code), problem_category_description FROM Problem_Category_Codes GROUP BY problem_category_code ORDER BY COUNT(problem_category_code) DESC LIMIT 5",hard
SELECT T1.problem_category_code FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_log_id NOT IN (SELECT problem_log_id FROM Problem_Log WHERE problem_log_id = 10 OR problem_log_id = 11 OR problem_log_id = 12),extra
SELECT COUNT(DISTINCT problem_category_code) FROM Problem_Log WHERE log_entry_date BETWEEN '2005-01-01' AND '2005-12-31' ORDER BY problem_log_id DESC,medium
SELECT problem_category_description FROM Problem_Category_Codes AS T1 WHERE EXISTS (SELECT 1 FROM Problem_Log AS T2 WHERE T2.problem_category_code = T1.problem_category_code AND T2.log_entry_description = 'details'),hard
"SELECT P.product_name, S.staff_first_name FROM Product AS P JOIN Problems AS Pr ON P.product_id = Pr.product_id JOIN Staff AS S ON S.staff_id = Pr.reported_by_staff_id WHERE Pr.product_id = 1 AND Pr.reported_by_staff_id = 1",hard
SELECT COUNT(DISTINCT T1.problem_category_code) FROM Problem_Log AS T1 JOIN Problem_Category_Codes AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_category_description BETWEEN 'abc' AND 'xyz' ORDER BY COUNT(DISTINCT T1.problem_category_code) DESC LIMIT 5,extra
SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code IN (SELECT problem_category_code FROM Problem_Log WHERE problem_id < 10),hard
