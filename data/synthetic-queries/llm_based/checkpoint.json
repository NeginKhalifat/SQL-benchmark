{
    "chat_history": {
        "headphone_store": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= #COLUMN#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Headphone_ID = #TABLE#.Headphone_ID AND #TABLE#.Price > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "company_office": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# AS T2 ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
        ],
        "sing_contest": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
        ],
        "voter_1": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #COLUMN# - #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(1) FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE#%' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
        ],
        "bike_1": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "car_racing": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "performance_attendance": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT DISTINCT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
        ],
        "insurance_policies": [
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.Settlement_ID AND #TABLE#.Payment_Method_Code = '#VALUE#') GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IS NOT NULL AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# > '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
        ],
        "manufacturer": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE# AND T2.#COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) , SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "advertising_agencies": [
            "SELECT #COLUMN# FROM #TABLE# AS M1 WHERE M1.#COLUMN# = #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# LIKE '%#VALUE#%'"
        ],
        "book_press": [
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#))",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS \"",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS  JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "e_commerce": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#) AS T1",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #TABLE#.#COLUMN# AND T2.#COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#)",
            "SELECT SUM(#COLUMN# * #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= MAX(#COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "gas_company": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Company_ID = #TABLE#.Company_ID) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#)"
        ],
        "cre_Drama_Workshop_Groups": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# ) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# > (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = '#VALUE#') ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = 0 ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
        ],
        "insurance_fnol": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#, #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '%#VALUE#%' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# LIMIT 1) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "music_1": [
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT AVG(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
        ],
        "cre_Doc_Template_Mgt": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# LIKE '%#VALUE#%') LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY T2.#COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
        ],
        "epinions_1": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) )",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #TABLE#.##COLUMN#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #TABLE#.##COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #VALUE# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) AND #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > MIN(#COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# AND COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
        ],
        "wedding": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
        ],
        "loan_1": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
        ],
        "bakery_1": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS ( SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > '#VALUE#' AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) >= #VALUE# ORDER BY MAX(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND (#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "academic": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT MIN(count(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# IS NOT NULL AND (SELECT COUNT(*) FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# )",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# LIKE '#VALUE#' OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
        ],
        "pets_1": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM (SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) #TABLE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "local_govt_and_lot": [
            "SELECT COUNT(#COLUMN#) AS count FROM #TABLE# AS #TABLE# ORDER BY count DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(*) FROM #TABLE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) IS NOT NULL ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "flight_4": [
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# ) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = '#VALUE#') AND T1.#COLUMN# = (SELECT T3.#COLUMN# FROM #TABLE# AS T3 WHERE T3.#COLUMN# = '#VALUE#')",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != ' #VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC"
        ],
        "geo": [
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = '#VALUE#' ORDER BY T.#COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) , MAX(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "phone_market": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' )",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.Phone_ID = #TABLE#.Phone_ID AND #COLUMN# > #VALUE# ) OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "entertainment_awards": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# )",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
        ],
        "book_2": [
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT (DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS \"",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN#",
            "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = #VALUE# AND #TABLE#. #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > (SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "school_bus": [
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# >= #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "restaurants": [
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
        ],
        "soccer_3": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #TABLE#.#COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < (SELECT MIN(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
        ],
        "station_weather": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) AND EXISTS ( SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# > #VALUE# OR #COLUMN# > ( SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#) AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# AS changed_name, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "browser_web": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT MIN(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# HAVING MIN(COUNT(DISTINCT #COLUMN#)) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "mountain_photos": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.id AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# > #COLUMN#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# AS \"",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# < #VALUE# AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(*) FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
        ],
        "perpetrator": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# = '#VALUE#' OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT SUM(#COLUMN#) + SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# IS NULL) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
        ],
        "sports_competition": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
        ],
        "csu_1": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
        ],
        "company_1": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY COUNT(DISTINCT #COLUMN#) HAVING AVG(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
        ],
        "cre_Doc_Workflow": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) AND NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) AND #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# LIKE '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #TABLE#. #COLUMN# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC"
        ],
        "world_1": [
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) , COUNT(DISTINCT #COLUMN#) ,  MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' AND #COLUMN# < '#VALUE#'",
            "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
        ],
        "film_rank": [
            "SELECT SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "music_4": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ) AS #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
        ],
        "railway": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(#COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT COUNT (DISTINCT #COLUMN#) , AVG (#COLUMN#) , COUNT (#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = '#VALUE#' OR T1.#COLUMN# = '#VALUE#' OR T1.#COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN#"
        ],
        "county_public_safety": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > (SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# JOIN #TABLE# AS T3 ON T2.#COLUMN# = T3.#COLUMN# WHERE T1.#COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
        ],
        "vehicle_rent": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(CASE WHEN #COLUMN# = #VALUE# THEN #COLUMN# END), COUNT(CASE WHEN #COLUMN# != #VALUE# THEN #COLUMN# END) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT MIN(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE# AS T3)",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "concert_singer": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#) , AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# AS #TABLE#.name FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# ) AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG( #COLUMN# ) FROM #TABLE# ) ) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) AS count_#COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY count_#COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE#",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#)",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = T1.#COLUMN# ) LIMIT #VALUE#"
        ],
        "bike_racing": [
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T2.#COLUMN# AND #COLUMN# = T1.#COLUMN#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #COLUMN#"
        ],
        "tracking_orders": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# IS NOT NULL AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
        ],
        "region_building": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# >= #VALUE# ORDER BY T2.#COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT (DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# LIKE '#VALUE#' GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
        ],
        "allergy_1": [
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#, #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#, #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "address_1": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND (SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
        ],
        "college_3": [
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# > #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT DISTINCT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
        ],
        "book_review": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Book_ID = #TABLE#.Book_ID AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
        ],
        "vehicle_driver": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Vehicle_ID = #TABLE#.Vehicle_ID AND #TABLE#.Driver_ID IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = (SELECT MAX(mycount) FROM (SELECT COUNT(DISTINCT #COLUMN#) as mycount FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#)) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN ('#VALUE#', '#VALUE#') OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "store_product": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = '#VALUE#'))",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT COUNT(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE#"
        ],
        "yelp": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# < #VALUE# ) GROUP BY T1.#COLUMN# HAVING MAX(T1.#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE#) AS T1 WHERE T1.#COLUMN# = #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(*) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
        ],
        "dorm_1": [
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#, #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.StuID AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "university_basketball": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
        ],
        "inn_1": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2_#COLUMN# = #TABLE#.#COLUMN#) OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "musical": [
            "SELECT MIN(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(*) ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = #VALUE#, #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#"
        ],
        "insurance_and_eClaims": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IS NOT NULL",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# OR #COLUMN# != #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
        ],
        "device": [
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT MIN(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# > #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE (#COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#') AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "entrepreneur": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#) OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = T2.#COLUMN# ORDER BY T1.#COLUMN# DESC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
        ],
        "race_track": [
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# AS r ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) OR (#COLUMN# > #VALUE# AND #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
        ],
        "orchestra": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT AVG(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#) AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) AS sum FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# ORDER BY sum ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
        ],
        "behavior_monitoring": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) =",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# DESC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
        ],
        "club_leader": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE# GROUP BY T2.#COLUMN#",
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
        ],
        "wta_1": [
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY T1.#COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#) OR (#COLUMN# = #VALUE# OR #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE (#COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#') AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "battle_death": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# <= #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT MAX #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "manufactory_1": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# #COLUMN# #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# #COLUMN# #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 ) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
        ],
        "pilot_1": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT SUM(#COLUMN#), #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)) AS #TABLE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "scholar": [
            "SELECT AVG(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# ORDER BY T2.#COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# LIMIT 1)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT (DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# )",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
        ],
        "solvency_ii": [
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T1.#COLUMN# = #TABLE#.#COLUMN#) LIMIT 1",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC"
        ],
        "debate": [
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM ( SELECT #COLUMN# , #COLUMN# , #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AS T1 ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "voter_2": [
            "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# AS T2) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# IS NULL) GROUP BY #COLUMN#, #COLUMN#, #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
        ],
        "document_management": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
        ],
        "e_learning": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT MIN(COUNT(#COLUMN#)), MAX(COUNT(#COLUMN#)), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# GROUP BY T2.#COLUMN# HAVING COUNT(T2.#COLUMN#) = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '' ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
        ],
        "tv_shows": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#, #COLUMN#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# GROUP BY #COLUMN# ORDER BY NULL",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
        ],
        "game_1": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) BETWEEN #VALUE# AND #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#, #COLUMN#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#)"
        ],
        "product_catalog": [
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "hospital_1": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT COUNT(DISTINCT #COLUMN#) as #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ) AS T1 ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# IS NOT NULL)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# )",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > '#VALUE#' GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) AS #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > '#VALUE#' GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = '#VALUE#' LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# AND #COLUMN# AND #COLUMN# BETWEEN #COLUMN# AND #COLUMN#"
        ],
        "candidate_poll": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
        ],
        "museum_visit": [
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# )",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# - #VALUE# AND #COLUMN# + #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# LIMIT 1)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#))) AS #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "college_1": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#)) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "customer_complaints": [
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE# ) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)",
            "SELECT AVG(#COLUMN#), COUNT(*) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) != #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# T1 JOIN #TABLE# T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
        ],
        "wrestler": [
            "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IS NOT NULL AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
        ],
        "department_store": [
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = '#VALUE#'",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# LIMIT #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
        ],
        "government_shift": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC))",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE# ORDER BY T2.#COLUMN# ASC LIMIT #VALUE#"
        ],
        "flight_company": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT 1",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# GROUP BY T1.#COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND T1.#COLUMN# = '#VALUE#' AND T1.#COLUMN# = '#VALUE#' ORDER BY T1.#COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.id = #TABLE#.id AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)"
        ],
        "tracking_software_problems": [
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#'",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# LIKE #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS A JOIN #TABLE# AS B ON #COLUMN# = #COLUMN# JOIN #TABLE# AS C ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# >= #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
        ],
        "phone_1": [
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)) OR (#COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) AS avg_#COLUMN#, AVG(#COLUMN#) AS avg_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND COUNT(DISTINCT #COLUMN#) = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#))",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#')) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "storm_record": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# > #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) UNION ALL SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
        ],
        "flight_1": [
            "SELECT #COLUMN#, COUNT(*), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AS \"",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# * #VALUE#, #COLUMN# * #VALUE#, #COLUMN# + #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ) LIMIT #VALUE#"
        ],
        "soccer_2": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT (#COLUMN#) , COUNT (#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = #VALUE# AND T.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND T.#COLUMN# = #VALUE# ORDER BY T.#COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
        ],
        "activity_1": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE# GROUP BY T1.#COLUMN# HAVING MIN(T2.#COLUMN#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS  WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
        ],
        "apartment_rentals": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT * FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM ( SELECT #COLUMN# AS #COLUMN#, #COLUMN# * #COLUMN# AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT #COLUMN#, AVG(#COLUMN#) AS average_#COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' GROUP BY #COLUMN# ) AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# )",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT MAX #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
        ],
        "dog_kennels": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)",
            "SELECT COUNT(*) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# AS #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#' ORDER BY T1.#COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
        ],
        "network_2": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# > #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
        ],
        "car_road_race": [
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#, #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) IS NOT NULL ORDER BY AVG(#COLUMN#) ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "riding_club": [
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT AVG(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
        ],
        "coffee_shop": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE#)",
            "SELECT * FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) OR #COLUMN# < ( SELECT SUM(#COLUMN#) FROM #TABLE# )",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
        ],
        "company_employee": [
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#"
        ],
        "products_for_hire": [
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = '#VALUE#' AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
        ],
        "club_1": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
        ],
        "wine_1": [
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# LIKE '%#VALUE#%'",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = ( SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #TABLE##COLUMN# GROUP BY #TABLE##COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE# )",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ) AS T1 LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) LIMIT #VALUE#"
        ],
        "poker_player": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) AS max_earning, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T2.#COLUMN# = #VALUE# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IS NOT NULL",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(#COLUMN#), MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "architecture": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# < #VALUE# ORDER BY T1.#COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
        ],
        "ship_1": [
            "SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY T1.#COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "party_host": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN#, #COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT ( DISTINCT #COLUMN# ), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# >= #VALUE#"
        ],
        "medicine_enzyme_interaction": [
            "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = '#VALUE#' ) OR #TABLE#. #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(CASE WHEN #COLUMN# = #VALUE# THEN 1 ELSE 0 END) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
        ],
        "icfp_1": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#)",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "customers_campaigns_ecommerce": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NOT NULL )",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# )"
        ],
        "election": [
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) AS #COLUMN#, AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
        ],
        "scientist_1": [
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #COLUMN#",
            "SELECT * FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# OR (#COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND T1.#COLUMN# = T2.#COLUMN#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AS \"",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "network_1": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE# AND COUNT(DISTINCT #COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "country_language": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) IS NULL ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "farm": [
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #TABLE#.City_ID AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "chinook_1": [
            "SELECT MIN(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AS T ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# )",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE#) AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
        ],
        "hr_1": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, MIN(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# JOIN #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "machine_repair": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# BETWEEN #VALUE# AND #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
        ],
        "aan_1": [
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# < ( SELECT MAX(#COLUMN#) FROM #TABLE# )",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2, #TABLE# AS T3 WHERE T1.#COLUMN# = T3.#COLUMN# AND T2.#COLUMN# = T3.#COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "party_people": [
            "SELECT * FROM (SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC) AS subquery",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) AS #TABLE# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "cre_Doc_Control_Systems": [
            "SELECT COUNT(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND LENGTH(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T2.#COLUMN# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= '#VALUE#'",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN '#VALUE#' AND '#VALUE#') OR (#COLUMN# = '#VALUE#') OR (#COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < '#VALUE#'",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
        ],
        "tvshow": [
            "SELECT COUNT(#COLUMN#) AS count_#COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT MIN(#COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )) AS T ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#')"
        ],
        "customers_card_transactions": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# LIKE '#VALUE#%'",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "local_govt_mdm": [
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS count_distinct_#COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE# GROUP BY T2.#COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE# GROUP BY COUNT(DISTINCT #COLUMN#) HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "city_record": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# > #VALUE# ORDER BY T1.#COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN# + #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN# + #COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) ) OR AVG(#COLUMN#) > #VALUE# OR COUNT(#COLUMN#) < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC",
            "SELECT SUM(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "cre_Docs_and_Epenses": [
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT MAX(#COLUMN#) , MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# != '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
        ],
        "local_govt_in_alabama": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) AS #TABLE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)) AS  ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) < #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "car_1": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT 1))",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "student_1": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) AS #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#. FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT COUNT(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "imdb": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE# ) ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# > #VALUE# OR T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
        ],
        "tracking_share_transactions": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#.#COLUMN# AND #COLUMN# = #VALUE# LIMIT 1)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '#VALUE#')",
            "SELECT AVG(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
        ],
        "student_assessment": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1",
            "SELECT COUNT(*) AS count FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS  WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "protein_institute": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MAX #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #TABLE#.#COLUMN# > #VALUE# AND #TABLE#.#COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "school_finance": [
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #VALUE# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# LIMIT #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) AS count_#COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "driving_school": [
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
        ],
        "body_builder": [
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# )",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.People_ID = #TABLE#.People_ID AND #TABLE#.Snatch > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #TABLE#.Clean_Jerk > (SELECT AVG(#COLUMN#) FROM #TABLE#))",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# NOT IN (SELECT AVG(#COLUMN#) FROM #TABLE# AS T2 GROUP BY T2.#COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# < T2.#COLUMN# AND T1.#COLUMN# <= T2.#COLUMN# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < AVG(#COLUMN#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE T3.#COLUMN# = T1.#COLUMN# AND T3.#COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "customers_and_invoices": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 UNION SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
        ],
        "formula_1": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# LIKE '%#VALUE#%'",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = 1 OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
        ],
        "university_rank": [
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT MAX(#COLUMN#) AS #COLUMN#, MIN(#COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#, #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# > #VALUE#"
        ],
        "student_transcripts_tracking": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IS NULL OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#'",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
        ],
        "online_exams": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN# = '#VALUE#') FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN# = '#VALUE#') = #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1"
        ],
        "book_1": [
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT 1",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT DISTINCT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN# * #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN# * #COLUMN#) DESC"
        ],
        "aircraft": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > MAX(#COLUMN#)",
            "SELECT DISTINCT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) AS count , MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
        ],
        "warehouse_1": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE#, #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#, #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# != #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
        ],
        "music_2": [
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = '#VALUE#' GROUP BY T2.#COLUMN# HAVING MAX(T2.#COLUMN#) = #VALUE# ) GROUP BY T1.#COLUMN# HAVING MAX(T1.#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# UNION ALL SELECT #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "employee_hire_evaluation": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "cre_Doc_and_collections": [
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' AND #COLUMN# != '#VALUE#' AND #COLUMN# != '#VALUE#'",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.Document_Subset_ID AND COUNT(DISTINCT #COLUMN#) > #VALUE# AND COUNT(DISTINCT #COLUMN#) > #VALUE# LIMIT #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# ) ORDER BY T1.#COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "match_season": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT 1"
        ],
        "real_estate_rentals": [
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# <= #VALUE# ORDER BY T1.#COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE T3.#COLUMN# = T1.#COLUMN# AND T3.#COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "planet_1": [
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #TABLE#.Employee = #TABLE#.EmployeeID) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
        ],
        "bbc_channels": [
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = COUNT(DISTINCT #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
        ],
        "school_player": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
        ],
        "pilot_record": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE# AND T2.#COLUMN# < #VALUE#) ORDER BY T1.#COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = 1 AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = 1) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = 1 LIMIT 1)))",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# IS NULL",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT 1)) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
        ],
        "news_report": [
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #TABLE#.Event_ID)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT SUM(#COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "department_management": [
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#))",
            "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < '#VALUE#'",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ) AND #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN (SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#) AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(*) FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#) OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
        ],
        "gymnast": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC) ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#. #COLUMN# AND T1.#COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MIN(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "soccer_1": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY MAX(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR (EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# > #VALUE#))) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
        ],
        "course_teach": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
        ],
        "flight_2": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #VALUE# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "singer": [
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# OR T2.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(COUNT(DISTINCT #COLUMN#))",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "train_station": [
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MAX(#COLUMN#) FROM #TABLE# AS T3) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT MIN(#COLUMN#), MAX(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
        ],
        "shop_membership": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
        ],
        "college_2": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE# )",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T WHERE T.#COLUMN# >= #VALUE# ORDER BY T.#COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS ) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# )",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
        ],
        "cre_Doc_Tracking_DB": [
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) AND #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (#VALUE#)",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "customers_and_addresses": [
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '%#VALUE#%')",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "cinema": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# AND #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT DISTINCT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
        ],
        "cre_Students_Information_Systems": [
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
        ],
        "decoration_competition": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "culture_company": [
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# AS new_name FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT DISTINCT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# AS #TABLE# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
        ],
        "program_share": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Program_ID = #TABLE#.Program_ID AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
        ],
        "conference": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# > #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#, #COLUMN#, #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
        ],
        "workshop_paper": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IS NOT NULL",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#"
        ],
        "tracking_grants_for_research": [
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT (DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
        ],
        "store_1": [
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ) AS #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT * FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) )",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' AND #COLUMN# <= '#VALUE#'"
        ],
        "customers_and_products_contacts": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE MIN(#COLUMN#) BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ) #TABLE# GROUP BY #COLUMN#",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT 1)"
        ],
        "district_spokesman": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS D1 ON #COLUMN# = D1.#COLUMN# WHERE #COLUMN# > #VALUE# AND D1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
        ],
        "real_estate_properties": [
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT SUM(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#'",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
        ],
        "customers_and_orders": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN#, SUM(#COLUMN# * #COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T4 WHERE #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "ship_mission": [
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND T1.#COLUMN# = T2.#COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# > #VALUE#) OR (#COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# LIKE #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN#, MAX(#COLUMN#) AS max_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY sum_#COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
        ],
        "boat_1": [
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS ",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#))",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# > #VALUE# ) AS T GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T2.#COLUMN# = T1.#COLUMN# WHERE T2.#COLUMN# != #VALUE# ORDER BY T2.#COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
        ],
        "institution_sports": [
            "SELECT #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AS  ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = '#VALUE#' OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# < #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN T2.#COLUMN# AND T2.#COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
        ],
        "sakila_1": [
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = '#VALUE#' AND T1.#COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(*) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT 1",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1  JOIN #TABLE# AS T2  ON #COLUMN# = #COLUMN#  JOIN #TABLE# AS T3  ON #COLUMN# = #COLUMN#  WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN#)",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT LIKE #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
        ],
        "election_representative": [
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ) LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# != #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
        ],
        "climbing": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# < #VALUE# AND #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND (SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#) > #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# JOIN #TABLE# AS T3 ON T2.#COLUMN# = T3.#COLUMN# WHERE T1.#COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "journal_committee": [
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < 'YYYY-MM-DD' GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE##VALUE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE##VALUE# JOIN #TABLE# AS #TABLE##VALUE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#)) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) + COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
        ],
        "products_gen_characteristics": [
            "SELECT COUNT(*) FROM #TABLE# AS #TABLE#",
            "SELECT MAX(#COLUMN#) , MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS count_distinct_#COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
        ],
        "video_game": [
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
        ],
        "small_bank_1": [
            "SELECT #COLUMN#, SUM(#COLUMN#) + SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE# ) AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, MAX(#COLUMN# + #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN# + #COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "cre_Theme_park": [
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE# ) AND #COLUMN# = #VALUE#",
            "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IS NOT NULL OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) AS count FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# = '#VALUE#'"
        ],
        "e_government": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY COUNT(#COLUMN#) ASC",
            "SELECT SUM(#COLUMN#) AS sum_#COLUMN#, COUNT(DISTINCT #COLUMN#) AS count_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '#VALUE#%' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
        ],
        "movie_1": [
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
        ],
        "art_1": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE# OR T1.#COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#)",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#",
            "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) IS NOT NULL ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
        ],
        "roller_coaster": [
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# LIKE '#VALUE#' AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#) ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#"
        ],
        "swimming": [
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.ID = #TABLE#.Swimmer_ID ) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#) AS count FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY count ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT 1",
            "SELECT COUNT (DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > ( SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
        ],
        "twitter_1": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# LIKE '#VALUE#'",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT CAST(SUM(CASE WHEN #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# THEN #COLUMN# END) AS REAL) * 100 / SUM(CASE WHEN #COLUMN# = #COLUMN# THEN #COLUMN# END), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) BETWEEN #VALUE# AND #VALUE# OR SUM(#COLUMN#) > #VALUE# OR SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')"
        ],
        "restaurant_bills": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#",
            "SELECT SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT SUM(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
        ],
        "restaurant_1": [
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '#VALUE#' ) ) OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
        ],
        "game_injury": [
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY COUNT(DISTINCT #COLUMN#) HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND (#COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# < (SELECT MIN(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
        ],
        "assets_maintenance": [
            "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# T1 JOIN #TABLE# T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'",
            "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '' LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "customer_deliveries": [
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)",
            "SELECT SUM(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT AVG(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AND #COLUMN# > #VALUE#",
            "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY T1.#COLUMN# DESC",
            "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ) OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#",
            "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
        ],
        "movie_2": [
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#",
            "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#)",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN#, SUM(#COLUMN# != #VALUE#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN# != #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#",
            "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#",
            "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# AS \"",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
        ],
        "theme_gallery": [
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#",
            "SELECT AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#))",
            "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#",
            "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#",
            "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)",
            "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC",
            "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) LIMIT #VALUE#",
            "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC",
            "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC",
            "SELECT #COLUMN# FROM #TABLE# AS \""
        ]
    },
    "queries": {
        "headphone_store": [
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT Model FROM headphone WHERE Construction != 'Closed' ORDER BY Price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "eaffe4ce17dbc9ed5fe5b14e7b861f0d2f28950a",
                "query": "SELECT T1.Model, COUNT(T2.Headphone_ID) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE EXISTS (SELECT 1 FROM store AS T3 WHERE T3.Store_ID = T2.Store_ID AND T3.Name = 'Best Buy') GROUP BY T1.Model ORDER BY COUNT(T2.Headphone_ID) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "7d627d73ae65e8de2c9bba359da8bc81db18bcdc",
                "query": "SELECT T1.Model, T1.Price FROM headphone AS T1 WHERE T1.Price <= T1.`Driver-matched_dB`",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "dbfeaf3eee0624f4b42286227037da5fb7849959",
                "query": "SELECT MAX(T1.Price), MIN(T1.Price) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Quantity < 10 ORDER BY T1.Price DESC",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f738fb8641b4bba9f6df45aad5b7770d3c1ffc69",
                "query": "SELECT MAX(Price) FROM headphone WHERE Price <= 200",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT Model FROM headphone AS headphonetable WHERE Price <= 500",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "70a834d69ec7e2e33296e1c846a8f04be4e167d7",
                "query": "SELECT * FROM stock WHERE EXISTS (SELECT 1 FROM headphone WHERE headphone.Headphone_ID = stock.Headphone_ID AND headphone.Price > 200) LIMIT 10",
                "template": "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Headphone_ID = #TABLE#.Headphone_ID AND #TABLE#.Price > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "1ca830b879b115170b4043f8b6e6837a6cbe0451",
                "query": "SELECT COUNT(DISTINCT T1.Store_ID) FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Quantity > 10 AND T2.Price BETWEEN 50 AND 200 AND T2.Class = 'Full-size'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "e38d5369f00d9a900d3ab025072896baa16fc67b",
                "query": "SELECT T1.Model, AVG(T1.Price) FROM headphone AS T1 WHERE T1.Price > 100 OR T1.Price < 500 AND T1.Construction = 'Closed' AND T1.Headphone_ID NOT IN ( SELECT T2.Headphone_ID FROM stock AS T2 WHERE T2.Quantity < 10 ) GROUP BY T1.Model LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "49be536ac9a49586de8d680fc732961a60094303",
                "query": "SELECT T1.Model, COUNT(T2.Headphone_ID) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID JOIN store AS T3 ON T2.Store_ID = T3.Store_ID WHERE T1.Price <= 500 GROUP BY T1.Model ORDER BY COUNT(T2.Headphone_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "5d83e90ebbabaa76e95f7f55ff2322a71bf5d4ab",
                "query": "SELECT T1.Model, T2.Quantity FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID JOIN store AS T3 ON T2.Store_ID = T3.Store_ID WHERE T1.Price BETWEEN 50 AND 100 OR T3.Parking = 'Yes' OR T2.Quantity > 10 ORDER BY T1.Price DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d94880d3594d4468db85bf5fbf9015e5031180b9",
                "query": "SELECT T2.Name FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Model = 'Model' AND T1.Price > (SELECT AVG(Price) FROM headphone) AND T2.Quantity > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "a5896f5438a6975c6355f9caa4ced960fbe7f90a",
                "query": "SELECT T1.Model, COUNT(T2.Headphone_ID) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Price BETWEEN 50 AND 100 AND T1.Class = 'Full-size' GROUP BY T1.Model LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "098c5de661e6e0763380e29c04a750b835299776",
                "query": "SELECT T1.Model FROM headphone AS T1 WHERE EXISTS (SELECT T2.Store_ID FROM stock AS T2 WHERE T2.Headphone_ID = T1.Headphone_ID ORDER BY T2.Quantity ASC)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC)"
            },
            {
                "hash": "421c0d3abdf997d81a4cee85218f8e0001908866",
                "query": "SELECT T1.Headphone_ID, T2.Store_ID, T3.Name FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID JOIN store AS T3 ON T2.Store_ID = T3.Store_ID WHERE T1.Price BETWEEN 50 AND 150 OR T3.Name = 'Store1' AND NOT EXISTS (SELECT 1 FROM store WHERE T3.Store_ID = Store_ID AND Neighborhood = 'Neighborhood1')",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8d4da87415efa14513484d0a9022b56f59ec4426",
                "query": "SELECT SUM(T1.Price) FROM headphone AS T1 WHERE T1.`Driver-matched_dB` BETWEEN 100 AND 200 AND T1.Construction = 'Closed'",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0391e91ede149599dc2137898e7f75131d12dc77",
                "query": "SELECT T1.Model FROM headphone AS T1 WHERE T1.Price > 50 AND T1.`Driver-matched_dB` BETWEEN 20 AND 40 AND T1.Class = 'full' ORDER BY T1.Headphone_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b0f6438b2d8485bdee812002c20859131e774acc",
                "query": "SELECT T1.Model, COUNT(T2.Store_ID) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Quantity > 10 AND EXISTS (SELECT 1 FROM store AS T3 WHERE T3.Store_ID = T2.Store_ID AND T3.Parking = 'Yes')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "56ea91232360447fb7380310355066c3ec22ee39",
                "query": "SELECT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID JOIN store AS T3 ON T2.Store_ID = T3.Store_ID GROUP BY T1.Model ORDER BY T1.Model ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a9583e82ddf4928b25630163a028fe84799cfe77",
                "query": "SELECT Model FROM headphone LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "4e3ee4b8043c3c08d67862ee6f3ac778f70a5030",
                "query": "SELECT T1.Headphone_ID, T1.Model, T2.Quantity FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Quantity = 10 ORDER BY T2.Quantity DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "company_office": [
            {
                "hash": "b58bb43d13621ac36ca33d958078c50130c09047",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name) FROM buildings AS T1 JOIN Office_locations AS T3 ON T1.id = T3.building_id JOIN Companies AS T2 ON T2.id = T3.company_id WHERE T1.Height >= 100 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6a32dc804af8e998789199be9d88028278caf2c5",
                "query": "SELECT COUNT(DISTINCT T1.name), T2.name FROM buildings AS T1 JOIN Office_locations AS T3 ON T1.id = T3.building_id JOIN Companies AS T2 ON T3.company_id = T2.id WHERE T1.Height < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "1f2101b8393850c1b3928df06b8cac1dfb333d83",
                "query": "SELECT COUNT(Height) FROM buildings WHERE Status != 'completed'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d32435d5c0a612d5e315e1f4cc880f15457ad188",
                "query": "SELECT T1.name, COUNT(T2.company_id) FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id WHERE T1.City != 'New York'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "11e36f311c47695e62de6b876ed309115fa76097",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T1.City) FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id WHERE T1.Status != 'Abandoned' ORDER BY T1.id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d2f10dc8aada6adec9b85e0ec8e7928fb97d51db",
                "query": "SELECT T1.name, T1.City FROM buildings AS Companies WHERE Companies.Height > 100 OR Companies.Stories BETWEEN 10 AND 20 OR Companies.Status = 'Under Construction'",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "a67b89eb1c631eb6de1db06c4764e3a8949f1a44",
                "query": "SELECT T1.name, COUNT(T2.company_id) FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id WHERE T1 CITY = 'New York' AND T2.move_in_year > 2000 AND T1.Height IN (SELECT Height FROM buildings WHERE City = 'Chicago')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "3aa826ded8bf017db8e77daaa1bc629444dbcad1",
                "query": "SELECT MIN(Height) FROM buildings WHERE Height < 100 ORDER BY Height DESC LIMIT 5",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1423bbcbef88a023da1943229b5e7b82b202bf30",
                "query": "SELECT b.name, AVG(o.move_in_year) FROM buildings AS b JOIN Office_locations AS o ON b.id = o.building_id WHERE o.company_id = 1 OR b.City = 'New York' OR EXISTS (SELECT 1 FROM Companies AS c WHERE c.id = o.company_id AND c.Sales_billion > 10)",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "96dd78ce38e52bdb177d2a271743be26251b48c4",
                "query": "SELECT T1.name, T2.Sales_billion FROM buildings AS T1 JOIN Office_locations AS T3 ON T1.id = T3.building_id JOIN Companies AS T2 ON T3.company_id = T2.id WHERE T2.Sales_billion >= 10 ORDER BY T2.Sales_billion DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a0b178be86b734d7266e26793bee9e26c77e4a32",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM buildings AS T1 WHERE T1.Height > 100 AND T1.Stories > 20 OR EXISTS (SELECT T2.building_id FROM Office_locations AS T2 WHERE T2.building_id = T1.id)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "45fa553d74467c27974c1f38347ba668e5d1cabb",
                "query": "SELECT T1.name FROM buildings AS T1 WHERE T1.Height > ( SELECT AVG(T2.Height) FROM buildings AS T2 ) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# AS T2 ) LIMIT #VALUE#"
            },
            {
                "hash": "23d25fda277234147c20aa4538bcad7e191d3eb1",
                "query": "SELECT T1.name FROM Companies AS T1 WHERE T1.name = 'CompanyA'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "4fe3de7b98f004dbdf7a283f4c4291ee81b56055",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.company_id) FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id WHERE EXISTS (SELECT 1 FROM Companies AS T3 WHERE T3.id = T2.company_id AND T3.Sales_billion > 10)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "8f415f5ce460fde4db1d20e71266f6fcd3b07af8",
                "query": "SELECT T1.name, T2.name FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "94d55958770f4b89224d097c1d2d57818bf471cf",
                "query": "SELECT AVG(Height) FROM buildings WHERE City > 'New York'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "12a7945d444725c0d317a48fd64cd28254b514c3",
                "query": "SELECT T1.name FROM buildings AS T1 WHERE T1.Stories > 50",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "e03a1bfb292f3fc3ccb7d0d182cbe74ec1aa64ee",
                "query": "SELECT T1.name FROM buildings AS T1 WHERE T1.City = 'New York' AND T1.Height > 100 AND T1.id NOT IN (SELECT T2.building_id FROM Office_locations AS T2) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0b4419b2f9c86cc38def6c56d4b5afb74a886103",
                "query": "SELECT T1.name FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id WHERE T1.name NOT IN (SELECT T3.name FROM Companies AS T3 JOIN Office_locations AS T4 ON T3.id = T4.company_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "1cbc8fa450e6990b106ec4d0abeacc0598ab6845",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.id) FROM buildings AS T1 JOIN Office_locations AS T2 ON T1.id = T2.building_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            }
        ],
        "sing_contest": [
            {
                "hash": "1235c71d108785ce673c1d092d0e7a6a6c15170a",
                "query": "SELECT T1.name, T2.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T1.popularity >= 50 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "33557aa38e09884bf12b48ac1f3e94faee7a1b71",
                "query": "SELECT COUNT(DISTINCT T2.name), T1.name FROM participants AS T1 JOIN songs AS T2 ON T2.id = T1.id WHERE T2.name NOT IN (SELECT name FROM songs WHERE language = 'English') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "29e560d4b8d32fcb3b0069d9d30eec6e47828427",
                "query": "SELECT T1.name, SUM(T3.voice_sound_quality) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T3.name NOT IN (SELECT name FROM songs WHERE language = 'English') GROUP BY T1.name HAVING SUM(T3.voice_sound_quality) > 10 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fff9736c0d55a7aa9619bc8fb46a0cdc77cbbcec",
                "query": "SELECT T1.name, COUNT(T2.participant_id) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.popularity < 100 GROUP BY T1.name ORDER BY COUNT(T2.participant_id) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "fbc6940de160a236ed11605737b4d247cbd98f6d",
                "query": "SELECT T1.name, AVG(T2.stage_presence) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE NOT EXISTS (SELECT 1 FROM songs AS T3 WHERE T3.name = T1.name AND T2.songs_id = T3.id) GROUP BY T1.name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "3b5ffc743447a4caae66eeba5cb04c823456e8c2",
                "query": "SELECT * FROM participants WHERE name = 'ABC' AND popularity BETWEEN 10 AND 20 AND id > 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "ff11c450c0af26d37a938d93d1cb79fe11fd6099",
                "query": "SELECT T1.name FROM participants AS T1 INNER JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.id NOT IN ( SELECT T2.participant_id FROM performance_score AS T2 WHERE T2.rhythm_tempo < 5) ORDER BY T1.popularity DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0591680cfba28f56c5a46efd484e406a4f159d52",
                "query": "SELECT T1.name, T2.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.popularity > 50 AND T1.popularity < 100 AND T2.voice_sound_quality > 7",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5e9d445da93423cc359ba3b3a92a090610d9f224",
                "query": "SELECT T1.name, T3.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id JOIN songs AS T3 ON T3.id = T2.songs_id WHERE T2.voice_sound_quality = 8 ORDER BY T1.popularity ASC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "86bcf33def0874f14bdaa7a46adcf5ae5f172414",
                "query": "SELECT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE EXISTS (SELECT 1 FROM songs AS T3 WHERE T3.id = T2.songs_id AND T3.name = 'Song Name')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "06078a6ed4b789446395335a9c803f0f58ecb4d9",
                "query": "SELECT T1.name, SUM(T3.stage_presence) FROM participants AS T1 JOIN performance_score AS T3 ON T1.id = T3.participant_id JOIN songs AS T2 ON T2.id = T3.songs_id WHERE T2.name = 'song_name' OR T2.language = 'English' OR EXISTS (SELECT 1 FROM performance_score WHERE participant_id = T3.participant_id AND songs_id = T3.songs_id)",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "c3f09ecd954a3480f4fa1115302fdadd22152c45",
                "query": "SELECT T.name FROM participants AS T WHERE T.popularity = 10 ORDER BY T.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "19ca0d892b39671147d8c0c55d638ac5b97740fa",
                "query": "SELECT COUNT(DISTINCT T2.name), T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.popularity > 50 AND T2.voice_sound_quality BETWEEN 8 AND 10 AND T2.rhythm_tempo = 9",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "5f831de0df65b706e2270397329b5c5907691a2f",
                "query": "SELECT name FROM participants WHERE id = 1 OR name = 'John' OR NOT EXISTS (SELECT 1 FROM performance_score WHERE participant_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "44a6c0f262b6eb808da9575b776ce2cf0212868d",
                "query": "SELECT T1.name, T2.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.popularity BETWEEN 50 AND 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e9d7954f69dfbd172dba95b52cf73866e329530c",
                "query": "SELECT T2.name, AVG(T1.rhythm_tempo) FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id = T2.id WHERE T1.stage_presence >= 7 ORDER BY AVG(T1.rhythm_tempo) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "1605b778f80fb30146b4953f7b2fab67f688c41d",
                "query": "SELECT AVG(T1.popularity) FROM participants AS T1 WHERE T1.id NOT IN ( SELECT T2.participant_id FROM performance_score AS T2 WHERE T2.stage_presence < 5 ) OR T1.popularity > 500 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d0a9915deb5d199e38b2c411403c0689094afef7",
                "query": "SELECT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T2.stage_presence BETWEEN 7 AND ( SELECT AVG(stage_presence) FROM performance_score ) AND T2.rhythm_tempo = ( SELECT MAX(rhythm_tempo) FROM performance_score ) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "88b848271d6547da09f0b575afb54ef0a1a6b0e2",
                "query": "SELECT COUNT(DISTINCT T1.id), SUM(T3.voice_sound_quality) FROM participants AS T1 JOIN performance_score AS T3 ON T1.id = T3.participant_id JOIN songs AS T2 ON T3.songs_id = T2.id WHERE T2.language <= 'English' GROUP BY T1.id ORDER BY COUNT(DISTINCT T1.id) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "0067c21980931f04d0782735e2842f131a5ee7f0",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.id) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.id IN (SELECT participant_id FROM performance_score WHERE songs_id = (SELECT id FROM songs WHERE name = 'song_name')) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "71708accd030e74a1aeddaeeb5ea82a234b9b340",
                "query": "SELECT T1.name, T2.name FROM participants AS T1 JOIN participants AS T2 ON T1.popularity < T2.popularity LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.popularity, T2.name FROM participants AS T1, performance_score AS T2 WHERE T1.id = T2.participant_id AND T1.name = 'John'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "c7e56660ef28520121b187f841e93718f6344858",
                "query": "SELECT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T2.stage_presence = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "fafe5da917ab2e4dc88d806932a6c287b4168c2f",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T2.name), COUNT(DISTINCT T3.name) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id JOIN songs AS T3 ON T2.songs_id = T3.id WHERE T1.popularity <= 500 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "af89699490edcf5ed60279ca2255d11b230689b9",
                "query": "SELECT COUNT(T1.id), AVG(T2.stage_presence) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T1.popularity BETWEEN 100 AND 500 AND T2.stage_presence > 8",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "526a77955f186dda8974f562977ad0687bcb1f9f",
                "query": "SELECT T1.name, MIN(T2.stage_presence) FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE EXISTS (SELECT 1 FROM songs AS T3 WHERE T3.id = T2.songs_id) GROUP BY T1.name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            }
        ],
        "voter_1": [
            {
                "hash": "5b55b8a306e49d8dcc5d8e854615ddecf72de275",
                "query": "SELECT T1.contestant_number, COUNT(DISTINCT T2.phone_number) FROM VOTES AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state = 'CA' OR T2.phone_number BETWEEN 100000 AND 999999 OR NOT EXISTS (SELECT 1 FROM VOTES AS T3 WHERE T3.contestant_number = T1.contestant_number AND T3.state = 'NY') ORDER BY T1.contestant_number DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a62baec3803851d36b61e934d10bc93c04d8dc66",
                "query": "SELECT COUNT(DISTINCT T3.state) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T3.state = T1.state WHERE T3.area_code BETWEEN 200 AND 300 AND T1.created > T1.created - 30",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #COLUMN# - #VALUE#"
            },
            {
                "hash": "a145006143b003b900794c714fe99d32b50cac6c",
                "query": "SELECT state FROM VOTES WHERE created <= '10:00' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "a56e9d9e8e84c50142d1d2dd155e0bccf3be65d5",
                "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T2.state = T3.state WHERE T2.vote_id BETWEEN 100 AND 1000 AND T2.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'John') ORDER BY T1.contestant_number DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8d8828421b8ad42da09d83c10e94ca2cce4ef236",
                "query": "SELECT COUNT(DISTINCT T1.state) , COUNT(DISTINCT T1.contestant_name) , T1.state FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.phone_number <= 9999999999 ORDER BY T1.state DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "dfcd79d164a723790a4c2808946177218a447fab",
                "query": "SELECT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.vote_id > 1000 AND T2.contestant_number > 500",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "517a762b084bb2612aa588aa34c20977b224d92c",
                "query": "SELECT COUNT(DISTINCT T2.phone_number), COUNT(T1.contestant_number) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.vote_id < 100 GROUP BY T1.contestant_number ORDER BY COUNT(T1.contestant_number) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "a66d7cae7ae49f6c25b349387a0312299ca85ee3",
                "query": "SELECT contestant_number, COUNT(vote_id), SUM(1) FROM VOTES GROUP BY contestant_number ORDER BY COUNT(vote_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(1) FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "c06df78743435eda2a92f17661c5d5dadc46a90e",
                "query": "SELECT T2.contestant_name, COUNT(T1.vote_id) FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T2.contestant_name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "fb55f6436fdfad6795863ddb7f723a1148f9174a",
                "query": "SELECT SUM(T1.phone_number), T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T1.state = T3.state WHERE T1.vote_id BETWEEN 100 AND 200",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "15bc6e4cf60c759b73620386c7d975588678331a",
                "query": "SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number JOIN AREA_CODE_STATE AS T3 ON T3.state = T1.state WHERE T1.phone_number BETWEEN 100000 AND 999999 OR T1.contestant_number IN (SELECT contestant_number FROM VOTES GROUP BY contestant_number HAVING COUNT(DISTINCT phone_number) > 10) ORDER BY T1.phone_number ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6b5d51dd0cd5ed720b4ea81ff8470af9df4febee",
                "query": "SELECT T1.contestant_name, AVG(T2.vote_id) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_number = 1 OR T2.vote_id BETWEEN 10 AND 20 GROUP BY T1.contestant_name HAVING AVG(T2.vote_id) > 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "476b6fe565b4ce3ec7ae89f46f848dd2495ff3cb",
                "query": "SELECT COUNT(DISTINCT T1.area_code), COUNT(DISTINCT T2.contestant_number), COUNT(DISTINCT T3.phone_number) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state JOIN CONTESTANTS AS T3 ON T2.contestant_number = T3.contestant_number",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "670927522a377e2ba4bbb5d9532dcfcb77655a33",
                "query": "SELECT T1.contestant_name, MAX(COUNT(DISTINCT T2.phone_number)) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state = 'NY' GROUP BY T1.contestant_name",
                "template": "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "9115bc6055955f491aa8e6e6c5fccc0cc266f0e7",
                "query": "SELECT T2.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T1.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'John') AND T1.phone_number BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "689da847c24a84f4951c37c91eb71fe9b235e1e4",
                "query": "SELECT T2.contestant_name FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.phone_number LIKE '123%' OR T1.created BETWEEN '2020-01-01' AND '2020-12-31' OR T2.contestant_name = 'John Doe' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE#%' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "48eaa36230491b44b28eb140199752d2738eff71",
                "query": "SELECT T2.state FROM VOTES AS T1 JOIN VOTES AS T2 ON T1.phone_number = T2.phone_number WHERE T1.state = 'CA' OR T1.state = 'NY' AND T1.contestant_number = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "a08e912d692c971161aacce3b8465075ec5e2335",
                "query": "SELECT T1.contestant_name, COUNT(T2.vote_id) FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.state = 'California' AND T2.created BETWEEN '2022-01-01' AND '2022-01-31' AND T2.phone_number NOT IN ( SELECT T3.phone_number FROM VOTES AS T3 WHERE T3.state = 'New York' ) ORDER BY COUNT(T2.vote_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "569dfd5475b77c1d51c8a1e1ffafefc53de63e33",
                "query": "SELECT T1.contestant_name FROM CONTESTANTS AS T1 JOIN VOTES AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_number >= 1 ORDER BY T1.contestant_number DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "4ad10b24074270483abd774aa68bb49bf90be239",
                "query": "SELECT area_code FROM AREA_CODE_STATE WHERE area_code >= 500 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b77c50000e075e9d2a841e7fe72857422d431afb",
                "query": "SELECT T1.state FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_number <= 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT state FROM VOTES WHERE phone_number != 1234567890 ORDER BY state DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b54cbb91217b2866828d6a4253f95214d906233a",
                "query": "SELECT COUNT(DISTINCT T2.phone_number), T1.state, T2.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state GROUP BY T2.state HAVING COUNT(DISTINCT T2.phone_number) <= 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE#"
            },
            {
                "hash": "f4952f369660298352d76054c00068750e63de67",
                "query": "SELECT T2.state FROM VOTES AS T1 JOIN AREA_CODE_STATE AS T2 ON T1.state = T2.state WHERE T1.contestant_number IN (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'John') ORDER BY T2.state ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "13ddf7c78a126f5cad55fc28ec87535336092c8d",
                "query": "SELECT COUNT(DISTINCT T1.contestant_name) FROM CONTESTANTS AS T1 WHERE T1.contestant_number = 1 OR EXISTS (SELECT 1 FROM VOTES AS T2 WHERE T2.contestant_number = T1.contestant_number AND T2.state = 'CA') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "b07a047fdd4588d2b19c47b3fc1e69359694eb3b",
                "query": "SELECT T1.area_code, MAX(T1.area_code) FROM AREA_CODE_STATE AS T1 JOIN VOTES AS T2 ON T1.state = T2.state WHERE (T2.phone_number BETWEEN 100 AND 200 OR T2.contestant_number IN (SELECT T3.contestant_number FROM CONTESTANTS AS T3 WHERE T3.contestant_name = 'John')) AND T2.state NOT IN (SELECT T4.state FROM VOTES AS T4 WHERE T4.created > '2020-01-01') GROUP BY T1.area_code LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            }
        ],
        "bike_1": [
            {
                "hash": "bef9336a527a443f66ce3d39061f8869b9211523",
                "query": "SELECT T2.name FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id WHERE T1.duration BETWEEN 100 AND 200 OR T1.subscription_type = 'Subscriber' OR EXISTS (SELECT 1 FROM weather WHERE weather.zip_code = T2.city AND weather.cloud_cover > 5)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "f01c923d583796835d1b6d670668a29860711917",
                "query": "SELECT AVG(T1.dock_count), AVG(T1.lat), AVG(T1.long) FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.docks_available <= 10 ORDER BY T1.dock_count DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "898697a56a5355493b605ef9fdc675b00bb12fa6",
                "query": "SELECT T1.name, T1.lat FROM station AS T1 WHERE T1.installation_date BETWEEN '2014-01-01' AND '2014-12-31' AND T1.city = 'San Francisco'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "5feb9445097a03afdb1ad9b3e779f5cce12a2467",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.dock_count) FROM station AS T1 WHERE NOT EXISTS (SELECT T2.events FROM weather AS T2 WHERE T1.city = T2.zip_code)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#)"
            },
            {
                "hash": "ff61c4eca0d453d57f9220d5967b0dc9d9136305",
                "query": "SELECT T1.name, T2.bikes_available FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id JOIN trip AS T3 ON T1.id = T3.start_station_id WHERE T3.duration BETWEEN 100 AND 200 ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e3dfac651f89642480edf57c1d1db057a323f1d4",
                "query": "SELECT city, name FROM station",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "0497251c19c6bb31175400ac862ff14ec08a9ce1",
                "query": "SELECT T1.name, T2.bikes_available FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available >= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "e5211b67a2ecd2912c77f0d6c8648c13d3cf35b7",
                "query": "SELECT name FROM station WHERE city = 'San Francisco' OR dock_count BETWEEN 10 AND 50 OR lat > 37.75",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "f5c6952d6a7d0abea7437092e51851dd5e050cf7",
                "query": "SELECT T1.name, COUNT(DISTINCT T1.id) FROM station AS T1 WHERE T1.id IN (SELECT T2.start_station_id FROM trip AS T2) GROUP BY T1.name ORDER BY COUNT(DISTINCT T1.id) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "73b0f40e2c572894526478a3d9c41661a2455fcb",
                "query": "SELECT s.name, t.duration, w.mean_temperature_f FROM station AS s JOIN status AS st ON s.id = st.station_id JOIN trip AS t ON s.name = t.start_station_name JOIN weather AS w ON w.zip_code = s.city WHERE w.mean_temperature_f != 50 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d8dc6859058ba2364d7913cf57c244cd5465400a",
                "query": "SELECT start_station_name, AVG(duration) FROM trip WHERE start_date BETWEEN '2018-01-01' AND '2018-01-31' AND subscription_type = 'Subscriber' GROUP BY start_station_name ORDER BY AVG(duration) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "65930a7c0b3fbe98c72815655a7e4d316de882a2",
                "query": "SELECT T1.name, T2.bikes_available, T3.mean_temperature_f FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id JOIN weather AS T3 ON T1.city = T3.zip_code WHERE T2.bikes_available BETWEEN 10 AND 20 OR T3.mean_temperature_f IN (SELECT mean_temperature_f FROM weather WHERE precipitation_inches > 0.5)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "0391e91ede149599dc2137898e7f75131d12dc77",
                "query": "SELECT T1.name, T1.dock_count FROM station AS T1 WHERE T1.lat BETWEEN 37.75 AND 37.8 AND T1.long > -122.4 AND T1.dock_count > 50 ORDER BY T1.dock_count DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d015eefd74a243e83d23958153b23b513ab84006",
                "query": "SELECT T1.name, MIN(T1.dock_count), COUNT(DISTINCT T1.city) FROM station AS T1 WHERE T1.lat <= 37.8 GROUP BY T1installation_date",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "bacd5eea11014962819e750937b494b5cd4b27e1",
                "query": "SELECT T1.city FROM station AS T1 WHERE T1.lat BETWEEN 30 AND 40",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "95045f5e6526572004d337756133a35a13858676",
                "query": "SELECT T1.id, T1.name FROM station AS T1 WHERE T1.lat <= 37.75 ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2073780ff00f58c5bcdd00086d4fbb90c8847430",
                "query": "SELECT T1.name FROM station AS T1 JOIN station AS T2 ON T1.id = T2.id WHERE EXISTS (SELECT T3.name FROM station AS T3 WHERE T3.name = T1.name AND T3.lat > T2.lat) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "11f29950879109e3d00f603bd19d040477810674",
                "query": "SELECT COUNT(DISTINCT T1.lat) FROM station AS T1 WHERE NOT EXISTS (SELECT T2.docks_available FROM status AS T2 WHERE T2.station_id = T1.id AND T2.docks_available < 10)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "349c4cccd45c5c32868a20eaf0c747a1c985b01e",
                "query": "SELECT COUNT(DISTINCT T1.bike_id), T2.bikes_available, T3.max_temperature_f FROM trip AS T1 JOIN status AS T2 ON T1.start_station_id = T2.station_id JOIN weather AS T3 ON T2.zip_code = T3.zip_code WHERE T1.subscription_type != 'Customer'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "1016b03aef79eb2905266b850635aed562dcfbe4",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM station AS T1 WHERE T1.lat > 37.75 ORDER BY T1.dock_count DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ddefdd845be5f9dc327f526fd05d91e465834720",
                "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.dock_count > 10 OR T2.docks_available = 50 OR T2.bikes_available NOT IN (SELECT bikes_available FROM status WHERE station_id < 100) ORDER BY T1.lat ASC LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0a5f9ab426caa07d3071b3ce51b71bed247352e0",
                "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > ( SELECT AVG(bikes_available) FROM status ) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ea03f7910790e1fe2aec7ce9edf4d443829586b6",
                "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE NOT EXISTS (SELECT T3.name FROM weather AS T3 WHERE T3.zip_code = T1.city) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a24ece5f157109d18e00d203c36defbe9f54a79b",
                "query": "SELECT AVG(T1.dock_count) FROM station AS T1 LEFT JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.installation_date BETWEEN '2010-01-01' AND '2015-01-01' OR T2.bikes_available > 50",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "91378c345e006049640fccd6841e4ebb2e435442",
                "query": "SELECT COUNT(DISTINCT T2.city) FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.docks_available != 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "19d46eea7b90d3310e87f9e027a67498cd0be6e6",
                "query": "SELECT COUNT(T1.name), SUM(T1.dock_count) FROM station AS T1",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1"
            },
            {
                "hash": "f9b72340ef312b5ed719b0fde1625c007b04a6ed",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.lat), T1.long FROM station AS T1 WHERE T1.lat <= 10 ORDER BY T1.long DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "car_racing": [
            {
                "hash": "cd1d5054c16ed83f6bda9e6f376c73137b39df53",
                "query": "SELECT COUNT(DISTINCT T1.Make), COUNT(T1.Make), COUNT(T2.Make) FROM team AS T1 LEFT JOIN driver AS T2 ON T1.Make = T2.Make WHERE T1.Make = 'Ferrari' OR T2.Make = 'Mercedes' OR T2.Make BETWEEN 'McLaren' AND 'Red Bull' OR EXISTS (SELECT 1 FROM driver WHERE Make = 'Ferrari') ORDER BY T1.Make ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c168cc5f939ee907ce631b2aa19349aec4b7d186",
                "query": "SELECT T2.Country, COUNT(T2.Country) FROM team AS T1 JOIN team_driver AS T3 ON T1.Team_ID = T3.Team_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T2.Age <= 30 GROUP BY T2.Country",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "ddd4094515c6f16e1b143db7cb40c0c0300da029",
                "query": "SELECT T1.Country, T3.Country FROM country AS T1 JOIN team_driver AS T2 ON T1.Country_Id = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Country_Id BETWEEN 1 AND 10 ORDER BY T1.Country ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "40ecc4a9cbde3a169ea8fa65cc76f979ac49ff66",
                "query": "SELECT T4.Country, T3.Points FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN country AS T4 ON T3.Country = T4.Country_Id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "95ffad225a1ed8f4aa3176013dc6fa41113ea6a6",
                "query": "SELECT T1.Make FROM team AS T1 WHERE NOT EXISTS (SELECT T2.Make FROM driver AS T2 WHERE T2.Make = T1.Make GROUP BY T2.Make HAVING AVG(T2.Laps) > 100)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "81d1db449fb16477e0b69456223bfac14da5398f",
                "query": "SELECT COUNT(DISTINCT T1.Driver_ID), COUNT(T1.Driver_ID) FROM driver AS T1 WHERE NOT EXISTS (SELECT T2.Car_Owner FROM team AS T2 WHERE T2.Team_ID = T1.Car_#) LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "e25f373adc1b34f6b6a90aa70107eaa65feefc12",
                "query": "SELECT T1.Country, COUNT(T1.Country_Id) FROM country AS T1 WHERE T1.Country_Id < 5 GROUP BY T1.Country HAVING COUNT(T1.Country_Id) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "dc39b7b16a119ac3f561c04e5be5df86c2f5982e",
                "query": "SELECT d.Country FROM driver d WHERE NOT EXISTS (SELECT 1 FROM team_driver td WHERE td.Driver_ID = d.Driver_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "2904761e9c5d02357bc663fb226165f0513553e7",
                "query": "SELECT T3.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_Id = T2.Country JOIN team_driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T2.Age IN (SELECT MAX(Age) FROM driver) ORDER BY T1.Country_Id DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a94ca695c7e94913230271c39ed78c059f6c9508",
                "query": "SELECT T1.Country, T2.Team, T3.Driver FROM country AS T1 JOIN team_driver AS T2 ON T1.Country_Id = T2.Team_ID JOIN driver AS T3 ON T3.Country = T2.Driver_ID WHERE T3.Age >= 25",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "255b51bacbd0bb6abbc37b8444ace39a01ca476e",
                "query": "SELECT Driver FROM driver WHERE Country NOT IN (SELECT Country_Id FROM country WHERE Capital = 'City') LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9ba54811bf546fa40cbc09e0ff3f80ee5a0b5833",
                "query": "SELECT COUNT(DISTINCT T2.Driver_ID) FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Make = 'Ford' AND T2.Driver_ID BETWEEN 1 AND 10 AND NOT EXISTS (SELECT 1 FROM driver WHERE driver.Driver_ID = T2.Driver_ID AND driver.Age > 30) ORDER BY T1.Team_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a1f4595230f4178992d994b72f04fe038583faf3",
                "query": "SELECT T1.Make, COUNT(T2.Make) FROM team AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Make = 'Toyota' AND T2.Manager = 'Sam' AND T1.Car_Owner BETWEEN 1000 AND 2000 ORDER BY COUNT(T2.Make) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "55853cd9c44466410985d46aae4ab7e92c07d947",
                "query": "SELECT COUNT(DISTINCT T2.Make) FROM team AS T1 LEFT JOIN driver AS T2 ON T1.Team_ID = T2.Driver_ID WHERE T1.Team_ID NOT IN (SELECT T3.Team_ID FROM team_driver AS T3)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "1d2f41b585a713de61175c68529303f5d4183c47",
                "query": "SELECT T1.Country, COUNT(T2.Driver_ID) FROM country AS T1 JOIN driver AS T2 ON T1.Country_Id = T2.Country JOIN team_driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T2.Make != 'Toyota' GROUP BY T1.Country ORDER BY COUNT(T2.Driver_ID) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "2cebcb1fdea701dbd1f58e6bcbb66afc6498cb60",
                "query": "SELECT T1.Country, T2.Points FROM country AS T1 JOIN driver AS T2 ON T1.Country_Id = T2.Country JOIN team_driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T2.Laps >= 100 AND T2.Points = '1000000'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "e813a5befa72b8ed887904cdabd13d217516488b",
                "query": "SELECT T1.Country, COUNT(DISTINCT T2.Driver_ID) FROM country AS T1 JOIN team_driver AS T2 ON T1.Country_Id = T2.Driver_ID WHERE T1.Country != 'USA' GROUP BY T1.Country ORDER BY T1.Country ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "80a2795b16cf862d931af304497c706e359a4325",
                "query": "SELECT T3.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_Id = T2.Country JOIN team_driver AS T3 ON T3.Driver_ID = T2.Driver_ID WHERE T2.Age >= 30 ORDER BY T2.Driver DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bd281a8f8434e55d8a0eaf15e391446a62449042",
                "query": "SELECT T1.Country, T2.Capital FROM country AS T1 LEFT JOIN country AS T2 ON T1.Country_Id = T2.Country_Id WHERE T1.Country_Id >= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.Country FROM country AS T1 WHERE T1.Official_native_language = 'English'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "9b51632bccb7857879180d14f899659628bbc485",
                "query": "SELECT COUNT(DISTINCT T1.Country) FROM country AS T1 WHERE T1.Regoins <= 5 ORDER BY T1.Country_Id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c100904672b19c9b616c3c663f3d2ebb808d09a3",
                "query": "SELECT T1.Country, T2.Points FROM country AS T1 JOIN team_driver AS T2 ON T1.Country_Id = T2.Driver_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Laps > 100 ORDER BY T3.Points ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5cf391de862cb2222be409f2b17ba0fbb69c830d",
                "query": "SELECT T1.Country, T2.Driver FROM country AS T1 JOIN team_driver AS T2 ON T1.Country_Id = T2.Driver_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE (T3.Age BETWEEN 25 AND 35 OR T3.Driver = 'John') AND EXISTS (SELECT T1.Make FROM team AS T1 WHERE T1.Make = 'Toyota') ORDER BY T1.Country ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "performance_attendance": [
            {
                "hash": "e23f9ba47161d88769eefbf0371f74e46a89921c",
                "query": "SELECT Name FROM member WHERE Role = 'Coach' ORDER BY Member_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2447eb8c6f3ec6890c5a67f852910b8a328fa5eb",
                "query": "SELECT T1.Name, T2.Num_of_Pieces FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Role = 'singer' AND T2.Num_of_Pieces BETWEEN 1 AND 5 AND EXISTS (SELECT 1 FROM performance AS T3 WHERE T2.Performance_ID = T3.Performance_ID AND T3.Attendance > 500)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "fddd80129f95fbcaad06bbe3ad689e019dd5d0ad",
                "query": "SELECT Name, COUNT(DISTINCT Performance_ID) FROM member WHERE Role = 'Artist' ORDER BY Name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "83cd2418af9a4d4505efe3dcbb919a130fb95ddc",
                "query": "SELECT T1.Name FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T3.Attendance BETWEEN 100 AND 200 OR T2.Num_of_Pieces = 3 OR T3.Host NOT IN (SELECT Host FROM performance WHERE Attendance < 50) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "7255310c1dc2692d0f7de3897a4a613c2945dd4b",
                "query": "SELECT Name FROM member WHERE Attendance BETWEEN 100 AND 500 ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cdeb349c388e0a96b53729e25d20f91646f31294",
                "query": "SELECT COUNT(DISTINCT m.Member_ID), COUNT(DISTINCT p.Performance_ID), COUNT(DISTINCT ma.Num_of_Pieces) FROM member m JOIN member_attendance ma ON m.Member_ID = ma.Member_ID JOIN performance p ON p.Performance_ID = ma.Performance_ID WHERE ma.Member_ID IN (SELECT Member_ID FROM member_attendance WHERE Performance_ID > 10) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "f115da2e3433950c82e25f5f64bc545c5bddf848",
                "query": "SELECT COUNT(T1.Performance_ID) FROM performance AS T1 INNER JOIN member_attendance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Num_of_Pieces >= 1 LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d6cc08af72c0de8b8aba1a5b81076b4a8cd878f4",
                "query": "SELECT Name FROM member WHERE Nationality = 'USA' OR Role = 'Leader' OR Nationality IN (SELECT Nationality FROM member WHERE Role = 'Leader') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "8a623cffcfebf44bcac3c63488cd4dec10ab45e2",
                "query": "SELECT T1.Name, T2.Name FROM member AS T1 JOIN member AS T2 ON T1.Member_ID != T2.Member_ID ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bf42e66183cb0c44cb4d01fec77f63b673a35e85",
                "query": "SELECT Performance_ID FROM performance WHERE Attendance != 0 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b93ed1c89ea6c1bec71060a6e988c2131d380ad1",
                "query": "SELECT COUNT(T1.Performance_ID), COUNT(T2.Num_of_Pieces) FROM performance AS T1 JOIN member_attendance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.Attendance > 100 OR T2.Num_of_Pieces BETWEEN 5 AND 10 OR T1.Location = 'New York' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1744af507be4045d02edd8b3e3d5e93173a7e530",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Date FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Num_of_Pieces BETWEEN 5 AND 10 AND T1.Nationality IN (SELECT DISTINCT T3.Nationality FROM member AS T3 WHERE T3.Role = 'Soloist')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT DISTINCT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "ea1ac889da9da76e88026785ef99deab9bc2028c",
                "query": "SELECT T1.Name, COUNT(T2.Performance_ID) FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T1.Nationality = 'USA' OR T3.Host IN (SELECT Host FROM performance WHERE Date = '2020')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c1e9c038b7cf06c0074d914b6c317713343041bc",
                "query": "SELECT T1.Name, COUNT(T2.Performance_ID), SUM(T3.Num_of_Pieces) FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T2.Performance_ID = T3.Performance_ID GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "0e2724f4590f9f00efde17b7e2dac3d936afd484",
                "query": "SELECT COUNT(DISTINCT T1.Member_ID) FROM member_attendance AS T1 WHERE T1.Num_of_Pieces >= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "14c95497e47e6b49242652aba40a97baf1f45bca",
                "query": "SELECT T1.Member_ID, AVG(T1.Num_of_Pieces) FROM member_attendance AS T1 JOIN performance AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T2.Attendance < 100 GROUP BY T1.Member_ID ORDER BY AVG(T1.Num_of_Pieces) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "b5c8445ef4d49cbf25fe0a6be3172f79e4596e13",
                "query": "SELECT COUNT(T1.Member_ID), T2.Nationality FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Num_of_Pieces <= 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "55dc4e33a01b8dcae93998c438d0836f922e5451",
                "query": "SELECT T1.Name, T2.Location FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T2.Num_of_Pieces BETWEEN 2 AND 5 OR T3.Attendance > 100 ORDER BY T2.Num_of_Pieces ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "de25512cd513e0c464efb150d8efd5851947b688",
                "query": "SELECT COUNT(T1.Member_ID), MAX(T2.Num_of_Pieces), COUNT(DISTINCT T1.Nationality) FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Member_ID > 100 ORDER BY T1.Member_ID ASC",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7c74236357e888e3fc6d3b3da99b24f55a42fd98",
                "query": "SELECT T1.Name, MAX(T1.Nationality) FROM (SELECT T2.Name, T3.Num_of_Pieces AS Nationality FROM member AS T2 INNER JOIN member_attendance AS T3 ON T2.Member_ID = T3.Member_ID) AS T1 WHERE T1.Nationality != 10 GROUP BY T1.Name ORDER BY MAX(T1.Nationality) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "ee1bc261293fcb955bfdc6f1d3fc8767844fb847",
                "query": "SELECT T1.Name, AVG(T2.Num_of_Pieces) FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Role < 'Soloist' GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "abb14233fedd6ee2a5e2716c730ff7a4227c5298",
                "query": "SELECT T1.Name, T2.Num_of_Pieces FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Role = 'Singer' AND T2.Num_of_Pieces = 5 AND T1.Nationality BETWEEN 'American' AND 'Canadian'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8bd8d048bdc3a1271bc8b60fcc6b4d6dcac892b4",
                "query": "SELECT Name FROM member WHERE Attendance < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "77ea0af08668f5adb46814ffa65bf5e7ffe1d29b",
                "query": "SELECT T1.Name, COUNT(T2.Num_of_Pieces) FROM member AS T1 JOIN member_attendance AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T2.Performance_ID = T3.Performance_ID WHERE T2.Num_of_Pieces BETWEEN 5 AND 10 AND T3.Host NOT IN (SELECT Host FROM performance WHERE Date = '2020-01-01') GROUP BY T1.Name HAVING MIN(T3.Attendance) > 1000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "aa864faa01f62735da8039980a53bea22a147bed",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Attendance FROM member AS T1 JOIN member_attendance AS T3 ON T1.Member_ID = T3.Member_ID JOIN performance AS T2 ON T3.Performance_ID = T2.Performance_ID WHERE T2.Date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T2.Attendance DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "abe183e73f02a6ebcc8fbb6f79c52cb805afc799",
                "query": "SELECT * FROM member WHERE Role = 'Guest' OR Attendance BETWEEN 500 AND 1000 OR NOT EXISTS (SELECT * FROM performance WHERE Attendance > 1000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "94d55958770f4b89224d097c1d2d57818bf471cf",
                "query": "SELECT COUNT(Member_ID) FROM performance WHERE Attendance > 10 LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            }
        ],
        "insurance_policies": [
            {
                "hash": "6c9d5ac0804c58d33b3a8d7ae5f74869fff29611",
                "query": "SELECT COUNT(T1.Customer_ID), T1.Customer_ID FROM Customers AS T1 GROUP BY T1.Customer_ID HAVING COUNT(T1.Customer_ID) < 10 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bd9bfc0993e95430d477eb7aeb73108fca2f2584",
                "query": "SELECT T1.Customer_ID, SUM(T4.Amount_Payment) FROM Customers AS T1 INNER JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN Claims AS T3 ON T2.Policy_ID = T3.Policy_ID INNER JOIN Settlements AS T4 ON T3.Claim_ID = T4.Claim_ID WHERE EXISTS (SELECT 1 FROM Payments WHERE T4.Settlement_ID = Payments.Settlement_ID AND Payments.Payment_Method_Code = 'Cash') GROUP BY T1.Customer_ID HAVING SUM(T4.Amount_Payment) > 0",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.Settlement_ID AND #TABLE#.Payment_Method_Code = '#VALUE#') GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "340454282e0eba3ffc23b4f123bdc54598e23162",
                "query": "SELECT T1.Customer_ID FROM Customer_Policies AS T1 JOIN Claims AS T2 ON T1.Policy_ID = T2.Policy_ID WHERE T2.Amount_Claimed > (SELECT AVG(Amount_Claimed) FROM Claims) AND T2.Date_Claim_Made > '2020-01-01' ORDER BY T1.Customer_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3f93bee6ddbaf18d29c6167d9f662597966d7671",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Policy_Type_Code > 'A' ORDER BY T1.Customer_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8721bd546e459ec068823d26324d7510389a7065",
                "query": "SELECT T1.Customer_ID, MIN(T4.Date_Payment_Made) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claims AS T3 ON T2.Policy_ID = T3.Policy_ID JOIN Payments AS T4 ON T3.Claim_ID = T4.Settlement_ID WHERE T3.Amount_Claimed > 1000 AND T3.Date_Claim_Settled IS NOT NULL AND T3.Claim_ID NOT IN (SELECT Claim_ID FROM Settlements WHERE Amount_Settled = 0) GROUP BY T1.Customer_ID",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IS NOT NULL AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "3ce0490ac5afb7bbcdb1fd036594868fe8fca5d2",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), SUM(T2.Amount_Settled) FROM Customers AS T1 JOIN Settlements AS T2 ON T1.Customer_ID = T2.Customer_Policy_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "d783956569c1ed782a95b45385d1fb96dc39aca8",
                "query": "SELECT SUM(T2.Amount_Settled) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID WHERE T2.Date_Claim_Made BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "57fa51ba843b8b199aaf402266a9edd1ae74fb08",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Customer_ID != 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "3ecedd4e3526d3d4407b76625f3d02e32906e874",
                "query": "SELECT COUNT(DISTINCT T1.Claim_ID), SUM(T1.Amount_Settled), AVG(T1.Amount_Claimed) FROM Settlements AS T1 WHERE T1.Amount_Settled > 5000 AND T1.Date_Claim_Settled BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Customer_Policy_ID IN (SELECT T2.Policy_ID FROM Customer_Policies AS T2 WHERE T2.Policy_Type_Code = 'type1') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "a590602ed1630402193900e12bc9899cc2d851b9",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), T2.Payment_Method_Code, T2.Date_Payment_Made FROM Customers AS T1 JOIN Payments AS T2 ON T1.Customer_ID = T2.Settlement_ID WHERE T2.Amount_Payment BETWEEN 100 AND 500 ORDER BY T1.Customer_ID ASC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a885c08c3fa79280e5e4e3193a8e4de13e3e528a",
                "query": "SELECT T1.Customer_ID, COUNT(T2.Claim_ID) FROM Customers AS T1 JOIN Claims AS T2 ON T1.Customer_ID = T2.Policy_ID WHERE T2.Amount_Claimed < 10000 GROUP BY T1.Customer_ID HAVING COUNT(T2.Claim_ID) > 1 ORDER BY T1.Customer_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b316deede5028ea526d6f09937c5d2ee9d94d985",
                "query": "SELECT COUNT(DISTINCT T2.Claim_ID), SUM(T1.Amount_Settled) FROM Settlements AS T1 JOIN Claims AS T2 ON T1.Claim_ID = T2.Claim_ID WHERE T1.Customer_Policy_ID = 100 AND T2.Amount_Claimed BETWEEN 1000 AND 2000 AND T1.Amount_Settled > 1000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "eca9249b7cb7b15d54e66a898ec0c8f5941f5bf0",
                "query": "SELECT AVG(T1.Amount_Settled), COUNT(DISTINCT T2.Payment_Method_Code) FROM Settlements AS T1 JOIN Payments AS T2 ON T1.Settlement_ID = T2.Settlement_ID WHERE T1.Amount_Claimed BETWEEN 1000 AND 2000 AND NOT EXISTS (SELECT * FROM Claims AS T3 WHERE T3.Claim_ID = T1.Claim_ID AND T3.Amount_Claimed > 1500) GROUP BY T2.Payment_Method_Code LIMIT 5",
                "template": "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a9583e82ddf4928b25630163a028fe84799cfe77",
                "query": "SELECT Policy_Type_Code FROM Customer_Policies LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "97e965e2bc3fd8b84c3c02a9d3d984710546d8aa",
                "query": "SELECT Customer_Details FROM Customers WHERE Customer_ID < 100 ORDER BY Customer_ID",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN#"
            },
            {
                "hash": "c19f509884a7f39ebacd98ec050f642c0ab44e7b",
                "query": "SELECT AVG(T1.Amount_Claimed), AVG(T1.Amount_Settled) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID GROUP BY T2.Amount_Claimed",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "eafaf3abb0827c38f6d8bc558e9c16ea69fdd843",
                "query": "SELECT T2.Customer_ID FROM Customer_Policies AS T1 JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Policy_Type_Code = 'H' OR T1.Start_Date > '2022-01-01' OR T1.Policy_ID IN (SELECT T3.Policy_ID FROM Claims AS T3 WHERE T3.Date_Claim_Settled IS NOT NULL) ORDER BY T2.Customer_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# > '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1e26aa1e9bd4343eb527797a38d36995f20c8400",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), COUNT(DISTINCT T2.Customer_ID) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Start_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T1.Customer_ID > 100 AND T1.Customer_ID < 200 ORDER BY T1.Customer_ID DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "35512437222b8e64c1f366bf7c44557be5f0fe1b",
                "query": "SELECT T1.Customer_ID, COUNT(DISTINCT T2.Policy_ID) FROM Customer_Policies AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Policy_Type_Code < 'P1' GROUP BY T1.Customer_ID",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "251883479139901f2cd7e9681ea4184e35a41dcf",
                "query": "SELECT T1.Customer_ID, COUNT(T2.Amount_Claimed), COUNT(DISTINCT T3.Date_Payment_Made), SUM(T4.Amount_Payment) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claims AS T3 ON T2.Policy_ID = T3.Policy_ID JOIN Payments AS T4 ON T3.Claim_ID = T4.Settlement_ID WHERE T3.Date_Claim_Made BETWEEN '2020-01-01' AND '2020-12-31' AND T3.Claim_ID NOT IN (SELECT T5.Claim_ID FROM Settlements AS T5 WHERE T5.Amount_Claimed > 10000) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "02aee300412e963203ec853cfe16dac2b4102463",
                "query": "SELECT T1.Customer_ID, COUNT(T3.Claim_ID), COUNT(T5.Payment_ID) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claims AS T3 ON T2.Policy_ID = T3.Policy_ID JOIN Settlements AS T4 ON T3.Claim_ID = T4.Claim_ID JOIN Payments AS T5 ON T4.Settlement_ID = T5.Settlement_ID WHERE T4.Amount_Claimed < 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ff77e1ef03c1cfcc48f699aae712f522ec05966f",
                "query": "SELECT T1.Customer_ID, T1.Customer_Details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Policy_Type_Code IN (SELECT T3.Policy_Type_Code FROM Customer_Policies AS T3 WHERE T3.Start_Date = '2020-01-01') LIMIT 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            }
        ],
        "manufacturer": [
            {
                "hash": "97e33c9a6e9c4c2ed6a664ccc416470019ffa213",
                "query": "SELECT Name FROM manufacturer WHERE Num_of_Factories < Num_of_Shops ORDER BY Open_Year ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "222ecf8c58ae071d9e295526f35c09346f98171f",
                "query": "SELECT COUNT(DISTINCT T1.Manufacturer_ID) , T1.Num_of_Factories FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T2.Price_in_Dollar BETWEEN 100 AND 500",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "90273e421014038986a3b19b0120bd7400c84746",
                "query": "SELECT T2.Name, COUNT(T1.Furniture_ID) FROM furniture_manufacte AS T1 JOIN furniture AS T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T2.Market_Rate > 100 OR T2.Market_Rate < 50 OR T2.Market_Rate BETWEEN 50 AND 150 OR T2.Market_Rate > (SELECT AVG(Market_Rate) FROM furniture) LIMIT 100",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "001b687b4f688b4fd1654141b19f5bfc94736a97",
                "query": "SELECT MAX(T1.Market_Rate), MIN(T2.Price_in_Dollar) FROM furniture AS T1 JOIN furniture_manufacte AS T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T2.Price_in_Dollar BETWEEN 5 AND 100 ORDER BY T2.Price_in_Dollar DESC",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "edba12c2bb0cb28c1dda49201d2821e6dea0e231",
                "query": "SELECT T2.Name, AVG(T1.Price_in_Dollar) FROM furniture_manufacte AS T1 JOIN manufacturer AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T1.Manufacturer_ID = 1 AND T2.Open_Year > 2000 AND T2.Name IN (SELECT Name FROM manufacturer WHERE Num_of_Factories = 1) GROUP BY T2.Name ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1944625266525f94ed42896e455d0c9d22baf271",
                "query": "SELECT Manufacturer_ID, Name FROM manufacturer WHERE Open_Year BETWEEN 1990 AND 2000 OR Num_of_Factories > 10 OR Name = 'IKEA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT T1.Manufacturer_ID FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T2.Price_in_Dollar <= 500",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8d5889cd2e8d304a04a995e122e8750abca27890",
                "query": "SELECT COUNT(DISTINCT T1.Manufacturer_ID) FROM furniture_manufacte AS T1 JOIN manufacturer AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID JOIN furniture AS T3 ON T1.Furniture_ID = T3.Furniture_ID WHERE T2.Open_Year <= 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "fb7403af738575e5fa842088276caeda4ce1e260",
                "query": "SELECT Name FROM manufacturer WHERE Num_of_Factories > 10 AND EXISTS (SELECT 1 FROM furniture_manufacte WHERE furniture_manufacte.Manufacturer_ID = manufacturer.Manufacturer_ID AND furniture_manufacte.Price_in_Dollar < 1000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "a179d83b317df8a4d0b133a05e7db0ffc54f1895",
                "query": "SELECT Furniture_ID FROM furniture_manufacte WHERE Price_in_Dollar <= 100 AND Furniture_ID = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1fe2d51fc4c5fdb6ad8aa56ab4fc9c16b4fd3625",
                "query": "SELECT T2.Name FROM furniture_manufacte AS T1 INNER JOIN manufacturer AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T2.Open_Year = 1990 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fd8cc92b17da7d14586812b5d6c9ec41a4093564",
                "query": "SELECT T1.Name FROM manufacturer AS T1 WHERE NOT EXISTS (SELECT T2.Furniture_ID FROM furniture_manufacte AS T2 WHERE T2.Manufacturer_ID = T1.Manufacturer_ID AND T2.Price_in_Dollar > 5000 AND T2.Furniture_ID = 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE# AND T2.#COLUMN# = #VALUE#)"
            },
            {
                "hash": "0a65f89c89188f79ae2327ffd9a56b0d717dc135",
                "query": "SELECT m.Name, SUM(fm.Price_in_Dollar) FROM manufacturer m JOIN furniture_manufacte fm ON m.Manufacturer_ID = fm.Manufacturer_ID JOIN furniture f ON fm.Furniture_ID = f.Furniture_ID WHERE f.Num_of_Component > 5 AND f.Market_Rate < 100 AND fm.Price_in_Dollar IN (SELECT MAX(Price_in_Dollar) FROM furniture_manufacte)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "081a4cc65eed88fcefec1f10bf1bdb8149e06642",
                "query": "SELECT COUNT(DISTINCT T2.Furniture_ID), T1.Name AS Furniture_Name, T1.Name AS Manufacturer_Name FROM furniture_manufacte AS T1 INNER JOIN furniture AS T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T2.Furniture_ID = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5bc95b01d3c41d4f68539b3db4977ade1f8c58e2",
                "query": "SELECT MAX(Num_of_Shops) FROM manufacturer WHERE Open_Year = 2000 ORDER BY Name DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "68c178e0e1e36611d49ff9db705a70c488999298",
                "query": "SELECT COUNT(DISTINCT T1.Manufacturer_ID) , COUNT(DISTINCT T2.Furniture_ID) , COUNT(T3.Price_in_Dollar) FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID JOIN furniture AS T3 ON T2.Furniture_ID = T3.Furniture_ID WHERE NOT EXISTS ( SELECT 1 FROM furniture_manufacte AS T4 WHERE T4.Manufacturer_ID = T1.Manufacturer_ID AND T4.Price_in_Dollar > 1000 ) ORDER BY T3.Price_in_Dollar DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3bae78849f57892ac194f52f3c8969cf9d0c4be4",
                "query": "SELECT T1.Open_Year, T2.Open_Year FROM manufacturer AS T1 JOIN manufacturer AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T1.Open_Year > 2000 OR T2.Open_Year BETWEEN 1990 AND 1999 OR T1.Num_of_Factories > T2.Num_of_Factories ORDER BY T1.Open_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9ab4437f46e61cbe380f2871f80a624e19d0abd5",
                "query": "SELECT COUNT(Manufacturer_ID) , SUM(Num_of_Factories) FROM manufacturer WHERE Num_of_Shops != 0 ORDER BY COUNT(Manufacturer_ID) DESC",
                "template": "SELECT COUNT(#COLUMN#) , SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "c7295a19c16c92f23953c6439953600c2ab4d5b0",
                "query": "SELECT f.Name FROM manufacturer AS m JOIN furniture_manufacte AS fm ON m.Manufacturer_ID = fm.Manufacturer_ID JOIN furniture AS f ON fm.Furniture_ID = f.Furniture_ID WHERE f.Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte WHERE Price_in_Dollar > 100) ORDER BY f.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "19d55add948ed1081e420224e1bd37ff4cf89f8a",
                "query": "SELECT COUNT(Name), COUNT(Open_Year), Name FROM manufacturer WHERE Open_Year = 2000",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "ea408a915eeacf43c2a752d239f1a0b7a604a236",
                "query": "SELECT T1.Name, T2.Name FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID JOIN furniture AS T3 ON T2.Furniture_ID = T3.Furniture_ID WHERE T3.Market_Rate > 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "589303729704dfea1a70fe7f452966aba6a60def",
                "query": "SELECT T1.Name, T1.Num_of_Factories FROM manufacturer AS T1 WHERE T1.Open_Year != T1.Num_of_Shops LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b7cf922cfcbd0dea323235e959331aef1c8fb525",
                "query": "SELECT T1.Name, COUNT(T2.Furniture_ID) FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T1.Open_Year BETWEEN 2000 AND 2010 OR T1.Num_of_Factories > (SELECT AVG(Num_of_Factories) FROM manufacturer) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "3e1efb01dd17debc9cbce2bbebe8d3fd60b5cfe4",
                "query": "SELECT T1.Name, T2.Name FROM manufacturer AS T1 JOIN manufacturer AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T1.Open_Year != T2.Open_Year",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "016d722a5bb50aabde86df4e1d8c50dc9c74f4be",
                "query": "SELECT T1.Name, T2.Price_in_Dollar FROM manufacturer AS T1 JOIN furniture_manufacte AS T2 ON T1.Manufacturer_ID = T2.Manufacturer_ID WHERE T2.Price_in_Dollar = 100 ORDER BY T2.Price_in_Dollar DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "advertising_agencies": [
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT M1.agency_details FROM Agencies AS M1 WHERE M1.agency_id = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS M1 WHERE M1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "51d64706f0f4f2c31d0c4eb4fc646c6f5ef411bf",
                "query": "SELECT T1.agency_details, MIN(T2.invoice_status) FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id JOIN Invoices AS T3 ON T2.client_id = T3.client_id WHERE T2.sic_code <= '1000' GROUP BY T1.agency_details",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "93b44b135f5cd82fab7630518b057fe73840bf99",
                "query": "SELECT T1.agency_id, COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id = T2.agency_id WHERE T1.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details = 'details') GROUP BY T1.agency_id HAVING MAX(T1.staff_id) = 1000 ORDER BY COUNT(DISTINCT T1.staff_id) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "4d63130378e636463b7d7e2e325dfa822fe1a1e9",
                "query": "SELECT T1.staff_id, T1.staff_details FROM Staff AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id WHERE T1.staff_id = 101 GROUP BY T1.staff_id ORDER BY T1.staff_id ASC LIMIT 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3e8603a45386372f9fde2516246948f3c387e898",
                "query": "SELECT staff_details FROM Staff WHERE staff_id > 10 ORDER BY staff_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "60f189eee34eb5d708bb6ff04f5f3f70c48dc192",
                "query": "SELECT T1.client_details, SUM(T2.invoice_status), T1.sic_code FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id JOIN Payments AS T3 ON T2.invoice_id = T3.invoice_id WHERE T3.payment_details < 'some_details' LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "03fb6932c77f1f68a35724cf1c4f6fd0461a3cc1",
                "query": "SELECT T1.sic_code FROM Clients AS T1 WHERE T1.sic_code = 'Retail' AND EXISTS ( SELECT 1 FROM Invoices AS T2 WHERE T2.client_id = T1.client_id AND T2.invoice_status = 'Paid' ) ORDER BY COUNT(DISTINCT T1.client_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "91366b82b2616048561cf7ffa525d37bb22f3e68",
                "query": "SELECT AVG(T1.sic_code) FROM Clients AS T1 GROUP BY T1.agency_id HAVING T1.agency_id != 100 ORDER BY T1.agency_id ASC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a1accc0280fe0ec76244d630d5fe9c8ee559eece",
                "query": "SELECT T1.agency_details, T2.staff_details FROM Agencies AS T1 JOIN Staff AS T2 ON T1.agency_id = T2.agency_id WHERE T1.agency_id BETWEEN 1 AND 10 OR T2.staff_id = 5 OR T2.staff_id > 10 ORDER BY T1.agency_id DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT client_id) FROM Invoices WHERE invoice_status >= 'UNPAID'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "a69ab2e79604ec09b4b8ce72bf992ecde4b98cdd",
                "query": "SELECT COUNT(DISTINCT client_id) FROM Clients WHERE agency_id < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d1e81d5d446c2521dd9544efcd3ea7df0f698a46",
                "query": "SELECT T1.agency_id, SUM(T2.staff_details) FROM Agencies AS T1 JOIN Staff AS T2 ON T1.agency_id = T2.agency_id JOIN Clients AS T3 ON T2.agency_id = T3.agency_id WHERE T1.agency_id = 100 AND T3.sic_code BETWEEN 1000 AND 2000 AND T2.staff_id > 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "bb55d79f48edde80f9ffdb1eef02d1606c371ffe",
                "query": "SELECT T1.client_details FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id JOIN Invoices AS T3 ON T1.client_id = T3.client_id WHERE T2.start_date_time >= '2020-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "bf302016032390964dbde7e94036f10437d9e9ea",
                "query": "SELECT COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.staff_id = T2.staff_id WHERE T2.meeting_id < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "cc81311f48de67075fd8d84a1c9ecc1cf1860dcc",
                "query": "SELECT T1.staff_id FROM Staff AS T1 JOIN Staff AS T2 ON T1.agency_id = T2.agency_id WHERE T1.staff_details IN (SELECT staff_details FROM Staff) ORDER BY T1.staff_id DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "23c56132cba05fba276df7482eaa26d60f23bcd7",
                "query": "SELECT agency_id FROM Agencies WHERE agency_id = 1 OR agency_id IN (SELECT agency_id FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings)) ORDER BY agency_id ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1d4d0b74fd455f68c36b5136b1a0196407f35554",
                "query": "SELECT agency_details FROM Agencies WHERE agency_details != 'abc' AND agency_details != 'xyz' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fe89480713e140295e64ef965b9424d8b30522ba",
                "query": "SELECT AVG(T1.invoice_status), SUM(T2.meeting_outcome) FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id JOIN Clients AS T3 ON T3.client_id = T1.client_id WHERE T2.meeting_type != 'Type1'",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7f6c4c30276b81d05c9b883caa1635416dd05853",
                "query": "SELECT T1.agency_id, T2.staff_details FROM Agencies AS T1 JOIN Staff AS T2 ON T1.agency_id = T2.agency_id WHERE T2.staff_id > 400 AND T2.staff_id < 500 AND NOT EXISTS (SELECT 1 FROM Clients AS T3 WHERE T3.agency_id = T2.agency_id AND T3.client_id IS NULL) ORDER BY T1.agency_id ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fd775b2fbf6fa12491a2dd27a66b3179aaa6aea9",
                "query": "SELECT COUNT(invoice_id), SUM(invoice_id), MIN(invoice_id) FROM Invoices LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "f6437fe1860eb135aa60ca252fe0c1b0cc52634d",
                "query": "SELECT * FROM Clients AS Client WHERE client_id BETWEEN 100 AND 200 ORDER BY client_id ASC LIMIT 10",
                "template": "SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "95d9a3b49fee01be75ea11b4cc94d224c59791b0",
                "query": "SELECT AVG(T1.staff_id) FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.staff_id = T2.staff_id WHERE T1.agency_id = 100 AND T2.meeting_id BETWEEN 100 AND 200 AND T1.staff_details LIKE '%Details%'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# LIKE '%#VALUE#%'"
            }
        ],
        "book_press": [
            {
                "hash": "caf2339d2f75ee159e655fd408a8356edacdda36",
                "query": "SELECT Name FROM author WHERE EXISTS (SELECT 1 FROM book WHERE book.Author_ID = author.Author_ID AND Sale_Amount = 'High' AND EXISTS (SELECT 1 FROM press WHERE press.Press_ID = book.Press_ID AND Month_Profits_billion > Year_Profits_billion))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#))"
            },
            {
                "hash": "b34be630202c57daa5a3ff3c35df6434e846be10",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM press AS T1 JOIN book AS T2 ON T1.Press_ID = T2.Press_ID JOIN author AS T3 ON T2.Author_ID = T3.Author_ID WHERE T1.Press_ID = 1 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "90e2f84eadeb2b05218b8cff582f923eefbae6ef",
                "query": "SELECT T1.Title FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T2.Name = 'ABC Press' ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "141ae77c3f8860d5bcb2e5aecbc3c8ff72c041f6",
                "query": "SELECT T1.Name, T2.Title FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Sale_Amount <= 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5bca0d223377bf1376441997ac69935eb6462cc7",
                "query": "SELECT Sale_Amount FROM book ORDER BY Sale_Amount DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2a11ca07b52d9c75292a28aabacc0a3ad9f09ff1",
                "query": "SELECT MAX(COUNT(DISTINCT T1.Press_ID)) FROM book AS T1 GROUP BY T1.Author_ID",
                "template": "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS \""
            },
            {
                "hash": "e343965dc18dce3033a213c10d117e819fc80e65",
                "query": "SELECT T1.Name, T2.Title FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T1.Age > 30 AND T2.Sale_Amount = '1000 copies'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "357fd853fdf113993391ddda860baad609de4ef8",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Title) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE T1.Age > 30 OR T3.Year_Profits_billion BETWEEN 10 AND 100 OR EXISTS (SELECT 1 FROM book WHERE Author_ID = T1.Author_ID AND Release_date = '2020') ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b7d49227b58a34d0b1455fe97db5030d85a4f5e8",
                "query": "SELECT T1.Title, COUNT(T2.Press_ID) FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T2.Year_Profits_billion BETWEEN 1 AND 10 OR T1.Sale_Amount = 'High' OR T1.Author_ID IN ( SELECT Author_ID FROM author WHERE Age > 60 ) GROUP BY T1.Title HAVING COUNT(T2.Press_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "7a21472496f76a882b4c5018a65ef948d27ab861",
                "query": "SELECT * FROM press WHERE NOT EXISTS (SELECT 1 FROM book WHERE press.Press_ID = book.Press_ID AND book.Sale_Amount = '10000')",
                "template": "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = #VALUE#)"
            },
            {
                "hash": "894c03ab7a18077c8edb06fb04a31b67eee434ec",
                "query": "SELECT T2.Title, T1.Name, T2.Release_date FROM book AS T1 JOIN author AS T2 ON T1.Author_ID = T2.Author_ID WHERE T1.Sale_Amount = 'high' OR T2.Age BETWEEN 30 AND 50 OR T1.Press_ID = 1 GROUP BY T2.Name HAVING COUNT(T1.Book_ID) > 5 ORDER BY T1.Book_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT SUM(Sale_Amount) FROM book WHERE Press_ID < 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3860c2d9962704f375dd2164bae6cfaad3c2dbbf",
                "query": "SELECT T1.Name, SUM(T2.Sale_Amount) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Name HAVING SUM(T2.Sale_Amount) > 10000 ORDER BY SUM(T2.Sale_Amount) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS  JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "37652bfab5688cf97ef3ce7e27fc703524035ceb",
                "query": "SELECT T1.Name, MIN(T3.Sale_Amount) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE T3.Year_Profits_billion = 1 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5a803359d0d93297deae911146d218e189dda307",
                "query": "SELECT SUM(Sale_Amount) FROM book WHERE Press_ID != 1",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "33f0161e44790114c42a2c4ee9a99a67c97d8ace",
                "query": "SELECT Name FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T2.Month_Profits_billion > 1 AND T2.Year_Profits_billion > 1 ORDER BY T2.Year_Profits_billion DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5e95fecfedf46ff6ad51decefc4f55d7cd5bbe09",
                "query": "SELECT T1.Name, T2.Title FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Press_ID = 1 AND T2.Title = 'Book1' AND T1.Author_ID NOT IN (SELECT Author_ID FROM book AS T3 JOIN press AS T4 ON T3.Press_ID = T4.Press_ID WHERE T3.Sale_Amount = '1000000')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "45a11d5a3a7a43a043342d1025c0d58e94c2198e",
                "query": "SELECT COUNT(DISTINCT Author_ID), COUNT(Author_ID), MAX(Age) FROM author WHERE Gender != 'Male'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "cf4e10f36a5286ccc25707da0b54c5314482683b",
                "query": "SELECT COUNT(DISTINCT T1.Author_ID) FROM book AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T1.Sale_Amount > T2.Sale_Amount OR T1.Release_date BETWEEN '2000-01-01' AND '2010-01-01' OR T1.Press_ID < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "5aefe0c06254db946cbc2ff1512dd2d246cd2845",
                "query": "SELECT T1.Name, SUM(T3.Sale_Amount) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE T3.Year_Profits_billion < 10 ORDER BY SUM(T3.Sale_Amount) DESC LIMIT 1",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "248d8d5bdd27e537137f4bf68605af8d7e96fd88",
                "query": "SELECT T1.Name, T2.Title, T3.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID JOIN press AS T3 ON T2.Press_ID = T3.Press_ID WHERE EXISTS (SELECT 1 FROM book AS T4 WHERE T4.Sale_Amount = 'high' AND T4.Author_ID = T2.Author_ID) ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4c4bc1fb0e301c9f691a666ec04d31a9183328f3",
                "query": "SELECT T1.Name, AVG(T2.Sale_Amount) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T1.Gender = 'F' GROUP BY T1.Name LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "404b90be82e51e71d66f4115b4d0ade56f2613bb",
                "query": "SELECT T1.Name, SUM(T2.Sale_Amount) FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID JOIN press AS T3 ON T3.Press_ID = T2.Press_ID",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "f29d1fa889430e32079c44e837538311daa84c39",
                "query": "SELECT T1.Name, T2.Title FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Sale_Amount > 100 ORDER BY T2.Title ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "e_commerce": [
            {
                "hash": "f2447cb44a0ea89a1f5e5df5a091d9365f801b63",
                "query": "SELECT product_name FROM Products WHERE product_price < 10 ORDER BY product_price DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0860058d28fbadc3b9a1b0888957b997be2c7aa8",
                "query": "SELECT COUNT(DISTINCT T1.product_name), T2.customer_first_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id WHERE T3.date_order_placed <= '2020-01-01' ORDER BY T3.date_order_placed DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6f8993263494dcb855e921b833709597d571edb4",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price > 50 ORDER BY T1.product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e89b29477fb859a125aea7873e70a77cf8d53407",
                "query": "SELECT MAX(COUNT(DISTINCT product_name)) FROM Products WHERE product_price > 100 ORDER BY product_price DESC",
                "template": "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cced7787ca64a318b48aaa4863a746552321bd2b",
                "query": "SELECT product_price FROM Products WHERE product_price <= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "3e6bb8a55bae84b53012a5827c021b0ab329cec1",
                "query": "SELECT COUNT(DISTINCT product_name), COUNT(DISTINCT product_color), SUM(product_price) FROM Products WHERE product_size <= 'M'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "ea3e45867763464803df4f3c32783d5c0e80fc2d",
                "query": "SELECT product_name FROM Products WHERE product_price BETWEEN 100 AND 200 AND product_color = 'Red' GROUP BY product_name",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "91ca22f855aa7ac867756633f2816b66a32cdcb7",
                "query": "SELECT product_name, SUM(product_price) FROM Products WHERE product_color = 'Blue' AND product_size BETWEEN 'L' AND 'XL' AND product_id NOT IN ( SELECT product_id FROM Order_Items ) GROUP BY product_name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "b9dba3514716518563fc2dbf48c931d45ce871fa",
                "query": "SELECT product_name FROM (SELECT product_name, product_price FROM Products WHERE product_price > 50 ORDER BY product_price DESC LIMIT 10) AS T1",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#) AS T1"
            },
            {
                "hash": "73ef91ad05e60c259f3e0aa8448b4c49785b57ba",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(T2.order_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id < 100 ORDER BY T2.customer_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c7017d3fa2c688970cfa9a5e7564490c4b414a04",
                "query": "SELECT T1.product_name, COUNT(T2.product_id), SUM(T2.product_price) FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.parent_product_id ORDER BY T1.product_id DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a4db09a7dfd869020b757eb1da30433d83287536",
                "query": "SELECT COUNT(DISTINCT T1.product_id), COUNT(DISTINCT T2.order_id) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price > 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "f073d7943f49a14108837925de8ed3cef6c08e10",
                "query": "SELECT MIN(T1.product_price), MAX(T1.product_price) FROM Products AS T1 ORDER BY T1.product_price ASC",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6d774c8b4994f63088b73c46523c403fe91f59d5",
                "query": "SELECT T1.product_name FROM Products AS T1 WHERE NOT EXISTS (SELECT T2.order_item_id FROM Order_Items AS T2 WHERE T2.product_id = T1.product_id) ORDER BY T1.product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4cd3c77a4c654a59888e3c4795ee4e599317ab13",
                "query": "SELECT COUNT(DISTINCT T1.order_item_status_code), T2.product_name FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_price > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "5b7da6d7db8cbbe34b89b08e6bee2c9988d48fb2",
                "query": "SELECT T1.product_name, T2.order_item_status_code FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price >= 50 GROUP BY T2.order_item_status_code HAVING COUNT(T2.order_item_id) > 1 ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "96746965bed9b70bfc1e7020b227d27cc95df277",
                "query": "SELECT product_name FROM Products WHERE product_price > 100 OR product_color BETWEEN 'Black' AND 'White' OR NOT EXISTS (SELECT 1 FROM Products AS p2 WHERE p2.product_id = Products.product_id AND p2.product_size = 'Large') GROUP BY product_name HAVING MAX(product_price)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #TABLE#.#COLUMN# AND T2.#COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#)"
            },
            {
                "hash": "ae050ec70e7499361fb15da902925beff74d89e4",
                "query": "SELECT SUM(T1.product_price * T2.order_item_status_code), COUNT(T2.order_item_id), SUM(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.order_item_status_code = 1 ORDER BY T1.product_price DESC",
                "template": "SELECT SUM(#COLUMN# * #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cbfd98daaed026755a153c92d6a378e717481cea",
                "query": "SELECT product_price FROM Products WHERE product_price = 50 ORDER BY product_price DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0420406051f892342645d46ec13c2f9d4ae69112",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id JOIN Customers AS T4 ON T3.customer_id = T4.customer_id WHERE T1.product_price > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "f6a59ee4939d0aac0cd4b09a77879d64163834ea",
                "query": "SELECT product_name, product_description FROM Products WHERE product_price > 10 AND product_color = 'red' AND product_size BETWEEN 'L' AND 'XL' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT COUNT(T1.product_id), T1.product_name FROM Products AS T1 WHERE T1.product_price <= MAX(T1.product_price)",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= MAX(#COLUMN#)"
            },
            {
                "hash": "c2fc003f99c74c9bc0001ae03de7379f805f3548",
                "query": "SELECT COUNT(DISTINCT T2.order_id), SUM(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name HAVING SUM(T1.product_price) > 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c95d28969da8793a8629c57d07024e2a5e557fc9",
                "query": "SELECT product_name FROM Products WHERE EXISTS (SELECT order_item_id FROM Order_Items WHERE Order_Items.product_id = Products.product_id) GROUP BY product_name HAVING COUNT(product_id) > 5 ORDER BY product_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "gas_company": [
            {
                "hash": "0d4621ecd0ae711db9edee67e8353744767f5e9e",
                "query": "SELECT T1.Company, COUNT(DISTINCT T2.Station_ID) AS Station_Count FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T1.Market_Value >= 100 ORDER BY Station_Count ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fefd30bb40baf5eff85fc599185a47696b336a1b",
                "query": "SELECT COUNT(DISTINCT T1.Company_ID), T1.Company, T1.Headquarters FROM company AS T1 WHERE T1.Company_ID = 1 OR T1.Company = 'ABC Inc' OR T1.Headquarters IN (SELECT T2.Headquarters FROM company AS T2 WHERE T2.Company_ID = 1) ORDER BY T1.Company_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c5cb3facdcc465541ef66c67f2a79082969fad15",
                "query": "SELECT T1.Company, AVG(T1.Sales_billion) FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID GROUP BY T1.Company HAVING AVG(T1.Sales_billion) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "763c18e3928e7b534c23197044050b121da07e0d",
                "query": "SELECT COUNT(DISTINCT Headquarters) , COUNT(DISTINCT Main_Industry) , COUNT(DISTINCT Company) FROM company WHERE Rank != 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "885baf78fc5afe28f0e936f1c8eaa6041529cd2b",
                "query": "SELECT Company, Headquarters, Main_Industry FROM company WHERE Sales_billion > 10 ORDER BY Rank DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "37867872b9fb923fdca5e415123bd651c067ced1",
                "query": "SELECT T3.Company, T1.Location FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Rank > 5 OR T1.Manager_Name = 'John' AND NOT EXISTS (SELECT 1 FROM company WHERE Sales_billion > 10) ORDER BY T3.Company_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e9c80e1847e194d285699ab7a7a46aa6649c13ee",
                "query": "SELECT T1.Company, T1.Headquarters FROM company AS T1 WHERE T1.Rank < 10 ORDER BY T1.Company_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT T2.Company FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T1.Rank_of_the_Year <= 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9fd2fcec5df358a0cf3b7773da60e351e26a240a",
                "query": "SELECT COUNTDISTINCT T1.Station_ID, SUM(T2.Sales_billion), COUNT(T1.Manager_Name) FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T2.Rank > 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "2246c4b0f0e5c4c9fb9bd681fd67d85fa54d07ca",
                "query": "SELECT T1.Company, T2.Manager_Name FROM company AS T1 JOIN station_company AS T3 ON T1.Company_ID = T3.Company_ID JOIN gas_station AS T2 ON T3.Station_ID = T2.Station_ID WHERE T1.Sales_billion > 100 AND T2.Manager_Name = 'John'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0f19f27edb52a7cbbd51d1dd9d6aefd564ef32ae",
                "query": "SELECT T1.Company, T2.Headquarters FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T3.Station_ID = T2.Station_ID WHERE T1.Sales_billion < 100 ORDER BY T1.Company ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ca605a64d018004478b89cc4a6c064789c21acab",
                "query": "SELECT T2.Company, T3.Manager_Name FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T2.Rank_of_the_Year > 10 AND T3.Open_Year > 2000 ORDER BY T3.Open_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8fad85eee31eae555da912aa5fdce694db229016",
                "query": "SELECT T1.Company, T2.Manager_Name, T3.Company_ID FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "3b21cc314110eb3fb2aec36f621f355c82e4d28a",
                "query": "SELECT Company_ID FROM company WHERE Sales_billion > 10 AND Profits_billion IN (SELECT Profits_billion FROM company WHERE Assets_billion > 100) ORDER BY Company_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "22db9a666d8e3e6ab76eaf6ea7e2c770ec9d31d8",
                "query": "SELECT Company_ID, COUNT(*) FROM company WHERE Rank BETWEEN 10 AND 50 OR Headquarters = 'New York' OR EXISTS (SELECT 1 FROM station_company WHERE company.Company_ID = station_company.Company_ID) ORDER BY Company_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Company_ID = #TABLE#.Company_ID) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "07811f2b11cab1ebee0be2e9ca472457366d4790",
                "query": "SELECT COUNT(DISTINCT Company), COUNT(DISTINCT Headquarters), COUNT(DISTINCT Main_Industry) FROM company WHERE Sales_billion <= 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9bc286de692288a80bf23c0acfccc623971394ea",
                "query": "SELECT T1.Company, T2.Company FROM company AS T1 JOIN company AS T2 ON T1.Rank <= T2.Rank LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "cda143f118d46b300f048549ef6224e6008a6385",
                "query": "SELECT T1.Company, T2.Manager_Name FROM company AS T1 JOIN station_company AS T3 ON T1.Company_ID = T3.Company_ID JOIN gas_station AS T2 ON T3.Station_ID = T2.Station_ID WHERE T1.Market_Value > 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "01de7a5b386edc367e62bc857eb2bc391b4bfede",
                "query": "SELECT Company, Headquarters FROM company AS T1 WHERE Main_Industry = 'Retail' OR Company IN (SELECT Company FROM company AS T2 WHERE Rank = 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5fe78a57d684fced9982bc928517e8baf87aad88",
                "query": "SELECT T1.Company, T2.Manager_Name, T3.Rank FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T1.Company = (SELECT Company FROM company WHERE Sales_billion > 100) ORDER BY T3.Open_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "41b50c2d2b2a851ffced70a3a2d91d98fb853a4f",
                "query": "SELECT T1.Company, T2.Location, T3.Rank FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T1.Sales_billion BETWEEN 10 AND 50 OR T1.Profits_billion > 5 AND T3.Open_Year = 2010",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "3fdfb708da175b48a0b1adf90d9e82bdb8809840",
                "query": "SELECT T1.Company, T3.Rank_of_the_Year FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID ORDER BY T3.Rank_of_the_Year ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6a2800bc334c73a19b9511d93c1dc03293fbdaa8",
                "query": "SELECT COUNT(DISTINCT T1.Company_ID), T1.Sales_billion, T2.Location FROM company AS T1 JOIN station_company AS T3 ON T1.Company_ID = T3.Company_ID JOIN gas_station AS T2 ON T3.Station_ID = T2.Station_ID WHERE T2.Station_ID = (SELECT Station_ID FROM gas_station WHERE Location = 'New York')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2cebcb1fdea701dbd1f58e6bcbb66afc6498cb60",
                "query": "SELECT T1.Company, T2.Manager_Name, T3.Vice_Manager_Name FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID JOIN gas_station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T1.Sales_billion >= 10 AND T3.Open_Year >= 2010",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "69e05c56fda79014c44cb092b30cefcdec7dfc64",
                "query": "SELECT COUNT(DISTINCT Company_ID) FROM company WHERE Rank = 1 AND Headquarters = 'USA' AND EXISTS (SELECT 1 FROM gas_station WHERE Open_Year > 2010 LIMIT 10)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#)"
            }
        ],
        "cre_Drama_Workshop_Groups": [
            {
                "hash": "b4c8b09afa5d68c9dbf81e1ac4f2e28b610a9a4e",
                "query": "SELECT COUNT(DISTINCT T1.Invoice_ID), T3.payment_method_description FROM Invoices AS T1 JOIN Invoice_Items AS T2 ON T1.Invoice_ID = T2.Invoice_ID JOIN Ref_Payment_Methods AS T3 ON T1.payment_method_code = T3.payment_method_code WHERE T1.Invoice_ID BETWEEN 1000 AND 2000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ebf9da71c6f7d33b6263ee7ce80a765a9beee62a",
                "query": "SELECT T2.Workshop_Group_ID, COUNT(T1.Product_ID) FROM Order_Items AS T1 JOIN Invoices AS T2 ON T1.Order_ID = T2.Order_ID WHERE T1.Order_ID BETWEEN 1 AND 10 OR T2.payment_method_code = 'cash' ORDER BY T2.Workshop_Group_ID DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8a65931fe59944bd3d6946c3b2d4a171f05f8c9a",
                "query": "SELECT MIN(T1.Product_Price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.Product_ID = T2.Product_ID",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "15332d0ff199f6ddd464313b38d3cbf58dcd1e79",
                "query": "SELECT DISTINCT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Phone != '' LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a6f6260bce6a6fb238c1d71e78ec4efc448aafa1",
                "query": "SELECT T1.Store_Name, T2.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID GROUP BY T2.Store_Name",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "ce3e561ba29b8fc6196db12ff48fd82a7fe42e31",
                "query": "SELECT T1.Service_Type_Code, COUNT(T2.Service_ID) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T1.Service_Type_Code != T2.Service_Type_Code",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "534e6549d3fe685fa4ad445cc70ea03c12a431c1",
                "query": "SELECT T1.Product_Name, T2.Order_Date FROM Products AS T1 INNER JOIN Order_Items AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Order_Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Order_Quantity > 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "1a9e7f482c0489decc540eb91852adeafe118933",
                "query": "SELECT COUNT(DISTINCT T1.Store_Name), COUNT(DISTINCT T2.Store_Phone) FROM Stores AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Store_Name = 'Store1' OR T2.Store_Phone BETWEEN 100 AND 200 OR T1.Store_ID = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "2dbbb6c98695c25dca025e04ce4e851b58fc71ad",
                "query": "SELECT T1.Product_Name, COUNT(DISTINCT T2.Store_ID) FROM Products AS T1 JOIN Stores AS T2 ON T1.Product_ID = T2.Store_ID",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "1ba995cefcec92c631865afe484361ea1da16bab",
                "query": "SELECT T1.Product_Name FROM Products AS T1 WHERE T1.Product_ID IN ( SELECT T2.Product_ID FROM Invoices AS T2 WHERE T2.Product_ID = T1.Product_ID ) GROUP BY T1.Product_Name HAVING MIN(T1.Product_Price)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# ) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            },
            {
                "hash": "b3aa8563380bdf4b325fd10d634c24c054c54c39",
                "query": "SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.Store_Phone = '123456789' OR T2.Store_Phone = '987654321' ORDER BY T2.Store_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "523a1bdeb8e26f94066bfe5847521e2975cd3ef5",
                "query": "SELECT T1.payment_method_description FROM Ref_Payment_Methods AS T1 JOIN Invoices AS T2 ON T1.payment_method_code = T2.payment_method_code WHERE T2.payment_method_code = 'Cash'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "4f2784ac2556631a59f98023360772c6bce5baf9",
                "query": "SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Stores AS T2 ON T2.Store_Name = T1.Store_Name WHERE T2.Store_ID < ( SELECT Store_ID FROM Stores WHERE Marketing_Region_Code = 'North' )",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "6a86105fd613d6629757de74c8859b0e4ab6337a",
                "query": "SELECT T1.Service_Type_Code, MIN(T2.Product_Price) FROM Services AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_Price < 10 GROUP BY T1.Service_Type_Code ORDER BY T1.Service_Type_Code ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cd4545d9272bb6f820e5dcd1470e39e3a59e8353",
                "query": "SELECT S.Store_Name, I.Invoice_ID FROM Stores S JOIN Invoices I ON S.Store_ID = I.Store_ID WHERE I.payment_method_code = 'Cash' OR I.Order_ID IN ( SELECT O.Order_ID FROM Customer_Orders O WHERE O.Customer_ID = 1000 )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "12bba77e065f4cbca936bc47d6a64b0ca33459a8",
                "query": "SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Store_Name = 'Store1' OR T1.Store_Name = 'Store2' GROUP BY T1.Store_Name HAVING MIN(T2.Store_Name) = 'Store3' ORDER BY T1.Store_Name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a83df44ab8160a583e58981fbd6fafed4e40e294",
                "query": "SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 WHERE T1.Workshop_Group_ID > (SELECT Workshop_Group_ID FROM Bookings_Services AS T2 WHERE T2.Product_ID = 'BS01') ORDER BY T1.Workshop_Group_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# > (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = '#VALUE#') ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "2af95cea2e26f26108ac5603b12ea7173db20dd7",
                "query": "SELECT payment_method_description FROM Ref_Payment_Methods WHERE payment_method_code != 'credit' GROUP BY payment_method_description HAVING SUM(payment_method_code) = 0 ORDER BY payment_method_description ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = 0 ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT T1.Customer_Name FROM Customers AS T1 JOIN Invoices AS T2 ON T1.Customer_ID = T2.Order_ID JOIN Ref_Payment_Methods AS T3 ON T2.payment_method_code = T3.payment_method_code WHERE T3.payment_method_code >= 'cash'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "c8134cd5778b10700f88608b36a01df428bee5df",
                "query": "SELECT T1.Store_Name FROM Drama_Workshop_Groups AS T1 JOIN Addresses AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.Store_Phone = '123456789' OR T1.Store_Phone BETWEEN '123456789' AND '987654321' OR T2.City_Town = 'City'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "c62e5eed5b176290cdafed0f84f57bff4c37976d",
                "query": "SELECT T1.Product_Name, SUM(T2.Order_Quantity) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING SUM(T2.Order_Quantity) > 100 ORDER BY T1.Product_Name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d5ce1feb9548a8daf4fda2b7c80b130195720d9f",
                "query": "SELECT COUNT(DISTINCT T1.Service_Type_Code) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T1.Service_Type_Description = 'Type 1' OR T2.Product_Price BETWEEN 10 AND 20 OR T1.Parent_Service_Type_Code = 'Type 2'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "fbe3cf1e02297a0ebcf34e1e09368cee861350ee",
                "query": "SELECT COUNT(DISTINCT T1.payment_method_code) FROM Invoices AS T1 JOIN Ref_Payment_Methods AS T2 ON T1.payment_method_code = T2.payment_method_code WHERE T1.Order_ID < 100 ORDER BY T1.payment_method_code ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fab85055caa62f5b1827fedfc23b075158ee212c",
                "query": "SELECT COUNT(DISTINCT Customer_ID) FROM Bookings WHERE Order_Date < '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "fe22c20b7b58b3e8d50bd10d4438a51df5b67c3f",
                "query": "SELECT payment_method_description FROM Ref_Payment_Methods WHERE payment_method_code NOT IN ( SELECT payment_method_code FROM Invoices ) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            }
        ],
        "insurance_fnol": [
            {
                "hash": "7f0e0e04a1782996a51176748763d4d30c667346",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID) FROM Customers AS T1 JOIN Customers_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Date_Opened BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Customer_name IN (SELECT Customer_name FROM Customers WHERE Customer_ID > 100)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "952db773b58f1df9f5a9e420c7ed8eb3aea6249f",
                "query": "SELECT AVG(T1.Settlement_Amount) FROM Settlements AS T1 JOIN Claims AS T2 ON T1.Claim_ID = T2.Claim_ID WHERE T2.Effective_Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.FNOL_ID > 100 ORDER BY T1.Settlement_Amount DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "37eba493be32fe917084ad5f75ee49a4d7ee01c1",
                "query": "SELECT T1.Customer_name FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Services AS T3 ON T3.Service_ID = T2.Service_ID JOIN Claims AS T4 ON T2.FNOL_ID = T4.FNOL_ID WHERE T4.Claim_ID = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT Customer_ID) FROM First_Notification_of_Loss WHERE Service_ID >= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "9f59ade17f433a108cdb7d3645400bbfd29a0ee9",
                "query": "SELECT T1.Customer_name, COUNT(T2.Claim_ID) FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claims AS T3 ON T2.FNOL_ID = T3.FNOL_ID WHERE T2.Service_ID = 1 GROUP BY T1.Customer_name ORDER BY COUNT(T2.Claim_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "044f4388198d0104a059272771bb0c7dcf5e151c",
                "query": "SELECT COUNT(Claim_ID), Settlement_Amount FROM Settlements WHERE Settlement_Amount = 1000 ORDER BY Settlement_Amount DESC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7a90f6b5182eb2117f612ed1beb73b3d4bfeb58f",
                "query": "SELECT COUNT(T1.Claim_ID), T2.Service_name FROM Claims AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.FNOL_ID = T2.FNOL_ID WHERE T1.Effective_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Service_ID > 10 OR T1.Claim_ID = 100",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "d25cd311c25f8ca9618fbac709c4362e6cd93e3b",
                "query": "SELECT Settlement_Amount FROM Settlements WHERE Settlement_Amount > (SELECT AVG(Settlement_Amount) FROM Settlements) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "1a439797ee2e4b6529fc494549b62c48a3aa8a83",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), T2.Service_name, SUM(T3.Settlement_Amount) FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Settlements AS T3 ON T2.FNOL_ID = T3.Claim_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ba42b3327bdcb97aa7b67e351c80ebb89714b80a",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID) , SUM(T2.Salary) FROM Customers AS T1 JOIN Available_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_name HAVING SUM(T2.Salary) >= 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "04a40c048a8647a9b459f21cc27d60a649624ebb",
                "query": "SELECT COUNT(Claim_ID) FROM Claims WHERE Effective_Date <= '1990-01-01'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "a4f3e32417957a13ba34344a6170e5ec88af8d45",
                "query": "SELECT * FROM First_Notification_of_Loss WHERE Customer_ID <= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "e9c5f685fb1c7b63efe11dcb46452ca0c6487ec0",
                "query": "SELECT COUNT(DISTINCT T1.Customer_name), COUNT(T2.Claim_ID) FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.FNOL_ID BETWEEN 100 AND 200 AND T2.Service_ID IN (1, 2, 3) ORDER BY T1.Customer_name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#, #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "40ecc4a9cbde3a169ea8fa65cc76f979ac49ff66",
                "query": "SELECT T1.Service_name, COUNT(T2.Claim_ID) FROM Services AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Service_ID = T2.Service_ID",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "482225d6d42fe5c194c5a830babf4c117ddc87c5",
                "query": "SELECT T1.Customer_name FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Service_ID = 1 AND EXISTS (SELECT 1 FROM Settlements AS T3 WHERE T3.Claim_ID = T2.FNOL_ID) ORDER BY T1.Customer_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0e70e465b3a5af45ab6b5eac3ba337b3efc143b7",
                "query": "SELECT * FROM Available_Policies WHERE policy_type_code = 'type1' OR Customer_Phone LIKE '%123%' OR Policy_ID BETWEEN 100 AND 200 OR NOT EXISTS (SELECT 1 FROM Customers_Policies WHERE Available_Policies.Policy_ID = Customers_Policies.Policy_ID LIMIT 1) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '%#VALUE#%' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# LIMIT 1) LIMIT #VALUE#"
            },
            {
                "hash": "4b8d7c47f8d4f5307010b7d5ee87d529d6f83d5d",
                "query": "SELECT COUNT(DISTINCT T1.Customer_name), COUNT(DISTINCT T3.Service_name), T4.policy_type_code FROM Customers AS T1 JOIN Customers_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN First_Notification_of_Loss AS T3 ON T2.Policy_ID = T3.Policy_ID JOIN Available_Policies AS T4 ON T3.Policy_ID = T4.Policy_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT DISTINCT T1.Customer_name AS New_Name FROM Customers AS T1 WHERE T1.Customer_name != 'ABC'",
                "template": "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "8bd8d048bdc3a1271bc8b60fcc6b4d6dcac892b4",
                "query": "SELECT Settlement_Amount FROM Settlements WHERE Settlement_Amount < 10000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e3388337f18b8e758e3eeb75776d6a10eb574c52",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), COUNT(T1.Customer_ID), T1.Customer_name FROM Customers AS T1 WHERE T1.Customer_ID != 1 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#)"
            },
            {
                "hash": "62df0a3aa1371dbdee9d68f9e7fb298e189abd21",
                "query": "SELECT T1.Customer_name, T2.Service_name FROM Customers AS T1 JOIN Services AS T2 ON T1.Customer_ID = T2.Service_ID WHERE T1.Customer_ID = 10 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5c5b9acf1e8270afcb37cc260236d5b0699611c6",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 WHERE T1.Customer_ID NOT IN (SELECT T2.Customer_ID FROM Customers AS T2 GROUP BY T2.Customer_ID HAVING COUNT(T2.Customer_ID) = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#)"
            },
            {
                "hash": "af4e26c0c2fc54ee2f3875443234607290ad3f83",
                "query": "SELECT T1.policy_type_code FROM Available_Policies AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Policy_ID = T2.Policy_ID WHERE NOT EXISTS (SELECT T3.Customer_Phone FROM Available_Policies AS T3 JOIN Customers_Policies AS T4 ON T3.Policy_ID = T4.Policy_ID WHERE T3.policy_type_code = T1.policy_type_code AND T4.Date_Closed IS NULL) GROUP BY T1.policy_type_code HAVING AVG(T2.Service_ID) > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "8f84e8279c4a677c6e2b1c6d38ad3b366e3e7033",
                "query": "SELECT T1.Customer_ID FROM Customers_Policies AS T1 JOIN Customers_Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Policy_ID BETWEEN 100 AND 200 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3eabe23272087731247e62e560cd05405c7dd399",
                "query": "SELECT T1.Customer_name, T2.Service_name FROM Customers AS T1 JOIN First_Notification_of_Loss AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Service_ID < 10 ORDER BY T1.Customer_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "music_1": [
            {
                "hash": "088f55f30e65b5a23ee17bbd3301d6de64467d27",
                "query": "SELECT T1.song_name FROM song AS T1 WHERE T1.rating BETWEEN 1 AND 10 OR T1.rating = 5 OR EXISTS (SELECT T2.artist_name FROM artist AS T2 WHERE T2.artist_name = T1.artist_name) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "f4952f369660298352d76054c00068750e63de67",
                "query": "SELECT T2.artist_name FROM genre AS T1 JOIN artist AS T2 ON T1.g_name = T2.preferred_genre WHERE T2.artist_name IN (SELECT artist_name FROM files) ORDER BY T2.artist_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ff3c0653a1b0f967eee93958cf9956b783021ef6",
                "query": "SELECT artist_name, rating FROM artist WHERE rating > 4 ORDER BY rating ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d2f10dc8aada6adec9b85e0ec8e7928fb97d51db",
                "query": "SELECT T1.g_name FROM genre AS T1 WHERE T1.rating = 'PG-13' OR T1.most_popular_in BETWEEN '1980-01-01' AND '1989-12-31' OR T1.most_popular_in = '1985-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "b65d756a384d05a7a711376dd3c9a1d88f7d9bf0",
                "query": "SELECT COUNT(f_id) FROM song WHERE rating = 3 OR rating = 4 OR f_id NOT IN (SELECT f_id FROM files WHERE file_size = 'small') GROUP BY rating HAVING COUNT(f_id) > 1 ORDER BY rating DESC LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "182313c53c1f0c18f86ea54c74413d321afacb30",
                "query": "SELECT song_name FROM song AS T1 ORDER BY rating DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "b000b0576b8a3c12a4e9e19a8f9ff2f7df8f6f9f",
                "query": "SELECT COUNT(DISTINCT T1.g_name) FROM genre AS T1 WHERE EXISTS (SELECT 1 FROM song AS T2 WHERE T2.genre_is = T1.g_name AND T2.rating > 4) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "97542c7c9ce3ca981867fb46e7a4cb899af94919",
                "query": "SELECT COUNT(rating), COUNT(rating) FROM genre WHERE rating = 'PG' OR rating = 'G' OR rating BETWEEN 'PG-13' AND 'NC-17'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8bd8d048bdc3a1271bc8b60fcc6b4d6dcac892b4",
                "query": "SELECT * FROM song WHERE rating < 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "584c97602d9e1dba7a249e96154b6d4d2c2d5077",
                "query": "SELECT T1.artist_name, T2.f_id FROM artist AS T1 JOIN files AS T2 ON T1.artist_name = T2.artist_name JOIN song AS T3 ON T3.f_id = T2.f_id WHERE T1.country = 'USA' OR T3.rating BETWEEN 4 AND 5 OR T1.gender = 'Male'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "61863d3e2083ff86b0256443858a36057a10a8cc",
                "query": "SELECT artist_name FROM artist ORDER BY artist_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9391d826a7f1cf6b41c9cd11f9ef88be3d0eb495",
                "query": "SELECT T1.artist_name, COUNT(T2.f_id), COUNT(DISTINCT T3.song_name) FROM artist AS T1 JOIN files AS T2 ON T1.artist_name = T2.artist_name JOIN song AS T3 ON T2.artist_name = T3.artist_name GROUP BY T1.artist_name HAVING COUNT(T3.song_name) > 10 ORDER BY COUNT(T3.song_name) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "e0482703d49511d67e8b401411d49e10da21635b",
                "query": "SELECT AVG(T2.rating), COUNT(T2.rating), SUM(T1.file_size) FROM files AS T1 JOIN genre AS T2 ON T2.g_name = T1.artist_name WHERE T2.rating BETWEEN 1 AND 5",
                "template": "SELECT AVG(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "1baff5242fc8f9ebb35eda21ba41d403cffdc992",
                "query": "SELECT MAX(T1.rating) FROM genre AS T1 WHERE T1.rating > 4 AND T1.most_popular_in BETWEEN 'Country1' AND 'Country3' AND T1.g_name = 'Genre1' ORDER BY T1.rating DESC LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "ed9562779e56bb12ecebadc6614b946d1efc9030",
                "query": "SELECT T1.g_name FROM genre AS T1 WHERE T1.rating = 'PG' AND T1.most_popular_in = 'USA' AND T1.g_name NOT IN (SELECT T2.preferred_genre FROM artist AS T2) ORDER BY T1.rating DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ed4e7b1b429b3f9dcda1bbe89db03df0278e726f",
                "query": "SELECT COUNT(DISTINCT T2.artist_name), T1.g_name FROM genre AS T1 JOIN song AS T2 ON T1.g_name = T2.genre_is JOIN artist AS T3 ON T2.artist_name = T3.artist_name WHERE T1.rating > 'Poor' ORDER BY COUNT(DISTINCT T2.artist_name) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "fcf3f23def658d0acc1b7f20c95d7dc537c2ec15",
                "query": "SELECT T1.g_name, AVG(T1.rating) FROM genre AS T1 JOIN song AS T2 ON T1.g_name = T2.genre_is WHERE T2.rating BETWEEN 1 AND 5 OR T2.releasedate > '2020-01-01' OR EXISTS (SELECT 1 FROM artist AS T3 WHERE T3.country = 'USA' AND T3.artist_name = T2.artist_name) GROUP BY T1.g_name ORDER BY T1.g_name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d947c8c0d74ff5d87c286b4f3d8c53bc2805ef02",
                "query": "SELECT T1.g_name, COUNT(T2.song_name) FROM genre AS T1 JOIN song AS T2 ON T1.g_name = T2.genre_is WHERE T1.rating <= 5 GROUP BY T1.g_name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "96efd9c4cf610226604056ba818516ece4aa5235",
                "query": "SELECT T1.artist_name, T2.song_name FROM files AS T1 INNER JOIN song AS T2 ON T1.artist_name = T2.artist_name LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "d7c49be1375d42e7ae92706ec80fcea6c4aaa952",
                "query": "SELECT COUNT(DISTINCT T1.g_name), COUNT(DISTINCT T2.artist_name) FROM genre AS T1 JOIN artist AS T2 ON T1.g_name = T2.preferred_genre WHERE T2.gender = 'Male'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "2a917562a7f3fe2e671e30ad503d60a78397e0bd",
                "query": "SELECT song_name FROM song WHERE rating BETWEEN 1 AND 5 OR rating NOT IN ( SELECT rating FROM genre WHERE g_name = 'Pop' )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "aaf337b6126fbb1cf6344c6c2ef319e9980bec3b",
                "query": "SELECT COUNT(DISTINCT T1.artist_name) AS count FROM song AS T1 JOIN artist AS T2 ON T1.artist_name = T2.artist_name WHERE T1.rating > 4 AND T1.releasedate BETWEEN '2020-01-01' AND '2020-12-31' AND T2.country = 'USA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "5ea12749015d1afff1bd37c2fcd5aefdd187d36f",
                "query": "SELECT T3.song_name, T2.artist_name, T1.g_name FROM genre AS T1 JOIN song AS T3 ON T1.g_name = T3.genre_is JOIN artist AS T2 ON T2.preferred_genre = T1.g_name WHERE T2.gender != 'Male' ORDER BY T2.artist_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dad8f46e187b131bbad9f487664cd3bcef7126a5",
                "query": "SELECT COUNT(DISTINCT T1.g_name), COUNT(DISTINCT T1.rating) FROM genre AS T1 WHERE T1.g_name NOT IN (SELECT T2.preferred_genre FROM artist AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "6c22d2811ce9532e4362e2cd450465ac7376838d",
                "query": "SELECT song_name FROM song WHERE rating >= 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "40117f7e26b50530341f391b58b6403d02c9fadc",
                "query": "SELECT COUNT(DISTINCT artist_name), SUM(file_size) FROM files WHERE duration > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "cre_Doc_Template_Mgt": [
            {
                "hash": "ccdd0ba726ee38db45a1dd9851fdeca65ef8f6b2",
                "query": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code > 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "5bca0d223377bf1376441997ac69935eb6462cc7",
                "query": "SELECT Template_ID FROM Templates ORDER BY Version_Number DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "234ba2281483452e79abb02412110c708f187468",
                "query": "SELECT COUNT(DISTINCT Template_Type_Code) AS count, Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code < 'A' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5a968a63c3605ebc0eaf699d99fc58bbfe8b565c",
                "query": "SELECT COUNT(T1.Template_ID), COUNT(T2.Document_ID), COUNT(T3.Paragraph_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Paragraphs AS T3 ON T2.Document_ID = T3.Document_ID WHERE T1.Version_Number <= 5 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8bc70d15b4e6b2953baf74e1a5631c90d002533a",
                "query": "SELECT COUNT(T1.Template_ID), COUNT(DISTINCT T1.Template_Type_Code), COUNT(DISTINCT T2.Document_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T1.Template_Type_Code = 'Type1' OR T1.Version_Number BETWEEN 1 AND 10 OR T2.Document_Name = (SELECT T3.Document_Name FROM Documents AS T3 WHERE T3.Document_Description = 'Desc')",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1392e66672de5354b69fd0e02b91d218a4a89659",
                "query": "SELECT T1.Document_Name FROM Documents AS T1 WHERE T1.Template_ID = 123 OR T1.Template_ID IN ( SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'abc' ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "3f038d99997aa39fed278c3f3fad00cefad15493",
                "query": "SELECT T1.Template_Type_Description, MIN(T3.Document_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Template_Details = 'sample' OR NOT EXISTS (SELECT 1 FROM Paragraphs AS T4 WHERE T4.Document_ID = T3.Document_ID AND T4.Paragraph_Text = 'text') GROUP BY T1.Template_Type_Description",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "76667c8ca5587339f9dbab85a78d73186e42bad9",
                "query": "SELECT T1.Template_Type_Code, MIN(T2.Template_ID) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code ORDER BY T1.Template_Type_Code ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e9f105085c5b4491722bdd879f7a16ea6eadf56a",
                "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE EXISTS (SELECT 1 FROM Paragraphs AS T3 JOIN Documents AS T4 ON T3.Document_ID = T4.Document_ID WHERE T4.Template_ID = T2.Template_ID AND T3.Paragraph_Text LIKE '%text%') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# LIKE '%#VALUE#%') LIMIT #VALUE#"
            },
            {
                "hash": "b80dd9ead643775d01a01bf6ae311ef7a1ff8084",
                "query": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code < 'A' ORDER BY Template_Type_Code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0fafd1d6cbbb8c9dcf5e3d6f9e19eed510684746",
                "query": "SELECT COUNT(DISTINCT T1.Template_ID) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID JOIN Paragraphs AS T3 ON T2.Document_ID = T3.Document_ID WHERE T3.Paragraph_Text = 'Sample Text' AND T2.Document_Name BETWEEN 'A' AND 'Z' AND T1.Version_Number > (SELECT COUNT(*) FROM Templates WHERE Template_Type_Code = 'CODE')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1e3a77108526fbfa68900ff8db32cb86630520c9",
                "query": "SELECT T1.Template_ID FROM Templates AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Version_Number > 1 AND T1.Template_Type_Code = (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Type1') ORDER BY T1.Template_ID ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "faf802e43e27cd39947a1984d1a75abaf60cff6a",
                "query": "SELECT Template_Type_Description, COUNT(DISTINCT Template_Type_Code) FROM Ref_Template_Types WHERE Template_Type_Code = 'X' OR Template_Type_Code = 'Y' OR Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Version_Number > 5) GROUP BY Template_Type_Description HAVING MAX(Template_Type_Code) = 'Z'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "4e7cbc633ce43f091506ff447a97e0f693cf3129",
                "query": "SELECT Template_Type_Description, COUNT(Template_Type_Code) FROM Ref_Template_Types AS T1 GROUP BY Template_Type_Description HAVING Template_Type_Code != 'XXX' LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "a3e4d85e2beae4bd1c9e414620884353f47013ff",
                "query": "SELECT Template_ID FROM Templates WHERE Version_Number > 1 AND Template_Type_Code = 'TYPE1' AND EXISTS (SELECT 1 FROM Ref_Template_Types WHERE Template_Type_Code = 'TYPE1') ORDER BY Template_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "39559ca076fd8107f76921a65a235878719242b2",
                "query": "SELECT Template_Type_Code FROM Ref_Template_Types WHERE EXISTS ( SELECT 1 FROM Templates WHERE Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code GROUP BY Templates.Template_Type_Code HAVING MAX(Templates.Version_Number) > 1 LIMIT 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#)"
            },
            {
                "hash": "8a623cffcfebf44bcac3c63488cd4dec10ab45e2",
                "query": "SELECT T1.Template_Details, T2.Template_Details FROM Templates AS T1 JOIN Templates AS T2 ON T1.Template_ID != T2.Template_ID ORDER BY T1.Template_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0f35f4edbca1c999cc16d9d52a4b217946cffe4b",
                "query": "SELECT Template_Type_Code FROM Templates WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code = 'T001')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "2b317e618e27b9c9bcbdaa4ce4dc30cf555ef9ae",
                "query": "SELECT Template_ID, Version_Number FROM Templates WHERE Template_ID BETWEEN 10 AND 20 OR Template_ID = 30 OR Template_ID < 40 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT Template_Type_Description FROM Ref_Template_Types AS T1 WHERE Template_Type_Code > 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "fa919963e04dc2f710d0e8bd0877bf735c872771",
                "query": "SELECT COUNT(DISTINCT T1.Template_ID), COUNT(*) FROM Templates AS T1 WHERE T1.Template_Type_Code = 'TypeA' AND T1.Version_Number BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Documents AS T2 WHERE T2.Template_ID = T1.Template_ID) ORDER BY T1.Template_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5113107549de41ed284da1b03397c626af84d430",
                "query": "SELECT COUNT(DISTINCT T1.Template_ID) , COUNT(DISTINCT T1.Version_Number) , COUNT(DISTINCT T1.Template_Type_Code) FROM Templates AS T1 WHERE T1.Template_Type_Code = 'type1' AND T1.Version_Number > 1 AND T1.Template_ID IN ( SELECT T2.Template_ID FROM Documents AS T2 WHERE T2.Document_Name = 'name1' ) ORDER BY T1.Template_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "79a41b1b53b1a415a26b45346ad119755c8f7a57",
                "query": "SELECT T1.Template_Type_Description FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Version_Number != 1 ORDER BY T2.Template_ID DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "88cf5eb034c379fe64b27802fe37636d18d68ee2",
                "query": "SELECT MIN(Template_ID), Version_Number FROM Templates WHERE Template_Type_Code = 'Type1' AND Date_Effective_From BETWEEN '2020-01-01' AND '2020-12-31' AND Version_Number > 1 LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5d718cbc1fadfaa9feade209f0de9824a9bc5d38",
                "query": "SELECT Template_Type_Description, COUNT(DISTINCT Template_ID) FROM Templates AS T1 INNER JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T1.Version_Number > 1 GROUP BY T2.Template_Type_Description ORDER BY COUNT(DISTINCT Template_ID) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY T2.#COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "bfb3c8d9ee30a5315bcf4d07c18ba8f285c02525",
                "query": "SELECT COUNT(DISTINCT Template_ID) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'A') ORDER BY Document_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ebd7d2dc31c03aae6bc37909ab0891d1149634f0",
                "query": "SELECT COUNT(DISTINCT Documents.Document_Name) , COUNT(DISTINCT Documents.Document_Description) , COUNT(Templates.Template_ID) FROM Documents AS T1 LEFT JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'type1' OR T1.Document_ID BETWEEN 10 AND 20 OR T2.Version_Number > 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b7efc69bf5cc0b2c064136f0d920e75d83f24d96",
                "query": "SELECT T1.Template_Type_Description, COUNT(T2.Template_ID), SUM(T3.Document_Name) FROM Ref_Template_Types AS T1 JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code JOIN Documents AS T3 ON T2.Template_ID = T3.Template_ID WHERE T2.Date_Effective_From BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY T1.Template_Type_Description",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "71a1194d5b9eb6b34e79d39c3741f64e54369b58",
                "query": "SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code BETWEEN 'A' AND 'Z' ORDER BY Template_Type_Description DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8958d1fba13f87990c7e627c4825d86ffb6e8cb7",
                "query": "SELECT Version_Number FROM Templates WHERE Template_ID = ( SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Sample Text' )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            }
        ],
        "epinions_1": [
            {
                "hash": "fe3886f5a830874256045d2d9fa290b1d2a90488",
                "query": "SELECT T1.title, COUNT(DISTINCT T2.u_id) FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating < 5 ORDER BY T1.title ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "12a7945d444725c0d317a48fd64cd28254b514c3",
                "query": "SELECT T2.title FROM review AS T1 JOIN item AS T2 ON T1.i_id = T2.i_id WHERE T1.rating > 3",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "019e5f7684366976e48dcaa7037523f93ce63fa3",
                "query": "SELECT MIN(T1.rating) FROM review AS T1 WHERE T1.rank < 5 ORDER BY T1.rating ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "08af63c7d6f75c4fa46e830dbfea097dd2d4047c",
                "query": "SELECT COUNT(T1.u_id), COUNT(T2.i_id) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id JOIN item AS T3 ON T2.i_id = T3.i_id WHERE T2.u_id != 1",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "16181abfe1e00acc9d6fc23d5530bed557d35f87",
                "query": "SELECT DISTINCT T2.name, T3.title FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id JOIN review AS T3 ON T2.target_u_id = T3.u_id WHERE T1.u_id >= 10 AND T3.rank >= 5",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "2176066f11a314cc94eead73f93b66efb06f3f4f",
                "query": "SELECT COUNT(DISTINCT T1.u_id) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id WHERE T2.trust >= 0.5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "17e499d07f851a189cd8a978a84fe4c21969919b",
                "query": "SELECT i_id, AVG(rating) FROM review WHERE i_id <= 1000 ORDER BY i_id ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6000e31b846590bb4c22a65ce9d8e02bd341ee0b",
                "query": "SELECT T1.name, T2.title FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.rating IN (SELECT T3.trust FROM trust AS T3)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "1fd7561fbdacf42aef30821f4ef180d3b05d7bf2",
                "query": "SELECT COUNT(DISTINCT T1.u_id), COUNT(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.rating < 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "80d1c19421d14fdcdeda1462244d67071b945def",
                "query": "SELECT COUNT(DISTINCT T3.u_id), COUNT(T1.a_id) FROM review AS T1 JOIN item AS T2 ON T1.i_id = T2.i_id JOIN useracct AS T3 ON T3.u_id = T1.u_id WHERE T1.rating > 3 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b3cda8a13893d3cb1b1449ecdc8314d19044973e",
                "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id JOIN useracct AS T3 ON T2.u_id = T3.u_id WHERE EXISTS ( SELECT 1 FROM trust WHERE trust.source_u_id = T3.u_id AND trust.trust > ( SELECT AVG(trust.trust) FROM trust ) )",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) )"
            },
            {
                "hash": "175f5085080764c6067c7ac850d7f65382dfe659",
                "query": "SELECT i_id FROM item WHERE NOT EXISTS (SELECT 1 FROM review WHERE rating > 3 AND i_id = item.i_id) AND NOT EXISTS (SELECT 1 FROM review WHERE rating < 3 AND i_id = item.i_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #TABLE#.##COLUMN#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #TABLE#.##COLUMN#)"
            },
            {
                "hash": "35fbb135a4d1f2793376e74c159e71f5fb941fe6",
                "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 4 AND T2.rank BETWEEN 1 AND 100 AND T2.u_id = 10 ORDER BY T1.title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "32573ed9e4c610e877dbe89ec4f98803175cabc0",
                "query": "SELECT T1.title, T2.rank FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating != 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "01be19e4385fc313b9d82104083fe1a13db72519",
                "query": "SELECT T1.title, AVG(T2.rating) FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id JOIN trust AS T3 ON T2.u_id = T3.target_u_id WHERE T3.trust > 0.5 GROUP BY T1.title ORDER BY T1.title DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "91580906b9e97103ddc334e4ac7e38be3703dc61",
                "query": "SELECT T1.u_id FROM review AS T1 JOIN review AS T2 ON T1.a_id = T2.a_id WHERE T1.u_id = 123 AND 456 IN (SELECT T3.u_id FROM review AS T3 WHERE T3.i_id = T1.i_id) AND T1.rating < T2.rating GROUP BY T1.u_id HAVING MIN(T1.rank) > MIN(T2.rank) ORDER BY T1.u_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #VALUE# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) AND #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > MIN(#COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f1f823b3796f5e41d53d8ff18cc5371d51df9f46",
                "query": "SELECT T1.u_id, T1.rank FROM review AS T1 JOIN item AS T2 ON T1.i_id = T2.i_id WHERE T2.i_id < 100 AND T1.rating < 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "e161625f07398f5d854b7fc78731c36598ef6b2e",
                "query": "SELECT MAX(T1.rating) FROM review AS T1 WHERE T1.rating BETWEEN 1 AND 5 AND T1.i_id IN (SELECT T2.i_id FROM item AS T2 WHERE T2.title = 'Movie')",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "22c71331b778c012ef5888144961e0caa0a6afa3",
                "query": "SELECT COUNT(*) FROM review WHERE rating >= 5 LIMIT 10",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ea2f22d1665743cf4c0b5559c638cbca12f026a2",
                "query": "SELECT COUNT(i_id), SUM(rating) FROM review LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "a5e3a6c8e4d58a1e2daa4f30f980ccb5ef5b1ca5",
                "query": "SELECT COUNT(DISTINCT u_id) FROM review WHERE rating <= 3",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "d6d34269bfacaee2318f0fd625368487e5cbf7c5",
                "query": "SELECT title FROM item WHERE i_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "6ceee9029a150162e44fb05a627b35da86aedf9e",
                "query": "SELECT COUNT(DISTINCT T1.u_id), COUNT(DISTINCT T2.u_id) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T1.name = 'Alice' OR T2.rating > (SELECT AVG(rating) FROM review WHERE i_id IN (SELECT i_id FROM item WHERE title = 'Toy'))",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "4cea3cf58e9681cc64cd3b92124494ae5ce81c07",
                "query": "SELECT T2.name, COUNT(T1.u_id) FROM review AS T1 JOIN useracct AS T2 ON T1.u_id = T2.u_id WHERE T1.rating = 5 ORDER BY T2.name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7b84de7eb2f040e6cb8d4225869d1ef74055ba1f",
                "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.u_id = 123 AND T2.rating = 5 AND T1.i_id IN (SELECT T3.i_id FROM review AS T3 WHERE T3.rank > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "999008ff56b4e17a86685e89cdb016c3085348e8",
                "query": "SELECT T1.u_id, COUNT(DISTINCT T2.i_id) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.rank >= 2",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "29c4de2fcf8516b3d93992797fb7a6493d25648f",
                "query": "SELECT COUNT(DISTINCT T1.i_id) FROM review AS T1 WHERE T1.rating BETWEEN 1 AND 3 OR T1.i_id NOT IN (SELECT T2.i_id FROM item AS T2) OR T1.u_id IN (SELECT T3.u_id FROM useracct AS T3 WHERE T3.name = 'John')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8358b55aba879e9cf9dbddcae62ddb448414c816",
                "query": "SELECT COUNT(i_id) AS review_count FROM review WHERE rating != 5 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2089379840c8508aa7c9f1b6172f466e4d0a367b",
                "query": "SELECT COUNT(u_id) FROM review WHERE rating BETWEEN 4 AND 5 GROUP BY u_id HAVING COUNT(u_id) > 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "42f1e57ae620b16141314f2ad2438de14f82b259",
                "query": "SELECT T1.u_id, COUNT(T2.i_id), COUNT(T3.u_id) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id JOIN trust AS T3 ON T1.u_id = T3.source_u_id WHERE NOT EXISTS (SELECT 1 FROM review AS T4 WHERE T4.u_id = T1.u_id AND T4.rating < 3) GROUP BY T1.u_id HAVING COUNT(T2.i_id) > 1 AND COUNT(T3.u_id) > 2 ORDER BY COUNT(T2.i_id) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# AND COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            }
        ],
        "wedding": [
            {
                "hash": "e571d69938595cab7a53a2e1389f793e3001418f",
                "query": "SELECT COUNT(DISTINCT Name) FROM people WHERE Age < 20 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "19b22ad8c55e21106069ab8a5debbbccdf38a835",
                "query": "SELECT T1.Church_ID FROM church AS T1 JOIN wedding AS T2 ON T1.Church_ID = T2.Church_ID WHERE T1.Church_ID IN (SELECT T3.Church_ID FROM wedding AS T3 GROUP BY T3.Church_ID HAVING COUNT(DISTINCT T3.Male_ID) > 1) ORDER BY T1.Church_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fca3a89d463d35d34a4db8fb4716d8ce361d690e",
                "query": "SELECT T1.Name, COUNT(T2.Church_ID), COUNT(DISTINCT T2.Church_ID) FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID WHERE T1.People_ID IN (SELECT T3.Male_ID FROM wedding AS T3) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a5758f04fcd3a8a53d80067e09f0b859f2cec243",
                "query": "SELECT Name, MAX(Age), MIN(Age) FROM people WHERE Country > 'USA' ORDER BY Name DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dc39b7b16a119ac3f561c04e5be5df86c2f5982e",
                "query": "SELECT p.Name FROM people AS p WHERE NOT EXISTS ( SELECT 1 FROM wedding AS w WHERE w.Male_ID = p.People_ID )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "93831df2be519867d7c4085daeb439555bbc1dcc",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Church_ID) FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Female_ID JOIN church AS T3 ON T2.Church_ID = T3.Church_ID WHERE T2.Year = 2000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "68f978feb5edae6496ed70a682aef37d316a584c",
                "query": "SELECT T1.Name FROM people AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Age > 25 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9d728115669a53e2e27fd49b9337969c478d2b5d",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID WHERE T2.Church_ID = 123",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "cced7787ca64a318b48aaa4863a746552321bd2b",
                "query": "SELECT * FROM people WHERE Age <= 30 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "508695b83f8e782b2be09a8ea59de1c58a6a8427",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Church_ID) FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Female_ID WHERE NOT EXISTS (SELECT 1 FROM church AS T3 WHERE T3.Church_ID = T2.Church_ID AND T3.Name = 'Test Church') LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "3244c4e887242cc077862e53153978a8a68231c8",
                "query": "SELECT COUNT(T1.Church_ID), T3.Age FROM church AS T1 JOIN wedding AS T2 ON T1.Church_ID = T2.Church_ID JOIN people AS T3 ON T3.People_ID = T2.Female_ID WHERE T3.Is_Male != 'true' GROUP BY T3.Age LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "6ebd582f54a2790e2442416cb4b56bc4e5df375d",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Female_ID) FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID WHERE T2.Year > 2000 OR T1.Age > 30 OR T1.People_ID IN (SELECT Male_ID FROM wedding WHERE Year > 2000)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "89396c53e11c206a338ac5d17e7f96252be0015b",
                "query": "SELECT T1.Name, T2.Name, T3.Year FROM people AS T1 JOIN church AS T2 ON T1.People_ID = T2.Church_ID JOIN wedding AS T3 ON T2.Church_ID = T3.Church_ID WHERE T1.Age BETWEEN 20 AND 30 OR T1.Name IN (SELECT Name FROM people WHERE Country = 'USA') OR T3.Year > 2000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "22b3a31113f5187a15273d7890295813ad61a2ad",
                "query": "SELECT T1.Name, MIN(T1.Age) FROM people AS T1 WHERE T1.Age > 30 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(Age) FROM people AS t1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "5279858f816f68c4d55b6d6bddbd116148065ae6",
                "query": "SELECT Age FROM people WHERE Age BETWEEN 20 AND 30 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "016d722a5bb50aabde86df4e1d8c50dc9c74f4be",
                "query": "SELECT T1.Name FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID JOIN church AS T3 ON T2.Church_ID = T3.Church_ID WHERE T2.Year = 2000 ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ede369aec4719bf1e198669e2d9985348f4adf5b",
                "query": "SELECT T2.Name, COUNT(T1.Church_ID) , SUM(T2.Open_Date) FROM wedding AS T1 JOIN church AS T2 ON T1.Church_ID = T2.Church_ID JOIN people AS T3 ON T1.Male_ID = T3.People_ID WHERE T3.Age < 30 ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "adea9c66fdecefe48958d44950f71e572191820a",
                "query": "SELECT Name FROM people WHERE Age <= 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "ee2c3d4b7c729ab1dea2f738f77240eaa42b76cf",
                "query": "SELECT T1.Country, COUNT(T2.Church_ID) FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID WHERE T1.Age < 30 GROUP BY T1.Country",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "4046977060bf2ae7bad4cb2063f09653aadefea3",
                "query": "SELECT Age, Is_Male FROM people WHERE Age > 20 OR Is_Male = 'Yes' OR Country NOT IN ( SELECT Country FROM people WHERE Age < 25 ) ORDER BY Age DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "ae14924dc64ee5fc9052c1553617d5f96aa1c027",
                "query": "SELECT SUM(T1.Age) FROM people AS T1 WHERE T1.Age > 18 LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3f8d4bf0b5a4d0276307d51e8310d8fbf120050e",
                "query": "SELECT Name FROM people WHERE Country IN (SELECT Name FROM church WHERE Open_Date < 1000) AND Is_Male = 'M' ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ea408a915eeacf43c2a752d239f1a0b7a604a236",
                "query": "SELECT T1.Name, T2.Name, T3.Name FROM people AS T1 JOIN wedding AS T2 ON T1.People_ID = T2.Male_ID JOIN church AS T3 ON T2.Church_ID = T3.Church_ID WHERE T1.Age > 25",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "fc00391c74cf6d3aca683e4740dcc29cca177df8",
                "query": "SELECT COUNT(DISTINCT T3.Name), COUNT(T1.Church_ID) FROM church AS T1 JOIN wedding AS T2 ON T1.Church_ID = T2.Church_ID JOIN people AS T3 ON T2.Female_ID = T3.People_ID WHERE T3.Age = 25",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            }
        ],
        "loan_1": [
            {
                "hash": "28250259973d84d4cbc8111f3fad19fbbbc4dc83",
                "query": "SELECT bname, SUM(no_of_customers) FROM bank WHERE no_of_customers < 100 GROUP BY bname ORDER BY no_of_customers ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "af2b8fc2b9d68f4799da8390b91aa8ff22abeda1",
                "query": "SELECT COUNT(acc_type), cust_name FROM customer WHERE credit_score > 700 AND acc_bal BETWEEN 1000 AND 5000 AND state = 'CA' GROUP BY cust_name HAVING COUNT(acc_type) > 1 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "21ead6a2d23e362c269bcbeaf1d80c211e723ca7",
                "query": "SELECT COUNT(branch_ID), AVG(no_of_customers) FROM bank LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "f01476b03baf3fffa37215137c15d5bbacbee234",
                "query": "SELECT COUNT(DISTINCT T1.cust_ID), T1.cust_name FROM customer AS T1 WHERE T1.acc_type = 'Checking' AND T1.acc_bal BETWEEN 1000 AND 5000 AND T1.no_of_loans > 2 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1059f2bad121238b7034ab9e8a21fd8d2324f829",
                "query": "SELECT T1.bname, SUM(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_ID = T2.branch_ID GROUP BY T1.bname HAVING SUM(T2.amount) > 100000 ORDER BY SUM(T2.amount) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "0788d8e5dd3f0a8bd45116cad52954f47cb971d3",
                "query": "SELECT cust_name, acc_type FROM customer WHERE acc_type = 'checking' AND state = 'New York' ORDER BY cust_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "302ede7f4a117285323a05b88d84addbfed706ae",
                "query": "SELECT COUNT(DISTINCT branch_ID), MAX(no_of_customers) FROM bank",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "17debf43c8ad43eb7e5e80ed81852b2fcc175818",
                "query": "SELECT COUNT(DISTINCT T2.cust_name), COUNT(DISTINCT T2.cust_ID), T2.state FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID WHERE T2.acc_type = 'Savings' OR T2.no_of_loans BETWEEN 1 AND 5 OR EXISTS (SELECT 1 FROM loan AS T3 WHERE T3.cust_ID = T2.cust_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "a0542619b95763606aacbe57d310001fb2089be1",
                "query": "SELECT T1.bname, SUM(T2.acc_bal), COUNT(T3.loan_ID) FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID JOIN loan AS T3 ON T2.cust_ID = T3.cust_ID WHERE T2.acc_bal BETWEEN 1000 AND 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "dd592e1530c2d8fe7c1d68e75395c183012ad920",
                "query": "SELECT T1.branch_ID, T2.cust_ID FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID JOIN loan AS T3 ON T2.cust_ID = T3.cust_ID WHERE T1.no_of_customers = 1000 AND T2.acc_type = 'current' ORDER BY T1.branch_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1257e09f15e8118394b54850439e63b15e0b39ef",
                "query": "SELECT T1.branch_ID, COUNT(DISTINCT T2.cust_ID) FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID WHERE T2.no_of_loans >= 2",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "d2144dc29277504cfe52c8b0da3cad0de292cca3",
                "query": "SELECT T1.branch_ID, T2.cust_name, T3.amount FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID JOIN loan AS T3 ON T2.cust_ID = T3.cust_ID WHERE T3.amount BETWEEN 1000 AND 5000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b5fdd63c7aa3ffb273be3dbb152b09b3dd8f8859",
                "query": "SELECT T1.cust_name, SUM(T2.amount) FROM customer AS T1 JOIN loan AS T2 ON T1.cust_ID = T2.cust_ID WHERE T1.no_of_loans > 2 OR T1.credit_score < 500 OR T1.branch_ID NOT IN (SELECT branch_ID FROM bank) ORDER BY T1.cust_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9d2701ab143a4e57f205a6039344dde750434d6a",
                "query": "SELECT T1.branch_ID FROM bank AS T1 WHERE T1.no_of_customers BETWEEN 100 AND 500 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7e66ec8659cc81cfd6a00f1c26cb7a3bae0c09fd",
                "query": "SELECT T1.branch_ID, COUNT(T1.cust_ID) FROM customer AS T1 JOIN bank AS T2 ON T1.branch_ID = T2.branch_ID WHERE T1.credit_score > 500 ORDER BY T1.branch_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c9a9131636bb7c1337fcd2564951de527416aaf1",
                "query": "SELECT bname FROM bank WHERE state = 'NY' AND branch_ID NOT IN (SELECT branch_ID FROM customer WHERE acc_type = 'Savings')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "4ad10b24074270483abd774aa68bb49bf90be239",
                "query": "SELECT * FROM customer WHERE no_of_loans >= 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "287843ab1d6bfa49fe67c44b6115f73dc27daeec",
                "query": "SELECT COUNT(DISTINCT T1.branch_ID), SUM(T1.no_of_customers) FROM bank AS T1 WHERE T1.no_of_customers BETWEEN 100 AND 200",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "3d07e65888197ed2fec94afdad3cdcaa4f037be7",
                "query": "SELECT COUNT(DISTINCT acc_type), COUNT(DISTINCT cust_name) FROM customer WHERE acc_bal <= 10000 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "08f7e13e191da3208c88ab492a3a4e13ba10274b",
                "query": "SELECT T1.bname, COUNT(T2.cust_ID), COUNT(T3.loan_ID) FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID JOIN loan AS T3 ON T2.cust_ID = T3.cust_ID WHERE T1.city = 'New York' OR T2.acc_bal BETWEEN 1000 AND 5000 OR T3.amount > 100000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "ec907fb931c0d108adb10543311cb45f131cfd1f",
                "query": "SELECT COUNT(branch_ID) AS num_branches, SUM(no_of_customers) AS total_customers FROM bank WHERE city = 'New York' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f196476d2cc259aac095692e5e4db1163f72edbb",
                "query": "SELECT T1.bname, T2.acc_bal FROM bank AS T1 JOIN customer AS T2 ON T1.branch_ID = T2.branch_ID WHERE T2.acc_type != 'Saving' ORDER BY T2.acc_bal DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7ac63c4fa2bbd917bce081213cf7566ec3d56f51",
                "query": "SELECT b.bname, b.state, c.cust_name, c.acc_type FROM bank AS b JOIN customer AS c ON b.branch_ID = c.branch_ID ORDER BY c.acc_bal DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8f0d12ec863eda2be8f1e1644eeb388cbb05ed4f",
                "query": "SELECT T1.cust_name, MIN(T1.acc_bal) FROM customer AS T1 JOIN customer AS T2 ON T1.cust_ID = T2.cust_ID WHERE T1.acc_bal > 1000 GROUP BY T1.cust_name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            }
        ],
        "bakery_1": [
            {
                "hash": "7e5fb70d26f6c6a786087828698709decbd26aea",
                "query": "SELECT ReceiptNumber FROM receipts WHERE CustomerId IN (SELECT Id FROM customers WHERE Id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "93f500bc53acb9c26b9757cbd3fed2f7695f6a3e",
                "query": "SELECT Id FROM customers WHERE EXISTS (SELECT 1 FROM receipts WHERE customers.Id = receipts.CustomerId)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "e2ac3a1d44c5ba5f646c66e9e78a111a15534e11",
                "query": "SELECT Price FROM goods WHERE Price < 10 ORDER BY Price ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cb8f58876d7e47ca2b7074da4a930c482533851a",
                "query": "SELECT T1.FirstName, T2.Food FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId JOIN items AS T3 ON T2.ReceiptNumber = T3.Receipt WHERE T1.LastName BETWEEN 'A' AND 'M'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "d2f10dc8aada6adec9b85e0ec8e7928fb97d51db",
                "query": "SELECT T.LastName, T.FirstName FROM customers AS T WHERE T.Id = 1 OR T.Id BETWEEN 10 AND 20 OR T.FirstName = 'John'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "744ab7503cf9ae4d48e480d70e9a8e8ff1e82263",
                "query": "SELECT DISTINCT T1.FirstName FROM customers AS T1 WHERE T1.Id = 1 AND T1.FirstName IN (SELECT T2.FirstName FROM customers AS T2 WHERE T2.LastName = 'Smith') LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "d746a286c305bc21cd4356906a516767521f2bf5",
                "query": "SELECT T2.Food FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item WHERE NOT EXISTS (SELECT 1 FROM receipts AS T3 JOIN customers AS T4 ON T3.CustomerId = T4.Id WHERE T4.FirstName = 'John')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "b029fe2a3b8fd78817b9f31593a82a8a361c5b77",
                "query": "SELECT Price FROM goods WHERE Price > 10 ORDER BY Price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "626eb5cdd5135bf72ee5021eea7c6b99089d668d",
                "query": "SELECT T1.FirstName FROM customers AS T1 WHERE T1.Id = 3 AND EXISTS ( SELECT T2.ReceiptNumber FROM receipts AS T2 WHERE T2.CustomerId = T1.Id AND T2.Date = '2020-01-01' ) GROUP BY T1.FirstName HAVING MAX(T1.Id) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS ( SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "a868a1f6ff3df949394ec4c2a316f3bf6c0250b4",
                "query": "SELECT T1.FirstName FROM customers AS T1 WHERE T1.FirstName = 'John' AND T1.LastName = 'Doe' AND NOT EXISTS (SELECT 1 FROM receipts AS T2 WHERE T2.Date > '2020-01-01' AND T2.CustomerId = T1.Id) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > '#VALUE#' AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "f11ba154dc19edc51d93de8ad826eca030668e6e",
                "query": "SELECT T1.FirstName, T2.Food FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId WHERE T2.Date < '2000-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "f58fe32ef986760049fee34e97d0b8c5bfa8a0bb",
                "query": "SELECT T2.Food FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "1c3acc02f252e3fe5aee668628608f4bcb44b762",
                "query": "SELECT COUNT(DISTINCT T1.Flavor), COUNT(DISTINCT T1.Food), T2.FirstName FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item JOIN receipts AS T3 ON T2.Receipt = T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId = T4.Id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "7adc2cd70ef6ed284eb8f9d64dd82a84ce044748",
                "query": "SELECT LastName, FirstName FROM customers WHERE LastName != 'Smith' ORDER BY LastName DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d892e0eac154e5fb58098e82665ec33a55c41492",
                "query": "SELECT T1.LastName FROM customers AS T1 WHERE T1.Id IN (SELECT T2.CustomerId FROM receipts AS T2 ORDER BY T2.CustomerId DESC LIMIT 5)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)"
            },
            {
                "hash": "97f7249a9b1a74f00dd2c355522b7b3b2ca15500",
                "query": "SELECT T1.FirstName, MAX(T2.Price) FROM customers AS T1 JOIN items AS T3 ON T1.Id = T3.Item JOIN goods AS T2 ON T3.Item = T2.Id GROUP BY T1.FirstName HAVING MAX(T2.Price) >= 10 ORDER BY MAX(T2.Price) ASC LIMIT 5",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) >= #VALUE# ORDER BY MAX(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(Price) FROM goods AS T1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "c4a8b72f2e6e8cb816e65b48352becbb18bd261d",
                "query": "SELECT AVG(T2.Price), T1.FirstName FROM customers AS T1 JOIN receipts AS T3 ON T1.Id = T3.CustomerId JOIN items AS T4 ON T3.ReceiptNumber = T4.Receipt JOIN goods AS T2 ON T2.Id = T4.Item GROUP BY T1.FirstName HAVING T2.Price BETWEEN 10 AND 20 OR T2.Flavor IN (SELECT T2.Flavor FROM goods AS T2 WHERE T2.Food = 'Pizza') OR T2.Price > 30",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "12abfa4db1fdea621627b099d30c7aa917e40d29",
                "query": "SELECT COUNT(T1.Receipt), T2.Id FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId = T2.Id WHERE T2.Id = 1 OR T2.Id IN (SELECT T3.CustomerId FROM receipts AS T3 WHERE T3.Date = '2020-01-01') ORDER BY COUNT(T1.Receipt) DESC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "ded3302e842ad52439e6286f2f27ac19be5d9aaa",
                "query": "SELECT T1.Id, T2.Price FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId WHERE T2.Date = '2020-01-01' AND (T2.ReceiptNumber IN (SELECT Receipt FROM items AS T3 JOIN goods AS T4 ON T3.Item = T4.Id WHERE T4.Flavor = 'Strawberry'))",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND (#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "64d3054c3936a4b96805de72b3a5c383c4d14ec6",
                "query": "SELECT T1.Food, AVG(T2.Price) FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item GROUP BY T1.Food HAVING AVG(T2.Price) >= 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "453fc5112ca036fa2951b148ca5ddd6620daebbf",
                "query": "SELECT T1.LastName, T1.FirstName FROM customers AS T1 WHERE T1.Id >= 10 ORDER BY T1.LastName LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "d6b3e025a700b3bc3c1f1eb45ee39039dc96d08b",
                "query": "SELECT T3.FirstName, SUM(T1.Price) FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item JOIN receipts AS T3 ON T2.Receipt = T3.ReceiptNumber WHERE T3.Date = '2020-01-01' ORDER BY T3.FirstName DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2f33b531362c47058967fa378524ab0bdd85e8ae",
                "query": "SELECT T1.FirstName, T1.LastName FROM customers AS T1 WHERE T1.Id = 1 AND EXISTS (SELECT 1 FROM receipts AS T2 WHERE T2.CustomerId = T1.Id) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "0932398bb59740e3916b9093c3a58ec8dbf636c1",
                "query": "SELECT T1.LastName, T2.Food FROM customers AS T1 JOIN receipts AS T2 ON T1.Id = T2.CustomerId JOIN items AS T3 ON T2.ReceiptNumber = T3.Receipt WHERE T3.Item NOT IN (SELECT Item FROM items WHERE Receipt = 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "academic": [
            {
                "hash": "f094a88b16c7c1a250584630b2d854d945ae35c1",
                "query": "SELECT T1.name, T2.name FROM author AS T1 JOIN author AS T2 ON T1.aid = T2.oid WHERE T1.oid <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "3daf64bdf5756f68216999582abf48bcf08075fe",
                "query": "SELECT COUNT(T1.kid) , T2.oid FROM publication_keyword AS T1 JOIN writes AS T2 ON T1.pid = T2.pid WHERE T2.oid > 20 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "355ede939d4a3b8685dfd505ab05d7f10f3ea9af",
                "query": "SELECT MIN(count(DISTINCT pid)) FROM writes WHERE aid > 10",
                "template": "SELECT MIN(count(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "feafd2f49ac0ddf977ce06f7581082adea862810",
                "query": "SELECT COUNT(DISTINCT pid) FROM writes WHERE aid <= 10 GROUP BY aid HAVING MAX(aid) = 10 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c0f714e93be52f1e2bb195319fb83b7cb4b76395",
                "query": "SELECT T1.oid, AVG(T2.citing) FROM author AS T1 JOIN cite AS T2 ON T1.aid = T2.citing WHERE T1.aid IN (SELECT aid FROM writes) GROUP BY T1.oid HAVING AVG(T2.citing) > 10 LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f62b93ddaa163f50562baf5b1e96578d648a6f33",
                "query": "SELECT COUNT(pid), title FROM publication WHERE (cid BETWEEN 10 AND 20 OR citation_num = 100) AND (jid > 50 OR year BETWEEN 1990 AND 2000) GROUP BY title",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "e25f24ea3a9ff3b1a11490a6f8939d1269c7a64e",
                "query": "SELECT * FROM publication WHERE YEAR BETWEEN 2010 AND 2020 AND citation_num > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "3aa45ffd604a444613eaf2bd59a96d5e6e5a3a88",
                "query": "SELECT T1.oid, COUNT(DISTINCT T2.oid) FROM author AS T1 JOIN author AS T2 ON T1.oid = T2.oid WHERE T1.name = 'John' AND T2.name = 'Jane' AND T1.oid IN (SELECT T3.oid FROM author AS T3 WHERE T3.name = 'John') ORDER BY T1.oid DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3d566393bbba4519af1fb02e2de1912a9d482339",
                "query": "SELECT COUNT(T1.aid) FROM author AS T1 JOIN writes AS T2 ON T1.aid = T2.aid WHERE T1.name != 'John'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "ad309cd15d3fff990649f62b113acdcd16e92f7a",
                "query": "SELECT COUNT(T1.cid) FROM conference AS T1 JOIN publication AS T2 ON T1.cid = T2.cid WHERE T1.cid = 10 OR T2.year BETWEEN 2000 AND 2010 OR T2.citation_num > 100 ORDER BY T1.cid DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "747ca6816387af1af58b07331fb012d63c57efac",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.kid) FROM domain AS T1 JOIN domain_keyword AS T2 ON T1.did = T2.did WHERE T2.kid BETWEEN 10 AND 20 OR T1.name = 'Computer Science' OR T2.kid IN (SELECT kid FROM keyword WHERE keyword = 'AI') GROUP BY T1.name HAVING AVG(T2.did) > 5 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dc653d7f9fbfde179296cb049e5319350fb0a3ef",
                "query": "SELECT T1.oid, T2.name FROM organization AS T1 JOIN organization AS T2 ON T1.oid = T2.oid WHERE T1.continent BETWEEN 'Asia' AND 'Europe' ORDER BY T2.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "68beeae470cd3ae93928d44247594206ab3c70da",
                "query": "SELECT COUNT(DISTINCT T1.oid) FROM author AS T1 WHERE T1.name = 'Author1' AND T1.homepage IS NOT NULL AND (SELECT COUNT(*) FROM writes AS T2 WHERE T2.aid = T1.aid) BETWEEN 1 AND 10 ORDER BY T1.oid ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# IS NOT NULL AND (SELECT COUNT(*) FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "aefe0983912200c9ce046403d295a72cd6f2875f",
                "query": "SELECT T1.name, COUNT(T2.kid) FROM keyword AS T1 JOIN publication_keyword AS T2 ON T1.kid = T2.kid WHERE T1.kid != T2.kid ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5f744e22fa376121533d072953b2621bb9a13c4f",
                "query": "SELECT * FROM publication WHERE pid = ( SELECT T2.pid FROM writes AS T1 JOIN publication AS T2 ON T1.pid = T2.pid WHERE T1.aid = 123 )",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "35419bf19931d1dba167a1a9a7f8c67d88888101",
                "query": "SELECT COUNT(citation_num), COUNT(reference_num) FROM publication WHERE citation_num <= 100 AND reference_num <= 100 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5457a88119cfc3bfcef3864494b62aea496a1162",
                "query": "SELECT T1.aid, T1.name FROM author AS T1 WHERE T1.oid NOT IN (SELECT T2.oid FROM organization AS T2 WHERE T2.continent = 'Asia') ORDER BY T1.aid ASC LIMIT 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "598fc657d9992b455d1b6311c8342bdbb52e25cd",
                "query": "SELECT DISTINCT T1.name, T2.name FROM organization AS T1 JOIN organization AS T2 ON T1.continent = T2.continent WHERE T1.homepage BETWEEN 'https://www.google.com' AND 'https://www.bing.com' OR T2.name LIKE 'University%' OR T1.oid > 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# LIKE '#VALUE#' OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "59badb5b9088f7f732a50e435c5f2d6ac465e009",
                "query": "SELECT T1.oid, T1.homepage FROM organization AS T1 WHERE T1.name IN (SELECT T2.name FROM organization AS T2 WHERE T2.continent = 'Asia')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c88a8f8fc709f7b9b7788782d4d2fef3f5b54678",
                "query": "SELECT T1.name, COUNT(T2.aid) FROM author AS T1 JOIN writes AS T2 ON T1.aid = T2.aid WHERE T1.oid < 10 GROUP BY T1.name ORDER BY COUNT(T2.aid) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "a7db37bab5cbb5c8ee7d7529cf981544407e6d54",
                "query": "SELECT COUNT(DISTINCT T1.oid), COUNT(DISTINCT T2.oid), COUNT(DISTINCT T3.oid) FROM organization AS T1 JOIN author AS T2 ON T1.oid = T2.oid JOIN writes AS T3 ON T2.aid = T3.aid",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "dc2e6487ab9a33b3c3419b735c27fcb2194f81d6",
                "query": "SELECT T2.title, AVG(T1.reference_num) FROM publication AS T1 JOIN publication AS T2 ON T1.pid = T2.pid WHERE T1.year = 2020 GROUP BY T2.title",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "c01f4928f5d8f05cbbd061469b0dd3a0e90af52f",
                "query": "SELECT COUNT(title), MAX(abstract), MIN(citation_num) FROM publication WHERE year <= 2000",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "84ece7e21c10345c68d45013effb88f907c562ef",
                "query": "SELECT name FROM author WHERE aid <= 10 ORDER BY aid ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cb50f5abc3d711b57a25942cd712bf2bf412c654",
                "query": "SELECT COUNT(DISTINCT T1.pid), T2.kid, T3.oid FROM publication AS T1 JOIN publication_keyword AS T2 ON T1.pid = T2.pid JOIN writes AS T3 ON T1.pid = T3.pid WHERE T1.cid > 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "pets_1": [
            {
                "hash": "60713f8b100fcfe59f411c3b515851add33c36d2",
                "query": "SELECT T1.LName, SUM(T3.weight) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex != 'M' GROUP BY T1.LName",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "3c052d748c3ca701d46a94441c1d84c79e2efcdb",
                "query": "SELECT Fname, LName FROM Student WHERE Age < 20 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "85da5d7c45cae74f0ff704920c88ddb136db2590",
                "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Age BETWEEN 18 AND 25 ORDER BY T1.LName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cb3b9dfe6b7a6640a4ead0843fbe0072de2c62a9",
                "query": "SELECT LName, SUM(Age) FROM Student WHERE Sex = 'M' GROUP BY LName ORDER BY SUM(Age) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "d3dc69f5570ef9507a91d3ba603ff31d9702b686",
                "query": "SELECT T2.PetType FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Age > 20 GROUP BY T2.PetType HAVING COUNT(T2.PetID) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "7597ea240ac2a1393b189bcb3cf71ad6e7fe5268",
                "query": "SELECT COUNT(DISTINCT T1.PetID) FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID = T2.PetID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.pet_age BETWEEN 2 AND 5 AND T3.Age > 20 ORDER BY T1.PetID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "011a78182ae06a60ebe51264720e79304b7e809a",
                "query": "SELECT T1.StuID, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.weight > (SELECT AVG(weight) FROM Pets)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "a6967d10582837ddef22dc0e148658db89b5ec4d",
                "query": "SELECT T1.Major, COUNT(DISTINCT T2.PetType), COUNT(T1.Age) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.StuID NOT IN ( SELECT StuID FROM Pets ) LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "12f710f0f23e9988c1456a5a8593a711eb20d64a",
                "query": "SELECT T1.LName, MIN(T2.pet_age) FROM Student AS T1 INNER JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID INNER JOIN Pets AS T3 ON T3.PetID = T2.PetID GROUP BY T1.LName ORDER BY T1.LName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f41c99ee4c58fa90d5c516e5182715a4254f3d04",
                "query": "SELECT Fname FROM Student WHERE Age > 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "d018e1f7b2f545ed4ccd8eeaaff5b1de777b3c84",
                "query": "SELECT S1.StuID FROM Student S1 JOIN Has_Pet S2 ON S1.StuID = S2.StuID JOIN Pets S3 ON S2.PetID = S3.PetID WHERE S1.Age > 20 OR S3.PetType = 'dog' OR S3.pet_age < (SELECT AVG(pet_age) FROM Pets)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "97bcf498b2cd6d45a6903ec38f3f4c5af8bf28c6",
                "query": "SELECT Fname FROM Student WHERE Age >= 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "a2e5f5e1e55f284370bb7526991c3c6e3fdb2a00",
                "query": "SELECT COUNT(DISTINCT T1.StuID), SUM(T1.Age) FROM Student AS T1 WHERE T1.Age <= 20 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f2dbcd30921981ef64126b3188decd9d194c5cf5",
                "query": "SELECT COUNT(PetID) FROM Pets WHERE weight BETWEEN 20 AND 50 AND pet_age > 10 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "691ed5619844460922bf19dd214a3188763ee0ba",
                "query": "SELECT Fname, COUNT(DISTINCT Major) FROM Student WHERE Age > 18 ORDER BY Fname DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8193a73856b05de34451a23f723c94adf575ff1f",
                "query": "SELECT T1.LName, T2.PetType FROM Student AS T1 JOIN Pets AS T2 ON T1.StuID = T2.PetID WHERE T1.Age BETWEEN 18 AND 25 OR NOT EXISTS (SELECT 1 FROM Student AS T3 WHERE T3.StuID = T1.StuID AND T3.Sex = 'M')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "bbec5d858bcbad07b2686add31cc26bd85aa13ab",
                "query": "SELECT COUNT(DISTINCT P.PetID) FROM Student S JOIN Has_Pet H ON S.StuID = H.StuID JOIN Pets P ON H.PetID = P.PetID WHERE S.Age < 20 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7da266b13fd1c54214f19a00d56573c9292ac131",
                "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Sex != 'Male'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "192024c49feed1e58328621455315992af4dbe86",
                "query": "SELECT T1.Fname, T3.PetType FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Major NOT IN (SELECT Major FROM Student WHERE Sex = 'F') ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c36a25b47a6ee29753bc8fce9975cd94aae8ebf1",
                "query": "SELECT T1.LName, T1.Fname, T2.PetType FROM Student AS T1 LEFT JOIN Pets AS T2 ON T1.StuID = T2.PetID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "71a6d58baab0b175c01c2fa83d39ea79c628f95f",
                "query": "SELECT S.Student, AVG(P.pet_age) FROM (SELECT T1.StuID AS Student, T2.pet_age FROM Student AS T1 JOIN Has_Pet AS T3 ON T1.StuID = T3.StuID JOIN Pets AS T2 ON T2.PetID = T3.PetID WHERE T1.Age < 20) S GROUP BY S.Student ORDER BY AVG(P.pet_age) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM (SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) #TABLE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "ab59b5ce0c47aa587aefe2dcefab52386a5bad22",
                "query": "SELECT LName, COUNT(StuID) FROM Student WHERE Age BETWEEN 20 AND 25 AND Sex = 'M' ORDER BY LName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d6938658958849da30000fe5c98a4fe8e79c5f40",
                "query": "SELECT T1.LName, T2.PetType FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Fname = 'John' OR T3.PetType = 'Dog' OR T3.PetType IN (SELECT PetType FROM Pets WHERE pet_age > 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "524f74f2363777301ba3e5119be5311058d0bd74",
                "query": "SELECT T1.LName, T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d14650685af66f11865861f80304ae0007addbf3",
                "query": "SELECT COUNT(DISTINCT StuID) FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) LIMIT #VALUE#"
            },
            {
                "hash": "3728755f54d1da637ec749453a48d059bbef2114",
                "query": "SELECT S.LName, S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.pet_age > 5 ORDER BY S.LName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "local_govt_and_lot": [
            {
                "hash": "27d63de898721e22a9fd28ecfdc8884d1795bd55",
                "query": "SELECT COUNT(property_type_code) AS count FROM Properties AS P ORDER BY count DESC",
                "template": "SELECT COUNT(#COLUMN#) AS count FROM #TABLE# AS #TABLE# ORDER BY count DESC"
            },
            {
                "hash": "81d33e64465878eca63c625d2f378764ad2be7d1",
                "query": "SELECT T1.customer_id, T2.customer_id FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id BETWEEN 100 AND 200 OR EXISTS (SELECT T3.customer_id FROM Customers AS T3 WHERE T3.customer_id > 100) OR T2.customer_id = 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "91f78c36314b3e00c35452d205703fb65cb3f0d8",
                "query": "SELECT T1.property_id, T2.customer_id FROM Properties AS T1 JOIN Customers AS T2 ON T1.property_id = T2.customer_id WHERE T1.property_id NOT IN (SELECT T3.property_id FROM Residents AS T3 WHERE T3.date_moved_in IS NULL) ORDER BY T1.property_id DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "46cc35955e0c09c73b27ea501e8184a6043c5275",
                "query": "SELECT COUNT(*) FROM Residents",
                "template": "SELECT COUNT(*) FROM #TABLE#"
            },
            {
                "hash": "e1c2d3f551c6b63c8eb1b0901bf2c58c6d8a3149",
                "query": "SELECT T1.customer_id, MAX(T2.property_type_code) FROM Customers AS T1 JOIN Residents AS T2 ON T1.customer_id = T2.resident_id JOIN Properties AS T3 ON T2.property_id = T3.property_id WHERE T3.property_address = '123 Main St' OR NOT EXISTS (SELECT 1 FROM Residents_Services AS T4 WHERE T4.resident_id = T2.resident_id AND T4.date_requested > '2020-01-01')",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "404b90be82e51e71d66f4115b4d0ade56f2613bb",
                "query": "SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "020449fbb07a9a23413f930d2c907cc4ea5c8e53",
                "query": "SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_moved_in BETWEEN (SELECT MIN(Date_and_Date) FROM Timed_Status_of_Things) AND (SELECT MAX(Date_and_Date) FROM Timed_Status_of_Things) AND T2.resident_id = (SELECT MIN(resident_id) FROM Residents) AND T2.property_id = (SELECT MIN(property_id) FROM Properties) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "7d5e561c0b2b31550d77b0f8218d5558a4f6d4c5",
                "query": "SELECT AVG(T1.property_id), T2.resident_id FROM Properties AS T1 JOIN Residents AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code = 'type_code' AND T2.date_moved_in BETWEEN '2020-01-01' AND '2020-12-31' AND T1.property_id > 100",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "41e883f4929bd82f97a119bd9aae1e5ea3604d32",
                "query": "SELECT COUNT(DISTINCT T1.property_id), COUNT(T2.property_id) FROM Properties AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code = 'type1' AND T2.property_type_code = 'type2' AND T2.property_address BETWEEN 'address1' AND 'address2' ORDER BY T1.property_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b4d1eaf88dfaf2624c5b3e7f03b1a0666e82d777",
                "query": "SELECT COUNT(T1.property_id), T2.property_address FROM Properties AS T1 JOIN Residents AS T2 ON T1.property_id = T2.property_id GROUP BY T2.property_address ORDER BY T2.property_address ASC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f114158fb720d5c6f800afa5578a50100dfd0e8c",
                "query": "SELECT COUNT(T1.customer_id) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_details != ''",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT AVG(T2.property_id) FROM Residents AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T1.date_moved_in < '2022-01-01'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE#"
            },
            {
                "hash": "8cfbc1979e7f1a040d8a943006bf3e8457f70b5a",
                "query": "SELECT property_address FROM Properties AS T1 WHERE property_type_code BETWEEN 'type_1' AND 'type_2' GROUP BY property_address HAVING AVG(property_id) > 100 ORDER BY property_address DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fd983f4dcf46d1d9752c5961b63535ab312fff02",
                "query": "SELECT T1.Customer_Event_ID, COUNT(DISTINCT T2.service_id) FROM Customer_Events AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id WHERE T1.customer_id >= 100 GROUP BY T1.Customer_Event_ID HAVING MAX(T2.date_provided) IS NOT NULL ORDER BY T1.Customer_Event_ID DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) IS NOT NULL ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6c27375a0ac6d571a525abe71bda2d9d280b4780",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), T2.property_type_code FROM Customers AS T1 JOIN Residents AS T2 ON T1.customer_id = T2.resident_id WHERE T2.date_moved_in BETWEEN '2020-01-01' AND '2020-12-31' OR EXISTS (SELECT 1 FROM Customer_Events AS T3 WHERE T3.customer_id = T1.customer_id AND T3.date_moved_in > '2020-01-01')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "2613e955cbb72d0353398ae1b44cdc62498f2cd3",
                "query": "SELECT T1.customer_id, T2.property_address FROM Customers AS T1 JOIN Properties AS T2 ON T1.customer_id = T2.property_id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "da0eee1ee158670bb7cf608c431dad858070e61e",
                "query": "SELECT COUNT(DISTINCT T2.customer_id) FROM Residents AS T1 JOIN Customers AS T2 ON T1.resident_id = T2.customer_id WHERE T1.property_id != 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "5c63d28bc06ef658cabfacda8e3288b87ef8cdcf",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id < 100 ORDER BY T1.customer_id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "76b3c072547218b9e568b219fae874faedf55302",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Customer_Event_Notes AS T2 ON T1.customer_id = T2.resident_id WHERE T2.date_moved_in > '2020-01-01' OR T2.service_type_code = 'type1' OR EXISTS (SELECT 1 FROM Customer_Events AS T3 WHERE T3.customer_id = T1.customer_id AND T3.date_moved_in > '2020-01-01') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "7cdcb9faa5c06e83861746f13d40f5e53ab33690",
                "query": "SELECT T1.customer_id, MAX(T2.property_id) FROM Customers AS T1 JOIN Properties AS T2 ON T1.customer_id = T2.property_id WHERE T1.customer_id = 100",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "28dd7733730e3c5d48282d0d3675c606e0902ab7",
                "query": "SELECT T1.customer_id FROM Customers AS T1 WHERE T1.customer_id > 1000 AND EXISTS (SELECT 1 FROM Residents AS T2 WHERE T2.property_id = T1.customer_id) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "cf95121661901bcdc340062b7369747b14d7e271",
                "query": "SELECT T1.customer_id FROM Customers AS T1 WHERE T1.customer_id = 10 OR NOT EXISTS (SELECT 1 FROM Customer_Events AS T2 WHERE T2.customer_id = T1.customer_id AND T2.customer_id BETWEEN 1 AND 100) ORDER BY T1.customer_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e02260c0ab9e53e49b951d088c392fe033052f08",
                "query": "SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_moved_in <= '2020-01-01' ORDER BY T1.customer_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1f324c494a13b7ae9ca2f1f309935ff91475eeb0",
                "query": "SELECT T1.customer_details FROM Customers AS T1 WHERE T1.customer_id IN (SELECT T2.resident_id FROM Residents AS T2 WHERE T2.property_id = 1234) ORDER BY T1.customer_details ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "flight_4": [
            {
                "hash": "1c60de3ea41ed38c93715e2fd9c44e667a2bfc77",
                "query": "SELECT T1.name, COUNT(T2.iata), MAX(T2.x) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name != 'John F. Kennedy International Airport' GROUP BY T1.name ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c31bb2ee4b5133d4e84cc7553a3649a911ec6093",
                "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country != 'USA'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "c1deb241144847e5aa8eb13b0d6d4792623209ef",
                "query": "SELECT T1.name, MAX(T2.elevation) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T2.dst_apid > 100",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "ca6d9ed93a2105942f274baaa0c882765e989aa4",
                "query": "SELECT T2.name, T3.name FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'USA' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "27f7b42ec64d77975666ffb6d2fa9f09fd016aca",
                "query": "SELECT * FROM airports WHERE elevation >= 1000 AND x >= 1000 AND y >= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ac811ead80736a8c414b5006285f7a22ae718053",
                "query": "SELECT T1.name, COUNT(T2.dst_ap) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country <= 'USA' GROUP BY T1.name HAVING COUNT(T2.dst_ap) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "3e886b2f69bf7043749e7e7d2833e93c6e7757b3",
                "query": "SELECT T1.name, AVG(T1.elevation) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'USA' OR T1.country = 'Canada' AND T2.alid BETWEEN 1 AND 10 AND T2.alid IN (SELECT alid FROM airlines WHERE country = 'USA') GROUP BY T1.name LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "2561273905593f4b54540690ec373d51fa46d9a9",
                "query": "SELECT T1.name FROM airports AS T1 WHERE NOT EXISTS ( SELECT 1 FROM routes AS T2 WHERE T2.dst_apid = T1.apid AND T2.dst_ap = T1.name ) GROUP BY T1.name",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "04d7d199755396d8b618ef97556c2044df41f899",
                "query": "SELECT COUNT(DISTINCT T1.airline) FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid WHERE T1.dst_apid = 10 AND T1.src_apid BETWEEN 1 AND 100 AND T1.airline > 'Airline 1'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "57fa51ba843b8b199aaf402266a9edd1ae74fb08",
                "query": "SELECT Name FROM airports AS T1 WHERE ICAO != 'KLAX'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "bd55088a50745f0773f5613ddfe7c21b365686ec",
                "query": "SELECT T1.name FROM airports AS T1 WHERE T1.apid = (SELECT T2.dst_apid FROM routes AS T2 WHERE T2.dst_ap = 'Paris') AND T1.name = (SELECT T3.name FROM airports AS T3 WHERE T3.icao = 'LFPG')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = '#VALUE#') AND T1.#COLUMN# = (SELECT T3.#COLUMN# FROM #TABLE# AS T3 WHERE T3.#COLUMN# = '#VALUE#')"
            },
            {
                "hash": "3ce0490ac5afb7bbcdb1fd036594868fe8fca5d2",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T2.name) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "1bf66d1c748418a18a88cc245e0c37bd5851790f",
                "query": "SELECT COUNT(DISTINCT T1.name), T2.x FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T2.x > 0 ORDER BY T2.x ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b5c8445ef4d49cbf25fe0a6be3172f79e4596e13",
                "query": "SELECT T1.name, COUNT(T2.rid) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.x <= 0",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "bc7c1fc66d64e78690aeb70eb4035101efa45177",
                "query": "SELECT COUNT(T2.alid) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T2.airline != ' codeshare' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != ' #VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "196dec17fcbdfc213c20db00d60393f8724b696a",
                "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.iata IN (SELECT T3.iata FROM airlines AS T3 JOIN routes AS T4 ON T3.alid = T4.alid WHERE T4.dst_apid = 101)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e91bf0ccfae835657724f6d6b850bc50f33fe2c9",
                "query": "SELECT MAX(apid) FROM airports WHERE elevation > 1000",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "ae5ac914bd93a8bba32663095596084d37710d09",
                "query": "SELECT COUNT(DISTINCT T1.iata), T1.name FROM airlines AS T1 WHERE T1.alid NOT IN (SELECT T2.alid FROM routes AS T2 WHERE T2.codeshare = 'Y') GROUP BY T1.name ORDER BY COUNT(DISTINCT T1.iata) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "411850c472e123742b2fb1a93bf1c8f54e07ebe5",
                "query": "SELECT COUNT(DISTINCT T1.airline), COUNT(DISTINCT T1.dst_ap), COUNT(DISTINCT T1.src_ap) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.elevation <= 1000 ORDER BY COUNT(DISTINCT T1.airline) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "6fe09be15154ddf1894728a4dfce9ff4b965ed69",
                "query": "SELECT T2.name, COUNT(T1.rid) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T1.dst_ap != 'DEL' GROUP BY T2.name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "b5e3bea5d013cd7919ec78845885ef631e21e92c",
                "query": "SELECT dst_ap FROM routes WHERE dst_ap < 'A' ORDER BY dst_ap ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC"
            }
        ],
        "geo": [
            {
                "hash": "9ad6d9937e8f5e1a0299fe9dc956b2be6960ee8b",
                "query": "SELECT T1.state_name, MAX(T1.population) FROM state AS T1 WHERE T1.state_name = 'Alabama' OR T1.population > 10000 OR T1.state_name NOT IN (SELECT T2.state_name FROM state AS T2 WHERE T2.population < 10000)",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "3b6678cdfd5476d94707857c2e1d920888cb63f7",
                "query": "SELECT T1.state_name FROM state AS T1 JOIN highlow AS T2 ON T1.state_name = T2.state_name JOIN city AS T3 ON T3.state_name = T1.state_name WHERE T3.city_name IN (SELECT city_name FROM city WHERE population > 500000)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "c95419209af94c80e5411827bc5641064118508a",
                "query": "SELECT state_name FROM state WHERE NOT EXISTS (SELECT 1 FROM city WHERE city.population = state.population) GROUP BY state_name HAVING COUNT(state.population) = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "66f3f65b045be726e448c7b6e6b8306b694fc0f6",
                "query": "SELECT T1.state_name, MIN(T1.population) FROM state AS T1 JOIN city AS T2 ON T1.state_name = T2.state_name JOIN highlow AS T3 ON T1.state_name = T3.state_name WHERE T1.state_name NOT IN (SELECT state_name FROM highlow) GROUP BY T1.state_name ORDER BY T1.state_name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4891a71f72a5208edba207e5b8bc803be7720fd4",
                "query": "SELECT state_name, MIN(population) FROM state GROUP BY state_name ORDER BY MIN(population) DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC"
            },
            {
                "hash": "27fe1cb2bcd32404d51c6132ac0a3e7d08deb906",
                "query": "SELECT T1.state_name FROM state AS T1 WHERE T1.population >= 1000 ORDER BY T1.population DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "ee42540ff7a6a1d31f2913e7227f53df2b11eab0",
                "query": "SELECT T1.state_name FROM state AS T1 WHERE NOT EXISTS ( SELECT T2.state_name FROM highlow AS T2 WHERE T1.state_name = T2.state_name )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# )"
            },
            {
                "hash": "1bf5db651f58d230203dfa6b0d81df045738cac3",
                "query": "SELECT state_name FROM state WHERE area BETWEEN 1000 AND 5000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "60379e970d11f946b869b2598340d48e526a9dfd",
                "query": "SELECT T1.state_name FROM state AS T1 WHERE T1.population > 1000000 OR T1.area BETWEEN 1000 AND 10000 OR T1.density < 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "506ecf5f8db0fc907207602209f1cab899982586",
                "query": "SELECT T1.state_name, MAX(T1.population), MIN(T1.area) FROM state AS T1 JOIN city AS T2 ON T1.state_name = T2.state_name WHERE T1.population <= 100000",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "7fb8413372c55b7b1708506a80b7b3ee0eeba2a1",
                "query": "SELECT COUNT(DISTINCT T1.state_name) FROM state AS T1 JOIN highlow AS T2 ON T1.state_name = T2.state_name JOIN border_info AS T3 ON T2.state_name = T3.state_name WHERE T1.state_name IN (SELECT state_name FROM mountain)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "b98d091ba0e7827ecffe133f102e1b6845eb96d1",
                "query": "SELECT state_name FROM state WHERE population >= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "8ff3f9aae2b443ce05a9d6ab453cfcc41f648bb8",
                "query": "SELECT T1.state_name FROM state AS T1 JOIN mountain AS T2 ON T1.state_name = T2.state_name WHERE T1.state_name IN ( SELECT state_name FROM highlow ) ORDER BY T2.mountain_altitude ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "fa17a650007f52fc62290cc09baa580ce2396471",
                "query": "SELECT MIN(highest_elevation) FROM highlow ORDER BY highest_elevation ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5675c53836b9ec5c5771b421595a2f2caad8bf2c",
                "query": "SELECT T1.state_name, COUNT(T2.lake_name) FROM state AS T1 JOIN lake AS T2 ON T1.state_name = T2.state_name WHERE T1.population BETWEEN 10000 AND 50000 AND EXISTS (SELECT T3.city_name FROM city AS T3 WHERE T3.state_name = T1.state_name) GROUP BY T1.state_name HAVING COUNT(T2.lake_name) > 1 ORDER BY T1.state_name ASC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a2f7017373db2ce4a4e7183e1291605813b5fba7",
                "query": "SELECT T1.state_name, T2.lake_name FROM state AS T1 INNER JOIN lake AS T2 ON T1.state_name = T2.state_name WHERE T1.population BETWEEN 1000000 AND 5000000 AND T1.area IN (SELECT area FROM lake AS T3 WHERE T3.area > 50000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "46112e919abcbe4046fd73ca226e0c408ba88e6f",
                "query": "SELECT T1.state_name FROM state AS T1 JOIN highlow AS T2 ON T1.state_name = T2.state_name WHERE NOT EXISTS (SELECT T3.state_name FROM highlow AS T3 WHERE T3.state_name = T1.state_name AND T3.highest_elevation > T2.highest_elevation) GROUP BY T1.state_name ORDER BY T1.state_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f6581059ec9d3ea79bb8fa395529211e82eff6d3",
                "query": "SELECT T1.state_name, T2.state_name FROM state AS T1 JOIN state AS T2 ON T1.state_name = T2.state_name WHERE T1.population > 10000 OR T2.area BETWEEN 1000 AND 2000 OR T1.density < 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "00fc1c41f5ad0d5e21845f31c022e9e705b79ad5",
                "query": "SELECT T1.state_name, T2.lake_name, SUM(T1.area) FROM state AS T1 JOIN lake AS T2 ON T1.state_name = T2.state_name WHERE T1.population > (SELECT AVG(population) FROM state) OR T2.area BETWEEN 100 AND 500 OR T2.country_name = 'USA' GROUP BY T1.state_name, T2.lake_name ORDER BY T1.area DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1728459688de8693d45ad96fac01525684b08cda",
                "query": "SELECT population FROM state AS T WHERE T.state_name = 'Alabama' ORDER BY T.population DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = '#VALUE#' ORDER BY T.#COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "847f810612f10698ea582d7f48d9b25f79ed89b4",
                "query": "SELECT COUNT(DISTINCT T1.state_name) , MIN(T1.population) , MAX(T1.population) FROM state AS T1 WHERE T1.population BETWEEN 1000000 AND 2000000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bb4c4a39a449a4af563b518296337286953d6a82",
                "query": "SELECT state_name, MIN(density) FROM state WHERE country_name = 'USA' ORDER BY state_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b002895f2ba3f6cbbe2f358cbd8dce85431129dd",
                "query": "SELECT SUM(T1.population) , MAX(T1.population) , T2.state_name FROM state AS T1 INNER JOIN highlow AS T2 ON T1.state_name = T2.state_name WHERE T2.highest_elevation = 'Mount Whitney'",
                "template": "SELECT SUM(#COLUMN#) , MAX(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "aa021bf782b7896480663647774147439d0977fe",
                "query": "SELECT COUNT(DISTINCT T1.state_name), T2.river_name FROM state AS T1 JOIN river AS T2 ON T1.state_name = T2.traverse ORDER BY T1.state_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "phone_market": [
            {
                "hash": "c36a25b47a6ee29753bc8fce9975cd94aae8ebf1",
                "query": "SELECT T1.Name FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T3.Market_ID = T2.Market_ID",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "03a5271776906bf4a20fda01c4ac4d0d6dc77101",
                "query": "SELECT T1.Name, T2.Num_of_stock FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.Num_of_stock BETWEEN 100 AND 500 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "91af4eda41392306d39dd2707591a26061b02972",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM phone AS T1 WHERE T1.Phone_ID IN (SELECT T2.Phone_ID FROM phone_market AS T2 WHERE T2.Num_of_stock > 100) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "637f42fd1d32c5d913501f77611005460750b0d1",
                "query": "SELECT COUNT(*) FROM phone WHERE Price BETWEEN 500 AND 800 AND EXISTS (SELECT * FROM phone_market WHERE phone.Phone_ID = phone_market.Phone_ID AND phone_market.Num_of_stock > 500) LIMIT 10",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9141cfde7bb254556f7e1dac568f85e3152fe1d6",
                "query": "SELECT T1.District, COUNT(T2.Phone_ID) FROM market AS T1 JOIN phone_market AS T2 ON T1.Market_ID = T2.Market_ID GROUP BY T1.District HAVING COUNT(T2.Phone_ID) <= 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "abb125b1e184fa228d122eb6752d29d50a56c933",
                "query": "SELECT T1.Name FROM phone AS T1 WHERE T1.Price BETWEEN 100 AND 500 AND T1.Carrier = 'Carrier_X' AND NOT EXISTS ( SELECT 1 FROM market AS T2 WHERE T2.District = 'District_X' )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' )"
            },
            {
                "hash": "64b9174c2834121f72ebd7cc08216416954fc00f",
                "query": "SELECT Carrier, COUNT(Phone_ID) FROM phone AS T1 WHERE Price >= 500 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ab65cf0e779865ce9a511eaab13fdc28aa79831c",
                "query": "SELECT COUNT(T1.Name) FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T3.Num_of_shops BETWEEN 5 AND 10 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "10dc02fd8b4c2537f0659c42e0474723c2c65f9a",
                "query": "SELECT Name, Price FROM phone WHERE Price > 1000 ORDER BY Price DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a7d54e42847bf2a8a2e3ed78c93abc7da5ed3726",
                "query": "SELECT T1.Name, T1.Price FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.Market_ID NOT IN (SELECT T3.Market_ID FROM market AS T3 WHERE T3.Num_of_employees < 100 AND T3.Ranking > 50) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "b9a23f70afceefaef6648f408885ecbd61038a5d",
                "query": "SELECT T1.Name, T2.District, COUNT(T1.Phone_ID) FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T1.Name, T2.District ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e0fcf543c26b844b4f0ddda189410d64af4ee05c",
                "query": "SELECT T1.Name, T1.Carrier FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T3.Market_ID = T2.Market_ID WHERE T2.Num_of_stock < 100 AND T3.Ranking = 1 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ed273f42de2466a760a844858065b542e85d3a6f",
                "query": "SELECT T1.Name, AVG(T2.Num_of_stock) FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T1.Carrier != 'AT&T' GROUP BY T1.Name HAVING AVG(T2.Num_of_stock) > 100 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7b85d334f83c89ca6719351492bd70f1c9901f1e",
                "query": "SELECT T1.Name, T1.Carrier, T1.Price FROM phone AS T1 WHERE T1.Carrier != 'AT&T'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "686f55f9363988ec00c7695027b793a09ae4de27",
                "query": "SELECT T1.Name, T2.District, T3.Num_of_stock FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID ORDER BY T1.Price DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "40a6300bccb7200cb9aa6638f370d22567827642",
                "query": "SELECT AVG(Price) FROM phone WHERE Memory_in_G > 128 OR EXISTS ( SELECT 1 FROM phone_market WHERE phone_market.Phone_ID = phone.Phone_ID AND Num_of_stock > 100 ) OR EXISTS ( SELECT 1 FROM market WHERE market.Market_ID = 101 )",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.Phone_ID = #TABLE#.Phone_ID AND #COLUMN# > #VALUE# ) OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "2ee7f3d0b7af3d59f3906b08282798c1d2456562",
                "query": "SELECT T1.Name, SUM(T3.Num_of_stock) FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T3.Market_ID = T2.Market_ID WHERE T3.Ranking NOT IN (SELECT Ranking FROM market WHERE District = 'North') ORDER BY T1.Price DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6aadeb30e859cdac4acade053608f0948bd9e2ee",
                "query": "SELECT Name FROM phone WHERE Carrier = 'AT&T' OR Price < 500 AND Name NOT IN (SELECT Name FROM phone WHERE Phone_ID = 'iPhone13')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "938bc8d0f3fc71e637b40d42aff91a4487476e15",
                "query": "SELECT Name FROM phone WHERE Price < 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "0ff249cf3c0c6d5da782bc5a0c6b985b589f29c1",
                "query": "SELECT T1.Name, T2.Num_of_stock FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T3.Market_ID = T2.Market_ID WHERE T2.Num_of_stock != 0",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "cc61b7b6b93f363b313af38efc23d0ad59ea28cd",
                "query": "SELECT COUNT(DISTINCT Carrier) FROM phone AS T1 ORDER BY Carrier ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "641ee37cac5b738804fbe2b37d848a533bf8656a",
                "query": "SELECT T1.Carrier, T2.District FROM phone AS T1 JOIN market AS T2 ON T1.Phone_ID = T2.Market_ID WHERE T1.Price > 100 OR T1.Memory_in_G BETWEEN 32 AND 64 AND T1.Name = 'Apple' ORDER BY T2.Ranking ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dd068be2ea32d3b26cd8eb806fc1f578f65d5a85",
                "query": "SELECT T1.Name, T3.District FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T1.Price >= 500 AND T1.Carrier = 'Verizon'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "8d3d2e664116aedf5f9495ea4a3ae908bf7b5419",
                "query": "SELECT Name, Carrier FROM phone WHERE Price = 500",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "16e81159bd68489628cc13041ea1f3edd95e9aa3",
                "query": "SELECT T1.Name, T2.District FROM phone AS T1 JOIN market AS T2 ON T1.Phone_ID = T2.Market_ID WHERE T1.Carrier != 'AT&T'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "eaed031c3e1b3d88446595d05fbe654a9187d3db",
                "query": "SELECT T1.Name, T2.Num_of_stock FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.Num_of_stock BETWEEN 100 AND 200 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "entertainment_awards": [
            {
                "hash": "bdf39a6e8ed3c427b0babedb5c8c894917b9b08c",
                "query": "SELECT T1.Festival_Name, T1.Location, T2.Name FROM festival_detail AS T1 JOIN artwork AS T2 ON T1.Festival_ID = T2.Artwork_ID WHERE T1.Festival_Name = 'festival_name' AND T1.Year BETWEEN 2010 AND 2020 AND T2.Type = 'type'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2ae642bf64c8386c8f7c5c812e26c728a7ef169d",
                "query": "SELECT T1.Festival_ID, COUNT(DISTINCT T2.Artwork_ID) FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T2.Result = 'Winner'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "1ae8add6f2c6fb0839c1ba750148700d234195e9",
                "query": "SELECT T1.Chair_Name, T2.Chair_Name FROM festival_detail AS T1 JOIN festival_detail AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T1.Year IN (SELECT Year FROM festival_detail AS T3 WHERE T3.Num_of_Audience > 1000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "cfbe55a5a93a836bbc1706a253e540e2b2928167",
                "query": "SELECT COUNT(Festival_ID), AVG(Num_of_Audience) FROM festival_detail AS T1 ORDER BY COUNT(Festival_ID) DESC",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "65fc3da6ffe39cf9085065b56fb0afaf23e3d86e",
                "query": "SELECT T1.Festival_Name, COUNT(T1.Festival_ID), SUM(T1.Num_of_Audience), SUM(T2.Artwork_ID) FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID JOIN artwork AS T3 ON T2.Artwork_ID = T3.Artwork_ID GROUP BY T1.Festival_Name HAVING COUNT(T1.Festival_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c18ed246780f4f4a771b6596061acf72dafd0b2f",
                "query": "SELECT DISTINCT T1.Festival_Name, T3.Type FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID JOIN artwork AS T3 ON T2.Artwork_ID = T3.Artwork_ID WHERE (T1.Year BETWEEN 2010 AND 2020) OR T3.Name = 'Painting' OR T1.Location = 'London' LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f7b9531828957c163ff5dfbce35d51b67c62052f",
                "query": "SELECT T1.Festival_Name, T2.Festival_Name FROM festival_detail AS T1 JOIN festival_detail AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T1.Year < 2010 ORDER BY T1.Num_of_Audience DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c561834b8ede878fd198c8c4a665d0e518ddd311",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM artwork AS T1 JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e455040bc32853422afbcaf29ec0cc12e2f08826",
                "query": "SELECT T1.Festival_Name, AVG(T1.Num_of_Audience) FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T2.Result = 'Winner' OR T1.Year BETWEEN 2000 AND 2010 OR NOT EXISTS (SELECT 1 FROM artwork AS T3 WHERE T3.Artwork_ID = T2.Artwork_ID AND T3.Type = 'Painting') GROUP BY T1.Festival_Name HAVING AVG(T1.Num_of_Audience) > 1000",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "ff614c1c072f10540a585267ec9421f3e7ba5914",
                "query": "SELECT T1.Festival_Name FROM festival_detail AS T1 WHERE T1.Num_of_Audience >= 20000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "aaf767bd48ca59b56cda08c230f721d3465ae02b",
                "query": "SELECT COUNT(DISTINCT T1.Artwork_ID), COUNT(T2.Artwork_ID) FROM artwork AS T1 JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID WHERE T2.Result <= 'Winner'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "189430503032cde2db342a7f9ff342728ba72401",
                "query": "SELECT T1.Festival_Name FROM festival_detail AS T1 WHERE T1.Location = 'Melbourne' AND T1.Year = 2020 AND NOT EXISTS ( SELECT 1 FROM nomination AS T2 WHERE T2.Festival_ID = T1.Festival_ID AND T2.Result = 'Winner' )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# )"
            },
            {
                "hash": "67422e1f7222af2500f263de8cbab19deaa0f860",
                "query": "SELECT Name FROM festival_detail WHERE Year = 2020 AND Location = 'New York' AND Festival_ID NOT IN ( SELECT Festival_ID FROM nomination )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# )"
            },
            {
                "hash": "6ea96ac6b08d1a9c5b49e05eba9344ba13938ade",
                "query": "SELECT T1.Festival_Name, MAX(T3.Num_of_Audience) FROM artwork AS T1 JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID WHERE T1.Type = 'Painting' AND T2.Result = 'Winner' AND T3.Year BETWEEN 2010 AND 2020 GROUP BY T1.Festival_Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "6e5e87011d0a76e11827a9045e0c4a461fd02ab8",
                "query": "SELECT COUNT(DISTINCT T1.Festival_ID), COUNT(T1.Festival_ID) FROM festival_detail AS T1 WHERE T1.Festival_ID = (SELECT T2.Festival_ID FROM nomination AS T2 WHERE T2.Result = 'Winner') OR T1.Year > 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "f91ae380763dbc352a16885eab97843591431660",
                "query": "SELECT DISTINCT T1.Festival_Name FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T1.Year BETWEEN 2000 AND 2010 LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "81d5f3533d8f230fc77641d96dd997676ec4d5a9",
                "query": "SELECT Num_of_Audience FROM festival_detail WHERE Year = 2000 OR Location = 'New York' ORDER BY Num_of_Audience DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3d5a3e078f5b5d6e8144b09960134227603d023e",
                "query": "SELECT Festival_Name FROM festival_detail WHERE Year = 2000 AND Festival_ID IN (SELECT Festival_ID FROM nomination WHERE Result = 'Winner') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "b2f855c03f794e5dd9eaca79338a64497fddd6f8",
                "query": "SELECT COUNT(Festival_ID) FROM festival_detail AS T1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "478c279535a468a0d5e4113a0be9dcf6f7fcb53b",
                "query": "SELECT T1.Festival_ID, COUNT(T2.Artwork_ID) FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID WHERE T2.Result = 'Winner' AND T1.Year = 2010 AND T1.Festival_ID IN (SELECT Festival_ID FROM festival_detail WHERE Location = 'New York')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "7604edce407a8dd18bb34b6a3ea0944714347ac5",
                "query": "SELECT T1.Festival_Name, COUNT(DISTINCT T3.Artwork_ID) FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID JOIN artwork AS T3 ON T2.Artwork_ID = T3.Artwork_ID GROUP BY T1.Festival_Name HAVING SUM(T1.Num_of_Audience) > 10000 ORDER BY T1.Festival_Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d4be6b233d0925272840cced1795918fa8cac09f",
                "query": "SELECT T1.Festival_Name, SUM(T3.Num_of_Audience) FROM artwork AS T1 JOIN nomination AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T2.Festival_ID = T3.Festival_ID WHERE T2.Result <= 'Winner' GROUP BY T1.Festival_Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "28ec8834ad4181e8544594473b51618716b79f9f",
                "query": "SELECT Num_of_Audience FROM festival_detail WHERE Year <= 2000 ORDER BY Num_of_Audience ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "02560b66648cf9c95f58e666dde1e47c2607e0fd",
                "query": "SELECT T1.Festival_Name FROM festival_detail AS T1 JOIN nomination AS T2 ON T1.Festival_ID = T2.Festival_ID JOIN artwork AS T3 ON T2.Artwork_ID = T3.Artwork_ID WHERE T3.Name > 'Artwork1' LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "57fc329d175d72b9ef065ed5df1830c4a177e228",
                "query": "SELECT T2.Festival_Name FROM artwork AS T1 JOIN nomination AS T3 ON T1.Artwork_ID = T3.Artwork_ID JOIN festival_detail AS T2 ON T3.Festival_ID = T2.Festival_ID WHERE T1.Type = 'Painting' OR T2.Year > 2010 OR NOT EXISTS (SELECT 1 FROM festival_detail WHERE festival_detail.Festival_ID = T2.Festival_ID AND festival_detail.Location = 'New York') GROUP BY T2.Festival_Name HAVING COUNT(T2.Festival_Name) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            }
        ],
        "book_2": [
            {
                "hash": "d6f7d16b8369bc7d0b81e3aee8eeb11f6ba5ad88",
                "query": "SELECT AVG(T1.Price) FROM publication AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Publication_Date <= '2000-01-01'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "37f04625bed4e539a7ffb6d15c8984d2f3f7cc71",
                "query": "SELECT Title FROM book WHERE Title BETWEEN 'A' AND 'Z' OR Issues < 10 OR Price NOT IN (SELECT Price FROM publication)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "ac69d34004d0ff0130e8aa20fba2f25486dff13b",
                "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Publisher = 'ABC' AND T2.Publication_Date > '2000' AND T1.Issues BETWEEN 1 AND 10 ORDER BY T1.Title ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "638e28ac9b144eb914a0b03d59724164d1f735d0",
                "query": "SELECT COUNT (DISTINCT Title) FROM book WHERE Issues BETWEEN 1 AND 10 OR Writer = 'Author1'",
                "template": "SELECT COUNT (DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "907ca96dd37aafedefb86ddf238885c302c222b4",
                "query": "SELECT T1.Title, COUNT(DISTINCT T2.Publisher) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price < 50 GROUP BY T1.Title ORDER BY T1.Title DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0265a704375d3894b47979e186911025c661ad6f",
                "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 20 ORDER BY T1.Writer ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS \""
            },
            {
                "hash": "88825949892c193913f6c6e09c239efb0971009c",
                "query": "SELECT Title, COUNT(Publication_ID) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID GROUP BY T1.Title",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "f1af9a9406e2fd953f1faee2d4cf828ec1d46882",
                "query": "SELECT COUNT(DISTINCT T1.Title), T2.Publisher FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Issues > 10 OR T2.Publication_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Price < 20 ORDER BY T1.Title DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "70fd83cdd54c50f302dec5eeaaf5b1aa2c280af9",
                "query": "SELECT T1.Title, T2.Publisher FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID JOIN publication AS T3 ON T2.Book_ID = T3.Book_ID WHERE T2.Publisher = 'Publisher1' AND T1.Writer = 'Writer1' AND T3.Price > (SELECT AVG(Price) FROM publication) ORDER BY T1.Title ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8195510e9a4a4abbde3223f3622530ae741ef06d",
                "query": "SELECT Publisher, Title FROM publication AS T1 INNER JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE Publication_Date > '1990' ORDER BY Publication_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "686749ae9650ba40811e10d5991ce1f7449cf9f3",
                "query": "SELECT T1.Title, T2.Title FROM book AS T1 JOIN book AS T2 ON T1.Book_ID <= T2.Book_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "9c4273834fce2e24735866d7d7d9febd4449aa55",
                "query": "SELECT * FROM publication WHERE NOT EXISTS (SELECT 1 FROM book WHERE publication.Book_ID = book.Book_ID AND book.Issues = 1 AND publication.Price > 10)",
                "template": "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = #VALUE# AND #TABLE#. #COLUMN# > #VALUE#)"
            },
            {
                "hash": "627267e9e0378239b6fe30c0c2d666ea8d15b7ec",
                "query": "SELECT COUNT(DISTINCT Publisher), COUNT(Book_ID) FROM publication WHERE Publication_Date = (SELECT MAX(Publication_Date) FROM publication) ORDER BY Price DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT T1.Writer, T2.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Issues <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "31b8fab33e3131bd7bef31c1a1d00e55b3510dde",
                "query": "SELECT T1.Publisher FROM publication AS T1 JOIN publication AS T2 ON T1.Publication_ID = T2.Publication_ID WHERE T1.Price NOT IN (SELECT Price FROM publication WHERE Publication_Date = '2000') ORDER BY T1.Price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dbaf8e182408740bfb569a7efe55a75170d840cd",
                "query": "SELECT COUNT(DISTINCT Publisher), Title FROM publication AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE Publication_Date BETWEEN '1990' AND '2000'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0715ff916e1104d937343f2c309a2fd7e287d69d",
                "query": "SELECT Publisher FROM publication WHERE Publication_Date <= '1999-01-01' AND Price <= 30.00",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "02ca57409e2741b00818920f9a073643a651b380",
                "query": "SELECT T1.Title, SUM(T2.Price) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID JOIN publication AS T3 ON T2.Book_ID = T3.Book_ID WHERE T2.Publication_Date <= '2000' GROUP BY T1.Title LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e0268f6d1a2f03e1041c5a732e4f61192894c27d",
                "query": "SELECT COUNT(DISTINCT T1.Publisher) FROM publication AS T1 WHERE T1.Price > (SELECT COUNT(DISTINCT T2.Writer) FROM book AS T2) LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > (SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "86e4650f0ca68cca2cbf133776e7b9ddb38d4031",
                "query": "SELECT Publisher FROM publication WHERE Publication_Date < '2000' ORDER BY Publisher DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9b821e59ba56ca4e2fa9670e881bd462e86fb3f7",
                "query": "SELECT COUNT(DISTINCT T2.Title), T1.Publisher FROM publication AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Issues > 5 OR T1.Publication_Date BETWEEN '2000-01-01' AND '2020-12-31' OR T1.Price < 20 ORDER BY T1.Price DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8a3deb1de74f27ea9a2ab981e94978589e2a1a14",
                "query": "SELECT Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1d38445e4722615a41dee8d67e612aac9e777168",
                "query": "SELECT T1.Title, COUNT(T2.Publication_ID) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Issues > 20 OR T2.Publication_Date BETWEEN '2010' AND '2015' OR T1.Book_ID IN (SELECT Book_ID FROM publication WHERE Price = 100)",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "144800d88612ca4c3374d8d18e9a397f47e4cbd6",
                "query": "SELECT COUNT(DISTINCT Title), SUM(Price) FROM publication AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE Publisher != 'ABC' GROUP BY Title",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "fdaef2ccd54dbdc60b729ca0f5e59d195a77dfc8",
                "query": "SELECT Title, SUM(Price) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Publication_Date BETWEEN '2000-01-01' AND '2010-12-31' AND T1.Issues < 10 GROUP BY Title ORDER BY SUM(Price) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "478cedbc20f5c19ac2655023a1b18ea581c27bb3",
                "query": "SELECT AVG(Price) FROM publication WHERE Publication_Date BETWEEN '2020-01-01' AND '2020-12-31' OR Publisher = 'ABC' ORDER BY Publication_ID DESC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d1d857b2b9dd11576dcdb9a4929d42c4f08c7ff0",
                "query": "SELECT MAX(Price) FROM Publication WHERE Price = 10 LIMIT 5",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c472e1c4186cf367f1acca7d26437a5d1bc62613",
                "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Publisher = 'ABC' AND T2.Publication_Date < '2020-01-01' AND T1.Writer NOT IN (SELECT T3.Writer FROM book AS T3 WHERE T3.Issues > 10) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "school_bus": [
            {
                "hash": "913a8e537dd8870442ebab6278699f7b18f92b01",
                "query": "SELECT MAX(Age), Name FROM driver WHERE Age BETWEEN 40 AND 60 GROUP BY Name ORDER BY MAX(Age) DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "a8c56aa534f9b1b9afe2695236acd80d8b343cc5",
                "query": "SELECT Name FROM driver WHERE Name NOT IN (SELECT Name FROM driver WHERE Party = 'Democrat') ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1681a07be94a413813d5ef6cfc2b7e5e72f82662",
                "query": "SELECT COUNT(DISTINCT T1.School_ID), COUNT(DISTINCT T1.Driver_ID), COUNT(DISTINCT T2.School_ID) FROM school AS T1 JOIN school_bus AS T2 ON T1.School_ID = T2.School_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T2.Years_Working < 5 ORDER BY T2.Years_Working DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a6d2bb452be86fe7fca7b38663547a429925f1ad",
                "query": "SELECT T1.Name, T2.Name FROM driver AS T1 JOIN driver AS T2 ON T1.Driver_ID != T2.Driver_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "87ae3fc5d152af180a23a203e988b64c96abf478",
                "query": "SELECT COUNT(T1.Driver_ID), T2.Name FROM school_bus AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "6ea27345b177964f24bccc31035a4440fdd108fc",
                "query": "SELECT T1.Name, AVG(T3.Years_Working) FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Age >= 50 GROUP BY T1.Name ORDER BY AVG(T3.Years_Working) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "9b8a2d62241c22480c7707140d55ea431562c8c2",
                "query": "SELECT T1.Name, T2.School FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T2.Years_Working BETWEEN 10 AND 20 ORDER BY T2.Years_Working DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d7b0e5691180e23404a482db77564bbd187ac596",
                "query": "SELECT COUNT(Driver_ID) FROM driver WHERE Age = 30 OR Home_city = 'Barcelona' OR Party IN (SELECT Party FROM driver WHERE Age > 20)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "9102112ab577674fd951822754c466e5b5ec75a4",
                "query": "SELECT COUNT(DISTINCT T1.Driver_ID), T2.Grade FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Age BETWEEN 30 AND 50 AND T3.Grade = 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0c380dde5c82dfeff03e02b6dae66939256667de",
                "query": "SELECT T1.Name, T2.Name FROM driver AS T1 JOIN driver AS T2 ON T1.Age >= T2.Age LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# >= #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e62fdc2013660b4441529bec3ecab3be89416cad",
                "query": "SELECT COUNT(DISTINCT Name) FROM driver WHERE Age > 40 OR Party = 'Democrat' AND NOT EXISTS (SELECT 1 FROM school_bus WHERE driver.Driver_ID = school_bus.Driver_ID) ORDER BY Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ef36e75d24696e68be366818980802cecde26efb",
                "query": "SELECT T1.Name, T2.Type FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Age > 40",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "a072939ae10ec0e18176e205baafcd567d67bcbd",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.School) FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.School) > 1 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6b97d9c42b80394ebe867ab358faf5107aac7d41",
                "query": "SELECT T1.Name, T2.Grade, T3.Years_Working FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Age > 40 OR T2.Grade = 'High School' OR EXISTS (SELECT 1 FROM school AS T4 WHERE T4.School_ID = T2.School_ID) ORDER BY T1.Age ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8227d00e1fc03a712e054ee775625fb196e774e8",
                "query": "SELECT T1.Name, T2.School FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Location = 'New York' AND T2.Grade BETWEEN 'A' AND 'C' AND T2.Type NOT IN (SELECT Type FROM school)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "bc305f7654e77a801acffc5d331a097507580316",
                "query": "SELECT T1.Name, T3.Grade FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Party = 'Democrat' OR T2.Years_Working BETWEEN 5 AND 10 OR NOT EXISTS (SELECT 1 FROM school WHERE school.School_ID = T3.School_ID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "110e10bbd063fed14961937effd07ca7e6c982df",
                "query": "SELECT T1.Name, T2.Location FROM driver AS T1 JOIN school AS T2 ON T1.Home_city = T2.Location WHERE T1.Age < T2.Grade LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "523a1bdeb8e26f94066bfe5847521e2975cd3ef5",
                "query": "SELECT Name FROM driver WHERE Age = 40 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3c71277107e65bb8882ab273ff702f4eb9855e38",
                "query": "SELECT T1.Name, MIN(T1.Age) FROM driver AS T1 WHERE NOT EXISTS (SELECT T2.School_ID FROM school AS T2 WHERE T2.School_ID = T1.Driver_ID) GROUP BY T1.Name ORDER BY T1.Age ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "964ecfb00759f030b58212df8626cebd04c65b78",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Home_city), SUM(T2.Years_Working) FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Years_Working > 5 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "717b01c92040132c3010af2396db3780b4554dee",
                "query": "SELECT T1.Grade, T1.School, T1.Location FROM school AS T1 WHERE NOT EXISTS (SELECT 1 FROM school_bus AS T2 JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T2.School_ID = T1.School_ID AND T3.Party = 'Democrat' AND T3.Age > 50)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "d506341c03185a4b0ada82d4c5e4702dd3619606",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Type FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Years_Working >= 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3d03d6d0a9818c750cc83ec9d68680a7f6538f9b",
                "query": "SELECT T1.Name, T2.School, T3.Years_Working FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID ORDER BY T2.School ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e9d06bb704c31f67a6cbc3c6e562370c1acd4842",
                "query": "SELECT T1.Name FROM driver AS T1 JOIN school_bus AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Home_city NOT IN (SELECT T4.Location FROM school AS T4) ORDER BY T1.Age DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "25dc06db74b16ef64ac40af100919f09ceda3c76",
                "query": "SELECT SUM(T1.Grade) FROM school AS T1 WHERE T1.Location = 'New York' OR T1.School_ID BETWEEN (SELECT MIN(School_ID) FROM school) AND (SELECT MAX(School_ID) FROM school) OR T1.School_ID = (SELECT School_ID FROM school_bus WHERE Years_Working > 5) LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "restaurants": [
            {
                "hash": "3d566393bbba4519af1fb02e2de1912a9d482339",
                "query": "SELECT COUNT(T1.ID) FROM RESTAURANT AS T1 INNER JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.CITY_NAME != 'New York' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.CITY_NAME, T2.STREET_NAME FROM RESTAURANT AS T1 INNER JOIN LOCATION AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T1.NAME = 'Joe''s Diner'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "fa524be2fdf1f46a80ecad815af6fc7f972f1185",
                "query": "SELECT T1.CITY_NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T1.CITY_NAME = 'New York' AND T2.STREET_NAME BETWEEN 'Main St' AND 'Park Ave' AND T1.ID NOT IN (SELECT T3.RESTAURANT_ID FROM LOCATION AS T3 WHERE T3.CITY_NAME = 'Los Angeles') GROUP BY T1.CITY_NAME HAVING MAX(T1.RATING) > 4 ORDER BY T1.CITY_NAME ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b9dba3514716518563fc2dbf48c931d45ce871fa",
                "query": "SELECT T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T2.CITY_NAME > 'NEW YORK' ORDER BY T2.RESTAURANT_ID DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "0fa0311a29a1906c0fe593a57f3602b142664299",
                "query": "SELECT T1.NAME, MAX(T2.RATING) FROM RESTAURANT AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T1.FOOD_TYPE <= 'Italian' GROUP BY T1.NAME",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "20bf9febf0e9e5f105b67fcb1c5397a78d18da4f",
                "query": "SELECT T1.COUNTY, COUNT(DISTINCT T2.ID), AVG(T2.RATING) FROM GEOGRAPHIC AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T2.RATING BETWEEN 3 AND 5 OR T2.ID IN (SELECT T3.RESTAURANT_ID FROM LOCATION AS T3)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "37874fd39372541188afab2ec95c71b6beb5db32",
                "query": "SELECT CITY_NAME FROM RESTAURANT GROUP BY CITY_NAME",
                "template": "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "668dde9df3251e14dfa9bd5a1c8d1b8a828700df",
                "query": "SELECT DISTINCT CITY_NAME FROM LOCATION LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "699b997aef0d49e51b0830575371003031a9e484",
                "query": "SELECT T1.ID, T1.NAME FROM RESTAURANT AS T1 JOIN RESTAURANT AS T2 ON T1.ID = T2.ID WHERE T1.RATING > (SELECT AVG(RATING) FROM RESTAURANT) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "3618596b5a3b16b8440cc305a5aa2b78baad0e29",
                "query": "SELECT T1.CITY_NAME FROM LOCATION AS T1 WHERE T1.CITY_NAME = 'New York' AND T1.RESTAURANT_ID = 123 AND NOT EXISTS (SELECT 1 FROM RESTAURANT AS T2 WHERE T2.ID = T1.RESTAURANT_ID AND T2.RATING > 4)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "5268f0486fb7feb4315c5cdaa9a4e7208c533709",
                "query": "SELECT COUNT(DISTINCT T1.CITY_NAME), COUNT(DISTINCT T3.CITY_NAME) FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID JOIN GEOGRAPHIC AS T3 ON T2.CITY_NAME = T3.CITY_NAME WHERE T1.RATING BETWEEN 3 AND 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d204ddf82ac5d05cdcc978932a7ad81f6c2efbc0",
                "query": "SELECT T2.COUNTY FROM RESTAURANT AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T1.RATING < 3 ORDER BY T2.COUNTY ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1d184ac75c80c539753496dbf0d5f964af347d6e",
                "query": "SELECT T1.NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.CITY_NAME = 'Springfield' OR T2.STREET_NAME = 'Main St' OR T2.HOUSE_NUMBER > (SELECT MAX(HOUSE_NUMBER) FROM LOCATION WHERE CITY_NAME = 'Springfield') ORDER BY T1.NAME ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cf68cb6dcca3523be2a03153db31fb67dbbda6ed",
                "query": "SELECT T1.NAME, T1.RATING, T2.STREET_NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.RATING >= 4 ORDER BY T1.NAME DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d38f60541cd483928d4367c0140908184b8d3973",
                "query": "SELECT CITY_NAME, MIN(RATING) FROM RESTAURANT WHERE ID < 100 LIMIT 5",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ddeb3db0030a630bf6fef174e365a767782765eb",
                "query": "SELECT T1.CITY_NAME, T2.COUNTY FROM GEOGRAPHIC AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME ORDER BY T1.CITY_NAME ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9dfb5ba1eac8cc9c1da4c9daf6b46c10e7e5ac1c",
                "query": "SELECT T1.COUNTY, COUNT(DISTINCT T2.NAME) FROM GEOGRAPHIC AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T2.ID = T3.RESTAURANT_ID WHERE T2.RATING < 4 OR T2.FOOD_TYPE = 'vegetarian' OR T1.REGION = (SELECT REGION FROM GEOGRAPHIC WHERE CITY_NAME = 'Tokyo') GROUP BY T1.COUNTY LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "911a03b1ce942e4e91e3025dc6065e9890c43cc3",
                "query": "SELECT T1.NAME, T2.STREET_NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.RATING > 4 OR T1.CITY_NAME = 'New York' OR EXISTS (SELECT 1 FROM RESTAURANT AS T3 WHERE T3.ID = T1.ID AND T3.FOOD_TYPE = 'Italian') GROUP BY T1.NAME HAVING MAX(T1.RATING) = 5 ORDER BY T1.NAME DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6077e347fbde50e9f57b0043481ef95468686cda",
                "query": "SELECT T1.CITY_NAME FROM LOCATION AS T1 WHERE T1.CITY_NAME IN (SELECT T2.CITY_NAME FROM GEOGRAPHIC AS T2) ORDER BY T1.CITY_NAME ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "29c20cde5e4e81bfe4f9b096ffa34b979b99c561",
                "query": "SELECT T1.NAME, T2.CITY_NAME FROM RESTAURANT AS T1 JOIN LOCATION AS T2 ON T1.ID = T2.RESTAURANT_ID WHERE T1.CITY_NAME = 'New York' AND T2.CITY_NAME = 'New York' ORDER BY T1.NAME ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ced71f892d7e16fb0a79502a2c5a980b0d82885f",
                "query": "SELECT T2.COUNTY, SUM(T2.COUNTY) FROM LOCATION AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN GEOGRAPHIC AS T3 ON T2.CITY_NAME = T3.CITY_NAME WHERE T2.FOOD_TYPE = 'Italian'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "b9be14171815c4d50bc445764bc3179bc83c2f2d",
                "query": "SELECT COUNT(DISTINCT T1.STREET_NAME), T2.COUNTY FROM LOCATION AS T1 JOIN GEOGRAPHIC AS T2 ON T1.CITY_NAME = T2.CITY_NAME WHERE T1.CITY_NAME = 'New York' OR T2.REGION BETWEEN 'North' AND 'South' OR T1.HOUSE_NUMBER > 100 ORDER BY T1.STREET_NAME DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c941bc88560ee3b10007e121b48c10c9ed40b677",
                "query": "SELECT COUNT(DISTINCT CITY_NAME), COUNT(DISTINCT COUNTY) FROM GEOGRAPHIC WHERE REGION >= 'East' ORDER BY COUNT(DISTINCT CITY_NAME) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "3f83ed9484c1823c5b9837597b947ed29f9f0e65",
                "query": "SELECT T1.CITY_NAME, AVG(T2.RATING) FROM GEOGRAPHIC AS T1 JOIN RESTAURANT AS T2 ON T1.CITY_NAME = T2.CITY_NAME JOIN LOCATION AS T3 ON T2.ID = T3.RESTAURANT_ID GROUP BY T1.CITY_NAME ORDER BY AVG(T2.RATING) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            }
        ],
        "soccer_3": [
            {
                "hash": "6fca14a9e55a78e93b014b42e21d08a852073885",
                "query": "SELECT T1.Name, T2.Events_number FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T1.Manager = 'John' AND T2.Events_number BETWEEN 10 AND 20 AND T3.Wins_count > 5 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "47d8dac39d1b5f9b5ef6ec8f2a5591a7604d2a88",
                "query": "SELECT T2.Manufacturer, MAX(T1.Earnings) FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Manufacturer >= 'A' GROUP BY T2.Manufacturer",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "392bbc73ebaeaaafcddf9bf4ba4c5299f7ffc791",
                "query": "SELECT Name, COUNT(Club_ID) FROM club LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "3a07159d0e83fcca3200c7dc4d229c6137538393",
                "query": "SELECT COUNT(DISTINCT T2.Name) , COUNT(DISTINCT T1.Name) FROM player AS T1 INNER JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings < 100000 ORDER BY T1.Player_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a3d0b0466cb697c1395ece7b9519b83bebcd34be",
                "query": "SELECT COUNT(DISTINCT Captain) FROM club WHERE Manufacturer = 'Nike' OR Sponsor = 'Adidas' OR NOT EXISTS (SELECT 1 FROM player AS T2 WHERE T2.Club_ID = club.Club_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #TABLE#.#COLUMN#)"
            },
            {
                "hash": "23a19b4226efe49505909a8cbfbdb1b066a66cf3",
                "query": "SELECT T1.Name, T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T1.Manager = 'John' OR T2.Earnings > 10000 OR T1.Manufacturer NOT IN (SELECT Manufacturer FROM club WHERE Sponsor = 'Nike')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1ab528eeb7e25d89e38c95b3958cef763769c9dd",
                "query": "SELECT T2.Name, MAX(T1.Earnings) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Events_number <= 10 GROUP BY T2.Name ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b93d5a3b16b276192cb885cf2a7e7c81428dca7c",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Club_ID IN (SELECT Club_ID FROM player GROUP BY Club_ID HAVING COUNT(Club_ID) > 1)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "27fa61583c967115b8111c10d9d7ced71bbc218c",
                "query": "SELECT Name, Captain FROM club WHERE Sponsor = 'Nike' OR Manufacturer = 'Adidas' OR Club_ID IN (SELECT Club_ID FROM player WHERE Earnings > 1000000) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "08af63c7d6f75c4fa46e830dbfea097dd2d4047c",
                "query": "SELECT T1.Name, SUM(T2.Earnings) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Manager != 'John' GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "853750ee1cd990a871e78261c6dfd8437c7d6d6c",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Player_ID), MIN(T2.Events_number) FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Name HAVING MIN(T2.Events_number) < (SELECT MIN(Events_number) FROM player)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < (SELECT MIN(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "373f0b08dc0d79e9c07119f10161f8d0decafe13",
                "query": "SELECT Name FROM player WHERE Earnings > 5000 OR Name IN (SELECT Name FROM player WHERE Club_ID = 1) OR Name NOT IN (SELECT Name FROM player WHERE Wins_count > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "53178f262c5ee3c06d5d2f2b1de2adeb60b48b80",
                "query": "SELECT Earnings FROM player WHERE Earnings >= 100 ORDER BY Earnings DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6777a50b513a8d3eee00a6555fb1775213a613dc",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Player_ID) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Manager != 'John' ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1187e15fdc43c462644e974e66d3b584a69c7fb3",
                "query": "SELECT Name, Sponsor FROM club ORDER BY Earnings DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "003bb697f3fdf9d7d89849ac0b793d0b787f13d6",
                "query": "SELECT T1.Name FROM club AS T1 JOIN club AS T2 ON T1.Manager = T2.Captain WHERE EXISTS (SELECT T3.Club_ID FROM player AS T3 WHERE T3.Club_ID = T1.Club_ID AND T3.Earnings = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2f222dce502bbd65edb357b524d00a10ea03faf6",
                "query": "SELECT Name FROM club WHERE Sponsor BETWEEN 'A' AND 'M' ORDER BY Name DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7b149c6d39a27173b8e364daa1bd50136ba758d1",
                "query": "SELECT T1.Name, T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T2.Earnings BETWEEN 10000 AND 20000 AND T3.Wins_count > 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "83431c32895943c615a81af8cf5ed2f3331b38d8",
                "query": "SELECT COUNT(DISTINCT T1.Player_ID), SUM(T2.Earnings) FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID JOIN club AS T3 ON T2.Club_ID = T3.Club_ID WHERE T1.Events_number > 10 ORDER BY T1.Player_ID ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8b5fc52a09a71f568e76025cc8295cdaa8abeb95",
                "query": "SELECT T1.Name, T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Earnings BETWEEN 10000 AND 20000 OR T2.Wins_count > 5 OR T1.Manufacturer = 'Nike'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            }
        ],
        "station_weather": [
            {
                "hash": "c72cee14e24197e08debbabbd8585e7bb5c4e76c",
                "query": "SELECT T1.train_number, COUNT(DISTINCT T2.station_id) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id GROUP BY T1.train_number HAVING COUNT(T2.station_id) <= 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "0416a6fd523e49fec1b72fb4d39860ffb1c78df1",
                "query": "SELECT T1.name, T3.services FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id JOIN station AS T3 ON T2.station_id = T3.id WHERE EXISTS (SELECT 1 FROM weekly_weather AS T4 WHERE T3.id = T4.station_id AND T4.high_temperature > 30) GROUP BY T3.services HAVING MAX(T4.high_temperature) > 30 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a635d3fe212abf8fa667fd73b1c518bd64d53356",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.station_id) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id WHERE T1.id IN (SELECT train_id FROM route WHERE station_id = 1) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c83b91c15d9d053fe2c2b9901dde72c0d6f7d7cd",
                "query": "SELECT T1.train_number, COUNT(T2.station_id) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id JOIN station AS T3 ON T3.id = T2.station_id GROUP BY T1.train_number",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "2d07e3b712c26d9ab604682df5c21e1625a0e374",
                "query": "SELECT name, origin FROM train WHERE origin = 'London' AND destination = 'Birmingham' ORDER BY name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2161b6d7518ef03d0c184682cd09b3de50c816b2",
                "query": "SELECT T1.id, SUM(T2.precipitation) FROM train AS T1 JOIN route AS T3 ON T1.id = T3.train_id JOIN station AS T4 ON T3.station_id = T4.id JOIN weekly_weather AS T2 ON T4.id = T2.station_id GROUP BY T1.id HAVING SUM(T2.precipitation) > (SELECT AVG(precipitation) FROM weekly_weather)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "3fa4130ebaab50d9e9537a0041a17fe1a204f2a8",
                "query": "SELECT train_number, name, origin, destination FROM train AS T1 WHERE EXISTS ( SELECT * FROM route AS T2 WHERE T2.train_id = T1.id ) AND EXISTS ( SELECT * FROM weekly_weather AS T3 WHERE T3.station_id = 123 )",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) AND EXISTS ( SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "9767ad5affc50c3de7147272105b8b46bb83b2ac",
                "query": "SELECT name FROM train WHERE train_number NOT IN (SELECT train_number FROM train WHERE destination = 'London') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "2825cf6bdbbadbdff1cb62200fbb93e42e37b117",
                "query": "SELECT name FROM train WHERE EXISTS (SELECT 1 FROM route WHERE train.id = route.train_id AND route.station_id = (SELECT id FROM station WHERE network_name = 'London'))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "b504ef47b9c358df5bc519ca0eb46916a81c51d2",
                "query": "SELECT train_number FROM train WHERE id = ( SELECT train_id FROM route WHERE station_id = 5 ) OR time > '10:00' OR train_number > ( SELECT COUNT(train_id) FROM route WHERE station_id = 3 ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# > #VALUE# OR #COLUMN# > ( SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "ecb0c99bfbae40d53be97b35a4fb6601c54299fb",
                "query": "SELECT train_number, COUNT(*) FROM train WHERE id <= 100 GROUP BY train_number ORDER BY train_number ASC LIMIT 50",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b8f5a60c29b69937165f4d30589d1fdb66e735e4",
                "query": "SELECT T1.train_number, T1.name FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id JOIN station AS T3 ON T2.station_id = T3.id WHERE T3.network_name IN (SELECT T4.network_name FROM station AS T4 WHERE T4.local_authority = 'London')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f378a8e3f3b6090dcc948639aea481e2520e768a",
                "query": "SELECT train_number FROM train WHERE train_number > 50 ORDER BY train_number DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d29e23562b588c19713897c8b775979a65bd9e29",
                "query": "SELECT train_number, name FROM train WHERE id > 10 AND origin = 'London'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "b13309e7452c302029423b7ec37f9e3a1e7edda5",
                "query": "SELECT T1.name FROM train AS T1 WHERE NOT EXISTS ( SELECT T2.id FROM route AS T2 WHERE T2.station_id = 1 AND T1.id = T2.train_id ) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "27ccf396179900c2726e76164b9fe265106cfd19",
                "query": "SELECT T1.origin, COUNT(DISTINCT T1.destination), COUNT(DISTINCT T2.network_name), COUNT(DISTINCT T3.day_of_week) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id JOIN station AS T3 ON T2.station_id = T3.id WHERE T3.wind_speed_mph > 15 OR T1.train_number BETWEEN 10 AND 20 OR T1.time IN (SELECT time FROM train WHERE name = 'Express') GROUP BY T1.origin ORDER BY T1.origin ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "916a2984d405bc800f67571211a21424a6e5f4fb",
                "query": "SELECT train_number FROM train WHERE name = 'Express' OR origin = 'London' OR destination NOT IN (SELECT local_authority FROM station)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "924cf0fbce7b617da4f3bdd185fe5c13b7fe7434",
                "query": "SELECT T1.train_number, T2.network_name, T3.day_of_week FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id JOIN station AS T3 ON T2.station_id = T3.id JOIN weekly_weather AS T4 ON T3.id = T4.station_id WHERE T4.high_temperature > 20 ORDER BY T1.train_number ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "14d01312edde18647901640479a6550df334d86c",
                "query": "SELECT T1.train_number, T2.network_name FROM train AS T1 JOIN route AS T3 ON T1.id = T3.train_id JOIN station AS T2 ON T3.station_id = T2.id WHERE T1.origin = 'London'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "81659056b3fee83b373db4250b97220e76db0d5e",
                "query": "SELECT T1.name, T2.network_name FROM train AS T1 JOIN route AS T3 ON T1.id = T3.train_id JOIN station AS T2 ON T2.id = T3.station_id WHERE T1.name = 'Train_1' AND T2.network_name = 'Station_1' AND T2.network_name = (SELECT T2.network_name FROM train AS T1 JOIN route AS T3 ON T1.id = T3.train_id JOIN station AS T2 ON T2.id = T3.station_id WHERE T1.name = 'Train_0') LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "3343f627cbefa57a1828ad1b816a515cb9039d91",
                "query": "SELECT T1.name FROM (SELECT T2.name, MAX(T1.high_temperature) FROM weekly_weather AS T1 INNER JOIN station AS T2 ON T1.station_id = T2.id GROUP BY T2.name) AS T1 WHERE T1.MAX > 0 ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#) AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c16edcbfa868352a7c8c5894870ec37f14910030",
                "query": "SELECT MIN(T1.time) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id WHERE T2.station_id = 1 LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6461b522854dafcdb3b538a664fdb8163a07dfa4",
                "query": "SELECT COUNT(DISTINCT T1.origin), T1.train_number FROM train AS T1 WHERE T1.train_number > 100 OR T1.time = 'day' OR EXISTS (SELECT 1 FROM station AS T2 WHERE T2.network_name = 'London') ORDER BY T1.train_number DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8bff77f0e511911b822061a3b7ca963e61cd9819",
                "query": "SELECT train_number FROM train WHERE id > (SELECT MAX(train_id) FROM route) ORDER BY train_number DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2f551f8b6bfa13ea767e43e373c51027c6f60965",
                "query": "SELECT T1.name, COUNT(T2.station_id) FROM train AS T1 JOIN route AS T2 ON T1.id = T2.train_id GROUP BY T1.name HAVING COUNT(T2.station_id) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1e7720f4aaa190df3e00e1784d15dd7292aa19b3",
                "query": "SELECT train_number AS changed_name, COUNT(id) FROM train WHERE time = '08:00' GROUP BY train_number ORDER BY train_number DESC",
                "template": "SELECT #COLUMN# AS changed_name, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "499e494656cf393287c480b3bcdf51555b7c065a",
                "query": "SELECT T4.name, COUNT(DISTINCT T4.network_name), SUM(T4.id), SUM(T3.train_id) FROM weekly_weather AS T1 JOIN station AS T2 ON T1.station_id = T2.id JOIN route AS T3 ON T2.id = T3.station_id JOIN train AS T4 ON T3.train_id = T4.id WHERE T1.low_temperature < 10 ORDER BY T4.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "981ad6fd31d144226dc76299f029a5d87b51958b",
                "query": "SELECT T1.network_name FROM station AS T1 JOIN route AS T2 ON T1.id = T2.station_id JOIN train AS T3 ON T2.train_id = T3.id JOIN weekly_weather AS T4 ON T1.id = T4.station_id ORDER BY T1.network_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "browser_web": [
            {
                "hash": "6a9782cec94b0c1afa5858703fe0ad35cd83052b",
                "query": "SELECT id FROM Web_client_accelerator WHERE Operating_system = 'Windows' OR id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser WHERE browser_id = 1 ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "eceb75ce0c7ebb6ed2c2bbaa2d59b56fe208ff0e",
                "query": "SELECT T1.name, SUM(T2.market_share) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.Operating_system = 'Windows' GROUP BY T1.name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "000519d7e97223e1cc86df12b6319314bdff7095",
                "query": "SELECT COUNT(DISTINCT T2.name), T1.name, T1.Operating_system FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T2.compatible_since_year > 2010 ORDER BY COUNT(DISTINCT T2.name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "2d99f780b08d38fbd57643d9ea30e2adfd8c3fd8",
                "query": "SELECT COUNT(name), COUNT(Operating_system) FROM Web_client_accelerator WHERE Client != 'Win32'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "3779942cae778737ee7b17815b7f14d91eb57b83",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM Web_client_accelerator AS T1 WHERE NOT EXISTS (SELECT T3.accelerator_id FROM accelerator_compatible_browser AS T3 JOIN browser AS T2 ON T3.browser_id = T2.id WHERE T1.id = T3.accelerator_id AND T2.market_share > 0.5) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "87452d130e71cdbad45d2665b29d883fea7495cd",
                "query": "SELECT T2.name, MAX(T2.market_share) FROM Web_client_accelerator AS T1 JOIN browser AS T2 ON T1.id = T2.id WHERE T2.name = ( SELECT name FROM browser WHERE market_share > 0.5 ) GROUP BY T2.name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "081a4cc65eed88fcefec1f10bf1bdb8149e06642",
                "query": "SELECT COUNT(DISTINCT T1.name), T1.name, T1.name FROM Web_client_accelerator AS T1 WHERE T1.name = 'Web_client_accelerator'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "4b1db15a0530a701507999383a3db4bea34fe3f1",
                "query": "SELECT name FROM Web_client_accelerator WHERE id > 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT T1.name, COUNT(T2.browser_id) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T1.Connection = 'SSL' AND T2.compatible_since_year <= 2010",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "179fb4ff7f239127f03adea949978635786d2be3",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T3.browser_id = T2.id WHERE T2.market_share <= 0.5 GROUP BY T1.name HAVING COUNT(T2.name) > 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "33054e69c6e8335338519a6ccd8203f69152153a",
                "query": "SELECT AVG(T2.market_share) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T3.browser_id = T2.id WHERE T1.id < 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "679eac1481a6f6358344121e0368f0ef5c69654c",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.id) FROM Web_client_accelerator AS T1 WHERE T1.id = 1 AND T1.Operating_system = 'Windows' AND T1.Connection BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T1.id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "67b896a4c3ea191ac49e3d495d42fe44fdd30471",
                "query": "SELECT T1.name, T2.market_share FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T3.browser_id = T2.id WHERE T1.id < 5 ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "298f3f7bfad382d1f376cc4df7bc734fa68feab9",
                "query": "SELECT T1.name, T2.market_share, SUM(T1.id) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T2.id = T3.browser_id WHERE T1.Client != T2.name GROUP BY T2.market_share ORDER BY T2.market_share ASC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "83b2d074f842ee06c118f80263ae33c08f9e0a47",
                "query": "SELECT T1.name, T2.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T2.id = T3.browser_id WHERE T3.compatible_since_year BETWEEN 2000 AND 2010",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0f1c93d07e607004778078dfe002810c36fa8ac3",
                "query": "SELECT COUNT(DISTINCT T1.name), T2.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T3 ON T1.id = T3.accelerator_id JOIN browser AS T2 ON T2.id = T3.browser_id WHERE T1.id > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "4ec462fee82ae454d0fc5c911794ac73af4be3ee",
                "query": "SELECT T2.name, COUNT(DISTINCT T1.id), SUM(T3.market_share) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share <= 0.5 GROUP BY T2.name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "ffd3e96197b39c1eb27c52e672ed64336dbd23c6",
                "query": "SELECT T1.name FROM Web_client_accelerator AS T1 WHERE T1.id IN ( SELECT T2.accelerator_id FROM accelerator_compatible_browser AS T2 ) ORDER BY T1.id DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "252beb4d6e4b0f910d64b8c1a3452994ba3b1e77",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T2.name), COUNT(DISTINCT T3.name) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.Client = 'Windows' OR T2.compatible_since_year BETWEEN 2000 AND 2010 OR T3.market_share > 0.5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "07cde2da4742bb9d95b4586447ac90cc2a00e35f",
                "query": "SELECT MIN(COUNT(DISTINCT T1.name)), COUNT(DISTINCT T1.Client) FROM Web_client_accelerator AS T1 WHERE T1.id < 50 HAVING MIN(COUNT(DISTINCT T1.name)) > 10",
                "template": "SELECT MIN(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# HAVING MIN(COUNT(DISTINCT #COLUMN#)) > #VALUE#"
            },
            {
                "hash": "24d6b61030e883c7954f3c58d3e22e5818d3b672",
                "query": "SELECT T1.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE NOT EXISTS (SELECT 1 FROM accelerator_compatible_browser AS T4 JOIN browser AS T5 ON T4.browser_id = T5.id WHERE T4.accelerator_id = T2.accelerator_id AND T5.market_share < T3.market_share) ORDER BY T3.market_share ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b29acc09efc7109ab173c3ff409a3a53bf19818b",
                "query": "SELECT T1.name, T2.name FROM Web_client_accelerator AS T1 JOIN Web_client_accelerator AS T2 ON T1.id = T2.id WHERE T1.Operating_system < 'Windows'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE#"
            },
            {
                "hash": "7f380275f85da5224b406a8a37d740da2ef1c96c",
                "query": "SELECT T1.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T1.Client = 'Chrome' AND T2.compatible_since_year > 2010 AND T1.id NOT IN (SELECT accelerator_id FROM accelerator_compatible_browser WHERE browser_id = 1) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0afe5bfdac8f2901921189c8c39fe2a2141ccca0",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.browser_id) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T2.compatible_since_year > 2010 AND T1.Client = 'Windows' AND T2.browser_id IN (SELECT id FROM browser WHERE market_share > 0.5)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "ea9c1c3a411983fa46ed2287736ae6b9a5c53ebb",
                "query": "SELECT T1.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T2.compatible_since_year < 2010 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "mountain_photos": [
            {
                "hash": "a996e76fe66a01015da4d9d484c856237153e1f9",
                "query": "SELECT COUNT(DISTINCT name) FROM mountain WHERE Height > 1000 OR Prominence > 500 OR EXISTS ( SELECT mountain_id FROM photos WHERE mountain_id = mountain.id AND color = 'black' ) ORDER BY id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.id AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "18b7f4c1edec3876c7666378edd25dd44168bfce",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name) FROM mountain AS T1 JOIN mountain AS T2 ON T1.Height > T2.Height",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# > #COLUMN#"
            },
            {
                "hash": "7c3f768a7a3e1edf474b5594e087e4c1b91f3a2e",
                "query": "SELECT MIN(T1.Height) FROM mountain AS T1 WHERE T1.Country = 'USA' LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# AS \""
            },
            {
                "hash": "132228701c34d054ba5cffca0b28a38fbd9e0cb4",
                "query": "SELECT COUNT(DISTINCT T1.color), COUNT(DISTINCT T2.brand), T2.name FROM photos AS T1 JOIN mountain AS T2 ON T1.mountain_id = T2.id WHERE T2.Height < 3000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "ce37e1f2240f8cb64b42013dc05e177fcac8fc78",
                "query": "SELECT T1.name, T2.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.Range NOT IN (SELECT Range FROM mountain AS T4 JOIN photos AS T5 ON T4.id = T5.mountain_id WHERE T5.color = 'BW')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "16e8f32af62963b860ce002be50e10998bbc8411",
                "query": "SELECT T1.name, T2.name, T3.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.Range = 'Alps' OR T2.color = 'black and white' OR T3.focal_length_mm BETWEEN 50 AND 100 ORDER BY T3.focal_length_mm LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "c860ff4a6ccb02e3bb3def03053ab0d9c8f0f3fa",
                "query": "SELECT T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T3.id = T2.camera_lens_id WHERE T1.Height > 2000 AND T2.color = 'red' AND NOT EXISTS (SELECT 1 FROM photos AS T4 WHERE T4.mountain_id = T1.id AND T4.color = 'black')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9b6a927edb7651c93c0663a0b4b803a55b6b51e6",
                "query": "SELECT name FROM mountain WHERE Height < 3500 OR Height BETWEEN 4000 AND 5000 OR Range = 'Alps' ORDER BY Height ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8c2d2d5bc38148842e9b8445953561cc492afcf5",
                "query": "SELECT T1.name, MIN(T1.Height) FROM mountain AS T1 JOIN mountain AS T2 ON T1.Range = T2.Range GROUP BY T1.name ORDER BY MIN(T1.Height) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "fb55f6436fdfad6795863ddb7f723a1148f9174a",
                "query": "SELECT AVG(T2.focal_length_mm), AVG(T3.Height), T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id JOIN mountain AS T3 ON T2.mountain_id = T3.id WHERE T1.focal_length_mm BETWEEN 10 AND 100",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a96f22a96d08213a977d3b4480bb5b0d55a2c448",
                "query": "SELECT T1.name, T2.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.Height < ( SELECT AVG(Height) FROM mountain )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# )"
            },
            {
                "hash": "1ad382c76b685fe1ace488f1db2bcd945f13bd02",
                "query": "SELECT Height FROM mountain WHERE Height BETWEEN (SELECT MIN(Height) FROM mountain) AND (SELECT MAX(Height) FROM mountain)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "b730638a4081b2baab0b6d33b163d64b905bc8c6",
                "query": "SELECT name FROM mountain WHERE id NOT IN (SELECT mountain_id FROM photos WHERE name = 'landscape' AND color = 'black and white') ORDER BY Height DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "47cfb010b0be058e10d65591f34de39b3e12cc2b",
                "query": "SELECT COUNT(DISTINCT name) FROM mountain WHERE Height BETWEEN 2000 AND 3000 ORDER BY name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "66ed766c363f76dc032d3e8564a4209b436c4102",
                "query": "SELECT * FROM mountain WHERE Height < 1000 ORDER BY Height ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "86b83bffdb706c612cf51f4de09a49e32761c142",
                "query": "SELECT T1.Range FROM mountain AS T1 WHERE T1.Country = 'USA' AND T1.Height < 5000 AND T1.name = 'Mount Everest'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# < #VALUE# AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "cddd8b5770bc49bc70c711039861be2b64190a7f",
                "query": "SELECT Height FROM mountain WHERE Height = 2000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "24e68f6e2b9cf04de9d21e3771b4b5534c71a597",
                "query": "SELECT T1.Range FROM mountain AS T1 WHERE T1.Height < 2000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "7d2656ccad8982ea38461344c44347011c529c89",
                "query": "SELECT COUNT(DISTINCT name), MAX(Height) FROM mountain ORDER BY Height ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1f3a971f5e553efd72c5fc87eed9d00c10b23d77",
                "query": "SELECT COUNT(*) FROM (SELECT T1.name, T1.Height FROM mountain AS T1 WHERE T1.Range = 'Alps' AND T1.Height BETWEEN 1000 AND 3000 AND T1.Prominence > 500) ORDER BY Height DESC LIMIT 5",
                "template": "SELECT COUNT(*) FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7fe925dec7088b9d9361122cef348ee9e01ef7c5",
                "query": "SELECT name AS foo, SUM(Height) FROM mountain GROUP BY name HAVING SUM(Height) > 1000",
                "template": "SELECT #COLUMN# AS #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            }
        ],
        "perpetrator": [
            {
                "hash": "a2f84c1e094e62520afea3fd73d0144d84ec9f0d",
                "query": "SELECT T1.Name FROM people AS T1 WHERE T1.People_ID NOT IN (SELECT T2.People_ID FROM perpetrator AS T2) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "87ae3fc5d152af180a23a203e988b64c96abf478",
                "query": "SELECT T1.Name, COUNT(T2.Perpetrator_ID) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "b74df347553f61286d486ea8bbe663cfe247fa68",
                "query": "SELECT T1.Name, T2.Location FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Injured NOT IN (SELECT T3.Injured FROM perpetrator AS T3)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "6921baae6bd6c8e252dc7265db45d84b127beed6",
                "query": "SELECT T1.Name, T2.Killed FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Year > (SELECT AVG(Year) FROM perpetrator) OR T1.Name = 'John' OR T1.Height < 170 ORDER BY T2.Killed ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# = '#VALUE#' OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e5bd37cead03ef5fc9286aebc501471fe0dfb5b6",
                "query": "SELECT SUM(T1.Killed) FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Weight >= 70",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "97542c7c9ce3ca981867fb46e7a4cb899af94919",
                "query": "SELECT SUM(Killed) + SUM(Injured) FROM perpetrator WHERE Year > 10 OR Location = 'New York' OR Year BETWEEN 2000 AND 2010",
                "template": "SELECT SUM(#COLUMN#) + SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "27f0404acebf776598ef531ecc3da0944fa16330",
                "query": "SELECT T1.Perpetrator_ID, T2.Name FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Killed = 10 AND T1.Injured BETWEEN 10 AND 20 AND T1.Location IN (SELECT Location FROM perpetrator WHERE Year > 2000) ORDER BY T1.Perpetrator_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "196394bae98529ee914f89b1883fc04ddcbe0833",
                "query": "SELECT COUNT(DISTINCT T1.Perpetrator_ID) FROM perpetrator AS T1 WHERE T1.Killed > (SELECT COUNT(T2.Killed) FROM perpetrator AS T2 GROUP BY T2.Country) ORDER BY T1.Perpetrator_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3affd03f9d1f058ff4823f74e6785ab29d88b333",
                "query": "SELECT P.Name FROM people AS P JOIN perpetrator AS R ON P.People_ID = R.People_ID WHERE R.Year BETWEEN 1990 AND 2000 AND R.Killed > 100 AND NOT EXISTS (SELECT 1 FROM perpetrator AS R1 WHERE R1.Killed > R.Killed) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "07bf1f40da9a83749a781201dd14ca2a1d79e841",
                "query": "SELECT T1.Name, COUNT(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d783956569c1ed782a95b45385d1fb96dc39aca8",
                "query": "SELECT SUM(T1.Killed) FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Year BETWEEN 2000 AND 2020",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "01f4fc1c95b22dfae28b263f9f7697d309fb34f2",
                "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Injured <= 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "40f902df16d87efb46cf1cbcee9ee8ca6768f926",
                "query": "SELECT T1.Location, SUM(T1.Injured) FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN perpetrator AS T3 ON T2.People_ID = T3.People_ID WHERE T1.Location = 'City' GROUP BY T1.Location",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "0cd79224c8de7c76ec5c234085343d7daae4e63d",
                "query": "SELECT T1.Name, COUNT(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "caecd076b0cf7bb65ffcbd8667407b244f568cfa",
                "query": "SELECT T1.Name, T2.Location FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Home_Town = T2.Location",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#"
            },
            {
                "hash": "bacd5eea11014962819e750937b494b5cd4b27e1",
                "query": "SELECT T1.Name FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height BETWEEN 150 AND 200",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "24d4c667a26fce7af630f864cacc97315ea86cf8",
                "query": "SELECT COUNT(DISTINCT T1.Country), SUM(T1.Injured) FROM perpetrator AS T1 WHERE T1.Year != 2000 GROUP BY T1.Country",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "d618e067539bde73aca670dca4578531c96e626f",
                "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Year BETWEEN 2000 AND 2010 AND NOT EXISTS (SELECT 1 FROM perpetrator AS T3 WHERE T3.Killed > 100) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "55628b68658795c604e2d86b14b60f17f5ce21a8",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), COUNT(T1.Perpetrator_ID) FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name != 'John Doe' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "816c7f289fe8c9b2a72cc4f6a93c6eb2205ecfa2",
                "query": "SELECT p.Name FROM perpetrator AS t1 JOIN people AS p ON t1.People_ID = p.People_ID WHERE (t1.Killed > 10 OR t1.Injured BETWEEN 5 AND 20) AND NOT EXISTS (SELECT 1 FROM perpetrator WHERE perpetrator.Year IS NULL)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# IS NULL) LIMIT #VALUE#"
            },
            {
                "hash": "32c076ce252eddd8752d9fd3cd6deb3d061a242e",
                "query": "SELECT T1.Name FROM people AS T1 WHERE EXISTS (SELECT 1 FROM perpetrator AS T2 WHERE T2.People_ID = T1.People_ID AND T2.Killed > 10) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8958d1fba13f87990c7e627c4825d86ffb6e8cb7",
                "query": "SELECT * FROM perpetrator WHERE Killed = (SELECT MAX(Killed) FROM perpetrator)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "f41c99ee4c58fa90d5c516e5182715a4254f3d04",
                "query": "SELECT Killed FROM perpetrator WHERE Killed > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "0b26ecee59fb2096b202e8fe384cd590a60d1845",
                "query": "SELECT COUNT(DISTINCT T1.Killed), COUNT(DISTINCT T1.Injured), T2.Name FROM perpetrator AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Year <= 2000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            }
        ],
        "sports_competition": [
            {
                "hash": "93c735e9cae112623609d0adac65d7db54d171c9",
                "query": "SELECT name FROM club WHERE Region != 'Europe' ORDER BY name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f0ac618290ffe2785cc918f0633409c59db15923",
                "query": "SELECT T1.name, T2.name, T3.Score FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID JOIN competition_result AS T3 ON T2.Club_ID = T3.Club_ID_2 WHERE T1.Region = 'North' AND T2.Position = 'Scrum-half' AND T3.Score BETWEEN 10 AND 20",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "f5fdee574175a9a88662e833addc1a6823bb7e71",
                "query": "SELECT T1.name, T2.Rank FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T1.Club_ID = T3.Club_ID WHERE T3.Apps < 10 AND T2.Total < 100 ORDER BY T2.Rank ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3a1387ff3fa79f2402fae2f98c170a0a70a246ba",
                "query": "SELECT T1.name FROM player AS T1 INNER JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Apps > (SELECT AVG(Apps) FROM player) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2946c1cc02e75c6636646ab53e6e59e8e8bc0d94",
                "query": "SELECT T1.Gold FROM club_rank AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID JOIN competition_result AS T3 ON T2.Club_ID = T3.Club_ID_1 WHERE T1.Total BETWEEN 10 AND 20 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d44ac51431e310df39c1a8aaa050018cf7636d06",
                "query": "SELECT name AS ClubName, Region FROM club",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "5faa2045390fb4733cf55ec461ed1067cbebb0db",
                "query": "SELECT COUNT(DISTINCT T2.Position), COUNT(T1.Player_ID) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = 'Club1' OR T2.Apps BETWEEN 10 AND 20 OR NOT EXISTS (SELECT 1 FROM competition_result AS T3 WHERE T3.Club_ID_2 = T2.Club_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "22eed7185210e9c653dce6bc2f7f4a579ba3fa40",
                "query": "SELECT name FROM club WHERE Region = 'Europe'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "6886dbfdac1e5520ff7a8d6b612b5ff9733762b0",
                "query": "SELECT T3.name, T2.Total FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T1.Club_ID = T3.Club_ID WHERE T1.Region = 'Europe' AND T2.Total BETWEEN 10 AND 50 ORDER BY T2.Total DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "668ee22fb663ad32f9ee79026e36644a588acbcb",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Start_year = '2000' AND T2.Position = 'Forward' AND T2.Apps > ( SELECT AVG(Apps) FROM player WHERE Position = 'Forward' )",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "d5ce1feb9548a8daf4fda2b7c80b130195720d9f",
                "query": "SELECT COUNT(DISTINCT name) FROM club WHERE Region = 'North' OR Start_year BETWEEN 1900 AND 1950 AND Club_ID > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "16e81159bd68489628cc13041ea1f3edd95e9aa3",
                "query": "SELECT T3.name FROM competition AS T1 INNER JOIN competition_result AS T2 ON T1.Competition_ID = T2.Competition_ID INNER JOIN club AS T3 ON T2.Club_ID_1 = T3.Club_ID WHERE T3.Region != 'South'",
                "template": "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "34b80f2ae3ad231b23b1076e2214a93255a8a7d1",
                "query": "SELECT COUNT(DISTINCT T1.name), AVG(T2.Tries) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Region = 'Europe' OR T2.Position = 'Forward' OR T2.Apps BETWEEN 1 AND 5 OR T2.Points IN (SELECT Points FROM player WHERE Tries > 5) GROUP BY T1.name ORDER BY T2.Tries ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3d5134b2cac1e393a372765c77f444163be0a1d2",
                "query": "SELECT T1.name, T2.Total FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID JOIN player AS T3 ON T2.Club_ID = T3.Club_ID WHERE T3.Player_ID NOT IN ( SELECT Player_ID FROM player WHERE Position = 'Hooker' )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "c0f474de2b855954743e91476afa7f601b54e236",
                "query": "SELECT name FROM club WHERE Start_year < '2010' ORDER BY Club_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bb6e71c73844380050199ade0f6504a55a9a3e16",
                "query": "SELECT T2.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE NOT EXISTS (SELECT 1 FROM competition_result AS T3 WHERE T3.Club_ID_1 = T2.Club_ID AND T3.Score = 'Win') ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c810b74e60873344c7a92f23d97abd94b20cfc9f",
                "query": "SELECT name FROM club AS T1 WHERE Tries > 10 AND Tries > 20 AND Tries > 30",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "e0bb8b857504510fa19a83e7716f6cc461eb3f5f",
                "query": "SELECT T1.name, SUM(T2.Gold) FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Region = 'Europe' GROUP BY T1.name HAVING SUM(T2.Gold) > 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "e912aac2321688d18b8546df406265207f3852b4",
                "query": "SELECT T1.name FROM club AS T1 WHERE T1.Region = 'Auckland' OR T1.name NOT IN (SELECT T2.name FROM club AS T2 WHERE T2.Start_year < '2000')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "b715fe8e34cdbafa52a551e56759c181d29a53b7",
                "query": "SELECT T1.name, SUM(T2.Tries) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID ORDER BY T1.name ASC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "9efc61a4dc0985af3b38ec7de3dea7a99f3da9db",
                "query": "SELECT Club_ID, SUM(Total) FROM club_rank WHERE Club_ID = 1 OR Rank = 2 OR Club_ID NOT IN (SELECT Club_ID FROM club_rank WHERE Gold = 5) GROUP BY Club_ID HAVING SUM(Total) = 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "7066e95acb1f074370f1c14b08017e1d6406a6fc",
                "query": "SELECT name, MAX(Start_year) FROM club",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "9a7888db93d3fe7143a36f0afb9505e18811f3e8",
                "query": "SELECT T1.name, MAX(T2.Total) FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Rank = 1 AND T2.Gold > 10 AND NOT EXISTS (SELECT * FROM club_rank AS T3 WHERE T3.Club_ID = T1.Club_ID AND T3.Rank > 2) LIMIT 5",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "0f749362075eda2808d70a290398d0086ab9d312",
                "query": "SELECT Club_ID, name FROM club WHERE Region >= 'East' ORDER BY Club_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d7468ae52211bca35dd1f4f0753df158674ebb9d",
                "query": "SELECT COUNT(DISTINCT T1.Club_ID), SUM(T2.Total) FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Region != 'Europe'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            }
        ],
        "csu_1": [
            {
                "hash": "5b8b49bda49cf6c90cccd86707c5402f4862b148",
                "query": "SELECT COUNT(DISTINCT Campus) FROM Campuses WHERE Year >= 2000 ORDER BY Year DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d72698ec5e40b85a90871c266f94cea7f1d444c2",
                "query": "SELECT T1.Campus, T2.Campus FROM Campuses AS T1 JOIN Campuses AS T2 ON T1.Id = T2.Id WHERE T1.Year = 2010 AND T2.Year = 2015 AND T1.Location IN (SELECT Location FROM Campuses)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "233f1633f40b6bf8db16a44b6507770b97014d6b",
                "query": "SELECT COUNT(DISTINCT T2.Discipline) FROM discipline_enrollments AS T1 JOIN discipline_enrollments AS T2 ON T1.Campus = T2.Campus WHERE T1.Year = 2010 AND T2.Year = 2010 AND EXISTS (SELECT 1 FROM degrees AS T3 WHERE T3.Campus = T1.Campus AND T3.Year = T1.Year) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "1c63f89d83e3c42b864d1b9e69a48cf1d11071c2",
                "query": "SELECT COUNT(DISTINCT Campus) , COUNT(DISTINCT Location) , SUM(Year) FROM Campuses WHERE Id = 1 ORDER BY Id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "981cd455560cf3a11ad8c6df19d4f7849131905d",
                "query": "SELECT Campus FROM Campuses WHERE EXISTS (SELECT 1 FROM degrees WHERE degrees.Campus = Campuses.Id GROUP BY degrees.Campus HAVING COUNT(DISTINCT degrees.Degrees) > 1) ORDER BY Campus ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f5bc6385df2599cdfd8e0418d31861fa7c75711b",
                "query": "SELECT T1.Campus, T2.TotalEnrollment_AY FROM Campuses AS T1 JOIN enrollments AS T2 ON T1.Id = T2.Campus JOIN csu_fees AS T3 ON T1.Id = T3.Campus WHERE T3.CampusFee != 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "e3464bf3b3abbd4862566a5be6f96217e0bd888f",
                "query": "SELECT T1.Campus, T3.Degrees FROM Campuses AS T1 JOIN enrollments AS T2 ON T1.Id = T2.Campus JOIN degrees AS T3 ON T1.Id = T3.Campus WHERE T2.TotalEnrollment_AY BETWEEN 10000 AND 20000 ORDER BY T3.Degrees DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d6806ddfce0dd90035a7c6f80cc07a15b2cc8dab",
                "query": "SELECT Campus FROM Campuses WHERE Id = 5 OR Location = 'Los Angeles' OR EXISTS (SELECT 1 FROM csu_fees WHERE Campus = 5) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "5148f5dd5784db7118390824c8f7302cd59e0ab7",
                "query": "SELECT COUNT(DISTINCT T1.Campus), T2.TotalEnrollment_AY FROM enrollments AS T1 JOIN enrollments AS T2 ON T1.Campus = T2.Campus WHERE T2.Year = 2015 OR T1.TotalEnrollment_AY BETWEEN 1000 AND 2000 OR T2.FTE_AY > 1000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "dd58ad07e9fb92ddf78a21e08ad1c511f0d840c9",
                "query": "SELECT Campus, Location, County FROM Campuses",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "8beb2e1602dd060b20a5e448221cee19c72877a8",
                "query": "SELECT Campus, Location FROM Campuses WHERE Year = 2010 AND Location = 'California'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "3d8d5d1b3d93575b1d2e90370bb00567e3b78065",
                "query": "SELECT Campus FROM Campuses AS T1 WHERE T1.Year = 2000 AND T1.Location = 'Sacramento' AND NOT EXISTS (SELECT 1 FROM degrees AS T2 WHERE T2.Campus = T1.Id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#)"
            },
            {
                "hash": "40c69713f76e996aa22c1173e0c92f217368d8c0",
                "query": "SELECT Year, MIN(Degrees) FROM degrees WHERE Campus != 1 GROUP BY Year",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "bf10168d7ef86076acb7057e4caffd6357efbb52",
                "query": "SELECT Campus FROM Campuses WHERE Year BETWEEN 2000 AND 2010 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9dbb8c2c8909885e884ee99830254e6cb3af42d9",
                "query": "SELECT T1.Campus, COUNT(DISTINCT T2.Discipline) FROM Campuses AS T1 JOIN discipline_enrollments AS T2 ON T1.Id = T2.Campus WHERE NOT EXISTS (SELECT 1 FROM enrollments AS T3 WHERE T3.Campus = T1.Id AND T3.TotalEnrollment_AY > 10000)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "a8ed46e9387bebcd0e9787007aed0a448fc2bb48",
                "query": "SELECT Location FROM Campuses WHERE County = 'San Francisco' AND Year BETWEEN 2010 AND 2015 AND Campus NOT IN (SELECT Campus FROM csu_fees WHERE CampusFee > 10000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "52ee73aed8caade79ca083a144d50c1f32631276",
                "query": "SELECT SUM(T1.TotalEnrollment_AY), SUM(T2.Degrees) FROM enrollments AS T1 JOIN degrees AS T2 ON T1.Campus = T2.Campus WHERE T1.Year = 2010 AND T2.Year BETWEEN 2000 AND 2010 AND T2.Degrees > 1000",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "7881223e3eb3301ee04be70ba558b247a925b9dd",
                "query": "SELECT T1.CampusFee, T2.Degrees FROM csu_fees AS T1 JOIN degrees AS T2 ON T1.Campus = T2.Campus WHERE T2.Degrees <= 1000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d1704913599c9abaad521a7422856c0f4d9a41e5",
                "query": "SELECT COUNT(DISTINCT T3.Discipline), COUNT(DISTINCT T4.Year), T2.Location FROM Campuses AS T1 JOIN csu_fees AS T2 ON T1.Id = T2.Campus JOIN discipline_enrollments AS T3 ON T2.Campus = T3.Campus JOIN enrollments AS T4 ON T3.Campus = T4.Campus WHERE T4.TotalEnrollment_AY >= 10000 ORDER BY T3.Discipline DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "897231b7073045ae94264c81d3361258b7f5501e",
                "query": "SELECT T1.Campus, T2.Discipline FROM Campuses AS T1 JOIN discipline_enrollments AS T2 ON T1.Id = T2.Campus WHERE T1.Year > 2000 ORDER BY T1.Campus DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7a1d008068c197db4cfdc6a17dc030298a33e19f",
                "query": "SELECT CampusFee FROM csu_fees WHERE Campus IN ( SELECT Campus FROM enrollments WHERE TotalEnrollment_AY > 10000 )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )"
            },
            {
                "hash": "a59a5e63491372eb16634754bcaf0e3fce58337d",
                "query": "SELECT T1.Campus, AVG(T2.CampusFee) FROM Campuses AS T1 JOIN csu_fees AS T2 ON T1.Id = T2.Campus WHERE T1.Location = 'North' GROUP BY T1.Campus ORDER BY T1.Campus ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4eb76deef9dcbf2610a3fcd1ca3bc6dce5db2d46",
                "query": "SELECT Campus, AVG(CampusFee) FROM csu_fees WHERE Year BETWEEN 2000 AND 2010 OR CampusFee > (SELECT AVG(CampusFee) FROM csu_fees WHERE Year < 2000) GROUP BY Campus ORDER BY Campus ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7fa78cd8c6709eeeecb7e7b51e1255b906fa1a5b",
                "query": "SELECT Campus AS CampusName FROM Campuses WHERE Year <= 2015 ORDER BY Campus ASC",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "22d133894e9a1feda095d42217f827501d6672c9",
                "query": "SELECT T1.Campus, SUM(T1.Faculty), SUM(T2.Degrees) FROM faculty AS T1 JOIN degrees AS T2 ON T1.Campus = T2.Campus WHERE T1.Year IN (SELECT Year FROM faculty WHERE Faculty > 100)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            }
        ],
        "company_1": [
            {
                "hash": "c36a25b47a6ee29753bc8fce9975cd94aae8ebf1",
                "query": "SELECT T1.Fname FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c1e6c99162d8b045a8c9fe58797746f6c646c8a8",
                "query": "SELECT COUNT(DISTINCT T1.Ssn), T1.Salary FROM employee AS T1 WHERE T1.Salary > 50000 OR T1.Dno IN (SELECT T2.Dnumber FROM department AS T2 WHERE T2.Dname = 'Research') ORDER BY T1.Salary ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a179d83b317df8a4d0b133a05e7db0ffc54f1895",
                "query": "SELECT Fname, Lname, Salary FROM employee WHERE Salary <= 50000 AND Sex = 'M'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "3687d37e7b03c0e4a144942c4091209659bca2a5",
                "query": "SELECT Lname, Salary FROM employee WHERE Salary BETWEEN 50000 AND 100000 ORDER BY Salary DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "af9b03483cac6b49172394671c8e0a5805ab2c35",
                "query": "SELECT T1.Lname, T2.Pname FROM employee AS T1 JOIN project AS T2 ON T1.Dno = T2.Dnum WHERE T1.Salary = 10000 ORDER BY T2.Pnumber DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f0e8ab2e2b5c14800d99ef402569301dc6efb3d9",
                "query": "SELECT T1.Fname, COUNT(T2.Pno) FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T1.Salary > 50000 AND EXISTS (SELECT T3.Pnumber FROM project AS T3 WHERE T3.Pnumber = T2.Pno AND T3.Pname = 'ProjectX')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "918eeb3992b4cb4f41366a180d04294c43c15450",
                "query": "SELECT COUNT(DISTINCT T1.Ssn), T2.Pname FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn JOIN project AS T3 ON T2.Pno = T3.Pnumber WHERE T3.Dnum = 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "3c9db207144e7b76defb3f8b7df2302f901716c8",
                "query": "SELECT T1.Dname, AVG(T2.Salary), SUM(T3.Hours) FROM department AS T1 JOIN employee AS T2 ON T1.Mgr_ssn = T2.Ssn JOIN works_on AS T3 ON T2.Ssn = T3.Essn WHERE T2.Salary >= 50000 ORDER BY T1.Dname ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "aaf767bd48ca59b56cda08c230f721d3465ae02b",
                "query": "SELECT COUNT(DISTINCT T1.Essn), SUM(T2.Hours) FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T2.Hours <= 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "cafe93703522ad57cdf2c2f8c2425216325ac7b4",
                "query": "SELECT Lname FROM employee WHERE Ssn IN (SELECT Essn FROM works_on GROUP BY Essn HAVING MIN(Hours) > 5)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "569981bce861050eec77ac0e41343df62b9dcf9d",
                "query": "SELECT T1.Dname, COUNT(T1.Dnumber) FROM department AS T1 JOIN project AS T2 ON T1.Dnumber = T2.Dnum WHERE T1.Dname != 'Research' LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "517e822b3d48f1eda3561f83bcf0265b2a90e0ea",
                "query": "SELECT COUNT(T1.Pno) FROM works_on AS T1 JOIN project AS T2 ON T1.Pno = T2.Pnumber",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "79c8ccd2532a65f090a6c627f10b08c8ab36e0f0",
                "query": "SELECT T1.Fname, T2.Pnumber FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE EXISTS (SELECT 1 FROM project AS T3 WHERE T3.Pnumber = T2.Pno AND T3.Dnum = 5) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9c853ec8d129239590a930303cd9e4006b5b9869",
                "query": "SELECT COUNT(DISTINCT Pno), COUNT(DISTINCT Essn), COUNT(DISTINCT Hours) FROM works_on WHERE NOT EXISTS (SELECT 1 FROM dependent WHERE dependent.Essn = works_on.Essn AND dependent.Sex = 'M') OR Pno BETWEEN 1 AND 10 GROUP BY COUNT(DISTINCT Hours) HAVING AVG(Hours) > 10 ORDER BY COUNT(DISTINCT Essn) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY COUNT(DISTINCT #COLUMN#) HAVING AVG(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "41d5cb32d5d831b3c575413cd0745d44a7586a81",
                "query": "SELECT E.Lname, W.Hours FROM employee AS E JOIN works_on AS W ON E.Ssn = W.Essn WHERE W.Hours > 5 ORDER BY W.Hours DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "cf7627d3bd194eb31d7405bfea4d6597ccf26754",
                "query": "SELECT COUNT(Ssn) , Fname FROM employee ORDER BY Fname ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c91cfbf02237b86f42f54d6ddabfa68f71a700f2",
                "query": "SELECT Lname, Fname FROM employee WHERE Salary <= 50000 ORDER BY Lname ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "abac56ece4949ca0786074247eb30452f11261b8",
                "query": "SELECT COUNT(DISTINCT T1.Ssn), COUNT(T1.Salary) FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T2.Hours < 10 ORDER BY COUNT(T1.Salary) ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "16e81159bd68489628cc13041ea1f3edd95e9aa3",
                "query": "SELECT T1.Fname FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T1.Salary != 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "ff4742af702976a489cdab9a56c5576d46c8b148",
                "query": "SELECT Fname, Lname FROM employee WHERE Dno IN (SELECT Dnumber FROM department WHERE Dname = 'Research')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6dd47b22d1a0e25b6d9c6630f514d918959d9d10",
                "query": "SELECT T4.Dname, COUNT(DISTINCT T2.Essn), COUNT(DISTINCT T3.Essn), SUM(T1.Hours) FROM works_on AS T1 JOIN employee AS T2 ON T1.Essn = T2.Ssn JOIN project AS T3 ON T1.Pno = T3.Pnumber JOIN department AS T4 ON T3.Dnum = T4.Dnumber WHERE T4.Dname = 'Research' GROUP BY T4.Dname LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ca58b100ec568fce93cd904a03123f5b1cae8b17",
                "query": "SELECT COUNT(DISTINCT Plocation) FROM project WHERE Pnumber > 10 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7a11ebe9dfb36f00df2421d83508b91af84e667f",
                "query": "SELECT T1.Fname, AVG(T2.Hours) FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T1.Salary > 50000 AND T2.Hours > 10 OR T2.Pno BETWEEN 1 AND 5 GROUP BY T1.Fname HAVING AVG(T2.Hours) > 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "274e726085a8d5caf0afe88f10060ad731bea556",
                "query": "SELECT Fname, COUNT(DISTINCT Dno) FROM employee WHERE Ssn NOT IN (SELECT Essn FROM works_on) GROUP BY Fname ORDER BY Fname ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5447e00ae82e929b5e22bc4f96a6e2a1ef5b4360",
                "query": "SELECT T1.Fname, T2.Pname FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn JOIN project AS T3 ON T2.Pno = T3.Pnumber WHERE T1.Salary BETWEEN 50000 AND 100000 OR T2.Hours > 20 OR NOT EXISTS (SELECT * FROM department AS T4 WHERE T4.Dnumber = T3.Dnum)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "6442bc795e39ec3932988dc424437d7ccf2704e0",
                "query": "SELECT T1.Fname, T1.Lname, T2.Pnumber FROM employee AS T1 JOIN works_on AS T2 ON T1.Ssn = T2.Essn WHERE T1.Salary BETWEEN 30000 AND 50000 OR T2.Hours > 20 OR T1.Ssn NOT IN (SELECT Super_ssn FROM employee WHERE Dno = 1) ORDER BY T1.Fname ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            }
        ],
        "cre_Doc_Workflow": [
            {
                "hash": "5cb6624048a0caac9ca7c58320cb0675f3e52ddd",
                "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id JOIN Business_Processes AS T3 ON T2.process_id = T3.process_id WHERE T3.process_id <= 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0a4c5aa319e10cea4b577b917c2c765a609cdb95",
                "query": "SELECT T2.staff_details FROM Documents_Processes AS T1 JOIN Staff_in_Processes AS T2 ON T1.document_id = T2.document_id JOIN Staff AS T3 ON T3.staff_id = T2.staff_id WHERE T1.process_outcome_code < 'XYZ' ORDER BY T3.staff_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "05037d8ec29223cea774b59f09b990ae99bccecf",
                "query": "SELECT DISTINCT T1.document_name, T2.document_description FROM Documents AS T1 JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id JOIN Business_Processes AS T3 ON T3.process_id = T2.process_id WHERE T2.process_outcome_code >= 10 AND T3.process_name >= 1 ORDER BY T1.document_id DESC",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "993e18d41620bcfb12f90ecd99364762254f8e65",
                "query": "SELECT COUNT(staff_id), COUNT(staff_details), COUNT(staff_details) FROM Staff WHERE staff_id = 100",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "93f500bc53acb9c26b9757cbd3fed2f7695f6a3e",
                "query": "SELECT COUNT(DISTINCT T1.staff_role_code) FROM Ref_Staff_Roles AS T1 WHERE EXISTS (SELECT 1 FROM Staff_in_Processes AS T2 WHERE T1.staff_role_code = T2.staff_role_code AND T2.staff_id = 1)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#)"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT other_details FROM Staff WHERE staff_id != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "6b9fdd3ad15f33af73f89d0a0c598086cb2431f6",
                "query": "SELECT document_id FROM Documents_Processes WHERE process_status_code != 'P' ORDER BY document_id ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "df597f3112fdd98f91c40c10a269d2f6a1e18f94",
                "query": "SELECT COUNT(T2.process_outcome_code) FROM Documents AS T1 JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id WHERE T2.process_outcome_code = 'outcome1' OR T2.process_outcome_code = 'outcome2' OR T2.process_outcome_code NOT IN (SELECT process_outcome_code FROM Process_Outcomes)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "4cd3c77a4c654a59888e3c4795ee4e599317ab13",
                "query": "SELECT COUNT(DISTINCT T2.document_name), T1.staff_details FROM Staff AS T1 JOIN Documents AS T2 ON T1.staff_id = T2.document_id WHERE T2.document_description > 'abc'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8d5889cd2e8d304a04a995e122e8750abca27890",
                "query": "SELECT COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.staff_id = T2.staff_id JOIN Documents_Processes AS T3 ON T2.document_id = T3.document_id WHERE T3.process_status_code <= 'active'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "80c33236867f287890045f1edec78d078fa7bccb",
                "query": "SELECT staff_details, MIN(staff_id) FROM Staff WHERE staff_id >= 100 ORDER BY staff_id ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "11b05e47baeec9f811e4f10bf57139441ca90a42",
                "query": "SELECT COUNT(DISTINCT T1.staff_id), COUNT(DISTINCT T1.staff_details), COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 WHERE T1.staff_details BETWEEN 'abc' AND 'xyz' AND T1.staff_id IN ( SELECT T2.staff_id FROM Staff_in_Processes AS T2 WHERE T2.staff_role_code = 'role1' ) AND NOT EXISTS ( SELECT T3.staff_id FROM Staff AS T3 WHERE T3.staff_id = T1.staff_id AND T3.staff_details = 'abc' ) ORDER BY T1.staff_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) AND NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d178b7f662e089afe976273a3f18e9b0f8bd2192",
                "query": "SELECT T1.staff_id, COUNT(DISTINCT T1.staff_details) FROM Staff AS T1 GROUP BY T1.staff_id HAVING MIN(T1.staff_id) > 100 ORDER BY staff_id ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cadb65405b8b356aadb8a4591317476b57eaa07f",
                "query": "SELECT COUNT(DISTINCT T1.staff_id) FROM Staff_in_Processes AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.staff_details = 'admin'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "3d35917a0dba4b7908cde9ba607030a01347b1bb",
                "query": "SELECT document_name FROM Documents WHERE document_description < 'text'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "c737841a36d249a3a5bf45fae550455385e3c41b",
                "query": "SELECT COUNT(DISTINCT T1.document_name) FROM Documents AS T1 WHERE T1.document_id = 101 AND T1.author_name BETWEEN 'A' AND 'Z' OR T1.document_description = 'test'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c785c653fc8ea1e28ea35edda72b3ec15fb8b533",
                "query": "SELECT T1.staff_id, COUNT(T2.staff_role_code), SUM(T3.process_outcome_code) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.staff_id = T2.staff_id JOIN Documents_Processes AS T3 ON T2.document_id = T3.document_id WHERE T1.staff_details != 'test' GROUP BY T2.staff_role_code ORDER BY T3.process_outcome_code ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8f84adf62217cb3b88bdaa4694e63300aff7e7bb",
                "query": "SELECT T1.staff_id FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id = 101 AND T2.staff_role_code = 'Manager' AND T1.staff_id BETWEEN (SELECT COUNT(staff_id) FROM Staff_in_Processes GROUP BY staff_id HAVING COUNT(staff_id) > 1) AND 105",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) AND #VALUE#"
            },
            {
                "hash": "10c4f59b38ad04ac5b416ba450ef52e55094fdd3",
                "query": "SELECT T1.staff_id, AVG(T2.process_outcome_code) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.staff_id = T2.staff_id JOIN Documents_Processes AS T3 ON T2.document_id = T3.document_id WHERE T1.staff_id NOT IN (SELECT staff_id FROM Staff_in_Processes WHERE staff_role_code = 'Manager') LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "d781ce0cf776c44664cb166bb37193373982610b",
                "query": "SELECT COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.staff_id = T2.staff_id WHERE T2.staff_role_code = 'Manager' OR T2.date_from BETWEEN '2020-01-01' AND '2020-12-31' OR T1.staff_details LIKE '%HR%'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# LIKE '#VALUE#'"
            },
            {
                "hash": "f6ce4576e8b60ca0763096e0d3aa1ec014ae489f",
                "query": "SELECT T1.staff_details, T2.staff_details FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_details >= 'staff' ORDER BY T1.staff_details ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "734422f5c6d52f01ecee8d3da1236feae1bcdbe3",
                "query": "SELECT author_name FROM Documents WHERE NOT EXISTS ( SELECT 1 FROM Staff_in_Processes WHERE Staff_in_Processes.staff_id = 100 AND Staff_in_Processes.document_id = Documents.document_id ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #TABLE#. #COLUMN# ) LIMIT #VALUE#"
            },
            {
                "hash": "4418c03e7ff3034e7b54e5a88e15dded04d8d74e",
                "query": "SELECT T1.process_outcome_description, T2.process_name FROM Process_Outcomes AS T1 JOIN Business_Processes AS T2 JOIN Documents_Processes AS T3 ON T1.process_outcome_code = T3.process_outcome_code AND T2.process_id = T3.process_id WHERE T3.process_status_code > 'Pending' ORDER BY T2.process_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4f63e6a63d9be495020c6be236c599052c5c7c97",
                "query": "SELECT T1.process_name, T2.staff_role_description, MAX(T3.document_description) FROM Business_Processes AS T1 JOIN Documents_Processes AS T2 ON T1.process_id = T2.process_id JOIN Documents AS T3 ON T2.document_id = T3.document_id WHERE T1.process_description >= 'test' ORDER BY T1.process_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC"
            }
        ],
        "world_1": [
            {
                "hash": "8e6fbbf9e00e42fbc1f4423136184d417fb32c98",
                "query": "SELECT T1.Name, COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Population > 1000000 OR T1.Continent = 'Asia' OR EXISTS (SELECT * FROM city WHERE Population > 1000000 AND CountryCode = T1.Code) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b090e877e91f8d3d98f29844f52c0429e470358b",
                "query": "SELECT COUNT(Name) , COUNT(DISTINCT Population) ,  MAX(Population) FROM city AS c ORDER BY Population DESC",
                "template": "SELECT COUNT(#COLUMN#) , COUNT(DISTINCT #COLUMN#) ,  MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7fdbfc4b6682810eb3cac18abff1358237e3c46c",
                "query": "SELECT Name FROM city ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3d35917a0dba4b7908cde9ba607030a01347b1bb",
                "query": "SELECT Name, District FROM city WHERE CountryCode < 'USA' AND Name < 'New York'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' AND #COLUMN# < '#VALUE#'"
            },
            {
                "hash": "7c3f768a7a3e1edf474b5594e087e4c1b91f3a2e",
                "query": "SELECT Name AS CityName, COUNT(Population) FROM city WHERE Population < 100000 LIMIT 10",
                "template": "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5b590fad0e08313d588c50f23a5c7c44cc8483e3",
                "query": "SELECT Name FROM city AS T1 WHERE Population < 10000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6bd9cf76b31853d22770e069cdb67f38a828b008",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT ID), Population FROM city WHERE Population > 100000 OR District = 'New York' AND Population BETWEEN 50000 AND 100000 ORDER BY ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ca6d9ed93a2105942f274baaa0c882765e989aa4",
                "query": "SELECT T1.Name, SUM(T2.Population) FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.District = 'Bali'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "27f8e6c58a4a8e28d8026d5148dfb3c40ec9f13b",
                "query": "SELECT T1.CountryCode, SUM(T1.Population) FROM city AS T1 WHERE T1.Population > 10000 AND T1.District = 'district1' AND EXISTS (SELECT T2.Code FROM country AS T2 WHERE T2.Code = T1.CountryCode) GROUP BY T1.CountryCode ORDER BY T1.CountryCode ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5252e90f6ad295ac012248dc812dc0b1bcceccbb",
                "query": "SELECT MAX(Population) FROM city WHERE Population < 1000000",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "b3b2fca4e253c1212d2bcd644cf0d0f0726fae9c",
                "query": "SELECT SUM(ID) FROM city AS T1 WHERE T1.Population <= 100000",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# <= #VALUE#"
            },
            {
                "hash": "3777c6fc4176951192135dc96d237639ad7a8eef",
                "query": "SELECT Name, Population FROM city WHERE Population > (SELECT AVG(Population) FROM city) ORDER BY Population ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a0d74f2c6c52c867dfdb9f42f1300d8c602f0348",
                "query": "SELECT T1.Name, T2.Population, T3.SurfaceArea FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode ORDER BY T2.Population DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f760713e2b6a1c58a8dc21abe8e1740dc20b4604",
                "query": "SELECT Name, AVG(Population) FROM city WHERE Population > 100000 GROUP BY Name HAVING AVG(Population) > 100000 LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "85a2d2796af6ac483b22638005f9402325e414d1",
                "query": "SELECT Name FROM city WHERE CountryCode IN (SELECT Code FROM country WHERE SurfaceArea > 1000000) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "84673ff3d215cfb53f6e07894fd464b7c0ae9fb1",
                "query": "SELECT Name, Population FROM city WHERE Population < 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "7e9f682e93272a625f64e3c2cf1afe16b16eb46a",
                "query": "SELECT Name FROM city AS T1 WHERE Population <= 100000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "17e499d07f851a189cd8a978a84fe4c21969919b",
                "query": "SELECT MIN(Population) FROM city WHERE Population <= 800000 ORDER BY Population ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a56f4fcc16846f7df645352473db5a7dd1e4e15f",
                "query": "SELECT Name FROM city WHERE Population BETWEEN 10000 AND 50000 OR Population > 100000 OR EXISTS (SELECT CountryCode FROM country WHERE city.CountryCode = country.Code AND country.Population > 1000000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "d8e3fc6b28ea5d9d90f49a2630210fe197337a14",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT CountryCode) FROM city WHERE ID > 100 AND EXISTS (SELECT 1 FROM country WHERE country.Code = city.CountryCode) ORDER BY ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "989a524e82345c1d4c1893d8cbfee33f5501e5f5",
                "query": "SELECT T1.Name, T2.Name, T3.Language FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE T1.Name != 'New York'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "bf415df1328fbd5c376024282f6e053c4b1b6605",
                "query": "SELECT AVG(Population) FROM city WHERE Population >= 100000 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "46872e0b21aaca8f8072dd5e4fb5466c7ae7d5e5",
                "query": "SELECT COUNT(DISTINCT Name), CountryCode FROM city WHERE Population > 1000 AND CountryCode = 'USA' AND ID NOT IN (SELECT Capital FROM country)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "bd7bf6dc672886677e33d6641f4083672028632d",
                "query": "SELECT T1.Name FROM city AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN countrylanguage AS T3 ON T2.Code = T3.CountryCode WHERE NOT EXISTS (SELECT T4.CountryCode FROM country AS T4 JOIN countrylanguage AS T5 ON T4.Code = T5.CountryCode WHERE T5.Percentage < 50 AND T4.Code = T2.Code) ORDER BY T1.Population DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            }
        ],
        "film_rank": [
            {
                "hash": "c7f32ece8194a957f04fd9524e7ad4efeac28380",
                "query": "SELECT SUM(Gross_in_dollar), AVG(Gross_in_dollar) FROM film WHERE Studio != 'MGM'",
                "template": "SELECT SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "36f6417a06ff0eb15655ed6a03021e45736d347a",
                "query": "SELECT COUNT(DISTINCT T1.Title) , COUNT(DISTINCT T2.Country) FROM film AS T1 INNER JOIN film_market_estimation AS T3 ON T1.Film_ID = T3.Film_ID INNER JOIN market AS T2 ON T3.Market_ID = T2.Market_ID WHERE T1.Gross_in_dollar >= 100000000 ORDER BY T1.Title DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3fa35a562044503b54da227ed80752fffd14e0ae",
                "query": "SELECT COUNT(DISTINCT T2.Title), T1.Country FROM film_market_estimation AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T1.Market_ID = T3.Market_ID WHERE T1.Low_Estimate > 100 AND T1.High_Estimate BETWEEN 1000 AND 10000 AND T3.Number_cities > 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "97dd4ef8a2257a8e58f5e96b5947e7402aa320b8",
                "query": "SELECT COUNT(DISTINCT T1.Studio) AS Studio, T1.Title FROM film AS T1 WHERE T1.Gross_in_dollar < 100000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "54c3e00e409dc159ca44dcc9beaac934bcc3ebf6",
                "query": "SELECT T2.Country, T3.Low_Estimate, T3.High_Estimate FROM film AS T1 JOIN film_market_estimation AS T3 ON T1.Film_ID = T3.Film_ID JOIN market AS T2 ON T3.Market_ID = T2.Market_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "62bcc848c7ca562932cf1bbf3b90478488f0acd3",
                "query": "SELECT T1.Title, T2.Year FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Low_Estimate < 1000000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "c9704ec7337b24ffb02af76854ffdeeed9f7a5d1",
                "query": "SELECT T1.Title, T2.Country, T3.Low_Estimate FROM film AS T1 JOIN film_market_estimation AS T3 ON T1.Film_ID = T3.Film_ID JOIN market AS T2 ON T3.Market_ID = T2.Market_ID WHERE T3.High_Estimate BETWEEN 10 AND 100 ORDER BY T3.Low_Estimate ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b0c7c0e37dc05364ba4ec8706dc5dc98e3e97175",
                "query": "SELECT COUNT(DISTINCT T1.Country), SUM(T2.Low_Estimate) FROM market AS T1 JOIN film_market_estimation AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Number_cities BETWEEN 1 AND 5 OR T1.Market_ID > 10 OR EXISTS (SELECT 1 FROM film WHERE film.Film_ID = T2.Film_ID AND film.Studio = 'Universal') ORDER BY T1.Number_cities DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "31b267444c107b674d613f93d2e622236edcf16b",
                "query": "SELECT T2.Title FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T3.Country != 'USA' AND T2.Type = 'Opening Weekend'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "fc57f7d7709558fea476d49e54502d28469d4322",
                "query": "SELECT COUNT(DISTINCT T3.Country), T1.Title, COUNT(T2.Year) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T2.High_Estimate > 10000 ORDER BY T1.Title ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "11c0c5ca77010b316263a3515ee9d257843b20b8",
                "query": "SELECT T2.Title, COUNT(DISTINCT T1.Low_Estimate) FROM film_market_estimation AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Year BETWEEN 2000 AND 2010 GROUP BY T2.Title HAVING COUNT(DISTINCT T1.Low_Estimate) ORDER BY COUNT(DISTINCT T1.Low_Estimate) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "d74a02aba1619ba94302acc87947062ac4a75ca0",
                "query": "SELECT COUNT(DISTINCT T1.Title), T2.Low_Estimate FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Gross_in_dollar > 50000000 AND T2.Type = 'Horror' AND T1.Studio NOT IN (SELECT Studio FROM film WHERE Director = 'James Cameron')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "63b17599a28763e07252c7f68270ec885269af2e",
                "query": "SELECT T1.Title, COUNT(DISTINCT T3.Country) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T2.Type = 'Action' ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "873f396ade4f8ad185932d9fb9c19c35ef2fb670",
                "query": "SELECT Title, MIN(Gross_in_dollar) FROM film AS T1 GROUP BY Title ORDER BY Title DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "014ce796cac127d61d885d54bdcffeffe4bd836d",
                "query": "SELECT AVG(T1.Low_Estimate) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN film AS T3 ON T3.Film_ID = T1.Film_ID WHERE T3.Title = 'Toy Story' OR T1.Low_Estimate BETWEEN 100 AND 500 OR EXISTS (SELECT * FROM film WHERE film.Title = 'The Incredibles')",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5ec7f7a2378d9b213724b5d59cd9cfe03233b576",
                "query": "SELECT T1.Title, T1.Studio FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Low_Estimate <= 100000000 AND T1.Gross_in_dollar <= 500000000 ORDER BY T1.Gross_in_dollar ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d3074c4d0ca07975bb1163192c793dc347674693",
                "query": "SELECT Market_ID, MIN(Low_Estimate) FROM film_market_estimation WHERE Type = 'type_value' GROUP BY Market_ID HAVING MIN(Low_Estimate) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "07d7b0a7029fa4de9995bc9202b133a652f52c26",
                "query": "SELECT T1.Title, COUNT(T2.Country), MAX(T3.Low_Estimate) FROM film AS T1 JOIN film_market_estimation AS T3 ON T1.Film_ID = T3.Film_ID JOIN market AS T2 ON T3.Market_ID = T2.Market_ID WHERE T1.Studio = 'Warner Bros' GROUP BY T1.Title ORDER BY MAX(T3.Low_Estimate) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "2c531226684119415976e4342c1bc00232b1077e",
                "query": "SELECT T1.Title, COUNT(T2.Estimation_ID), SUM(T3.Low_Estimate) FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T3.Market_ID = T2.Market_ID LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "2b218190bab6e5ed53359e2690cdb5ed997c0407",
                "query": "SELECT Title FROM film WHERE Gross_in_dollar > 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "bcb66c4250394daea2231721a5d62f65b6056b92",
                "query": "SELECT T1.Title, T2.Country, T3.Low_Estimate FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID WHERE T2.Low_Estimate > 100 AND T3.Number_cities > 50 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e58e058c2b573ba397bcc3af4d3db29b3b048c18",
                "query": "SELECT T1.Country, SUM(T2.Low_Estimate) FROM market AS T1 JOIN film_market_estimation AS T2 ON T1.Market_ID = T2.Market_ID GROUP BY T1.Country HAVING SUM(T2.Low_Estimate) >= 5000000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "c36be0cc4675e87be7b9cabc4d6dd219799d5bb0",
                "query": "SELECT T1.Title, T2.Country FROM film AS T1 JOIN film_market_estimation AS T3 ON T1.Film_ID = T3.Film_ID JOIN market AS T2 ON T3.Market_ID = T2.Market_ID WHERE T3.Low_Estimate > (SELECT AVG(Low_Estimate) FROM film_market_estimation)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "164a8f3f7cb69c6414c57cc720eba275de22e3fd",
                "query": "SELECT T3.Title, MAX(T1.Low_Estimate) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN film AS T3 ON T1.Film_ID = T3.Film_ID WHERE T3.Studio = 'Universal' AND T1.Type IN (SELECT Type FROM film_market_estimation WHERE Film_ID = 1) GROUP BY T3.Title",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "a8c9003aafd2330a43710b13dc844e02d69cbc9f",
                "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation WHERE High_Estimate BETWEEN 10 AND 100) AND Gross_in_dollar > 10 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b704da7d90749d9f2fcca476f6bb0bf8f0302941",
                "query": "SELECT COUNT(T1.Film_ID), T2.Low_Estimate FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID JOIN market AS T3 ON T2.Market_ID = T3.Market_ID",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "cc238607ac50973966245e1127e89781ac8e8baa",
                "query": "SELECT COUNT(DISTINCT Title), COUNT(DISTINCT Director), COUNT(Gross_in_dollar) FROM film ORDER BY Title ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "music_4": [
            {
                "hash": "e84af26f56e122b6839adea6c5c7a0913f2d1b04",
                "query": "SELECT Artist, COUNT(DISTINCT Famous_Title) FROM artist WHERE Artist_ID IN (SELECT Artist_ID FROM volume WHERE Weeks_on_Top > 10) ORDER BY Artist ASC LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3695501e317a175f333e9d0f35347ee828e5f4e4",
                "query": "SELECT COUNT(DISTINCT Artist_ID), COUNT(*) FROM artist WHERE Age <= 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "7674a3d5df5cbaefc7cbda2a99d8b0b6ae86c34a",
                "query": "SELECT Artist FROM artist",
                "template": "SELECT #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "9f428794656975e4f88d0094a961debdd3186ea8",
                "query": "SELECT Artist_ID, MAX(Weeks_on_Top) FROM volume WHERE Artist_ID IN (SELECT Artist_ID FROM artist WHERE Age > (SELECT MAX(Age) FROM artist)) LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#"
            },
            {
                "hash": "254cfe02215bc5d249fcf0f65f7fc3f418e8621a",
                "query": "SELECT V1.Artist_ID FROM (SELECT T2.Artist_ID FROM artist AS T1 INNER JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Age BETWEEN 20 AND 30 OR T1.Famous_Release_date IN ( SELECT T2.Issue_Date FROM artist AS T1 INNER JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'The Beatles' ) GROUP BY T2.Artist_ID HAVING MIN(T1.Age) > 25) AS V1 ORDER BY V1.Artist_ID ASC",
                "template": "SELECT #COLUMN# FROM ( SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ) AS #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6a32dc804af8e998789199be9d88028278caf2c5",
                "query": "SELECT COUNT(DISTINCT T2.Artist_ID) FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Category < 'Rock'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "702ed80f4ab62781c5fc55a2c099624dc397feb8",
                "query": "SELECT Artist FROM artist WHERE Artist_ID IN (SELECT Artist_ID FROM volume WHERE Volume_Issue = 'issue1') ORDER BY Artist DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8aec97a67c6cec19b20f956b94a8a0bd4342c99b",
                "query": "SELECT T1.Artist, T2.Weeks_on_Top FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Age BETWEEN 20 AND 30 AND T2.Weeks_on_Top > 5 AND NOT EXISTS (SELECT 1 FROM music_festival AS T3 WHERE T3.Volume = T2.Volume_ID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "468613e55886a3e238f017d1920f48baf6d6befa",
                "query": "SELECT T1.Artist_ID, T1.Artist, T2.Volume_Issue, T3.Music_Festival FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN music_festival AS T3 ON T2.Volume_ID = T3.Volume GROUP BY T1.Artist_ID HAVING MAX(T3.Volume) = 10 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "eac470c957729791ee876c7f3c9b2a8c9dbb358a",
                "query": "SELECT T1.Artist_ID, COUNT(DISTINCT T2.Volume_Issue) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN music_festival AS T3 ON T2.Volume_ID = T3.Volume WHERE T2.Issue_Date BETWEEN '1990-01-01' AND '1999-12-31' OR T2.Weeks_on_Top > 10 OR T3.Result NOT IN (SELECT Result FROM music_festival WHERE Volume > 100) GROUP BY T1.Artist_ID HAVING MAX(T2.Weeks_on_Top) > 5 ORDER BY COUNT(DISTINCT T2.Volume_Issue) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "8da85ce1a480fda81e2c2dd11005833b90ea3114",
                "query": "SELECT SUM(T1.Weeks_on_Top), T3.Artist FROM volume AS T1 JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN music_festival AS T3 ON T1.Volume_ID = T3.Volume WHERE T2.Age BETWEEN 30 AND 60",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0689421db31b1903795f63b53244eab67d9627a7",
                "query": "SELECT COUNT(DISTINCT T1.Artist), T1.Age, SUM(T1.Age) FROM artist AS T1 WHERE T1.Age > 20 OR T1.Age BETWEEN 30 AND 40",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0aa4ab4325a6a20c171a1f9925f93e30a1f3e514",
                "query": "SELECT T1.Artist_ID FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN music_festival AS T3 ON T2.Volume_ID = T3.Volume WHERE T1.Age BETWEEN 20 AND 30 AND T2.Weeks_on_Top > 5 AND T3.Result = 'Winner' GROUP BY T1.Artist_ID ORDER BY T1.Artist_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d15641207f380bfd20d11ae0af4b2d34ebf54649",
                "query": "SELECT T1.Artist, T2.Artist FROM artist AS T1 JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID ORDER BY T1.Artist ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9deaddc28338770291198570192d80b2df4efcaa",
                "query": "SELECT Artist_ID FROM artist WHERE Age < 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "1bf53ff8bf46293ed027d0a93ba929c4e0a137a1",
                "query": "SELECT T1.Artist, T3.Music_Festival, SUM(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN music_festival AS T3 ON T2.Volume_ID = T3.Volume WHERE T1.Age BETWEEN 20 AND 50 AND T2.Weeks_on_Top > 10 ORDER BY SUM(T2.Weeks_on_Top) DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "2b2e9e5e363b5df7be6bb9c804c324743956d24b",
                "query": "SELECT COUNT(DISTINCT T1.Artist), T2.Weeks_on_Top FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Age < 25 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "32c076ce252eddd8752d9fd3cd6deb3d061a242e",
                "query": "SELECT T1.Artist FROM artist AS T1 WHERE EXISTS ( SELECT T2.Volume_Issue FROM volume AS T2 WHERE T2.Artist_ID = T1.Artist_ID AND T2.Weeks_on_Top > 10 ) ORDER BY T1.Artist DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dfae6a8a0271637422dc76093b8b5b79ea2c79e2",
                "query": "SELECT COUNT(Volume_Issue) FROM volume WHERE Weeks_on_Top BETWEEN 10 AND 20 ORDER BY Weeks_on_Top DESC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6439551fd55c81b8fc277d7362340bb0cd54653e",
                "query": "SELECT AVG(T1.Age), SUM(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Song = 'song_name'",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "0a80ff951dacee7dcb3a239380b78b2ce6f77b37",
                "query": "SELECT T1.Artist FROM artist AS T1 WHERE T1.Age BETWEEN 20 AND 40 AND T1.Famous_Release_date = '2020' GROUP BY T1.Artist ORDER BY T1.Artist ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "bc20933e50aef853932d66334064101b3325466b",
                "query": "SELECT T1.Artist, AVG(T1.Age) FROM artist AS T1 WHERE T1.Artist_ID IN (SELECT T2.Artist_ID FROM volume AS T2 WHERE T2.Weeks_on_Top > 10) GROUP BY T1.Artist HAVING COUNT(DISTINCT T1.Famous_Title) > 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#"
            },
            {
                "hash": "30565a046831d4c4e6d4cf5b280831315ecd2c8f",
                "query": "SELECT COUNT(Artist_ID), MAX(Age) FROM artist WHERE Artist_ID <= 10",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "c7a79d8a179d385d8f57f265e01f7cbf93605a1e",
                "query": "SELECT Artist, COUNT(DISTINCT Famous_Title) FROM artist GROUP BY Artist HAVING MAX(Famous_Release_date) > '2000' ORDER BY Artist ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1fe2d51fc4c5fdb6ad8aa56ab4fc9c16b4fd3625",
                "query": "SELECT Artist FROM artist AS T1 WHERE T1.Artist_ID = 1 LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9d79f861a9d9f686a12fa13702e2c0685b69b69d",
                "query": "SELECT COUNT(DISTINCT T1.Artist_ID) FROM artist AS T1 WHERE T1.Age > ( SELECT AVG(Age) FROM artist ) OR T1.Artist_ID IN ( SELECT T2.Artist_ID FROM volume AS T2 WHERE T2.Weeks_on_Top > 5 ) ORDER BY T1.Artist_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a363825171afe57d7cfc2acea1de5d94dd9cd7d3",
                "query": "SELECT COUNT(DISTINCT v.Artist_ID) FROM volume v JOIN music_festival m ON v.Volume_ID = m.Volume WHERE v.Artist_ID = 1 AND EXISTS (SELECT 1 FROM artist a WHERE a.Artist_ID = v.Artist_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            }
        ],
        "railway": [
            {
                "hash": "2c3789332402469ef7254459af33a945673bf61e",
                "query": "SELECT Railway, SUM(Wheels) FROM railway WHERE Railway_ID > 10 GROUP BY Railway HAVING SUM(Wheels) > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "fa99a008f84a2e1a6f3ae06d544a674af189a3ff",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Train_Num) FROM manager AS T1 JOIN railway_manage AS T3 ON T1.Manager_ID = T3.Manager_ID JOIN railway AS T2 ON T3.Railway_ID = T2.Railway_ID WHERE T2.Builder = 'Builder1' OR T2.Wheels = 'Wheels1' OR NOT EXISTS (SELECT 1 FROM railway AS T4 WHERE T4.Railway_ID = T3.Railway_ID AND T4.Location = 'Location1') ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "12244b18c5e78bcb8a26cfceef052eebe585acde",
                "query": "SELECT SUM(Wheels), COUNT(Railway_ID), MIN(Location) FROM railway WHERE Built > '1900'",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "3a9c5932f30ded2f8aaa255d9fe1efc179d94ab4",
                "query": "SELECT T1.Railway, T2.Name, T3.Name FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID JOIN manager AS T3 ON T3.Manager_ID = T2.Railway_ID WHERE T1.Wheels BETWEEN 3 AND 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "efe578c1b125ab067a2aaaa89394be33efccfe60",
                "query": "SELECT Railway FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train WHERE Name = 'Suburban train' AND From = 'St. Petersburg')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "35106d0dbc3a5cb90512f8484265066ca75044a2",
                "query": "SELECT T2.Name, T2.Level FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID WHERE T2.Level <= 5 ORDER BY T2.Level DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "dbf44e152212a04b036fbc99c698d2d2f7fcb034",
                "query": "SELECT T1.Name, T2.Arrival, T3.Age, SUM(T2.Arrival) FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID JOIN railway AS T3 ON T2.Railway_ID = T3.Railway_ID WHERE T2.Arrival > 1000 GROUP BY T2.Arrival HAVING SUM(T2.Arrival) ORDER BY T2.Arrival ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "18789dcb39006575c1ae17ca6ceb2f6871f458ae",
                "query": "SELECT COUNT(DISTINCT T2.Railway_ID), COUNT(DISTINCT T1.Manager_ID), T3.Name FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID JOIN railway AS T3 ON T2.Railway_ID = T3.Railway_ID WHERE T1.Age > 50 AND T2.Railway_ID NOT IN (SELECT Railway_ID FROM train WHERE Train_Num = 'T1') AND T3.Builder = 'USA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "517e822b3d48f1eda3561f83bcf0265b2a90e0ea",
                "query": "SELECT T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Train_ID = 123",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5c36c5496aeea29099163ce650c771558c6b58ca",
                "query": "SELECT COUNT(DISTINCT Railway_ID), Name FROM railway WHERE Wheels BETWEEN '4' AND '10'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "9cd3e832de1cdc7835c0cebb38640dee92f9b080",
                "query": "SELECT T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID JOIN railway_manage AS T3 ON T3.Railway_ID = T1.Railway_ID WHERE EXISTS ( SELECT 1 FROM manager AS T4 WHERE T4.Manager_ID = T3.Manager_ID )",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "d5f460e3d2a75e505f24c937f21e7c92259acae4",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM railway AS T1 LEFT JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name IS NOT NULL AND T1.Railway_ID NOT IN (SELECT Railway_ID FROM railway_manage)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "1f6d08e6be0d90eacfba5bc3cc0c2c644383843a",
                "query": "SELECT COUNT(Builder) , COUNT(DISTINCT Built) FROM railway WHERE Builder != 'USA'",
                "template": "SELECT COUNT(#COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "c8267f9cfbbe8e66280195ee6352adb17eedbae1",
                "query": "SELECT Railway FROM railway WHERE Wheels > 8 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b2f855c03f794e5dd9eaca79338a64497fddd6f8",
                "query": "SELECT LEVEL FROM manager LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "c4d76cc9473043d443a3560b6ab58d8f81b600dc",
                "query": "SELECT T1.Name, MAX(T2.Age) FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID JOIN railway AS T3 ON T2.Railway_ID = T3.Railway_ID WHERE T3.Railway_ID BETWEEN 100 AND 200 OR T1.Name = 'John' OR T3.Built = '1990' GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "d6bce43183be95e58371fb52224d5ed7d8871bba",
                "query": "SELECT T1.Railway, T2.Name FROM railway AS T1 JOIN manager AS T2 ON T1.Railway_ID = T2.Manager_ID WHERE T2.Age < 50 ORDER BY T2.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e94723adf453a8997793350ee01cfe19cdcd5b4f",
                "query": "SELECT Railway FROM railway WHERE Builder = 'Builder1' OR Location = 'Location1' ORDER BY Railway_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "35d1580b158fbd5d5b10f406629d4648d51fa254",
                "query": "SELECT COUNT(DISTINCT T1.Railway_ID), COUNT(T1.Train_ID) FROM train AS T1 WHERE T1.Railway_ID IN (SELECT T2.Railway_ID FROM railway AS T2 WHERE T2.Railway = 'Main')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "d8b8f151c45dc0bec1e07a36ca2dafe95cfbbc62",
                "query": "SELECT T1.Railway FROM railway AS T1 WHERE T1.Location BETWEEN 'A' AND 'G' AND T1.Builder = 'Builder1' AND NOT EXISTS (SELECT 1 FROM railway AS T2 WHERE T2.Railway_ID = T1.Railway_ID AND T2.Wheels = '4') ORDER BY T1.Railway_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b235764b5ee784b04bd3208a318ccb207b9dfed2",
                "query": "SELECT COUNT (DISTINCT T1.Railway_ID) , AVG (T2.Wheels) , COUNT (T1.Train_Num) FROM train AS T1 JOIN railway AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T1.Train_ID = 10 OR T2.Railway_ID BETWEEN 100 AND 200 OR T1.Name > 'Name'",
                "template": "SELECT COUNT (DISTINCT #COLUMN#) , AVG (#COLUMN#) , COUNT (#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "474810de405c5ddb41f6e9e110672d086e5c1b49",
                "query": "SELECT COUNT(T1.Manager_ID), COUNT(T2.Manager_ID) FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "6aea010c05095a31c89c93cec025135f6e216543",
                "query": "SELECT Name FROM railway WHERE Wheels >= 4 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "595ee5e07e5cc2edcdbd1f3e13cd187704f0e751",
                "query": "SELECT AVG(T1.Age), T2.Railway FROM manager AS T1 JOIN railway_manage AS T2 ON T1.Manager_ID = T2.Manager_ID WHERE T1.Country = 'USA' OR T2.Railway_ID BETWEEN 100 AND 200 OR T1.Level > 3 LIMIT 5",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "10a480c1d2cdc7b435f69183dc0f21198b9c31d5",
                "query": "SELECT COUNT(DISTINCT Railway_ID), COUNT(Train_ID) FROM train WHERE Train_ID < 1000 ORDER BY Train_ID DESC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f364f098cea90ae430f0e70ba2c80d90d2b58423",
                "query": "SELECT T2.Builder, MAX(T1.Arrival) FROM train AS T1 JOIN railway AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T1.Train_Num = '123' OR T1.From = 'New York' OR T1.Arrival BETWEEN (SELECT MIN(Arrival) FROM train) AND (SELECT MAX(Arrival) FROM train) GROUP BY T2.Builder",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = '#VALUE#' OR T1.#COLUMN# = '#VALUE#' OR T1.#COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN#"
            }
        ],
        "county_public_safety": [
            {
                "hash": "980a00b424827f478883d318183ede8177c48dca",
                "query": "SELECT Name, Crime_rate FROM county_public_safety WHERE Crime_rate > 100 ORDER BY Crime_rate DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "52e6e2aa474e66f92a70bb5ed50f4a8b603c672b",
                "query": "SELECT T1.Name, T2.Name FROM county_public_safety AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID ORDER BY T1.Police_officers DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "aaf5a273d75483a247fbf3df42102340b3815145",
                "query": "SELECT T1.Name, COUNT(T2.City_ID) FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T1.Population > 10000 GROUP BY T1.Name ORDER BY COUNT(T2.City_ID) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "1674cd22754612313dc317a644444d25c88c253c",
                "query": "SELECT T1.Name FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T1.Police_officers BETWEEN 100 AND 1000 AND T1.Crime_rate > 0.5 AND EXISTS (SELECT 1 FROM city WHERE city.County_ID = T1.County_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "6c8fd3ad29084cb91323170e7f370166e506f0e0",
                "query": "SELECT T1.Name, T2.Name FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN county_public_safety AS T3 ON T2.County_ID = T3.County_ID WHERE T1.Name != 'USA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "12859504d1ada53e4d2552b2cfc82a27cf90f7d7",
                "query": "SELECT T1.Name, T2.Name, T3.White FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN city AS T3 ON T2.County_ID = T3.County_ID WHERE T1.County_ID NOT IN (SELECT County_ID FROM city) ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "eac4607b09e7b7fbe9d686aeffbff6da467e8800",
                "query": "SELECT AVG(Police_officers), COUNT(DISTINCT Residents_per_officer), SUM(Case_burden) FROM county_public_safety WHERE Location = 'Rural' OR Police_force = 'Local' OR Police_officers NOT IN ( SELECT Police_officers FROM county_public_safety WHERE Crime_rate > 0.1 )",
                "template": "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT Name FROM county_public_safety WHERE Residents_per_officer <= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "1cbc8fa450e6990b106ec4d0abeacc0598ab6845",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(Police_officers) FROM county_public_safety",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "cf79dc4079950a1cbbf5d788d033eb844e9d1237",
                "query": "SELECT Name, Police_officers FROM county_public_safety WHERE Crime_rate > 50 AND Police_officers BETWEEN 100 AND 200 OR Residents_per_officer IN (SELECT MAX(Residents_per_officer) FROM county_public_safety) ORDER BY Police_officers ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b6944e8abb5b95a1babbf47ed0cdf33cb9a14016",
                "query": "SELECT Name, COUNT(DISTINCT Location), COUNT(DISTINCT Police_force) FROM county_public_safety WHERE Crime_rate >= 1 ORDER BY Crime_rate ASC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "57fa51ba843b8b199aaf402266a9edd1ae74fb08",
                "query": "SELECT Name FROM county_public_safety WHERE Police_officers != 0",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "404b90be82e51e71d66f4115b4d0ade56f2613bb",
                "query": "SELECT AVG(T1.Police_officers), T2.Name FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "26c49c00979fd8fb19baef5f7b200ef0dce0994c",
                "query": "SELECT MAX(Population), Crime_rate FROM county_public_safety WHERE Crime_rate >= 2.0 ORDER BY Crime_rate DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e6590a1d01035d42969b924be7e9d22f1125f32c",
                "query": "SELECT MIN(Police_officers), MAX(Crime_rate) FROM county_public_safety WHERE Residents_per_officer > 100 ORDER BY Police_officers ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b1b167b86ee86d65f4a097252bf3552148cce349",
                "query": "SELECT T1.Name, SUM(T1.Population) FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T1.Crime_rate <= 10 GROUP BY T1.Name LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "4792f29caaf94f40ef617ea3b7b8a6aea6abf75d",
                "query": "SELECT COUNT(DISTINCT T1.County_ID), T2.Name, T3.Location FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN city AS T3 ON T2.City_ID = T3.City_ID WHERE T1.Police_officers <= 50 ORDER BY T1.County_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7566dfda9cd8874fc7e1e1f9d2a499c811ef089c",
                "query": "SELECT AVG(Crime_rate) FROM county_public_safety WHERE Police_officers > 100 OR County_ID IN (SELECT County_ID FROM city WHERE Black > 1000) OR Police_force NOT IN (SELECT Police_force FROM county_public_safety WHERE Location = 'North')",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9f2f7967de0f375390dccfdc594912703bb3ecb2",
                "query": "SELECT T1.Name, T2.Population FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T2.County_ID IN (SELECT County_ID FROM county_public_safety WHERE Population > 100000) ORDER BY T2.Population DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b7c2b6b091ecf25eaa593bf006feac77475d39b1",
                "query": "SELECT AVG(T1.Population), AVG(T2.Multiracial), AVG(T3.White) FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN city AS T3 ON T2.County_ID = T3.County_ID",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ca66e097b76c8a7eb9bc2701fdcfd8cab5903cdd",
                "query": "SELECT T3.Name, COUNT(T2.White) FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN county_public_safety AS T3 ON T3.County_ID = T1.County_ID WHERE T1.County_ID NOT IN (SELECT County_ID FROM county_public_safety WHERE Police_force = 'Sheriff') GROUP BY T3.Name ORDER BY T3.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a82cb7128f532fdc6732041e0fd71202785878e8",
                "query": "SELECT T1.Name, COUNT(DISTINCT T3.County_ID), T1.Police_officers, SUM(T2.Crime_rate) FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID JOIN county_public_safety AS T3 ON T1.County_ID = T3.County_ID GROUP BY T1.Name HAVING SUM(T2.Crime_rate) > (SELECT SUM(Crime_rate) FROM county_public_safety WHERE Police_force = 'Local')",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > (SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "a15441df4da2d2d1825c8be2c73773b2842a5aec",
                "query": "SELECT T1.Name, SUM(T1.Population) FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID JOIN city AS T3 ON T2.County_ID = T3.County_ID WHERE T1.Population >= 100000 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# JOIN #TABLE# AS T3 ON T2.#COLUMN# = T3.#COLUMN# WHERE T1.#COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "73fd3c7ea008ccf65bb353c07e372d576b29d75c",
                "query": "SELECT T1.Population, T1.Police_officers, T2.Name FROM county_public_safety AS T1 JOIN city AS T2 ON T1.County_ID = T2.County_ID WHERE T1.Residents_per_officer < 1000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            }
        ],
        "vehicle_rent": [
            {
                "hash": "72edeeb9b6077ff985394a517e26d9114cb86a1b",
                "query": "SELECT T1.name, T2.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id WHERE T2.discount_id IN (SELECT id FROM Discount WHERE membership_credit < 100) ORDER BY T1.age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5e8477813d8f6e1fe118d4e357062ac0ebec92c8",
                "query": "SELECT COUNT(DISTINCT T1.id) FROM Customers AS T1 WHERE T1.age BETWEEN 20 AND 30 OR T1.age > 40 OR T1.membership_credit = 100 GROUP BY T1.age HAVING MAX(T1.membership_credit) = 500 ORDER BY COUNT(DISTINCT T1.id) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "d8b8f151c45dc0bec1e07a36ca2dafe95cfbbc62",
                "query": "SELECT T1.name FROM Customers AS T1 WHERE T1.age BETWEEN 20 AND 30 AND NOT EXISTS (SELECT 1 FROM Renting_history AS T2 WHERE T2.customer_id = T1.id AND T2.total_hours > 10) ORDER BY T1.age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f2a9d7035daabacfc20ea2e7e36f6a33dbc2c567",
                "query": "SELECT T1.name FROM Customers AS T1 JOIN Customers AS T2 ON T1.id = T2.id WHERE T1.membership_credit = (SELECT membership_credit FROM Discount WHERE id = T2.id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "61863d3e2083ff86b0256443858a36057a10a8cc",
                "query": "SELECT name FROM Customers ORDER BY name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c03b9a31e5b83bd2f6104a15349748d2bce9c79e",
                "query": "SELECT COUNT(DISTINCT age), COUNT(CASE WHEN membership_credit = 100 THEN age END), COUNT(CASE WHEN membership_credit != 100 THEN age END) FROM Customers WHERE membership_credit != 100 ORDER BY COUNT(DISTINCT age) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(CASE WHEN #COLUMN# = #VALUE# THEN #COLUMN# END), COUNT(CASE WHEN #COLUMN# != #VALUE# THEN #COLUMN# END) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "297195b08eb621266ae18cea3b458cbe6f8cfd62",
                "query": "SELECT MIN(T1.membership_credit), MIN(T2.membership_credit) FROM Customers AS T1 JOIN Discount AS T2 ON T1.membership_credit = T2.membership_credit WHERE T1.age < 25 ORDER BY T1.age ASC",
                "template": "SELECT MIN(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "42251ae899bb0ae5bc585c3501d2bdd5ecc1ecc2",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Renting_history AS T1 WHERE T1.total_hours BETWEEN 10 AND 100 AND T1.customer_id NOT IN (SELECT customer_id FROM Renting_history WHERE total_hours < 10) ORDER BY T1.customer_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "72381feb327c098f99ba1e5d24024c3b4e03f221",
                "query": "SELECT T1.name, SUM(T3.total_hours) FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id JOIN Vehicles AS T3 ON T3.id = T2.vehicles_id GROUP BY T1.name ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "56ed3b69deb0eaa7d08334bde4a2e9829b9a5942",
                "query": "SELECT COUNT(DISTINCT T1.id) , COUNT(T2.discount_id) , T1.name FROM Renting_history AS T1 JOIN Discount AS T2 ON T1.discount_id = T2.id WHERE T2.membership_credit BETWEEN 10 AND 100 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ec0253e25d6ab110e16c11bc4ea250f8111c1bd5",
                "query": "SELECT T1.name FROM Customers AS T1 INNER JOIN Customers AS T2 ON T1.id = T2.id WHERE T1.age > 25 OR T1.membership_credit BETWEEN 5 AND 10 OR EXISTS (SELECT 1 FROM Discount AS T3 WHERE T3.membership_credit = T1.membership_credit)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "0958a556fc49d0fb4cea0239f1f9aad86c52cf1a",
                "query": "SELECT T1.name, MAX(COUNT(DISTINCT T1.age)) FROM Customers AS T1 GROUP BY T1.name",
                "template": "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 GROUP BY #COLUMN#"
            },
            {
                "hash": "d00db0920197331c6f2d2bfdaadf95852d617554",
                "query": "SELECT T1.name, COUNT(T2.id) FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id WHERE T2.total_hours > 100 OR T1.age < 50 OR NOT EXISTS (SELECT 1 FROM Discount AS T3 WHERE T3.id = T2.discount_id AND T3.membership_credit > 10) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "5279858f816f68c4d55b6d6bddbd116148065ae6",
                "query": "SELECT * FROM Customers WHERE age BETWEEN 20 AND 30 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7370735e7c96944e7eb685d1296609dc3c855be7",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name) FROM Customers AS T1 JOIN Renting_history AS T3 ON T1.id = T3.customer_id JOIN Discount AS T2 ON T2.id = T3.discount_id WHERE T1.age > 20 AND T1.membership_credit IN (SELECT membership_credit FROM Discount) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "18387b96faa1008a53f7409dfc0a6abb018f6088",
                "query": "SELECT T1.id, MAX(T2.membership_credit) FROM Customers AS T1 JOIN Discount AS T2 ON T1.id = T2.id WHERE T2.id IN (SELECT MAX(T3.membership_credit) FROM Discount AS T3)",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE# AS T3)"
            },
            {
                "hash": "d12f6adf21c93f77bf40114b362ee614414e0be8",
                "query": "SELECT AVG(T1.Cost_per_25_miles) FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T2.discount_id = T3.id WHERE T2.total_hours > 10 AND T3.membership_credit BETWEEN 0 AND 10 OR T1.Combined_fuel_economy_rate < 20 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9dddfb47118e21d124ce193caeb683999eadc463",
                "query": "SELECT T1.name, T2.name, T1.membership_credit FROM Customers AS T1 JOIN Customers AS T2 ON T1.id = T2.id WHERE T1.age >= 18 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cd8aa113f01b36f38aace16333b3a839a4dc63f1",
                "query": "SELECT T1.name, T2.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id WHERE T1.age > 25 OR T1.membership_credit < 100 OR NOT EXISTS (SELECT * FROM Discount AS T3 WHERE T2.discount_id = T3.id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "ea408a915eeacf43c2a752d239f1a0b7a604a236",
                "query": "SELECT T1.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id JOIN Vehicles AS T3 ON T2.vehicles_id = T3.id JOIN Discount AS T4 ON T2.discount_id = T4.id WHERE T3.Annual_fuel_cost > 2000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "823ada930a1bdd2023050246ec970c1655edef5d",
                "query": "SELECT COUNT(id) FROM Customers WHERE membership_credit > 10 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "155c054c5f82a93955110b1ebc46228b274347c2",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name), SUM(T4.Cost_per_25_miles) FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id JOIN Discount AS T3 ON T2.discount_id = T3.id JOIN Vehicles AS T4 ON T2.vehicles_id = T4.id WHERE T2.total_hours BETWEEN 1 AND 100 OR T1.age > 18 AND T3.membership_credit < 50 GROUP BY T1.name HAVING SUM(T4.Cost_per_25_miles) > 100",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "965eb01ae46ff478d034aae235624882d8b2b675",
                "query": "SELECT MIN(Vehicles.Cost_per_25_miles) FROM Vehicles",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "448d580ebaf1e74ec3307a220614576248b2f26c",
                "query": "SELECT T1.Name, T2.Notes FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id JOIN Vehicles AS T3 ON T2.vehicles_id = T3.id WHERE T1.age < 18 ORDER BY T3.Cost_per_25_miles ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "concert_singer": [
            {
                "hash": "ae33d0269bc3937893dacc47463a9bdd04973612",
                "query": "SELECT T1.Name, T2.Name, T1.Capacity FROM stadium AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Capacity >= 50000 GROUP BY T1.Name HAVING MAX(T1.Capacity) ORDER BY T1.Capacity DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "76be2b867f1ce5e45b07509d618892aa7223af24",
                "query": "SELECT T1.Name, SUM(T1.Capacity) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year BETWEEN '1990' AND '2000' GROUP BY T1.Name HAVING SUM(T1.Capacity) > 50000 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f01e27ad2a087f06ff0357cda1cc5c5a50814498",
                "query": "SELECT T1.Name, T2.Name FROM stadium AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Capacity >= 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "58b516e322b3fc0a08d72ca31e79abe8a54dbb60",
                "query": "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2020')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "bdbf758c31619c7d3d1dabfd15412cb49301097b",
                "query": "SELECT T3.Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN concert AS T3 ON T3.concert_ID = T2.concert_ID WHERE EXISTS (SELECT 1 FROM stadium AS T4 JOIN concert AS T5 ON T4.Stadium_ID = T5.Stadium_ID WHERE T5.concert_ID = T3.concert_ID AND T4.Location = 'New York')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8215f79282b866871be8c04a38bf82dc7766dea8",
                "query": "SELECT COUNT(DISTINCT T2.concert_Name), COUNT(T1.Stadium_ID), T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Average > 10000 OR T1.Name = 'Stadium1' OR NOT EXISTS (SELECT 1 FROM singer_in_concert AS T3 WHERE T3.concert_ID = T2.concert_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "fe2d6d995cdf0be681c7fc07d86d0f72c776976b",
                "query": "SELECT COUNT(DISTINCT c.concert_Name) , AVG(s.Capacity) FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE s.Average BETWEEN 1000 AND 10000 OR s.Capacity > 50000 OR s.Location = 'New York'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "186e3ba40473cd339ece5dcc78a44e46cb71c814",
                "query": "SELECT concert_ID, COUNT(DISTINCT Singer_ID) FROM singer_in_concert WHERE concert_ID NOT IN (SELECT concert_ID FROM concert WHERE Stadium_ID = 1) ORDER BY concert_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0fe488b2893e6cde36b8c766de459e2ec830a19b",
                "query": "SELECT T1.Name AS stadium_name FROM ( SELECT Name, Capacity FROM stadium ) AS T1 WHERE T1.Capacity >= 50000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# AS #TABLE#.name FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1ca830b879b115170b4043f8b6e6837a6cbe0451",
                "query": "SELECT COUNT(DISTINCT T2.concert_ID), T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Capacity > 50000 AND T2.Year BETWEEN 2010 AND 2020 AND T2.Theme = 'Music'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "fe8901e356053d5531831d829c02d851838bca19",
                "query": "SELECT MAX(T2.Capacity), MIN(T2.Capacity) FROM singer_in_concert AS T1 JOIN concert AS T3 ON T1.concert_ID = T3.concert_ID JOIN stadium AS T2 ON T3.Stadium_ID = T2.Stadium_ID WHERE T1.concert_ID IN (SELECT concert_ID FROM singer_in_concert WHERE Singer_ID = 1) OR T2.Name = 'Stadium1' OR T1.concert_ID NOT IN (SELECT concert_ID FROM singer_in_concert WHERE Singer_ID = 2) LIMIT 10",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "47cfb010b0be058e10d65591f34de39b3e12cc2b",
                "query": "SELECT COUNT(DISTINCT concert_Name) FROM concert WHERE Year BETWEEN 2010 AND 2020 ORDER BY concert_Name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b5e937aa488cb0a8252b381d26ed28d9168da061",
                "query": "SELECT T1.Stadium_ID FROM ( SELECT Stadium_ID, Name FROM stadium) AS T1 WHERE T1.Stadium_ID = 1 AND T1.Name IN ( SELECT Name FROM stadium WHERE Capacity > ( SELECT AVG(Capacity) FROM stadium ) ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# ) AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG( #COLUMN# ) FROM #TABLE# ) ) LIMIT #VALUE#"
            },
            {
                "hash": "f013ec3e4f2ce80669addf135b5d7c8c556b7ac2",
                "query": "SELECT T2.Name, COUNT(T1.concert_ID) AS count_concert_ID FROM concert AS T1 INNER JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Name != 'Stadium1' GROUP BY T2.Name ORDER BY count_concert_ID DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) AS count_#COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY count_#COLUMN# DESC"
            },
            {
                "hash": "7674a3d5df5cbaefc7cbda2a99d8b0b6ae86c34a",
                "query": "SELECT Name FROM stadium",
                "template": "SELECT #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "0e860549817ccb628b93ac1b72c6cb10887f0d5f",
                "query": "SELECT COUNT(T1.Stadium_ID), COUNT(DISTINCT T1.concert_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID <= 10 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "df5090ec47e1ba3e6638cf82c57f5819ad94a7bc",
                "query": "SELECT T1.concert_Name, SUM(T1.Year) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T1.concert_Name != 'Theme' GROUP BY T1.concert_Name HAVING SUM(T1.Year)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#)"
            },
            {
                "hash": "7bd4f470b64c5dc97bca424c1a78a97cea912db2",
                "query": "SELECT DISTINCT T1.concert_Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID IN (SELECT Singer_ID FROM singer WHERE Age > 25)",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "014c8b07b65525d8771333423d38fbe3f7e2dc17",
                "query": "SELECT T1.Name, SUM(T2.Capacity) FROM singer AS T1 JOIN singer_in_concert AS T3 ON T1.Singer_ID = T3.Singer_ID JOIN concert AS T4 ON T3.concert_ID = T4.concert_ID JOIN stadium AS T2 ON T2.Stadium_ID = T4.Stadium_ID WHERE T1.Age < 30 LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ffead7d311a5c6045b1e0daad736c5445684cd2b",
                "query": "SELECT MAX(Capacity) FROM stadium WHERE Capacity BETWEEN 10000 AND 20000 GROUP BY Capacity ORDER BY Capacity ASC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "28898e5f48fcf1b6a7d4be3b40e9a431fb391371",
                "query": "SELECT Location FROM stadium WHERE Capacity BETWEEN 10000 AND 50000 OR  Average > 30000 OR Name = 'Stadium1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT Name FROM stadium WHERE Location != 'USA' ORDER BY Capacity DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e62d47631c4fdf629174599c7705005d154ba929",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.concert_ID), COUNT(DISTINCT T1.concert_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T1.concert_Name = 'Music' AND T2.Singer_ID BETWEEN (SELECT MIN(Singer_ID) FROM singer) AND (SELECT MAX(Singer_ID) FROM singer) ORDER BY T1.concert_Name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "30871045b8ed82782999e234da03eaa91aca56c3",
                "query": "SELECT T1.concert_Name, COUNT(T2.Singer_ID) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID WHERE T2.Singer_ID = 1 OR T2.Singer_ID IN (SELECT Singer_ID FROM singer WHERE Country = 'USA')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "3c6f70378db2dbee80eee7908f867451dba1796b",
                "query": "SELECT T1.Location, T1.Name FROM stadium AS T1 WHERE T1.Capacity BETWEEN 50000 AND 100000 OR T1.Name = 'Stadium 1' OR EXISTS ( SELECT 1 FROM concert AS T2 WHERE T2.concert_Name = 'Concert 1' AND T2.Stadium_ID = T1.Stadium_ID ) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = T1.#COLUMN# ) LIMIT #VALUE#"
            }
        ],
        "bike_racing": [
            {
                "hash": "ffb215e2a0379c06ae0b3dd494042014e296035a",
                "query": "SELECT MAX(T1.weight) FROM bike AS T1 WHERE T1.price > (SELECT MAX(T2.price) FROM bike AS T2) LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "21f72986fcae6abe606b7564864f607c7401494b",
                "query": "SELECT product_name FROM bike WHERE material = 'Steel' ORDER BY product_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ab1097694b1371420a563d5a7fe8c0938f754868",
                "query": "SELECT T1.name, T2.name, COUNT(DISTINCT T1.id), COUNT(DISTINCT T2.id) FROM cyclist AS T1 JOIN cyclist AS T2 ON T1.heat = T2.heat WHERE T1.result > T2.result ORDER BY COUNT(DISTINCT T1.id) DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "3a7c20e760051a709bdfcafe8e8d2b5b1ecbd65e",
                "query": "SELECT T1.nation, T2.material, T2.price, T3.purchase_year, AVG(T2.weight) FROM cyclist AS T1 INNER JOIN cyclists_own_bikes AS T3 ON T1.id = T3.cyclist_id INNER JOIN bike AS T2 ON T3.bike_id = T2.id WHERE T2.price BETWEEN 100 AND 500 OR T1.result > 10 OR T1.heat IN (SELECT heat FROM cyclist WHERE nation = 'USA') GROUP BY T1.nation, T2.material, T2.price, T3.purchase_year ORDER BY T2.price ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fc1dddf2ab865b1305e3cef6d6a81e234e77b13e",
                "query": "SELECT T1.nation, T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id JOIN bike AS T3 ON T2.bike_id = T3.id ORDER BY T1.result DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0a06ab52d73d3433ebc7e3213f483d29d61926ff",
                "query": "SELECT COUNT(DISTINCT T1.product_name), COUNT(DISTINCT T2.name), COUNT(T3.cyclist_id) FROM bike AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.bike_id JOIN cyclist AS T2 ON T2.id = T3.cyclist_id WHERE T2.heat > 10 ORDER BY T2.heat DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e98217e4cf721074d04db40a14957831c9335643",
                "query": "SELECT T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.cyclist_id = 1 GROUP BY T1.product_name",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "9c12142c208f786ca6855b3b174acc8b119e17e3",
                "query": "SELECT T1.name, SUM(T2.price) FROM cyclist AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.cyclist_id JOIN bike AS T2 ON T3.bike_id = T2.id WHERE T1.nation != 'USA' LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9ad9770c223e8499190d7244a30e78b58b4c1ffe",
                "query": "SELECT T1.product_name, T2.name FROM bike AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.bike_id JOIN cyclist AS T2 ON T2.id = T3.cyclist_id WHERE T2.heat = 1 AND T1.price BETWEEN 500 AND 1000 AND T2.nation = 'USA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2af0fb0bbabfdddeddde95bf1c2bd3e93c5393ee",
                "query": "SELECT T1.product_name, T2.product_name FROM bike AS T1 JOIN bike AS T2 ON T1.price >= T2.price ORDER BY T1.price ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6d12c55088d449df9a16b167830ac94e12829be7",
                "query": "SELECT MIN(T1.price) FROM bike AS T1 ORDER BY T1.price ASC LIMIT 5",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6d49f20d120ef310fce760658559f9be6ccaf481",
                "query": "SELECT COUNT(T1.id), COUNT(T2.id) FROM bike AS T1, cyclist AS T2 WHERE T1.price BETWEEN 100 AND 500 AND T2.heat > 1 AND NOT EXISTS (SELECT 1 FROM cyclists_own_bikes WHERE cyclist_id = T2.id AND bike_id = T1.id) LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T2.#COLUMN# AND #COLUMN# = T1.#COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "a4e93c1e79374863e233635b39ad961360e6b6bc",
                "query": "SELECT COUNT(T2.cyclist_id), T2.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id GROUP BY T2.name HAVING COUNT(T2.cyclist_id) != 1",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) != #VALUE#"
            },
            {
                "hash": "c40b8941b807321bfb94817dbb3036f9791109a6",
                "query": "SELECT T1.price FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ad1837355b466aa8d017e4072bdc0f8d970bc7d4",
                "query": "SELECT T2.product_name FROM cyclists_own_bikes AS T1 JOIN bike AS T2 ON T1.bike_id = T2.id WHERE T1.purchase_year = (SELECT MAX(purchase_year) FROM cyclists_own_bikes) AND T2.price = (SELECT MIN(price) FROM bike) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "61a6629c5e03a39c0effca8e5a8ac11d0e8a90b7",
                "query": "SELECT T1.product_name, AVG(T1.weight) FROM bike AS T1 WHERE T1.price BETWEEN 500 AND 2000 AND T1.material = 'steel' AND T1.id NOT IN ( SELECT T2.bike_id FROM cyclists_own_bikes AS T2 ) GROUP BY T1.product_name HAVING AVG(T1.weight) > 15 ORDER BY T1.product_name DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "22a9c0d3f609cd33c658f3f40e8bedd5d1e6c4bd",
                "query": "SELECT DISTINCT T2.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.cyclist_id JOIN bike AS T2 ON T3.bike_id = T2.id WHERE T1.nation = 'USA' AND T1.result BETWEEN 1 AND 10 AND T1.heat > (SELECT AVG(heat) FROM cyclist) ORDER BY T2.weight DESC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1bbda9749385ae478fa0635703e7a8847d87c8d7",
                "query": "SELECT T1.product_name FROM bike AS T1 WHERE T1.weight >= 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "2dbbb6c98695c25dca025e04ce4e851b58fc71ad",
                "query": "SELECT COUNT(DISTINCT T1.product_name), T2.material AS Material FROM bike AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.bike_id JOIN bike AS T2 ON T2.id = T3.bike_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c95ca5d80f20c1ab9b8a1bb36815966db2f6c478",
                "query": "SELECT T1.nation, COUNT(T2.id) FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T1.nation NOT IN (SELECT T3.nation FROM cyclist AS T3 JOIN cyclists_own_bikes AS T4 ON T3.id = T4.cyclist_id WHERE T4.purchase_year > 2010) GROUP BY T1.nation ORDER BY COUNT(T2.id) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "cb0f72dfc4dcf5b73e47bbfa965640babb61e4b7",
                "query": "SELECT c.name, COUNT(DISTINCT cob.bike_id) FROM cyclists_own_bikes AS cob JOIN cyclist AS c ON c.id = cob.cyclist_id JOIN bike AS b ON b.id = cob.bike_id WHERE c.result BETWEEN 1 AND 5 OR b.price < 500 OR b.weight > 20 GROUP BY c.name HAVING COUNT(DISTINCT cob.bike_id) > 2 ORDER BY c.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "efd149abe597d7d9731d4c4c66d273de492e69cc",
                "query": "SELECT T1.id, T2.heat FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.cyclist_id BETWEEN 1 AND 5 AND T1.weight IN (SELECT weight FROM bike WHERE material = 'steel') GROUP BY T1.id HAVING SUM(T1.price) > 500 ORDER BY T1.id DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "95188c35e62da64ff09a618edf380a8ed1c9b122",
                "query": "SELECT name FROM cyclist WHERE heat = 3 ORDER BY id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "644d92209784d50da0777ba26d7b5172202c9673",
                "query": "SELECT T1.product_name, COUNT(DISTINCT T2.name) FROM bike AS T1 JOIN cyclists_own_bikes AS T3 ON T1.id = T3.bike_id JOIN cyclist AS T2 ON T3.cyclist_id = T2.id WHERE T1.material != 'Aluminum' ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7ce1b6b801187ef763b699869f6bd80c73f535f6",
                "query": "SELECT T1.product_name, COUNT(T2.cyclist_id) FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.purchase_year = 2010 ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f1f823b3796f5e41d53d8ff18cc5371d51df9f46",
                "query": "SELECT T1.product_name FROM bike AS T1 WHERE T1.price < T1.weight",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #COLUMN#"
            }
        ],
        "tracking_orders": [
            {
                "hash": "87e57f727c7c81ff67188c9b0622720c83807570",
                "query": "SELECT COUNT(DISTINCT T1.order_id) FROM (SELECT T2.order_id FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id) AS T1 WHERE EXISTS (SELECT 1 FROM Shipments WHERE order_id = T1.order_id) ORDER BY T1.order_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c35d2ba25a84faa6b11f15ab484b6e33bda3f3ad",
                "query": "SELECT MAX(T1.order_id) FROM Orders AS T1 WHERE T1.order_id = 100 AND T1.order_status = 'shipped' AND T1.order_id NOT IN (SELECT T2.order_id FROM Shipments AS T2 WHERE T2.shipment_id > 1000)",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "02a285d458aec35511046ffc58a54315ac00935d",
                "query": "SELECT T1.customer_name FROM Customers AS T1 WHERE NOT EXISTS (SELECT 1 FROM Orders AS T2 WHERE T2.customer_id = T1.customer_id AND T2.order_status = 'cancelled') GROUP BY T1.customer_id HAVING COUNT(T1.customer_id) = 1 ORDER BY T1.customer_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "80cfc01a31cb789115706be94484f5e428c7bded",
                "query": "SELECT * FROM Customers WHERE customer_name NOT IN (SELECT customer_name FROM Customers WHERE customer_name = 'John') ORDER BY customer_id DESC",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT DISTINCT customer_name FROM Customers WHERE customer_details != 'active'",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "2b317e618e27b9c9bcbdaa4ce4dc30cf555ef9ae",
                "query": "SELECT order_id FROM Orders WHERE order_status = 'shipped' OR date_order_placed BETWEEN '2020-01-01' AND '2020-12-31' OR customer_id > 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f2ee345f70475149c5c952c3d77c17e5b1391679",
                "query": "SELECT T1.customer_name FROM Customers AS T1 WHERE T1.customer_name = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "c74998e5c1dd075578aca5b5c25ca7826cee73ab",
                "query": "SELECT SUM(order_id), SUM(customer_id) FROM Orders WHERE order_status < 'Processing'",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "566bfae5caca4ea61e3184df3d82c48fb6dd4a88",
                "query": "SELECT T1.order_status, T2.product_name, COUNT(DISTINCT T3.order_item_id) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id WHERE T1.date_order_placed BETWEEN '2020-01-01' AND '2021-01-01' AND T2.order_item_status = 'shipped' ORDER BY T1.order_status ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "06a6d083b0ba2aa7904b46f408591c51d1276260",
                "query": "SELECT COUNT(order_id) FROM Orders WHERE order_status >= 'pending' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "ab861e0593329127e152126eb8f46e04fc283671",
                "query": "SELECT COUNT(DISTINCT T1.order_id), COUNT(DISTINCT T2.order_item_id) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status IN ( SELECT T3.order_status FROM Orders AS T3 WHERE T3.customer_id IN ( SELECT T4.customer_id FROM Customers AS T4 WHERE T4.customer_name = 'ABC Company' ) )",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) )"
            },
            {
                "hash": "8bcd6c7b556516516be017b616915930671b93e3",
                "query": "SELECT T1.order_id, T2.order_id FROM Orders AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id WHERE NOT EXISTS (SELECT 1 FROM Order_Items WHERE order_id = T1.order_id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "94d55958770f4b89224d097c1d2d57818bf471cf",
                "query": "SELECT COUNT(order_id) FROM Orders WHERE order_status > 'placed'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "6fe2ab8ec1c3cf98a1e6561b9fa0c120417c1be7",
                "query": "SELECT T1.customer_name, T2.order_status FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T3.order_item_status BETWEEN 'pending' AND 'shipped' AND T1.customer_details = 'premium' AND EXISTS (SELECT 1 FROM Shipments AS T4 WHERE T4.order_id = T2.order_id LIMIT 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)"
            },
            {
                "hash": "a5d5df5b949c7080ff9c4c2a7a0eef96976e5064",
                "query": "SELECT customer_name, COUNT(customer_id) FROM Customers WHERE NOT EXISTS (SELECT 1 FROM Orders WHERE customer_id = Customers.customer_id AND order_status = 'cancelled') AND customer_details IS NOT NULL AND customer_id BETWEEN 100 AND 1000 ORDER BY customer_id ASC LIMIT 100",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# IS NOT NULL AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b01ed524f67ba16c774815aebce889e2483c2710",
                "query": "SELECT T1.order_status, COUNT(DISTINCT T2.order_item_id), COUNT(T3.order_item_id) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Shipment_Items AS T3 ON T2.order_item_id = T3.order_item_id WHERE EXISTS (SELECT 1 FROM Shipments AS T4 WHERE T4.order_id = T1.order_id) ORDER BY T1.order_status ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "92737e5317dd3b264078265a931f628ad3746d0b",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = 'pending' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "372b6d91e69b66010f0b619c5db4e4e88a7f8596",
                "query": "SELECT T1.customer_name, T2.product_name FROM Customers AS T1 JOIN Order_Items AS T2 ON T1.customer_id = T2.order_id WHERE T1.customer_details = 'AAA' OR T2.order_item_status = 'BBB' OR T2.product_id IN (SELECT product_id FROM Products) ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "672ca6f41e70a4fc6e2b73b81bc814895487f37c",
                "query": "SELECT COUNT(order_id) FROM Orders WHERE customer_id = 100 OR date_order_placed BETWEEN '2020-01-01' AND '2020-12-31' OR order_status = 'pending'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "76f7dc350bf3fb5aca614a2c98d0ab4250e71a57",
                "query": "SELECT * FROM Orders WHERE order_status = 'shipped' OR date_order_placed BETWEEN '2018-01-01' AND '2018-12-31' OR customer_id > 100 ORDER BY order_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "995cbb41c968e242ba3dd8749ca04aca3dc0c473",
                "query": "SELECT customer_name FROM Customers WHERE customer_id = 10 OR customer_name = 'John' OR NOT EXISTS (SELECT 1 FROM Orders WHERE customer_id = Customers.customer_id AND order_status = 'cancelled')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "1969d129db4331c3890a9986dd2cbd5f89bec1e2",
                "query": "SELECT T1.product_id, T2.product_name FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.order_item_status = 'shipped' ORDER BY T2.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "22aacde54034ae1133cf0a8a9fce07286a463b63",
                "query": "SELECT T1.order_id FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id WHERE T1.customer_id = 100 OR T2.order_item_status = 'shipped' OR T3.product_name NOT IN (SELECT product_name FROM Products WHERE product_id > 1000)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "bc885f87a5bc248b00e57fabbe498b317553e670",
                "query": "SELECT AVG(T1.order_id), SUM(T2.product_id) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status < 'Shipped' LIMIT 5",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            }
        ],
        "region_building": [
            {
                "hash": "4bbf6f6902b043be64b594c85d8eef1908f7fae8",
                "query": "SELECT Name, SUM(Number_of_Stories) FROM building WHERE Region_ID != 1 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b1f936fc6d37b24367a5586a1aa3ad62ee6e8e15",
                "query": "SELECT T1.Name FROM building AS T1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "be27899473d727a07615035087883fe46636c070",
                "query": "SELECT Region_ID, SUM(Number_of_Stories) FROM building GROUP BY Region_ID HAVING SUM(Number_of_Stories) <= 20 ORDER BY Region_ID ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3bdba1edc35947cb7b0bd5d4f41f14ab8ddcbcaa",
                "query": "SELECT T1.Name, MAX(T2.Number_of_Stories) FROM building AS T1 JOIN building AS T2 ON T1.Building_ID = T2.Building_ID WHERE T1.Completed_Year BETWEEN 1950 AND 2000 GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Region_ID) > 1",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#"
            },
            {
                "hash": "b805cf78678291806bf9dfc25392bab8bd3bebb0",
                "query": "SELECT T2.Name, T2.Address FROM Region AS T1 INNER JOIN Building AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Area >= 10000 ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# >= #VALUE# ORDER BY T2.#COLUMN# DESC"
            },
            {
                "hash": "ac96ee9d494244999577c9eeb441e1b53646da4b",
                "query": "SELECT T1.Name, MIN(T1.Completed_Year) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID JOIN region AS T3 ON T2.Region_ID = T3.Region_ID GROUP BY T1.Name HAVING T1.Completed_Year != 1950 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d2a1e0289e7731e98e9359b0e5197d4216f3f402",
                "query": "SELECT T2.Name, COUNT(DISTINCT T1.Building_ID) FROM region AS T2 JOIN building AS T1 ON T2.Region_ID = T1.Region_ID JOIN region AS T3 ON T1.Region_ID = T3.Region_ID WHERE T2.Name NOT IN (SELECT Name FROM region WHERE Region_ID < 5) GROUP BY T2.Name HAVING AVG(T1.Completed_Year) > 1950 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "65318baab7830ad9de3d32e52fa9be37e42232aa",
                "query": "SELECT COUNT(T1.Number_of_Stories), T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T2.Name HAVING COUNT(T1.Number_of_Stories) > 1",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "af96b9a18288100db9e5b3a00cd2e4501794b65a",
                "query": "SELECT T2.Name, T1.Completed_Year FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID JOIN region AS T3 ON T2.Region_ID = T3.Region_ID WHERE T1.Completed_Year <= 2000 ORDER BY T1.Completed_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a179d83b317df8a4d0b133a05e7db0ffc54f1895",
                "query": "SELECT * FROM building WHERE Completed_Year <= 2000 AND Address = 'Street 1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "7fbe757b8a0598f5d9a84f3e09bfbce08ab4655d",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Address), SUM(Number_of_Stories) FROM building WHERE Completed_Year != 2020 GROUP BY Name ORDER BY Name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "84b75104be9a79473d15a525f055638b13a60b26",
                "query": "SELECT T1.Name FROM building AS T1, building AS T2 WHERE T1.Completed_Year != T2.Completed_Year",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "55479ac323be1526fdc94fbb9644c56b084cd1a5",
                "query": "SELECT Name, AVG(Completed_Year) FROM building WHERE Region_ID = 10 OR Number_of_Stories BETWEEN 10 AND 20 OR Name = 'Building1' GROUP BY Name HAVING AVG(Completed_Year) > 1950 ORDER BY Name DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5eb30a5d36be4cc7a81f21405901edc303c62dcb",
                "query": "SELECT T1.Region_ID, SUM(T1.Number_of_Stories) FROM building AS T1 WHERE T1.Completed_Year BETWEEN 1990 AND 2000 OR T1.Address = 'Main Street' OR EXISTS (SELECT T2.Name FROM region AS T2 WHERE T2.Region_ID = T1.Region_ID AND T2.Population > 1000000) GROUP BY T1.Region_ID",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "e225d1af93990fa4dd9af104648f396c7571816a",
                "query": "SELECT b1.Name, COUNT(b2.Region_ID) FROM building b1 JOIN region r ON b1.Region_ID = r.Region_ID JOIN building b2 ON b1.Region_ID = b2.Region_ID WHERE NOT EXISTS (SELECT 1 FROM region r2 WHERE r2.Region_ID = b1.Region_ID AND r2.Population > 1000000) GROUP BY b1.Name ORDER BY b1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "09520403946a74a0105a4198dec585eaeb8561e8",
                "query": "SELECT T2.Name, MAX(T1.Number_of_Stories) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Completed_Year = 2020 GROUP BY T2.Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "c775c7c215923e7119464a26d642bc58e18ab19d",
                "query": "SELECT COUNT (DISTINCT Region_ID) FROM building WHERE Region_ID = 1 OR Completed_Year BETWEEN 2000 AND 2010 OR Number_of_Stories > 10 LIMIT 10",
                "template": "SELECT COUNT (DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f78f94d41bf39c1be78a810e2fd7a5009d7efa2e",
                "query": "SELECT T1.Name, T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Completed_Year > 2000 AND T1.Number_of_Stories BETWEEN 10 AND 50 AND T1.Address IN (SELECT Capital FROM region)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "be2a381a2f5587e5262e0b45d5b374bac00435cd",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Number_of_Stories >= 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5ab3cdd93483b30d598f8454788ded3a22841d44",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Name) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE NOT EXISTS (SELECT 1 FROM region AS T3 WHERE T3.Region_ID = T1.Region_ID AND T3.Population > 1000000) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "81d219d285fbfd8e89135a7d8fed4a894c8a9d49",
                "query": "SELECT T1.Name, SUM(T1.Number_of_Stories) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Name ORDER BY SUM(T1.Number_of_Stories) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "19dce48ba2135d17f3b10853b4432994afe25729",
                "query": "SELECT T1.Name, T2.Name, SUM(T1.Number_of_Stories) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID JOIN region AS T3 ON T2.Region_ID = T3.Region_ID WHERE T1.Number_of_Stories < 10 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bccceeb1bc87d2135bc4cd20b011b0802699309b",
                "query": "SELECT AVG(T1.Number_of_Stories) FROM building AS T1 WHERE T1.Region_ID = 1 OR T1.Completed_Year BETWEEN 2000 AND 2020 ORDER BY T1.Number_of_Stories DESC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f86b86bf0dbc9d9a0c39b4bea85396a4e1663680",
                "query": "SELECT T1.Name, T2.Name, COUNT(DISTINCT T3.Name) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID JOIN region AS T3 ON T2.Region_ID = T3.Region_ID WHERE T2.Population BETWEEN 100000 AND 1000000 OR T1.Completed_Year > 2000 OR T1.Address LIKE '%Street%' GROUP BY T1.Name, T2.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# LIKE '#VALUE#' GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4782a0c6de13b432f7ead7044d39f841b8d87a88",
                "query": "SELECT T1.Name, MAX(T1.Number_of_Stories) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Completed_Year BETWEEN 2000 AND 2010 OR T1.Address IN (SELECT Capital FROM region) ORDER BY T1.Name DESC LIMIT 5",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6d4a3027d22244c779f9caff6efa855d703e7286",
                "query": "SELECT T1.Name, T2.Name, T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID JOIN region AS T3 ON T1.Region_ID = T3.Region_ID WHERE T1.Completed_Year BETWEEN 1990 AND 2000 AND T2.Population > 1000000 AND T1.Address = 'London'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT * FROM building WHERE Number_of_Stories >= 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            }
        ],
        "allergy_1": [
            {
                "hash": "61863d3e2083ff86b0256443858a36057a10a8cc",
                "query": "SELECT Fname FROM Student ORDER BY Fname ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "13cde78879dfd209e524f8f47e47d06ef2e07843",
                "query": "SELECT COUNT(T1.StuID), COUNT(T2.StuID) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T3.Allergy != 'Food' AND T3.AllergyType != 'Mild'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "12a7945d444725c0d317a48fd64cd28254b514c3",
                "query": "SELECT LName, Fname FROM Student WHERE Age > 20",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "1d72bc0c881bdb9bfe65f1ba41251efb40b41fbc",
                "query": "SELECT COUNT(DISTINCT T1.StuID), COUNT(T2.Allergy), COUNT(T2.AllergyType), SUM(T1.Age) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID WHERE T1.Sex = 'M'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "8d3d2e664116aedf5f9495ea4a3ae908bf7b5419",
                "query": "SELECT COUNT(T1.StuID) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID WHERE T2.Allergy = 'Peanut'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "e69043d94adbd8a8b99d3d7e2fde10f91b45fecf",
                "query": "SELECT T1.LName, COUNT(DISTINCT T2.Allergy) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy ORDER BY T1.LName DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "17cb145d917b330934016c34ac55946a53652cc5",
                "query": "SELECT T1.LName, T1.Fname, T2.Allergy FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T3.AllergyType = 'Food' AND T1.Age BETWEEN 18 AND 30 AND T1.Major IN (101, 102, 103) ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#, #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9210122cfc628b6d7c53d6825872d61776143f21",
                "query": "SELECT COUNT(DISTINCT T1.Allergy) FROM Has_Allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age <= 20 ORDER BY T1.Allergy ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ff614c1c072f10540a585267ec9421f3e7ba5914",
                "query": "SELECT LName FROM Student WHERE Age >= 20 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7951258977d03fb422534d4ea27a52dc9d5a7ee4",
                "query": "SELECT COUNT(DISTINCT T1.Allergy), T2.StuID FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy WHERE T2.StuID <= 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "73b8e6bf6baaa81bd352a2703fe6706dd3bae590",
                "query": "SELECT T1.LName, COUNT(DISTINCT T1.StuID) FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.StuID NOT IN (SELECT StuID FROM Has_Allergy) GROUP BY T1.LName ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3cc54605ce76c2f8f438737f7200002ef11aa980",
                "query": "SELECT T1.StuID FROM Student AS T1 WHERE EXISTS (SELECT 1 FROM Has_Allergy AS T2 WHERE T1.StuID = T2.StuID AND T2.Allergy = 'Peanut') GROUP BY T1.StuID",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "3b89563bf6d25fe6f7d9e005b0956dbb7587e24c",
                "query": "SELECT T1.LName, T1.Fname FROM Student AS T1 JOIN Student AS T2 ON T1.Major = T2.Major WHERE T1.Age > T2.Age ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "673487f05acb8dacf664b3372e32f818c6e16b68",
                "query": "SELECT COUNT(DISTINCT T3.Allergy), T1.LName FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Age BETWEEN 18 AND 25 OR T1.Sex = 'M' OR EXISTS (SELECT 1 FROM Has_Allergy WHERE StuID = T1.StuID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "e3e5ae65f767f94df5bf5a5043ec910cc10c3eb6",
                "query": "SELECT T1.LName, T1.Fname, COUNT(T2.Allergy) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID GROUP BY T1.LName, T1.Fname HAVING COUNT(T2.Allergy) > 1 ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fa165454bace1febf0cc2f20d21c7d66106a1efe",
                "query": "SELECT T1.LName, T1.Fname, T3.AllergyType FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Age < 20 AND T1.Major = 1 AND T3.AllergyType = 'Food'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "909d8f442e3e5242dadba99f113f556516cd05f8",
                "query": "SELECT T1.LName, T2.AllergyType FROM Student AS T1 INNER JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID INNER JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T2.Allergy IN (SELECT Allergy FROM Allergy_Type WHERE AllergyType = 'Food') AND T1.Age BETWEEN 18 AND 25 AND T1.Major IN (SELECT Major FROM Student WHERE city_code = 'City1')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f5d09c8725da7e2dd5ac1c35df61b9a34293ff7b",
                "query": "SELECT T1.Allergy, COUNT(T2.StuID) AS StudentCount FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy WHERE T1.AllergyType > 'A' GROUP BY T1.Allergy ORDER BY T1.Allergy ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ae129d96e616b0826b00b991ae82d34e63050eba",
                "query": "SELECT T1.Fname, COUNT(T2.Allergy) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20 GROUP BY T1.Fname HAVING COUNT(T2.Allergy) > 1 ORDER BY T1.Fname ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0190b0615f8bdaa01ced30253fb8288630b348b4",
                "query": "SELECT AVG(T1.Age) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Age BETWEEN 18 AND 25 OR T1.Sex = 'M' OR T1.Major IN (SELECT T4.Major FROM Student AS T4 WHERE T4.Age > 20) LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "e15efcf733ed9766f694c842eb1fb72d26138947",
                "query": "SELECT T1.Fname, T1.LName, SUM(T2.AllergyType) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Age <= 20 GROUP BY T1.Fname, T1.LName HAVING SUM(T2.AllergyType) > 1",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#, #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "d7a64d2b979d07f4698f36a76c6385ec692ae4dd",
                "query": "SELECT T1.LName, T3.AllergyType FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T1.Sex = 'M' ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5d5b03ab0a70fcdd0acebbc860fb00078a24c49a",
                "query": "SELECT T1.LName, T2.Allergy FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID WHERE T2.Allergy = 'Pollen' OR T2.Allergy = 'Dust' OR T2.Allergy BETWEEN 'Hayfever' AND 'Latex'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0621f4832a45b763bdf3f0c95d3792135ce5b408",
                "query": "SELECT Fname FROM Student WHERE Age > (SELECT AVG(Age) FROM Student) ORDER BY Fname ASC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "address_1": [
            {
                "hash": "b5c8445ef4d49cbf25fe0a6be3172f79e4596e13",
                "query": "SELECT city_name FROM City WHERE country <= 'USA'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4838dddd24a1b8e5604ba8db3215f412454b8196",
                "query": "SELECT T1.city_name, T3.LName, T3.Fname FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN Student AS T3 ON T3.city_code = T2.city2_code WHERE T3.Age BETWEEN 20 AND 30 AND T3.Sex = 'M' AND T2.distance > 1000 ORDER BY T2.distance DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "76487bf33a3f0f467fcd2da6457ee87dbb8b56ff",
                "query": "SELECT COUNT(DISTINCT city_code), COUNT(DISTINCT city_name), COUNT(*) FROM City WHERE city_code NOT IN (SELECT city1_code FROM Direct_distance) ORDER BY COUNT(DISTINCT city_code) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "5fe323814c32f5f55b8fc0a2fa24036ac1ae6f99",
                "query": "SELECT T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city1_code WHERE T1.Age BETWEEN 18 AND 25 AND T1.Sex = 'M' AND T3.distance NOT IN (SELECT distance FROM Direct_distance WHERE city1_code = 'NYC')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6110c9398dc8188a1cb774adb64622902be4f9d2",
                "query": "SELECT T1.city_code, COUNT(DISTINCT T2.city_code) FROM City AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "f089484307fad3a728d94e70b4e11ddcbed1e048",
                "query": "SELECT Fname, AVG(Age) FROM Student WHERE city_code >= 'A' GROUP BY Fname HAVING AVG(Age) > 20",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "33f0161e44790114c42a2c4ee9a99a67c97d8ace",
                "query": "SELECT T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Age > 20 ORDER BY T2.latitude DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "89c813f1656422bebfd4b49e57adbdff6d1daeda",
                "query": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN Student AS T3 ON T3.city_code = T2.city2_code WHERE T3.Age <= 20",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9fe01a433f8849910ff1952a14c95b5ae66df66a",
                "query": "SELECT T1.LName, T1.Fname FROM Student AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code WHERE T1.city_code IN (SELECT city_code FROM City WHERE country = 'USA')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "31a3450e14012b0664ed5d8a418b80481cf82f3a",
                "query": "SELECT DISTINCT T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Age > 20 OR T1.Major = 1 OR EXISTS (SELECT 1 FROM City WHERE city_code = 'ABC123') ORDER BY T2.city_name DESC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8e39787d5a2450a13c4ae3807a24693b7e7f5991",
                "query": "SELECT city_code, COUNT(DISTINCT city_name) FROM City WHERE city_code NOT IN ( SELECT T2.city1_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code ) GROUP BY city_code HAVING COUNT(city_name) > 1 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9b9740f939955777aa9943dc2c6cb8a5323de314",
                "query": "SELECT T1.city_name, SUM(T2.distance) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.city2_code = 'NYC' AND T2.distance > (SELECT AVG(distance) FROM Direct_distance) GROUP BY T1.city_name ORDER BY T1.city_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e4bf0f97679bea5994925fbeefbfe607eb6a28e4",
                "query": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance <= 500",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "fb25715f4d3e451a3191601989631beb90d8a1d7",
                "query": "SELECT city_name AS city_name_new, MAX(distance) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY city_name",
                "template": "SELECT #COLUMN# AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "42b2cd663b6031b6b0ae76b9116f1ff59c4924f8",
                "query": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.city2_code != 'ABC' ORDER BY T2.distance DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fa98e7ad49968c4b21efff7854430493250d94d7",
                "query": "SELECT T1.Fname, T2.city_name FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city1_code WHERE T1.Age BETWEEN 20 AND 30 AND T1.Sex = 'M' AND NOT EXISTS (SELECT * FROM City AS T4 WHERE T4.city_code = T3.city2_code AND T4.country = 'USA')",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "79aaeacdc63ec1a26ec354bb2034285292eaa306",
                "query": "SELECT city_name FROM City WHERE city_code >= 'A' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "48f067437222979c057624910ebd276530159fcd",
                "query": "SELECT MIN(T1.Age), T1.Major FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex != 'F' GROUP BY T1.Major LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "62124591cecf30feeb5dfa54604ce8f4e8d081c6",
                "query": "SELECT T1.city_name, COUNT(T2.StuID) FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code WHERE T2.Age BETWEEN 18 AND 22 AND T1.country = 'USA' GROUP BY T1.city_name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "0391e91ede149599dc2137898e7f75131d12dc77",
                "query": "SELECT Student.LName, Student.Fname, Direct_distance.distance FROM Student INNER JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code WHERE Student.Age BETWEEN 20 AND 30 AND Direct_distance.distance < 1000 ORDER BY Direct_distance.distance DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e390d9bb7167c4def6996e042d3994aa9de215e3",
                "query": "SELECT T1.Fname, T2.city_name, T3.distance FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city1_code WHERE T1.Age BETWEEN 20 AND 30 OR T1.Major = (SELECT Major FROM Student WHERE Advisor = 1) OR T1.Sex = 'M'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "1a18c79f7f32f27f9fd048facd14a66d5ea9fcae",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city1_code WHERE T3.distance < 100 AND (SELECT COUNT(*) FROM City WHERE city_code = T1.city_code) > 1 ORDER BY T1.LName ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND (SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "103808ef2100681546b3ef0ad55638bdc0b944ae",
                "query": "SELECT COUNT(DISTINCT T1.city_code) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance > 100 OR T2.distance BETWEEN 50 AND 100 OR T2.distance > (SELECT AVG(distance) FROM Direct_distance)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            }
        ],
        "college_3": [
            {
                "hash": "e5a88d250f5e1290665bff5a889f8e066fb325a8",
                "query": "SELECT Fname AS first_name, LName AS last_name FROM Student",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "5c0b911c62cea97379bd287a82af39ca26e528fe",
                "query": "SELECT T1.LName, SUM(T1.Age) FROM Student AS T1 WHERE T1.Age > (SELECT AVG(Age) FROM Student) GROUP BY T1.LName ORDER BY SUM(T1.Age) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "55c78b1948e6dda32c991b567442f3420783ec87",
                "query": "SELECT T1.Fname, T1.LName, T2.Room FROM Student AS T1 JOIN Faculty AS T2 ON T1.Advisor = T2.FacID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "6b78f162100222bb9c2178c81197082479323e96",
                "query": "SELECT T1.DName, AVG(T2.Credits) FROM Department AS T1 JOIN Course AS T2 ON T1.DNO = T2.DNO WHERE T1.DName = 'Math' GROUP BY T1.DName ORDER BY AVG(T2.Credits) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "b8b8d0fa3182cf41aaf81337a7b3cdd9577596b9",
                "query": "SELECT T1.DName, AVG(T2.Credits) FROM Department AS T1 JOIN Course AS T2 ON T1.DNO = T2.DNO GROUP BY T1.DName ORDER BY AVG(T2.Credits) ASC LIMIT 1",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "636cbf3b80bacc05946ac4562a80cebf08082664",
                "query": "SELECT AVG(Age), MAX(Age) FROM Student WHERE Sex = 'M'",
                "template": "SELECT AVG(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "2b501cf725c598b902a503b0de1e715243ee6870",
                "query": "SELECT T1.DName, MAX(T1.Division), MIN(T1.Division) FROM Department AS T1 WHERE T1.DNO = 1 GROUP BY T1.DName ORDER BY T1.Division DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d6938658958849da30000fe5c98a4fe8e79c5f40",
                "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Age > 20 OR T1.Sex = 'M' OR T1.city_code IN (SELECT T2.Building FROM Department AS T2)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)"
            },
            {
                "hash": "ee42540ff7a6a1d31f2913e7227f53df2b11eab0",
                "query": "SELECT LName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Minor_in)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "a36cc4152c5231e8e4055c158b1250222d634500",
                "query": "SELECT T1.LName, T2.Fname FROM Student AS T1 JOIN Student AS T2 ON T1.StuID > T2.StuID WHERE T1.LName = 'Smith'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# > #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "22a9c0d3f609cd33c658f3f40e8bedd5d1e6c4bd",
                "query": "SELECT LName FROM Student WHERE Age BETWEEN 18 AND 25 AND Sex = 'M' AND StuID NOT IN (SELECT StuID FROM Enrolled_in WHERE Grade = 'A') ORDER BY LName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3ddbcbf093acee4b8249aad9c61907f0abd16240",
                "query": "SELECT T1.LName, T2.DName, T3.CName FROM Student AS T1 JOIN Course AS T2 ON T1.Major = T2.DNO JOIN Faculty AS T3 ON T2.Instructor = T3.FacID WHERE T1.Sex = 'M'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "48db659285373114701c511f09cb0bc54688f7e3",
                "query": "SELECT T1.LName, SUM(T2.Credits) FROM Student AS T1 JOIN Course AS T2 ON T1.Major = T2.DNO JOIN Enrolled_in AS T3 ON T2.CID = T3.CID WHERE T3.Grade <= 'B' GROUP BY T1.LName",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "bd117528d57856e56d15c1d58926798908d8d787",
                "query": "SELECT LName FROM Student WHERE Age BETWEEN 20 AND 25",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "cb7943dbad2562032761bf919075e078af4cdbdf",
                "query": "SELECT COUNT(DISTINCT S.LName), F.Fname FROM Student AS S JOIN Faculty AS F ON S.Advisor = F.FacID WHERE S.Sex != 'M' ORDER BY F.Fname ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c783ff7af918ca70ca09fd370cea5d36cb30ca4b",
                "query": "SELECT LName FROM Student WHERE Advisor NOT IN (SELECT FacID FROM Faculty WHERE Sex = 'M') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "908df779a7e6f22c3b770940a9f2e61d89347e28",
                "query": "SELECT T1.Age, T2.Grade FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID JOIN Gradeconversion AS T3 ON T2.Grade = T3.lettergrade WHERE T1.Age BETWEEN 18 AND 25 AND T3.gradepoint > 3.0 ORDER BY T1.Age ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b6bbe0744e85f8cc14b1011215670742ecb5e101",
                "query": "SELECT StuID FROM Student WHERE Major != 1 ORDER BY StuID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8ac2058288397e5d0653bf242bb52e664fd957d3",
                "query": "SELECT COUNT(DISTINCT Fname), COUNT(DISTINCT LName), COUNT(DISTINCT StuID) FROM Student WHERE Age > 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "a7fedaf0dff4ac10a91e7744ac8568cec6d4c16e",
                "query": "SELECT COUNT(DISTINCT T1.LName), COUNT(DISTINCT T1.Fname) FROM Student AS T1 WHERE T1.Age > 20 AND T1.Sex = 'M' AND T1.Major IN (SELECT T2.DNO FROM Department AS T2 WHERE T2.Division = 'Science') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "cb7507870f7220b990789b270b0a2d93408fd8f4",
                "query": "SELECT COUNT(DISTINCT T1.Sex) FROM Student AS T1 JOIN Faculty AS T2 ON T1.Advisor = T2.FacID WHERE T2.Phone < 1000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3e9a6dcd22b8ba576e8d4169223cce139ba36114",
                "query": "SELECT T1.LName, COUNT(T2.CID) FROM Student AS T1 JOIN Enrolled_in AS T2 ON T1.StuID = T2.StuID WHERE T1.Age < 20 GROUP BY T1.LName ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4ac0606a6f6899320310d9b5cdd86fd16109c307",
                "query": "SELECT COUNT(T1.CID), T2.CName FROM Enrolled_in AS T1 INNER JOIN Course AS T2 ON T1.CID = T2.CID WHERE T1.StuID >= 100 GROUP BY T2.CName",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "74f824f14cc6fbe4a467f986e0292ec87c8d868e",
                "query": "SELECT DISTINCT COUNT(DISTINCT T2.Days) FROM Course AS T1 JOIN Enrolled_in AS T2 ON T1.CID = T2.CID WHERE T1.Credits > 3 OR T2.Grade = 'A' LIMIT 10",
                "template": "SELECT DISTINCT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0709688e786c869ad00292be0e700e87f3a605ed",
                "query": "SELECT T1.StuID, T1.LName FROM Student AS T1 WHERE NOT EXISTS ( SELECT T2.DNO FROM Department AS T2 WHERE T2.DNO = T1.Major ) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# ) LIMIT #VALUE#"
            },
            {
                "hash": "c3d1b80dc92dd7df03fcef22094edf0bd0eea459",
                "query": "SELECT T1.LName, COUNT(DISTINCT T2.DName), MAX(T3.gradepoint) FROM Student AS T1 JOIN Minor_in AS T2 ON T1.StuID = T2.StuID JOIN Enrolled_in AS T3 ON T1.StuID = T3.StuID ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "984d54f82684da68660efc8a28e5a93ae5be48f5",
                "query": "SELECT T1.FacID, MAX(T3.Credits) FROM Faculty AS T1 JOIN Member_of AS T2 ON T1.FacID = T2.FacID JOIN Course AS T3 ON T2.DNO = T3.DNO GROUP BY T1.FacID HAVING MAX(T3.Credits) > 3 LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            }
        ],
        "book_review": [
            {
                "hash": "bd3f517d3828a8f2c30d7111ff16bfce26fcf518",
                "query": "SELECT Title FROM book WHERE Pages <= 500 ORDER BY Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d7cce1ae646af17e1491df31dd769be56a44fb4f",
                "query": "SELECT Title, COUNT(Review_ID) FROM book WHERE Book_ID IN (SELECT Book_ID FROM review WHERE Rating > 3) GROUP BY Title ORDER BY COUNT(Review_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "e936f0f33c57c188a78f97102cfbb9a6c2b17f74",
                "query": "SELECT T2.Title, AVG(T1.Rating) FROM review AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Rating <= 4 ORDER BY AVG(T1.Rating) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "b39254418347dc085c20b9270d3b0dfa88bfadca",
                "query": "SELECT MAX(T1.Pages), COUNT(DISTINCT T1.Title), COUNT(DISTINCT T1.Chapters) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Rating > 4",
                "template": "SELECT MAX(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "bfbe56800dbfd465faf8f099b4765e3279a4d626",
                "query": "SELECT COUNT(DISTINCT T1.Title) FROM book AS T1 WHERE EXISTS (SELECT 1 FROM review AS T2 WHERE T2.Rating > 2 AND T2.Book_ID = T1.Book_ID) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "7e0b61dd427a0b334184411b31fa64257c0c4719",
                "query": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Type = 'novel' AND T2.Rating > 4 AND T1.Book_ID IN (SELECT Book_ID FROM review WHERE Readers_in_Million > 10) ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8e9961d2d4dc7d12a45d88bd1cb5efaf80e9c161",
                "query": "SELECT T1.Title, T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Pages BETWEEN 200 AND 400 AND T2.Rating > 4 AND T2.Readers_in_Million = 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "6a099fdda9d0b040399e30444180422f55351522",
                "query": "SELECT T1.Title, T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Release <= '2020' ORDER BY T2.Rating ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "143d991331194befc1c816189e3db4042d18f62a",
                "query": "SELECT T2.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID JOIN book AS T3 ON T3.Book_ID = T2.Book_ID WHERE T1.Chapters = T3.Chapters ORDER BY T2.Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6d56a23cda514d8a34b5b06f48eb5fed2266a927",
                "query": "SELECT T1.Title, T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Pages > 500 OR T2.Rating > (SELECT AVG(Rating) FROM review) ORDER BY T2.Rating ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "79c382d9290b07ba4286380edef0799afdc3a62a",
                "query": "SELECT b.Title, r.Rating FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE b.Pages BETWEEN 100 AND 200 AND r.Rating > 4 AND r.Readers_in_Million < 10 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "247fcfb7554347a38ba65371ba2fe16ebd5f01d4",
                "query": "SELECT T2.Title, AVG(T1.Rating) FROM review AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID GROUP BY T2.Title ORDER BY AVG(T1.Rating) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "5d983073caac19aa4ed3d8d4db3f236ba3e63f3e",
                "query": "SELECT T1.Title, COUNT(T2.Review_ID) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE NOT EXISTS (SELECT 1 FROM review AS T3 WHERE T3.Book_ID = T1.Book_ID AND T3.Rating > 4) GROUP BY T1.Title ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "25c2e0bfdf6913abd27ac3d1d35ef23ff5c7da77",
                "query": "SELECT b.Title, r.Rating FROM book AS b JOIN review AS r ON b.Book_ID = r.Book_ID WHERE r.Rating BETWEEN 3 AND 5 OR r.Readers_in_Million IN (SELECT MAX(Readers_in_Million) FROM review) OR b.Chapters = 10 ORDER BY r.Rating ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "caccb61da2f22578cb52740ff942e1787107cb3a",
                "query": "SELECT Title FROM book WHERE EXISTS (SELECT 1 FROM review WHERE review.Book_ID = book.Book_ID AND Rating > 4) ORDER BY Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Book_ID = #TABLE#.Book_ID AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "60c80fb16b5eb7f6aa3fb416f130e20d9f58999f",
                "query": "SELECT Title FROM book WHERE Type != 'Fiction' ORDER BY Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "00bb798bc7d3b92fa4e72eca71430183be9cc06a",
                "query": "SELECT Title, Pages FROM book WHERE Type = 'Fiction' AND Pages BETWEEN 200 AND 400 AND Book_ID NOT IN (SELECT Book_ID FROM review WHERE Rating < 4) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "27cf5b3569b424995362fe0dfbf8efe8a654b2c7",
                "query": "SELECT COUNT(DISTINCT T1.Book_ID), COUNT(T2.Review_ID) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Rating = 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "b8f6f3cf9b7f3e8b853ef69ac87285cf97c35d64",
                "query": "SELECT COUNT(DISTINCT T1.Book_ID) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Pages BETWEEN 100 AND 200 OR T2.Rating > 4 OR T2.Book_ID NOT IN (SELECT Book_ID FROM review WHERE Rating < 3)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "d1ef9918eedff1feab9bcbb511fc362a3b9159a9",
                "query": "SELECT T1.Title, COUNT(T2.Review_ID) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Rating BETWEEN 4 AND 5 AND EXISTS (SELECT 1 FROM review WHERE Book_ID = T2.Book_ID AND Rating = 5) GROUP BY T1.Title LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "3c415f78be70fd1d12792b134bc8fd03bd97b99d",
                "query": "SELECT T1.Title, T2.Rating, T3.Readers_in_Million FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID JOIN review AS T3 ON T2.Review_ID = T3.Review_ID WHERE T1.Chapters = 10 AND T2.Rating = T3.Rating AND T1.Pages = 200",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "b45efbb7f02d4b037cd4226d17acb851c482e0ce",
                "query": "SELECT * FROM review WHERE Rating BETWEEN 1 AND 5 AND Readers_in_Million > 0 AND Book_ID IN (SELECT Book_ID FROM book WHERE Pages > 100) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "ae91d539242c05001e4c612cbfd0253065877fad",
                "query": "SELECT T1.Title, T2.Title FROM book AS T1, book AS T2 WHERE T1.Type = T2.Type AND T1.Chapters = T2.Chapters OR T1.Pages BETWEEN 100 AND 200 OR T1.Title IN (SELECT Title FROM book)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "1ca830b879b115170b4043f8b6e6837a6cbe0451",
                "query": "SELECT COUNT(DISTINCT T2.Review_ID), T1.Pages FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Type = 'Fiction' AND T1.Chapters BETWEEN 20 AND 50 AND T2.Rating > 4",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "fb3ce23539de97829c528fae6c57348813e0253a",
                "query": "SELECT Title FROM book WHERE Release = 'Paperback' OR Pages BETWEEN 200 AND 500 OR Rating > 4 ORDER BY Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1676a41123fa8cc18c3998de572db6b01ecdef84",
                "query": "SELECT COUNT(DISTINCT Title), AVG(Pages) FROM book WHERE Type != 'Fiction' GROUP BY Type ORDER BY Chapters DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ca00215e5cccd42f8817e255132c76fb2cbc5bf4",
                "query": "SELECT AVG(Pages) FROM book WHERE Release > '2020'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "vehicle_driver": [
            {
                "hash": "881a35344b2f82cfa743b473ad8ad2a612b885a8",
                "query": "SELECT Builder FROM vehicle WHERE Model IN (SELECT Model FROM vehicle WHERE Build_Year = '2015') AND Power > (SELECT AVG(Power) FROM vehicle WHERE Top_Speed > 250)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "a2f20f0b58a1ac8e01462597f9e464bb2038ccf5",
                "query": "SELECT T2.Name, MIN(T1.Total_Production) FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID GROUP BY T2.Name ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fd5f9c08c1b475f1cc515de3037a06484b9e8f58",
                "query": "SELECT Builder FROM vehicle WHERE Top_Speed > (SELECT AVG(Top_Speed) FROM vehicle) AND Power BETWEEN 500 AND 800 AND Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver) ORDER BY Model ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "01f1c8e357df895d5854b9c3304bfa1f85a96d7f",
                "query": "SELECT Builder, Top_Speed FROM vehicle AS T1 WHERE Build_Year BETWEEN 2000 AND 2010 AND Power > 1000 AND Total_Production NOT IN (SELECT Total_Production FROM vehicle AS T2 WHERE T2.Model = 'Toyota')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "b7e0c5a2657cc3c2c92b12063a4524affc3b813b",
                "query": "SELECT Builder FROM vehicle WHERE Model BETWEEN 'Ferrari' AND 'Porsche'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "c97ae16cbb4a49831a0b5ab87f1d481cbbea4b6d",
                "query": "SELECT T1.Model, T2.Name FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T2.Citizenship = 'American' AND T1.Build_Year BETWEEN '1990' AND '2000' AND T2.Racing_Series = 'Formula 1'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0e2724f4590f9f00efde17b7e2dac3d936afd484",
                "query": "SELECT COUNT(DISTINCT T1.Driver_ID) AS T1_Driver_ID FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Driver_ID >= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "4c1fd92cd8d5cc0fc36a3cf9d808d102c5e73dd9",
                "query": "SELECT Model FROM vehicle WHERE Build_Year = 2015 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e3ba8f0f11b3275d9e161c8c515bc2e069960de8",
                "query": "SELECT T1.Model, COUNT(DISTINCT T2.Name) FROM vehicle AS T1 JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T1.Power BETWEEN 100 AND 200 AND T1.Top_Speed IN (SELECT MAX(Top_Speed) FROM vehicle) GROUP BY T1.Model HAVING COUNT(T1.Model) > 1 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "91ac3f85b49af9c06ba9f4b111694974c0225682",
                "query": "SELECT COUNT(DISTINCT Builder) FROM vehicle WHERE Top_Speed > ( SELECT AVG(Top_Speed) FROM vehicle ) AND Builder NOT IN ( SELECT Builder FROM vehicle WHERE Power < ( SELECT AVG(Power) FROM vehicle ) ) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ) LIMIT #VALUE#"
            },
            {
                "hash": "358d17f89e894a5c1e99767ec701470b3531e839",
                "query": "SELECT Builder, Top_Speed FROM vehicle WHERE Top_Speed BETWEEN 150 AND 250 ORDER BY Top_Speed ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f79d7d54b6eb77c7488250002c7ca4880d2cb670",
                "query": "SELECT * FROM vehicle WHERE Top_Speed > 250 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b948e69cdd3de842a9093263d31838ac367c2796",
                "query": "SELECT COUNT(DISTINCT Vehicle_ID), COUNT(DISTINCT Driver_ID), Builder FROM vehicle WHERE Top_Speed < 300",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "9f98bfc4d8316be9fd58d5e467ec93f1afbc7998",
                "query": "SELECT T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE NOT EXISTS (SELECT 1 FROM driver AS T3 WHERE T3.Driver_ID = T2.Driver_ID) GROUP BY T1.Model HAVING COUNT(T1.Model) = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "11f077fdd3ee7a3236c2ed63ab2fa3df50c4b3e9",
                "query": "SELECT T1.Model, COUNT(DISTINCT T2.Name), T1.Build_Year FROM vehicle AS T1 LEFT JOIN vehicle_driver AS T3 ON T1.Vehicle_ID = T3.Vehicle_ID LEFT JOIN driver AS T2 ON T3.Driver_ID = T2.Driver_ID WHERE T2.Racing_Series = 'F1' OR T1.Top_Speed BETWEEN 200 AND 250 OR T1.Builder IN (SELECT Builder FROM vehicle WHERE Power > 500) ORDER BY T1.Total_Production DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "db5019e55e8655394e23802ff030e396fcaaf767",
                "query": "SELECT COUNT(DISTINCT T2.Name), T1.Builder FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T1.Build_Year BETWEEN '2010' AND '2020' GROUP BY T1.Builder ORDER BY COUNT(DISTINCT T2.Name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "d52dc7f7e9aaafdeae1b126e8015d61065ab8ade",
                "query": "SELECT AVG(Top_Speed) FROM vehicle WHERE Build_Year BETWEEN 2000 AND 2010",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "52d1c650f06e0b613481606cd3118232805f8afd",
                "query": "SELECT * FROM vehicle WHERE EXISTS (SELECT 1 FROM vehicle_driver WHERE vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID AND vehicle_driver.Driver_ID IN (SELECT Driver_ID FROM driver WHERE Name = 'John'))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Vehicle_ID = #TABLE#.Vehicle_ID AND #TABLE#.Driver_ID IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "9bf58b4c5a4cce1bd77935d77bd94df66e0fcd2f",
                "query": "SELECT v.Power, d.Name, v.Builder FROM vehicle AS v JOIN vehicle_driver AS vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver AS d ON vd.Driver_ID = d.Driver_ID ORDER BY v.Power DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "927be3f0f935e76c04fd72f2c2b6e22e28b15949",
                "query": "SELECT T1.Model, COUNT(T2.Driver_ID) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T2.Driver_ID NOT IN (SELECT Driver_ID FROM driver WHERE Citizenship = 'USA') GROUP BY T1.Model ORDER BY COUNT(T2.Driver_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "1a2cc5df6f56c83a2486fd751e99b913d0bf4e70",
                "query": "SELECT T1.Name, T2.Model FROM driver AS T1 JOIN vehicle_driver AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN vehicle AS T2 ON T3.Vehicle_ID = T2.Vehicle_ID WHERE T2.Top_Speed <= 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "e637439722560428fda43993e8e8af2ac446909e",
                "query": "SELECT T1.Model, COUNT(DISTINCT T3.Name) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID GROUP BY T1.Model HAVING COUNT(DISTINCT T3.Name) = (SELECT MAX(mycount) FROM (SELECT COUNT(DISTINCT T3.Name) as mycount FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID GROUP BY T1.Model)) LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = (SELECT MAX(mycount) FROM (SELECT COUNT(DISTINCT #COLUMN#) as mycount FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#)) LIMIT #VALUE#"
            },
            {
                "hash": "1744c984b27765bd07df1f871c2679e02e16cd55",
                "query": "SELECT T1.Name, T2.Model FROM driver AS T1 JOIN vehicle_driver AS T3 ON T1.Driver_ID = T3.Driver_ID JOIN vehicle AS T2 ON T3.Vehicle_ID = T2.Vehicle_ID WHERE T1.Driver_ID < 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "b58bb43d13621ac36ca33d958078c50130c09047",
                "query": "SELECT Name, COUNT(DISTINCT Model) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T3.Vehicle_ID = T2.Vehicle_ID WHERE T3.Build_Year >= '1999' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9a9b1629577e0f42a81f6c9635313e45dd137b50",
                "query": "SELECT MIN(T1.Top_Speed), COUNT(T2.Vehicle_ID) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T1.Power > 500 AND T2.Driver_ID BETWEEN 1 AND 10 AND EXISTS (SELECT 1 FROM driver WHERE Citizenship = 'USA') GROUP BY T1.Model",
                "template": "SELECT MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN#"
            },
            {
                "hash": "472befa22a3b5248c1de80ec342e49dd33797346",
                "query": "SELECT COUNT(DISTINCT Builder), Model FROM vehicle WHERE Build_Year BETWEEN '1990' AND '2000' OR Model IN ('F1', 'IndyCar') OR Builder NOT IN (SELECT Builder FROM vehicle WHERE Top_Speed < 200) GROUP BY Model ORDER BY Model ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN ('#VALUE#', '#VALUE#') OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "store_product": [
            {
                "hash": "e6f4de5cf9af1ea856b0df924b353c98d9e77b63",
                "query": "SELECT T1.product_id FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.Product_ID WHERE T2.Store_ID IN (SELECT T3.Store_ID FROM store AS T3 WHERE T3.Store_Name = 'store_name') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "4a0253c613082ba10a58fd7d489a920efda6af19",
                "query": "SELECT Store_Name FROM store WHERE Area_size > 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "77ce0ee6c6a9c0be651cf8411f9754e9be7b7139",
                "query": "SELECT product, AVG(dpi) AS AverageDpi FROM product WHERE product_id > 10 GROUP BY product",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "bd117528d57856e56d15c1d58926798908d8d787",
                "query": "SELECT product FROM product WHERE pages_per_minute_color BETWEEN 20 AND 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "fe2abf4a47b6f4c70318be027446377c2383160d",
                "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.Product_ID WHERE EXISTS (SELECT 1 FROM store AS T3 WHERE T3.Store_ID = T2.Store_ID AND T3.Ranking > 10) ORDER BY T1.product ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c8134cd5778b10700f88608b36a01df428bee5df",
                "query": "SELECT * FROM product WHERE dpi BETWEEN 1 AND 100 OR pages_per_minute_color > 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e9a0afb5759b07fd9924f065a9fdae4f01f20aec",
                "query": "SELECT COUNT(DISTINCT product), product FROM product WHERE dpi BETWEEN 300 AND 600 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2183b0a1a69f07fb93936d61794b0ac03c7c2b3e",
                "query": "SELECT COUNT(DISTINCT T1.dpi) FROM product AS T1 WHERE T1.dpi BETWEEN 100 AND 500 AND T1.pages_per_minute_color > ( SELECT AVG(pages_per_minute_color) FROM product ) LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "5c8c1ffeea20abe47c90a543e815802b4a8173b8",
                "query": "SELECT product FROM product WHERE product_id IN (SELECT Product_ID FROM store_product WHERE Store_ID IN (SELECT Store_ID FROM store_district WHERE District_ID = 1))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "517cee05fd3f665983d47b8eaa63e36f7d26ceab",
                "query": "SELECT COUNT(DISTINCT T1.product), COUNT(DISTINCT T2.Store_Name), COUNT(DISTINCT T3.District_name) FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.Product_ID JOIN store AS T3 ON T3.Store_ID = T2.Store_ID WHERE T3.Ranking >= 1 ORDER BY COUNT(DISTINCT T1.product) DESC LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "3006f03439c4303598b9aa90ff829839c87a45ea",
                "query": "SELECT MIN(dpi) , MAX(pages_per_minute_color) FROM product AS product_table ORDER BY dpi ASC",
                "template": "SELECT MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "76e3e5d43f2cc175bf1b6e991ffbada932b4020d",
                "query": "SELECT product FROM product WHERE dpi < 1000 ORDER BY product_id ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "12ccb0476a4856a7c145d5f734bf5722e1bf80c8",
                "query": "SELECT COUNT(product_id) FROM product AS T1 WHERE dpi > 200 AND product_id NOT IN (SELECT Product_ID FROM store_product)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "a7bda6370438569dc1a0b5e47d34b265db535cd9",
                "query": "SELECT T1.product FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.Product_ID WHERE EXISTS (SELECT 1 FROM store AS T3 JOIN store_district AS T4 ON T3.Store_ID = T4.Store_ID WHERE T3.Store_ID = T2.Store_ID AND T3.Store_Name = 'Store 1') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "22eed7185210e9c653dce6bc2f7f4a579ba3fa40",
                "query": "SELECT product FROM product WHERE dpi = 300",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "98ca2b11d34e30eabe0169b41b87331a81bd7ad3",
                "query": "SELECT product, COUNT(product_id) FROM product WHERE pages_per_minute_color BETWEEN 1 AND 10 GROUP BY product ORDER BY product ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "69bd924a4139cf7b1cd27ac7988c3c39a2561175",
                "query": "SELECT T1.District_name, COUNT(T2.Product_ID) FROM district AS T1 JOIN store_district AS T2 ON T1.District_ID = T2.District_ID WHERE T2.Store_ID > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "a5222c2b8e3c74a7fb22041ad0c9c731447367ce",
                "query": "SELECT T1.product FROM product AS T1 WHERE T1.product_id IN (SELECT T2.Product_ID FROM store_product AS T2 WHERE T2.Store_ID = (SELECT T3.Store_ID FROM store AS T3 WHERE T3.Store_Name = 'store_name'))",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = '#VALUE#'))"
            },
            {
                "hash": "4a496e7a96bc6231be90d124451650c62418451a",
                "query": "SELECT dpi FROM product WHERE dpi BETWEEN 100 AND 500 AND pages_per_minute_color > 10 ORDER BY dpi ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "51abe8527fc88743eb29de76a14add16a1049f23",
                "query": "SELECT T1.Store_Name FROM store AS T1 JOIN store_product AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Product_ID IN (SELECT product_id FROM product WHERE dpi > 400)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "7df59a8ad4669a46d59ae4990c44720ea8f2e954",
                "query": "SELECT product FROM product WHERE product_id < (SELECT COUNT(product_id) FROM product)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT COUNT(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "332fac03d9ff6343da02e983869d41e4f5bfac76",
                "query": "SELECT T1.product, T2.Headquartered_City, T3.Store_Name FROM product AS T1 JOIN store_product AS T2 ON T1.product_id = T2.Product_ID JOIN store AS T3 ON T2.Store_ID = T3.Store_ID ORDER BY T3.Area_size DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f6cd89a8749804c5fd38049fbc1515e07fe72cde",
                "query": "SELECT MIN(pages_per_minute_color) , MAX(dpi) FROM product WHERE product_id != 1 LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a8ed46e9387bebcd0e9787007aed0a448fc2bb48",
                "query": "SELECT Store_Name FROM store WHERE Type = 'A' AND Area_size BETWEEN 100 AND 200 AND Store_ID NOT IN (SELECT Store_ID FROM store_product)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "512434fdc456f496270dff92b32205999c71462a",
                "query": "SELECT product FROM product WHERE dpi <= 200",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "7b85d334f83c89ca6719351492bd70f1c9901f1e",
                "query": "SELECT product FROM product WHERE product = 'Printer' AND dimensions = '17 x 14 x 8' AND dpi = 600",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE#"
            }
        ],
        "yelp": [
            {
                "hash": "b2107523592ae97febb4e7d2d6f4551e11b33bee",
                "query": "SELECT T1.name, T2.category_name FROM business AS T1 JOIN category AS T2 ON T1.bid = T2.business_id JOIN review AS T3 ON T2.id = T3.business_id WHERE T3.rating > 4 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fb2fd995bd24fce86e156bb4fdf88f41085cbd86",
                "query": "SELECT review_count FROM business WHERE rating <= 3 GROUP BY review_count HAVING COUNT(bid) > 10 ORDER BY review_count DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0e92057b14e4d5133f1b9e2d082325acbfe5c959",
                "query": "SELECT T1.name FROM business AS T1 WHERE T1.rating > 4 AND T1.review_count > ( SELECT AVG(review_count) FROM business ) AND NOT EXISTS ( SELECT 1 FROM review AS T2 WHERE T2.business_id = T1.business_id AND T2.rating < 4 ) ORDER BY T1.review_count DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# < #VALUE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d8fcb77b1a681db22f6e81397eafb01fbddb622b",
                "query": "SELECT COUNT(DISTINCT T1.name), T2.category_name FROM business AS T1 JOIN category AS T2 ON T1.business_id = T2.business_id WHERE T2.category_name != 'Fast Food' ORDER BY T2.category_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f3ca99f67b08295cc079e0cc44e7a8674136d8cb",
                "query": "SELECT T1.name, T2.business_id FROM business AS T1 JOIN category AS T2 ON T1.bid = T2.business_id WHERE T1.review_count <= 100 ORDER BY T1.rating ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "318b838884af101dd8eeb8bfd937051baf29da39",
                "query": "SELECT T1.business_id, SUM(T1.review_count) FROM business AS T1 WHERE T1.rating BETWEEN 3 AND 5 AND T1.business_id NOT IN ( SELECT T2.business_id FROM business AS T2 WHERE T2.is_open = 0 ) GROUP BY T1.business_id ORDER BY T1.business_id ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "14b57cf04f4d53738fcab9d54419ff10e7b73496",
                "query": "SELECT T1.business_id FROM business AS T1 WHERE EXISTS ( SELECT T2.category_name FROM category AS T2 WHERE T1.business_id = T2.business_id AND T2.id < 10 ) GROUP BY T1.business_id HAVING MAX(T1.review_count) > 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# < #VALUE# ) GROUP BY T1.#COLUMN# HAVING MAX(T1.#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3bf6efd1686d246d9638f6a4e5df3a545e54b074",
                "query": "SELECT T1.name, T2.category_name FROM business AS T1 INNER JOIN category AS T2 ON T1.business_id = T2.business_id INNER JOIN review AS T3 ON T2.business_id = T3.business_id WHERE T3.rating >= 4 ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "771f4e5b0440dd699b51ba723ff6c8d782d57ae8",
                "query": "SELECT COUNT(DISTINCT T2.category_name), COUNT(DISTINCT T3.neighbourhood_name), COUNT(DISTINCT T1.business_id) FROM business AS T1 LEFT JOIN category AS T2 ON T1.business_id = T2.business_id LEFT JOIN neighbourhood AS T3 ON T1.business_id = T3.business_id WHERE T2.category_name = 'Food' OR T3.neighbourhood_name = 'Downtown' OR T1.business_id IN (SELECT T4.business_id FROM category AS T4 WHERE T4.category_name = 'Food')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e56e4ab22cd959d3d19b3d3d97d4f05b49f8f333",
                "query": "SELECT name FROM business WHERE review_count > 100 ORDER BY rating DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b2e72e2a74500354506c784e0b2a85f27f985104",
                "query": "SELECT COUNT(DISTINCT T1.business_id), COUNT(T2.category_name) FROM business AS T1 JOIN category AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Toronto' OR T2.category_name = 'Food' OR NOT EXISTS (SELECT 1 FROM review WHERE review.business_id = T1.business_id)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "927cbbdc9b459383214375eacc952205158710bf",
                "query": "SELECT COUNT(bid) FROM business WHERE rating != 0",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "87ae3fc5d152af180a23a203e988b64c96abf478",
                "query": "SELECT T1.name FROM (SELECT business_id , name FROM business) AS T1 WHERE T1.business_id = 'business_id'",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE#) AS T1 WHERE T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "50fd0e3918ca703d2d1e2cfaa4f741f045076885",
                "query": "SELECT MIN(rating) FROM business WHERE review_count BETWEEN 10 AND 50 ORDER BY rating ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT T1.name AS business_name, T2.category_name FROM business AS T1 INNER JOIN category AS T2 ON T1.business_id = T2.business_id WHERE T1.rating != 0",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "e353559b2caa2a4bb64c5e85488b666a7dc49209",
                "query": "SELECT name FROM business WHERE review_count BETWEEN 10 AND 20 AND city = 'New York' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f3d4b562259145a856868cb6ae77737ddc14d277",
                "query": "SELECT COUNT(DISTINCT name), AVG(rating) FROM business WHERE review_count >= 100 LIMIT 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cbdf0bfbb380ba60374f7dde42342d0978161ac6",
                "query": "SELECT T1.name, T2.name FROM business AS T1 JOIN business AS T2 ON T1.bid = T2.bid WHERE T1.rating IN (SELECT rating FROM business WHERE review_count = 100)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "107bd9796a9d418aac7b8dff3dc351e28fa9161f",
                "query": "SELECT T2.category_name FROM category AS T1 JOIN business AS T2 ON T1.business_id = T2.business_id JOIN review AS T3 ON T2.business_id = T3.business_id WHERE T3.rating >= 4",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "18551794c6f472ae76c35ba18efd691ef8ded05f",
                "query": "SELECT T1.rating, T2.likes FROM review AS T1 JOIN tip AS T2 ON T1.business_id = T2.business_id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "974b282ba8a8ec70c0b558aae84138d4f6d01160",
                "query": "SELECT T1.name FROM business AS T1 JOIN category AS T2 ON T1.business_id = T2.business_id JOIN review AS T3 ON T1.business_id = T3.business_id WHERE T2.category_name NOT IN (SELECT category_name FROM category AS T4 JOIN review AS T5 ON T4.business_id = T5.business_id GROUP BY T4.category_name HAVING AVG(T5.rating) > 4) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7aa1cb811988886eca629b681c88148e99726f5d",
                "query": "SELECT COUNT(*) AS count FROM business WHERE rating = 5",
                "template": "SELECT COUNT(*) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a87c27008d7ff237bfb787ed519afa7a0deb1722",
                "query": "SELECT T1.name, T2.category_name FROM business AS T1 JOIN category AS T2 ON T1.business_id = T2.business_id WHERE T1.review_count > 100 ORDER BY T1.rating ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0599a2343b45ffd7fc8dd3419bf977ff981e4850",
                "query": "SELECT T1.name, T2.category_name FROM business AS T1 JOIN category AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'New York' OR T1.latitude BETWEEN 40 AND 42 OR T1.rating > (SELECT AVG(rating) FROM review)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "79efcfa9cc81129244c073612ae8aeb4a1c8fc6b",
                "query": "SELECT T1.name FROM business AS T1 WHERE T1.review_count BETWEEN 100 AND 500 AND T1.rating > 3 AND T1.city = 'Toronto' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "67e462c641991e687326faa2183c708652d0371b",
                "query": "SELECT category_name FROM category AS T1 WHERE business_id = 'some_business_id'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "55853cd9c44466410985d46aae4ab7e92c07d947",
                "query": "SELECT COUNT(DISTINCT T1.business_id), T1.name FROM business AS T1 WHERE T1.business_id NOT IN (SELECT T2.business_id FROM category AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            }
        ],
        "dorm_1": [
            {
                "hash": "a283d229a9616eb602b4e5af3e22ca867beb353b",
                "query": "SELECT COUNT(StuID), AVG(Age) FROM Student ORDER BY StuID ASC",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8ec193eb0533a1e41c4cd896b3a64bfbda30d99d",
                "query": "SELECT LName, Fname FROM Student WHERE Age BETWEEN 18 AND 22 AND Sex NOT IN (SELECT Sex FROM Student WHERE Major = 1) ORDER BY Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "01b835813f216e67685bf936a55d2f6947745c1f",
                "query": "SELECT COUNT(DISTINCT S.StuID), D.dorm_name FROM Student S JOIN Lives_in L ON S.StuID = L.stuid JOIN Dorm D ON L.dormid = D.dormid WHERE S.Age BETWEEN 18 AND 25 ORDER BY S.Age ASC LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6359cd3e2addf8e302525ec839be65aecbb7a23b",
                "query": "SELECT T1.stuid, T1.dormid, MIN(T2.student_capacity) FROM Lives_in AS T1 JOIN Dorm AS T2 ON T1.dormid = T2.dormid WHERE T2.student_capacity <= 200 GROUP BY T1.stuid, T1.dormid LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#, #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b48efe05627adaf7e75b14bef2fbe022e25b08d1",
                "query": "SELECT T1.dormid FROM Dorm AS T1 JOIN Lives_in AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity <= 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6285b3863842b7922cc321f8c211764c96ad28b6",
                "query": "SELECT T1.dorm_name, COUNT(DISTINCT T3.amenity_name), COUNT(DISTINCT T3.amenity_name) FROM Dorm AS T1 JOIN Has_amenity AS T2 ON T1.dormid = T2.dormid JOIN Dorm_amenity AS T3 ON T3.amenid = T2.amenid WHERE T1.student_capacity > 100 ORDER BY T1.dorm_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "93d022e453de275e10ab3f9654bf76ff20cb1218",
                "query": "SELECT T1.dorm_name, T2.amenity_name, SUM(T1.student_capacity) FROM Dorm AS T1 JOIN Has_amenity AS T2 ON T1.dormid = T2.dormid JOIN Dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name BETWEEN 'Gym' AND 'Laundry' GROUP BY T1.dorm_name, T2.amenity_name ORDER BY SUM(T1.student_capacity) DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "79305b9a54efa0e94f774c7b443585bc84784369",
                "query": "SELECT dorm_name, MAX(student_capacity) FROM Dorm WHERE gender = 'Male' GROUP BY dorm_name HAVING MAX(student_capacity) < 200 ORDER BY dorm_name ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "04f19e82928e46d7216ce45761ee98d92097a4f9",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.Advisor WHERE T2.Major = 1 ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2e6592d703c9cde21ff953a7599beebc7d2117ab",
                "query": "SELECT T1.LName, COUNT(DISTINCT T2.Fname) FROM Student AS T1 JOIN Student AS T2 ON T1.Major = T2.Major WHERE T1.Age > 20 OR T2.Age = 25 OR T1.Sex NOT IN (SELECT Sex FROM Student WHERE Age < 20)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "8d24ec1b865d3c9772e3d44a53bf9255ef758e1c",
                "query": "SELECT T1.LName FROM Student AS T1 WHERE T1.Major IN (SELECT T2.Major FROM Student AS T2 WHERE T2.Sex = 'M')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1c3001981891587be4c6c5ba6c2f4d3888ca4e42",
                "query": "SELECT T1.dorm_name, COUNT(DISTINCT T2.stuid) FROM Dorm AS T1 JOIN Lives_in AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 50 ORDER BY T1.dorm_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a15fc42dc32427ddfa74e732078f4b8fc0559365",
                "query": "SELECT COUNT(*) FROM Student WHERE Age >= 20",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "932eca73f0b8640b2d6160997fbb17afcf0199b8",
                "query": "SELECT COUNT(DISTINCT T1.LName), T1.Sex FROM Student AS T1 WHERE T1.Age > 20 OR T1.city_code = 'New York' AND NOT EXISTS (SELECT 1 FROM Dorm AS T2 WHERE T2.gender = 'Male' AND T1.Sex = 'Female') ORDER BY T1.LName ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8b93943f19f5c58dc95d94893771bc4eff2dfb86",
                "query": "SELECT T1.Fname, T2.dorm_name FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid JOIN Dorm AS T3 ON T2.dormid = T3.dormid WHERE T1.Age = 20 ORDER BY T1.Fname DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a84c548fd070b783fce6bac82f129faadb3d8528",
                "query": "SELECT COUNT(DISTINCT T1.StuID), T1.Age, T2.Age FROM Student AS T1 JOIN Student AS T2 ON T1.Age = T2.Age WHERE T1.Age BETWEEN 18 AND 25 AND T2.Age > 20 ORDER BY T1.StuID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9b51632bccb7857879180d14f899659628bbc485",
                "query": "SELECT COUNT(DISTINCT T2.dorm_name), T1.Sex FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid WHERE T1.Age <= 25 ORDER BY T1.Sex ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d6a3b3419aa269f7597c3b5268e1ec43445d7343",
                "query": "SELECT D.dorm_name, COUNT(L.stuid), MIN(S.Age) FROM Dorm D JOIN Lives_in L ON D.dormid = L.dormid JOIN Student S ON L.stuid = S.StuID WHERE S.Age > 20 AND D.student_capacity > 100 AND D.gender = 'Male' AND S.Sex = 'Male' ORDER BY COUNT(L.stuid) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "141ae77c3f8860d5bcb2e5aecbc3c8ff72c041f6",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid JOIN Dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.student_capacity <= 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7ce7ea7a508fda258b3e3df3e09fdfa04a07fd2e",
                "query": "SELECT LName FROM Student WHERE EXISTS (SELECT 1 FROM Lives_in WHERE Lives_in.stuid = Student.StuID AND Lives_in.dormid = 1) ORDER BY LName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.StuID AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "72f444fc6ad8d56bda52e01812ede0587fd16ac4",
                "query": "SELECT COUNT(StuID), SUM(Age) FROM Student WHERE Sex = 'M'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a3c526558a0439822397fd07fe6e83226f27fc37",
                "query": "SELECT T1.Fname, T2.student_capacity FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid WHERE T1.Age > 20 OR T1.Sex = 'M' OR T1.Age < ( SELECT AVG(Age) FROM Student ) ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "62229b6df79daf57fc9c40e0d7fd7efaa2b52e2a",
                "query": "SELECT COUNT(DISTINCT dorm_name) FROM Dorm",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "ac61d74ccaaad22edd76f427b25e9a5b98a5b511",
                "query": "SELECT COUNT(DISTINCT stuid) FROM Lives_in WHERE dormid = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT LName FROM Student WHERE Age > 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "2793504990cb942601c7d94ac3437e3b2b8ad409",
                "query": "SELECT COUNT(T1.dormid), T1.dorm_name FROM Dorm AS T1 JOIN Lives_in AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 50 OR T2.room_number > 100 OR EXISTS (SELECT 1 FROM Student AS T3 WHERE T3.StuID = T2.stuid AND T3.Age > 20) LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "university_basketball": [
            {
                "hash": "b01ba4791706adea5e8c152aa08ce2701fc89e94",
                "query": "SELECT * FROM basketball_match WHERE All_Games_Percent >= 0.5 ORDER BY All_Games_Percent DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7b98394ed6f56a40e01aaaea631f3fc2335c9010",
                "query": "SELECT T1.Team_Name, T2.School FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID JOIN basketball_match AS T3 ON T1.Team_ID = T3.Team_ID WHERE T2.Enrollment BETWEEN 10000 AND 20000 ORDER BY T1.Team_Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "340bf3435d4f5b60ed028a1d187bfb4a5b89eaff",
                "query": "SELECT T1.School FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T2.Team_Name != 'Team1' ORDER BY T1.Enrollment DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1e2ff6cf6f15059d4f0f21fde6fff848f670657b",
                "query": "SELECT T1.School, SUM(T2.All_Games_Percent) FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T2.All_Games_Percent BETWEEN 70 AND 90 GROUP BY T1.School ORDER BY SUM(T2.All_Games_Percent) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "c6f821d4e34479b2b120dba333f2b5a390fe258a",
                "query": "SELECT T1.Team_Name, T2.School FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID JOIN basketball_match AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Team_ID != T3.Team_ID GROUP BY T1.Team_Name ORDER BY T1.Team_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "09cee661b9fcda73e3edf29d018dbcdb99c94a74",
                "query": "SELECT School_ID, School FROM university WHERE Enrollment < 10000 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "69626667032c5922adf078d95f81e56f4446f2c0",
                "query": "SELECT T1.Team_Name, COUNT(DISTINCT T2.Team_Name) FROM basketball_match AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T1.All_Games_Percent < 0.5 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "65986ddc2ae9aa5e26653608aa9084a7e6a94177",
                "query": "SELECT COUNT(DISTINCT T1.Team_Name) FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T1.All_Games_Percent BETWEEN 50 AND 70",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "67cede0c6362c9da4097a89d61dfa730522fc083",
                "query": "SELECT T2.School, T1.Team_Name FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID JOIN basketball_match AS T3 ON T2.School_ID = T3.School_ID WHERE (T1.All_Games_Percent BETWEEN 0.5 AND 0.7) OR (T3.All_Games_Percent > 0.8) ORDER BY T2.School ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1c57d6263f76f68040bb4c0ac4747ff0d4ab097f",
                "query": "SELECT T1.School, T2.Team_Name FROM university AS T1 INNER JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T2.All_Games_Percent BETWEEN 50 AND 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "699266787fa7ec43a065698d4c6eabbe1913208b",
                "query": "SELECT T1.School, COUNT(DISTINCT T2.Team_ID) FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T2.All_Games_Percent >= 0.5 GROUP BY T1.School HAVING COUNT(DISTINCT T2.Team_ID) > 1 ORDER BY COUNT(DISTINCT T2.Team_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "afbfe92be3fa1ea445f97ca8e731530ccebfe947",
                "query": "SELECT T1.Team_Name, T2.School, T1.ACC_Percent FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T1.All_Games_Percent = 100 ORDER BY T1.ACC_Percent ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "69e389efa36c2d2fd2ca5b482804e33d2db2732c",
                "query": "SELECT Team_Name FROM basketball_match WHERE School_ID NOT IN (SELECT School_ID FROM university WHERE School = 'Duke') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "8c4f2f91d8a2b1f78b3cb2c004e3d2b968b5f685",
                "query": "SELECT T1.School_ID, T2.All_Games_Percent FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Location = 'North Carolina' OR T2.All_Games_Percent < 0.5 ORDER BY T2.All_Games_Percent DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b75ab50e2780b986119c0597babb53b1f232bd5d",
                "query": "SELECT Team_Name FROM basketball_match WHERE All_Games_Percent != 0 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "52db223ea28e1be5048f9a345c902776e949e384",
                "query": "SELECT T1.Team_Name FROM basketball_match AS T1 WHERE T1.All_Games_Percent > (SELECT AVG(b.All_Games_Percent) FROM basketball_match b) AND T1.School_ID = (SELECT T2.School_ID FROM university AS T2 WHERE T2.Enrollment > 20000)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "8133ee043e6d5be7215bd7c1292fb185af262f1a",
                "query": "SELECT T1.Team_Name, T2.School FROM basketball_match AS T1 JOIN basketball_match AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Team_ID NOT IN (SELECT Team_ID FROM basketball_match WHERE School_ID = 1) GROUP BY T1.Team_Name HAVING MAX(T1.All_Games_Percent) LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "66dd20d6ce42fdea6afe63a14229762a7116f79e",
                "query": "SELECT T1.Team_Name FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Team_ID != 10 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fee77ee5f8f8bd0bc7d32e8b297380fe7543dedd",
                "query": "SELECT COUNT(DISTINCT T1.Team_Name) , COUNT(DISTINCT T2.Team_Name) , T1.All_Games_Percent FROM basketball_match AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T1.ACC_Percent = T2.ACC_Percent LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "40c884daa5556a6446ea4add4ba79cff272c1a5e",
                "query": "SELECT School_ID FROM basketball_match WHERE All_Games_Percent = (SELECT MAX(All_Games_Percent) FROM basketball_match) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "43e41122f479ec27eb65ef84eccad2f1d27656f6",
                "query": "SELECT T1.School, T2.Team_Name FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID JOIN basketball_match AS T3 ON T2.School_ID = T3.School_ID WHERE T1.Location = 'North Carolina' AND T2.ACC_Percent BETWEEN 0.5 AND 0.7 AND T3.All_Games_Percent > 0.6",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "0bf66f70c3c719fcdbf82fb7ec75fe476195d3d3",
                "query": "SELECT COUNT(T1.Team_ID), COUNT(T1.Team_Name), COUNT(T2.School) FROM basketball_match AS T1 JOIN university AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Team_Name = 'Team Name'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "98933ebc8f0e74dd9ea94f7da954c3c4f7063ba9",
                "query": "SELECT T1.School, T2.Team_Name FROM university AS T1 JOIN basketball_match AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment > 15000 OR T2.All_Games_Percent BETWEEN 0.5 AND 0.8 OR T2.ACC_Percent = '0.571'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "969b76920dc565d9cfdc7355b0e23395f6d47223",
                "query": "SELECT Team_Name FROM basketball_match WHERE All_Games_Percent < 0.5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            }
        ],
        "inn_1": [
            {
                "hash": "7a9e9cd00cd8d39fdafa8ce28697a0355999e4c7",
                "query": "SELECT roomName, SUM(basePrice) FROM Rooms WHERE maxOccupancy <= 4 GROUP BY roomName HAVING SUM(basePrice) > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c8c0beb1bbe47cf1e5e4cde2b99d85472096d009",
                "query": "SELECT T1.roomName FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.Adults > (SELECT AVG(Adults) FROM Reservations) ORDER BY T1.basePrice DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "69800e01d3eba74353a60858159f2a8a41beda58",
                "query": "SELECT roomName FROM Rooms WHERE beds < 3 LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "784d9e688b6023c6af3b96df215d95ae2692f3e9",
                "query": "SELECT COUNT(DISTINCT roomName) FROM Rooms WHERE NOT EXISTS (SELECT 1 FROM Reservations AS T2 WHERE T2_ROOM = Rooms.RoomId) OR beds > 2",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2_#COLUMN# = #TABLE#.#COLUMN#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "52460844183f4f1f7ac4c75d81edf8a1fc6af4c7",
                "query": "SELECT R1.roomName, SUM(R2.Rate), SUM(R2.Adults), SUM(R2.Kids) FROM Rooms R1 JOIN Reservations R2 ON R1.RoomId = R2.Room WHERE R2.CheckIn = '2022-01-01' OR R2.CheckOut = '2022-01-31' OR R2.Rate > (SELECT AVG(Rate) FROM Reservations) ORDER BY R1.basePrice DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "5b8b49bda49cf6c90cccd86707c5402f4862b148",
                "query": "SELECT COUNT(DISTINCT T2.RoomId) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.Adults >= 2 ORDER BY T2.Code DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b090e877e91f8d3d98f29844f52c0429e470358b",
                "query": "SELECT T1.roomName, COUNT(DISTINCT T2.Code), SUM(T1.basePrice) FROM Rooms AS T1 LEFT JOIN Reservations AS T2 ON T1.RoomId = T2.Room ORDER BY T1.basePrice DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e3652c391c8bf2f7783681f27f00eaa604e12829",
                "query": "SELECT T1.roomName FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room JOIN Rooms AS T3 ON T2.Room = T3.RoomId WHERE T2.Rate != 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8193a73856b05de34451a23f723c94adf575ff1f",
                "query": "SELECT T1.roomName FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.Adults = T1.maxOccupancy OR T2.Kids BETWEEN 1 AND 2 OR NOT EXISTS (SELECT * FROM Reservations AS T3 WHERE T3.Code = T2.Code AND T3.Adults > T1.maxOccupancy)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#)"
            },
            {
                "hash": "854e84bdfd07a09af65543fbd75279b6bbeeb761",
                "query": "SELECT COUNT(DISTINCT T1.roomName), COUNT(DISTINCT T1.decor), T1.basePrice FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T1.beds != T2.Adults",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "8152e39f91f2164483e9364f2fd370b8c4d8379f",
                "query": "SELECT COUNT(DISTINCT T1.RoomId), SUM(T2.Adults), MIN(T2.Kids) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "141ae77c3f8860d5bcb2e5aecbc3c8ff72c041f6",
                "query": "SELECT T1.roomName, T2.Rate FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.Adults <= 2 LIMIT 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d298446ed1fbf3324f7597f1ceb8998afdb7fdbc",
                "query": "SELECT T1.roomName, SUM(T2.Adults) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.CheckIn BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Rate > 100 GROUP BY T1.roomName ORDER BY T1.roomName ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9cde17adc5ef11cc492b25a08a3a997c49036373",
                "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Adults < 3 AND T2.decor = 'Modern'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "40ecc4a9cbde3a169ea8fa65cc76f979ac49ff66",
                "query": "SELECT T1.roomName, SUM(T2.Rate) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "95de701edb2e9c1e4d4d6ac3b503a341f7fd705f",
                "query": "SELECT T1.roomName, COUNT(DISTINCT T2.Room), COUNT(DISTINCT T2.LastName) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.CheckIn BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Adults > 2 OR T2.Rate = 100 ORDER BY T1.roomName ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "495bd1df68401cca93d68d65a71078e70c216155",
                "query": "SELECT T1.roomName, T2.Room FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T1.basePrice <= T2.Rate",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "0d60e565d592b8b4173d8a2bd3fdb64709f7790d",
                "query": "SELECT T1.roomName, T1.basePrice, T2.CheckIn FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room JOIN Reservations AS T3 ON T2.Code = T3.Code",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "7d515adeb9d12325761dcd9a2f3be0b14dc49204",
                "query": "SELECT T1.roomName, SUM(T2.Adults), SUM(T2.Kids) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T2.CheckIn BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Rate > 100 OR T1.basePrice < 200",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "fa957f24388d04ce1193276c9229b359d18dcf31",
                "query": "SELECT T1.roomName FROM Rooms AS T1 WHERE NOT EXISTS (SELECT 1 FROM Reservations AS T2 WHERE T2.Room = T1.RoomId AND T2.CheckIn = '2022-01-01' AND T2.CheckOut = '2022-01-02') GROUP BY T1.roomName HAVING SUM(T1.basePrice) > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "fea9b245b5f555b1ee78ba3ad519810becd3cdd9",
                "query": "SELECT COUNT(DISTINCT RoomId), COUNT(DISTINCT roomName), COUNT(DISTINCT beds) FROM Rooms WHERE maxOccupancy >= 4 GROUP BY RoomId HAVING MAX(beds) > 2",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c7e56660ef28520121b187f841e93718f6344858",
                "query": "SELECT T1.roomName FROM Rooms AS T1 WHERE T1.basePrice = 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "6d444dc52a3073f6307b549e696c86c5aa1f6540",
                "query": "SELECT roomName FROM Rooms WHERE basePrice > 100 ORDER BY basePrice DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "22ad8bf0f9582d82af92b2c0a5085cc5c0732bb7",
                "query": "SELECT T1.roomName, COUNT(DISTINCT T2.Code) FROM Rooms AS T1 JOIN Reservations AS T2 ON T1.RoomId = T2.Room WHERE T1.beds > 2 OR T2.Adults > 1 OR NOT EXISTS (SELECT 1 FROM Reservations WHERE Reservations.Room = T1.RoomId AND Reservations.CheckOut < '2020-01-01') ORDER BY T1.basePrice DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "95188c35e62da64ff09a618edf380a8ed1c9b122",
                "query": "SELECT roomName FROM Rooms WHERE RoomId = '101' AND bedType = 'king' ORDER BY basePrice DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "musical": [
            {
                "hash": "09c8244b9f19905ff85814effe592d32b1014d3e",
                "query": "SELECT MIN(COUNT(DISTINCT T1.Name)), COUNT(DISTINCT T1.Year) FROM musical AS T1 WHERE T1.Year > 2000 GROUP BY T1.Name",
                "template": "SELECT MIN(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "3db386046ffd8e24f64289396124ee458af426ed",
                "query": "SELECT Name FROM musical WHERE Year <= 2010 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1a25ceeeb8d6d879e4a92b83ea367daa180abe47",
                "query": "SELECT COUNT(Musical_ID), COUNT(Year) FROM musical ORDER BY Musical_ID ASC",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f4250a6251d44bf1d591e573dd4f22680e9ed90c",
                "query": "SELECT M.Name, COUNT(A.Musical_ID) FROM musical AS M LEFT JOIN actor AS A ON M.Musical_ID = A.Musical_ID WHERE M.Year BETWEEN 2000 AND 2010 AND M.Award = 'Tony Award' GROUP BY M.Name ORDER BY COUNT(A.Musical_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "28c4edd0c036df9a279869f19d17ded4f65016a4",
                "query": "SELECT T1.Name, T2.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T1.Year BETWEEN 2000 AND 2010 OR T2.age > 30 OR T1.Year < 1990",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "93b3378a8f0a3b0c582392667f6302214a6bc24d",
                "query": "SELECT * FROM musical WHERE Year < 2010 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e999fa49c1a8055a9ce41f504b40714bb17d9013",
                "query": "SELECT T1.Name, T2.Name FROM Musical AS T1 JOIN Actor AS T2 ON T1.Musical_ID = T2.Musical_ID LIMIT 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e951306cb1d2176810df6b2874aefdb316f48eae",
                "query": "SELECT T1.Name, T2.Name, T3.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID JOIN actor AS T3 ON T2.Actor_ID = T3.Actor_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "2fe8dfd3163e981973d1321dc424f5ddaf27af45",
                "query": "SELECT T1.Name, SUM(T2.age) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Duration < '5 years' GROUP BY T1.Name ORDER BY SUM(T2.age) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "30565a046831d4c4e6d4cf5b280831315ecd2c8f",
                "query": "SELECT COUNT(Musical_ID), MAX(Year) FROM musical WHERE Year <= 1970",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "5df0aa0a975b9a0bae441bf39cf048f028c6fa20",
                "query": "SELECT T1.Name, AVG(T2.age) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T1.Result NOT IN (SELECT Result FROM musical WHERE Award = 'Tony') GROUP BY T1.Name ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "31329b6a7302556cf3b09defdf843ff933359417",
                "query": "SELECT COUNT(DISTINCT Musical_ID), COUNT(*) FROM actor WHERE age >= 30 ORDER BY COUNT(*) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(*) ASC"
            },
            {
                "hash": "7783e9d13034f04849530e96ba0ebde16b624bb6",
                "query": "SELECT T1.Name FROM musical AS T1 WHERE T1.Year BETWEEN 2000 AND 2010 OR T1.Award = 'Tony Award' OR T1.Result = 'Win', T1.Name ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = #VALUE#, #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "265acd7df478de23a0f265fa4c736f15993290c1",
                "query": "SELECT Name, COUNT(Actor_ID) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE Award != 'Tony' GROUP BY Name ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4393db6b44c6951eb6b70f51f25ba9637f3b0c39",
                "query": "SELECT T1.Name, T1.Year FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T1.Category = 'Best Actor' AND T2.age <= 30 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5c6cbd71f3b79149f4b5b00854de85bd351febbf",
                "query": "SELECT Musical_ID FROM actor WHERE Musical_ID NOT IN (SELECT Musical_ID FROM musical WHERE Year BETWEEN 1990 AND 2000 AND Award = 'Tony') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "83f9201f7ed9a9efdebc14ae30c06d17650a647a",
                "query": "SELECT T1.Name, T2.Name, T3.Duration FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID JOIN actor AS T3 ON T2.Actor_ID = T3.Actor_ID WHERE T1.Year <= 2000 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "078e3e99f8dec583ca4fab96105188a09acbebd5",
                "query": "SELECT T1.Name, T2.Name FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Name ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a89761da508d1983a18832cae71d29ef02b31256",
                "query": "SELECT COUNT(Musical_ID) FROM actor WHERE age BETWEEN 30 AND 50 OR age IN (SELECT age FROM actor WHERE Duration = 'long') LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "2023adf147644112665681160422a056fdeda7a0",
                "query": "SELECT a.Name FROM musical AS m JOIN actor AS a ON m.Musical_ID = a.Musical_ID WHERE m.Year != 2000 ORDER BY a.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a179d83b317df8a4d0b133a05e7db0ffc54f1895",
                "query": "SELECT Name, Result FROM musical WHERE Award = 'Tony' AND Year <= 2000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8ef798e4823bb8a80aff653e7659dc7d8eba043e",
                "query": "SELECT T1.Name FROM musical AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T1.Year IN (SELECT Year FROM musical) ORDER BY T1.Year DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7d2dda7503ecd047c871892132dda5798856c729",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM musical AS T1 JOIN actor AS T2 ON T1.Musical_ID = T2.Musical_ID JOIN musical AS T3 ON T2.Musical_ID = T3.Musical_ID WHERE T1.Year > 1950 AND T3.Award = 'Tony' AND T2.age NOT IN (SELECT age FROM actor WHERE Character = 'Lead')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5c718361e3285a345f4158dd8136cb0f56b84cea",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Musical_ID), COUNT(DISTINCT Result) FROM musical WHERE Year <= 2010 LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f1f823b3796f5e41d53d8ff18cc5371d51df9f46",
                "query": "SELECT Musical_ID, Year FROM musical AS T1 WHERE T1.Year < 2000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#"
            }
        ],
        "insurance_and_eClaims": [
            {
                "hash": "e931bb3d68e4111b21f34a0dcb017460e0b34ea3",
                "query": "SELECT T1.Customer_ID, T2.Staff_ID FROM Customers AS T1 JOIN Staff AS T2 ON T1.Customer_ID = T2.Staff_ID WHERE T1.Customer_Details BETWEEN 'text' AND 'text'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "5c93181c3974f8f42f22c639932e834af0d55927",
                "query": "SELECT Staff_Details FROM Staff WHERE Staff_ID BETWEEN 10 AND 20 OR Staff_ID > 30 ORDER BY Staff_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "469d3235d5d61850623fe3e054a5140ee7ac9295",
                "query": "SELECT COUNT(DISTINCT Policy_ID) FROM Policies WHERE Policy_Type_Code = 'type1' AND Customer_ID BETWEEN 100 AND 200 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e2da181e9f3a11af99a1c886b632a25d4095a473",
                "query": "SELECT Policy_Type_Code FROM Policies WHERE Policy_ID = 100 AND Policy_ID NOT IN (SELECT Policy_ID FROM Claim_Headers) GROUP BY Policy_Type_Code HAVING MAX(End_Date) > '2020-01-01' ORDER BY Policy_Type_Code ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "986c6703eefc6fd2db352bd0f58516cc3da64868",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 INNER JOIN Policies AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN Claim_Headers AS T3 ON T3.Policy_ID = T2.Policy_ID WHERE T3.Date_of_Claim BETWEEN '2020-01-01' AND '2020-12-31' AND NOT EXISTS (SELECT 1 FROM Claims_Processing AS T4 WHERE T4.Claim_ID = T3.Claim_Header_ID) ORDER BY T1.Customer_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f5d09c8725da7e2dd5ac1c35df61b9a34293ff7b",
                "query": "SELECT Policy_ID, Policy_Type_Code FROM Policies WHERE Policy_ID > 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "69c00cc88bc46483bb0ebddc5b07c1dcc791a112",
                "query": "SELECT MAX(Amount_Claimed), MIN(Amount_Piad) FROM Claim_Headers WHERE Claim_Status_Code = 'Open' ORDER BY Amount_Claimed DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0b975cdfc3845ddded8e3152fced28eed1075c7a",
                "query": "SELECT Policy_Type_Code, Start_Date FROM Policies WHERE Start_Date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "6c050c7e092a8598a70381d44c104b78f7eb97c2",
                "query": "SELECT Staff_ID FROM Staff WHERE Staff_ID < (SELECT Claim_Stage_ID FROM Claims_Processing_Stages WHERE Claim_Status_Description = 'Unresolved' LIMIT 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#)"
            },
            {
                "hash": "9ee6df0aa8bd578d9c52e33567b7691eb1155d3e",
                "query": "SELECT T1.Customer_Details FROM Customers AS T1 JOIN Policies AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Claim_Headers AS T3 ON T2.Policy_ID = T3.Policy_ID WHERE T2.Start_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.Claim_Status_Code = 'Open' OR T3.Amount_Claimed > 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "09326a3e06d9caced1af87a2f50b11ad74c79132",
                "query": "SELECT T1.Staff_ID, COUNT(DISTINCT T2.Claim_Header_ID) FROM Staff AS T1 JOIN Claim_Headers AS T2 ON T1.Staff_ID = T2.Staff_ID WHERE T2.Date_of_Claim BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Amount_Claimed > (SELECT AVG(Amount_Claimed) FROM Claim_Headers) ORDER BY T1.Staff_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "218169594954fc9028d0538178bdd960c1d10ffa",
                "query": "SELECT T1.Staff_ID, T2.Policy_ID, T3.Claim_Type_Code FROM Claims_Processing AS T1 JOIN Policies AS T2 ON T1.Claim_ID = T2.Policy_ID JOIN Claim_Headers AS T3 ON T2.Policy_ID = T3.Policy_ID WHERE T1.Staff_ID <= 100 GROUP BY T3.Claim_Type_Code HAVING AVG(T1.Claim_Processing_ID) ORDER BY T3.Claim_Type_Code DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1f4ca267d927ca9a863720fc723a34f54fa2122f",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 JOIN Policies AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Policy_Type_Code = 'health' OR T2.Policy_Type_Code = 'life' OR NOT EXISTS ( SELECT 1 FROM Claims_Processing AS T3 WHERE T3.Staff_ID = T1.Customer_ID ) GROUP BY T1.Customer_ID",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "0b0936dd0513b840a99482e387e70871c7dcb8a1",
                "query": "SELECT AVG(Amount_Claimed) FROM Claim_Headers WHERE Amount_Piad > 10000",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "9d61d782e37ee726b635352fc45da1aadf1327ed",
                "query": "SELECT T1.Claim_ID, COUNT(T2.Document_Type_Code) FROM Claims_Documents AS T1 JOIN Claims_Documents AS T2 ON T1.Claim_ID = T2.Claim_ID WHERE T1.Created_by_Staff_ID = 123 OR T1.Claim_ID BETWEEN 100 AND 200 OR T1.Created_Date IN (SELECT Created_Date FROM Claims_Documents WHERE Created_by_Staff_ID = 123)",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0f35e353644c11a2e09b6a38670d978a9ccc69e1",
                "query": "SELECT COUNT(DISTINCT T1.Claim_Type_Code) FROM Claim_Headers AS T1 WHERE T1.Amount_Claimed > 1000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ddc52e1127ccf376cc676bd7b38a5f74ff43598c",
                "query": "SELECT SUM(Amount_Piad), MAX(Amount_Claimed) FROM Claim_Headers WHERE Date_of_Settlement IS NOT NULL",
                "template": "SELECT SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IS NOT NULL"
            },
            {
                "hash": "8751b38f1e1ee63a9a6c4d42eb7e0599fae3d723",
                "query": "SELECT COUNT(DISTINCT Claim_Type_Code), COUNT(DISTINCT Claim_Status_Code), COUNT(Claim_Type_Code) FROM Claim_Headers WHERE Claim_Status_Code <= 3",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "ff022520077deaa46e1d8768c40d79647672c254",
                "query": "SELECT COUNT(DISTINCT Staff_ID), SUM(Claim_Outcome_Code) FROM Claims_Processing WHERE Staff_ID <= 2",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "2645647a1effc77c5c8e80743d2c8269f9a167f2",
                "query": "SELECT Customer_ID, Customer_Details FROM Customers WHERE Customer_ID != 100 OR Staff_ID != 50 OR Policy_ID = 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# OR #COLUMN# != #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "08b4c34a9b17d7f13d3e59fb7b85570446827515",
                "query": "SELECT SUM(T1.Amount_Claimed) FROM Claim_Headers AS T1 WHERE T1.Claim_Status_Code = 'Open' OR T1.Amount_Claimed > 10000 OR EXISTS ( SELECT T2.Claim_ID FROM Claims_Documents AS T2 WHERE T2.Claim_ID = T1.Claim_Header_ID ) GROUP BY T1.Amount_Claimed HAVING SUM(T1.Amount_Claimed) > 10000",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "e43571a3bc6997bccbc61449fdb9e51312ad20e5",
                "query": "SELECT Policy_Type_Code FROM Policies WHERE Policy_ID NOT IN (SELECT Policy_ID FROM Claim_Headers) ORDER BY Policy_Type_Code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7387df4c2789d93c1212a1fc0da5dbea345a6934",
                "query": "SELECT T1.Staff_ID, T2.Claim_Status_Code FROM Staff AS T1 JOIN Claim_Headers AS T2 ON T1.Staff_ID = T2.Staff_ID WHERE T2.Claim_Status_Code IN (SELECT T3.Claim_Status_Name FROM Claims_Processing_Stages AS T3 WHERE T3.Next_Claim_Stage_ID = T2.Claim_Status_Code) ORDER BY T1.Staff_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cf47e5a12f1514bb63e9a1287511334a59c7ee2b",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 WHERE T1.Customer_ID BETWEEN 100 AND 200 AND T1.Customer_Details = 'ABC'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            }
        ],
        "device": [
            {
                "hash": "e1634c509070b949201289e84296927df6af38ab",
                "query": "SELECT T1.Device, AVG(T3.Quantity) FROM device AS T1 JOIN stock AS T3 ON T1.Device_ID = T3.Device_ID WHERE T3.Shop_ID = (SELECT Shop_ID FROM shop WHERE Shop_Name = 'XYZ') AND T3.Quantity > 100 ORDER BY T3.Quantity DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c92df25fad8cc0d5ec428303d68ca6d69e551fdd",
                "query": "SELECT T1.Device, T2.Quantity FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T1.Device = 'iPhone' OR T2.Quantity > (SELECT AVG(Quantity) FROM stock)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "685bc6ece52678bcbcc5bb6a0a4bcc613649addf",
                "query": "SELECT Device FROM device WHERE Carrier = 'AT&T' AND Applications = 'Facebook' ORDER BY Device_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "49d7dfcd51b4f09591bb30cf6c0da65205d2e692",
                "query": "SELECT MAX(T1.Quantity), T1.Device FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID WHERE T2.Device <= 10 LIMIT 5",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e79d592a8ba71a884f90736869cf52bf0ca0e185",
                "query": "SELECT T1.Shop_Name, T2.Device FROM shop AS T1 JOIN stock AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN device AS T3 ON T2.Device_ID = T3.Device_ID WHERE T1.Open_Date = '2020-01-01' ORDER BY T1.Shop_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "70b6a2bfd32aaeabdc089e7c5c45daa80ce2fba1",
                "query": "SELECT s.Shop_Name, d.Device FROM shop AS s JOIN stock AS st ON s.Shop_ID = st.Shop_ID JOIN device AS d ON st.Device_ID = d.Device_ID WHERE st.Quantity <= 10 ORDER BY d.Device DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "82864d783a308712665558c7cac68daf7f315227",
                "query": "SELECT T1.Device, COUNT(DISTINCT T2.Shop_ID) FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T2.Quantity >= 10 GROUP BY T1.Device ORDER BY COUNT(DISTINCT T2.Shop_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "ab361cee91b3e4fb8005641632a74d3026fdcab4",
                "query": "SELECT Device FROM device WHERE Device_ID IN (SELECT Device_ID FROM stock WHERE Quantity BETWEEN 10 AND 50) AND Carrier = 'Carrier1' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "8dedcfadc4ae195d26bb852c2ae0a199280f6d14",
                "query": "SELECT Device_ID, COUNT(Device) FROM device GROUP BY Device_ID ORDER BY Device_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1fe047070d65f8a6f94886db1e13d9d8cc934aba",
                "query": "SELECT MIN(T1.Device_ID), SUM(T2.Quantity) FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T1.Package_Version <= 3 ORDER BY T1.Device_ID DESC",
                "template": "SELECT MIN(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f88696f389fb5ff3d41af25ee4dda8f90622cce8",
                "query": "SELECT T1.Device, T2.Shop_Name, COUNT(DISTINCT T3.Device_ID) FROM device AS T1 JOIN stock AS T3 ON T1.Device_ID = T3.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID WHERE T1.Package_Version = 'v1' ORDER BY T1.Device ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "688834e1ab820075c45227776890e26fb68f1ed0",
                "query": "SELECT Device, COUNT(Device_ID), SUM(Quantity) FROM stock WHERE Quantity >= 10 GROUP BY Device_ID ORDER BY Device_ID DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "837c12821b43778b75d646f08d072e1690fb96ea",
                "query": "SELECT T1.Shop_Name, T2.Quantity, T3.Software_Platform FROM shop AS T1 JOIN stock AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN device AS T3 ON T2.Device_ID = T3.Device_ID WHERE (T1.Shop_Name = 'Shop1' OR T2.Quantity > 100) AND T3.Software_Platform BETWEEN 'Android' AND 'iOS'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# > #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "433545e06ae3a41e13ef38aa66f09bedd47ea8f1",
                "query": "SELECT T1.Device, T2.Quantity FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T2.Quantity > 100 AND T1.Applications = 'app1' AND T2.Shop_ID BETWEEN 1 AND 10 ORDER BY T2.Quantity DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f6988f402d5fabb8352b71abaa4aa3f6394b08f8",
                "query": "SELECT T1.Device, T2.Shop_Name FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T2.Quantity IN (SELECT MAX(Quantity) FROM stock)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "9bc7a78fab275d7ccc343e6ee8f24d565e453811",
                "query": "SELECT Device, MIN(Quantity) FROM stock WHERE Shop_ID IN (SELECT Shop_ID FROM shop WHERE Location = 'New York') GROUP BY Device",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "7e09d3e9f49673fdd2c632461e6ce76501c93c90",
                "query": "SELECT T1.Device, MIN(T2.Quantity) FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE NOT EXISTS (SELECT 1 FROM shop AS T3 WHERE T3.Shop_ID = T2.Shop_ID AND T3.Open_Year > 2010) GROUP BY T1.Device LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "9180334e1bcca84ddadd45a5846515e82bc3a312",
                "query": "SELECT T1.Device FROM device AS T1 WHERE T1.Device_ID NOT IN (SELECT T2.Device_ID FROM stock AS T2) GROUP BY T1.Device ORDER BY COUNT(T1.Device) DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "e523da173981d248898c922b1ad492e7ed31db1b",
                "query": "SELECT T1.Device FROM device AS T1 WHERE EXISTS (SELECT 1 FROM stock AS T2 WHERE T2.Device_ID = T1.Device_ID AND T2.Quantity > 100) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "554665e45ee74f71fd939dccf138f1e8944c822f",
                "query": "SELECT Device FROM device WHERE Carrier = 'Verizon' ORDER BY Device_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "05298b409a9b1fc38c169ba855768cb1da1f68cd",
                "query": "SELECT T1.Device, T2.Shop_Name FROM device AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID WHERE T2.Quantity = 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "31a95bdfabf3ff0996908de1745d9ec8a5c654dd",
                "query": "SELECT Device_ID, Carrier FROM device WHERE (Device = 'Apple' OR Package_Version = '12.1') AND Quantity BETWEEN 100 AND 200 OR Device_ID = (SELECT Device_ID FROM device WHERE Software_Platform = 'Android') ORDER BY Carrier DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE (#COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#') AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "88825949892c193913f6c6e09c239efb0971009c",
                "query": "SELECT Device, COUNT(Device_ID) FROM device",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "56c7a2ade12359927aeaeb005316f325796e6ebd",
                "query": "SELECT T1.Device_ID, T2.Quantity FROM stock AS T1 JOIN stock AS T2 ON T1.Device_ID = T2.Device_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "886f96be6dc09eb6fce364556ae10320ac6b5bf1",
                "query": "SELECT T1.Device, T2.Shop_Name, T3.Quantity FROM device AS T1 JOIN stock AS T3 ON T1.Device_ID = T3.Device_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID WHERE T1.Package_Version <= '1.0' AND T2.Location = 'USA' ORDER BY T1.Device ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "entrepreneur": [
            {
                "hash": "df2e8eb7c4f193daaafcea773c0d4d9eda071cf0",
                "query": "SELECT T1.Name, T2.Money_Requested FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Requested >= T2.Investor ORDER BY T2.Money_Requested DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "357c8d36bea504811054a4b89a75c01084babf56",
                "query": "SELECT Name, MIN(Height) FROM people WHERE Weight < 80",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "7698157b899f7e43cdf8158b7b2180a991db77ba",
                "query": "SELECT MAX(Money_Requested), MIN(Money_Requested), COUNT(Entrepreneur_ID) FROM entrepreneur ORDER BY Entrepreneur_ID DESC",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9a9bbd1e29608b833f91007c4d3c7d047bd5a3fa",
                "query": "SELECT T1.Name, T2.Company FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 170 AND T2.Money_Requested BETWEEN 500 AND 1000 AND T2.Company = 'ABC Inc.' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ba6fc5d627fdebbdd34efac6654a0ef5f740f88b",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Money_Requested >= 1000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ba00fe01b99675bf24bf6aa9b8b275bcf1c8919b",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T1.Height) FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height BETWEEN 160 AND 180 OR T1.Weight > 60 OR T2.Money_Requested > 500000 ORDER BY T1.Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d7cf65d3b0d2a5d6dce96048413002626ed53950",
                "query": "SELECT * FROM entrepreneur WHERE Company = 'Company1' OR Money_Requested = 10000 OR EXISTS (SELECT 1 FROM people WHERE people.People_ID = entrepreneur.People_ID AND people.Name = 'John') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c76fd89c4b21810b3bbe0a33df72b0f881583f97",
                "query": "SELECT T1.Name, AVG(T2.Money_Requested) FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name HAVING T1.Height > (SELECT MAX(Height) FROM people WHERE Weight < 70) OR T1.Weight < 60 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#) OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4edcd440232555a3745010dde3a99f2063e911e0",
                "query": "SELECT T1.Name FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE (T2.Company = 'ABC' OR T2.Money_Requested BETWEEN 10000 AND 20000) OR EXISTS (SELECT 1 FROM entrepreneur WHERE Investor = 'John')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "78c4063df0efe9587bb8fa7a34b68b98072d1416",
                "query": "SELECT COUNT(DISTINCT T1.Investor), COUNT(T1.Investor) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 170",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "e2136a1df15717d2d6ffc91ca477dfa2250591a0",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), SUM(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Weight > 70",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "893e28afcd932fc4ddb136f005d3a295806b0ad0",
                "query": "SELECT T1.Name FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID JOIN entrepreneur AS T3 ON T2.People_ID = T3.People_ID WHERE T2.Money_Requested BETWEEN 10000 AND 50000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "32c076ce252eddd8752d9fd3cd6deb3d061a242e",
                "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested > (SELECT AVG(Money_Requested) FROM entrepreneur) ORDER BY Investor DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "42784e538784b39145c1632111c3f207661c753b",
                "query": "SELECT Investor, COUNT(Money_Requested) FROM entrepreneur WHERE Money_Requested > 0",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "87239be470386aa650aaff59ef5ef93cda59b10a",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Company), SUM(T2.Money_Requested) FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = T2.Money_Requested ORDER BY T1.People_ID DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = T2.#COLUMN# ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "f79d7d54b6eb77c7488250002c7ca4880d2cb670",
                "query": "SELECT * FROM entrepreneur WHERE Money_Requested > 10 LIMIT 5",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a28bbde8f5b36ab5ebc5318f4b1c6b0316b7fb18",
                "query": "SELECT T1.Name, T2.Company, T3.Investor FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID JOIN entrepreneur AS T3 ON T2.Company = T3.Company WHERE T1.Height = 180 AND T2.Money_Requested = 100000 AND T3.Investor = 'Shark1'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "eda789d8119d059395b90e042bf5fcbc03c34701",
                "query": "SELECT T1.Name, T2.Company FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height < 180",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3e81a80d3655036067115625619eb15b27fc6298",
                "query": "SELECT T1.Name FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name != 'John' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "eda51e85c6c5b938f8932ff6c2a7b63c3ded6b09",
                "query": "SELECT T1.Name, T2.Company FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height BETWEEN 150 AND 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "95bd73e9d74b4665d40ea48a6ff8e020234b0de3",
                "query": "SELECT T1.Name FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Requested = 50000 OR T2.Money_Requested BETWEEN 10000 AND 20000 OR T2.Money_Requested > 30000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "251ee19db6176afa296ed7a621a688ac2081be3e",
                "query": "SELECT T1.Name, COUNT(T2.Money_Requested) FROM people AS T1 JOIN entrepreneur AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Requested < 10000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7d327c64bf19032f16f05e8ff837d407e6964891",
                "query": "SELECT COUNT(DISTINCT T1.Money_Requested), COUNT(T1.Company) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 170 AND T2.Weight BETWEEN 60 AND 80 AND T1.Money_Requested = 100000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "f532bb64bd1c1f7347cc3c355853a7fb52bc9174",
                "query": "SELECT MAX(COUNT(DISTINCT Investor)) FROM entrepreneur",
                "template": "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE#"
            },
            {
                "hash": "bad6d9d9b0c48904f4525d112871bcd576c1ac35",
                "query": "SELECT COUNT(DISTINCT T1.Investor), AVG(T1.Money_Requested) FROM entrepreneur AS T1 WHERE T1.Money_Requested BETWEEN 1000 AND 5000 AND T1.Company != 'ABC' ORDER BY T1.Money_Requested DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "21e8126670248fc1b262a44785630ab728a91bf2",
                "query": "SELECT Entrepreneur_ID FROM entrepreneur WHERE Money_Requested = (SELECT MAX(Money_Requested) FROM entrepreneur)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "3b32cdb97346060fdddc2a65d8d70154ea2849b0",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur WHERE Company = 'CompanyA')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "8d51ca0f0080d7de91cc40ffb31858a044477160",
                "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height >= 170 AND T1.Money_Requested >= 500000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            }
        ],
        "race_track": [
            {
                "hash": "7574e589c1ff3068806d26154cc13850bbde436e",
                "query": "SELECT MAX(T1.Seating), T2.Name FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID GROUP BY T2.Name HAVING MAX(T1.Seating) >= 50000",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT Name FROM race WHERE Class != 'Small' ORDER BY Date DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ab0c0fa06aaaf68cd7aad365ab72f3e590d3a78a",
                "query": "SELECT Name FROM race WHERE EXISTS (SELECT Track_ID FROM track WHERE track.Track_ID = race.Track_ID AND track.Seating > 50000) AND Class = 'High'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "d5aa75e2ec709ffac03b1c8ed4c4e86747a94dda",
                "query": "SELECT Name FROM race WHERE Class > 'A' ORDER BY Date DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d746a286c305bc21cd4356906a516767521f2bf5",
                "query": "SELECT Name FROM race WHERE Track_ID NOT IN (SELECT Track_ID FROM track WHERE Seating > 10000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "c91cfbf02237b86f42f54d6ddabfa68f71a700f2",
                "query": "SELECT Name FROM race WHERE Class = 'G1' AND Date <= '2022-01-01' ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1ca27cee60338f2cfc921ca25f14ab022776bdc6",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Class), COUNT(Track_ID) FROM race WHERE Date < '2000-01-01' GROUP BY Date HAVING COUNT(Track_ID) > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "a1cb58e309fca45fe519c3b8cd42250563ad1454",
                "query": "SELECT COUNT(T1.Track_ID), T2.Seating FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e931bb3d68e4111b21f34a0dcb017460e0b34ea3",
                "query": "SELECT T1.Track_ID, T2.Name, T2.Location FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "5c2a1374d52e3cdc72b0e37863cc74270d519cf9",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Race_ID) FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID WHERE T2.Class = (SELECT MAX(T2.Class) FROM race AS T2) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "e19434359ab4fcda0078cc5fa46ec5e3e06f499b",
                "query": "SELECT T1.Name, T2.Name FROM race AS T1 INNER JOIN track AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Class = '\tClass  A' AND T1.Track_ID = 1 AND T2.Seating BETWEEN 1000 AND 5000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f68b389ee38274901b81de7a8f5555a5e8f2f226",
                "query": "SELECT T1.Name, T2.Name, COUNT(T3.Name) FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID JOIN track AS T3 ON T2.Track_ID = T3.Track_ID WHERE T1.Class = 'A' OR T2.Seating BETWEEN 1000 AND 2000 OR T1.Date > '2020-01-01' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cd5d4e29fa6bd157eb6b67dfc0b91bf38c793155",
                "query": "SELECT T1.Name, T1.Class, T2.Name FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID WHERE T2.Seating >= 50000 AND T1.Date = '2020-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "4b43486bdbde1fff6bb5ae3a121617b1818e5e5a",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Race_ID) FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Track_ID NOT IN (SELECT Track_ID FROM race) ORDER BY COUNT(DISTINCT T2.Race_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "2b529c354d3c5646a161d05f697c94cb9e0d7704",
                "query": "SELECT T1.Name, T1.Date FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Class != 'Class1' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "03994641eec430dc9d1b7c0c54474dc9ea2534ef",
                "query": "SELECT T1.Name, COUNT(T2.Track_ID) FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Location != 'USA' ORDER BY COUNT(T2.Track_ID) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "e1e3ab0b6444e4662f0fec965d66d1357355aff8",
                "query": "SELECT T1.Track_ID, AVG(T1.Seating), COUNT(T2.Race_ID) FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Track_ID NOT IN (SELECT T2.Track_ID FROM track AS T1 JOIN race AS T2 ON T1.Track_ID = T2.Track_ID WHERE T2.Class = 'Formula 1') GROUP BY T1.Track_ID ORDER BY T1.Track_ID ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "27c10402b27f212226d014c8b14690674ef66e8d",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Track_ID) FROM race AS T1 JOIN race AS T2 ON T1.Class = T2.Class GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "c699bd9f78fd29929e0da337caecf9e8b124b0bb",
                "query": "SELECT MIN(r.Seating) FROM track AS r ORDER BY r.Name ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# AS r ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d0b20fd7fd115184dd4246692a56e6eee4ad9fe0",
                "query": "SELECT T1.Name, T2.Seating FROM race AS T1 JOIN track AS T2 ON T1.Track_ID = T2.Track_ID WHERE T1.Race_ID BETWEEN 100 AND 200 OR T2.Seating IN (SELECT MAX(Seating) FROM track) OR (T2.Year_Opened > 1950 AND T2.Year_Opened < 1960)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#) OR (#COLUMN# > #VALUE# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "2f2ba692dd1cf446ae8cdefe137367ac1238b6cd",
                "query": "SELECT Name FROM track WHERE Seating > 70000 OR EXISTS (SELECT 1 FROM race WHERE race.Track_ID = track.Track_ID AND race.Class = 'A') ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cbfd35d74fb727ada26eb6b782b07a5f57f97b32",
                "query": "SELECT COUNT(DISTINCT Race_ID) FROM race WHERE Date = '2022-01-01' OR Track_ID IN (SELECT Track_ID FROM track WHERE Seating > 50000) ORDER BY Race_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            }
        ],
        "orchestra": [
            {
                "hash": "df53614c83aa626fcca0313c4e0f097a41961028",
                "query": "SELECT Name FROM conductor WHERE Age BETWEEN 40 AND 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "be6e64ad59881532270b6db3e2919766888a8a06",
                "query": "SELECT AVG(Age) FROM conductor WHERE Age <= 50 ORDER BY Age DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6e4bd1dd301eaff4e6eef039595700441ed4f646",
                "query": "SELECT Name FROM conductor WHERE Age >= 50 AND Year_of_Work >= 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "c5e93901b23225fcf994938ee1a80cf9ac1fbbef",
                "query": "SELECT T1.Orchestra, T3.Name FROM orchestra AS T1 JOIN conductor AS T3 ON T1.Conductor_ID = T3.Conductor_ID JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T1.Major_Record_Format != 'Vinyl' AND T2.Type = 'Classical' ORDER BY T3.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dd88e502d8f193fcc856d983156f9c426bfee98d",
                "query": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Orchestra ORDER BY T1.Orchestra ASC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e5e9a55ee842ab2841bb8200487975e9c9047bb0",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Conductor_ID), COUNT(DISTINCT T2.Conductor_ID) FROM conductor AS T1 JOIN conductor AS T2 ON T1.Age < T2.Age GROUP BY T1.Name HAVING MIN(T1.Age) ORDER BY T1.Age DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7f526be730450ad2485f484f2fd6f7c512a795b4",
                "query": "SELECT T1.Orchestra, SUM(T3.Official_ratings_(millions)) FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T1.Orchestra_ID = T3.Orchestra_ID WHERE T3.Date > '2020' GROUP BY T1.Orchestra ORDER BY SUM(T3.Official_ratings_(millions)) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "dbd6360307c46e4c7bbe551e10225816a05fcac4",
                "query": "SELECT AVG(T1.Age) , COUNT(T1.Conductor_ID) FROM conductor AS T1 WHERE T1.Year_of_Work > 1950 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bb0018d9a5076909cec22d91c0a320ab58771f0a",
                "query": "SELECT T1.Name, COUNT(T2.Performance_ID) FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID = T2.Orchestra_ID WHERE T1.Age BETWEEN 30 AND 50 AND T2.Official_ratings_(millions) > 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "73cd5804232a3479344975888e96bdcc352a5696",
                "query": "SELECT AVG(T1.Age) FROM conductor AS T1 WHERE T1.Age > 50 ORDER BY AVG(T1.Age) DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "52da0a0aedee800b1f611e1262be354b16015d70",
                "query": "SELECT T1.Conductor_ID, T2.Performance_ID FROM conductor AS T1 JOIN performance AS T2 ON T1.Conductor_ID = T2.Orchestra_ID ORDER BY T1.Conductor_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "800d18e51a7307aefad1f2630f6dcdd2b92e4185",
                "query": "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Age > 50 OR T1.Nationality = 'American' OR T2.Year_of_Founded BETWEEN 1800 AND 1850 ORDER BY T1.Conductor_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f47aa714f5afcf18886002173ac1980375c2cdad",
                "query": "SELECT T1.Name, T2.Name FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Orchestra_ID = 1 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4231059e0fbfa38cdb18423bf27fe6150610bf8e",
                "query": "SELECT T1.Name, T2.Official_ratings_(millions) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T2.Orchestra_ID = T3.Orchestra_ID WHERE T3.Official_ratings_(millions) IN (SELECT AVG(Official_ratings_(millions)) FROM performance)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "e5c6a246dfd456a63d6ebb39c22183f9aee5fc74",
                "query": "SELECT T1.Name, T2.Name, COUNT(T1.Conductor_ID) FROM conductor AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Age > 50 AND T1.Year_of_Work BETWEEN 1990 AND 2000 OR T1.Nationality = 'American' AND T1.Conductor_ID NOT IN (SELECT Conductor_ID FROM orchestra)",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "95be32da80e6cb129f85b0cc404b0eee359a40d1",
                "query": "SELECT Name FROM conductor WHERE Conductor_ID IN (SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(Conductor_ID) = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#)"
            },
            {
                "hash": "5b0261ea322b2e8da5c24ce33848bc4569c635d6",
                "query": "SELECT T1.Name FROM conductor AS T1 INNER JOIN conductor AS T2 ON T1.Name = T2.Name WHERE EXISTS (SELECT 1 FROM orchestra AS T3 WHERE T3.Conductor_ID = T1.Conductor_ID AND EXISTS (SELECT 1 FROM performance AS T4 WHERE T4.Orchestra_ID = T3.Orchestra_ID AND T4.Type = 'Classical')) ORDER BY T1.Age DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "5cabcf166a0392cab7ce1438689e9c92c5616565",
                "query": "SELECT MIN(T1.Age), MAX(T1.Age) FROM ( SELECT T1.Age FROM conductor AS T1 ) AS T1 WHERE T1.Age < 100",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "e19e189d1516f87fc38e732d673d72c2e5c03bf6",
                "query": "SELECT MAX(T1.Performance_ID), SUM(T2.Attendance) FROM performance AS T1 JOIN show AS T2 ON T1.Performance_ID = T2.Performance_ID WHERE T1.Performance_ID NOT IN (SELECT Performance_ID FROM show WHERE Attendance > 1000) GROUP BY T1.Performance_ID ORDER BY SUM(T2.Attendance) DESC LIMIT 5",
                "template": "SELECT MAX(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "121808178b52f17d017b243a6311756de8ebf666",
                "query": "SELECT DISTINCT T1.Name, COUNT(DISTINCT T3.Show_ID) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID JOIN performance AS T3 ON T3.Orchestra_ID = T2.Orchestra_ID WHERE T1.Age > 50 AND (T2.Year_of_Founded BETWEEN 1950 AND 1960) AND EXISTS (SELECT * FROM show AS T4 WHERE T4.Performance_ID = T3.Performance_ID AND T4.Attendance > 10000) OR T3.Official_ratings_(millions) > 10",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#) AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "a6d1fbc1e25a1a3682a95e6f46efbcd9a538a962",
                "query": "SELECT T1.Nationality, SUM(T1.Age) AS sum FROM conductor AS T1 WHERE T1.Age <= 60 ORDER BY sum ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) AS sum FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# ORDER BY sum ASC"
            },
            {
                "hash": "f794df08550ef3f9ab4e5924d0721ef90cc21557",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T1.Nationality), COUNT(DISTINCT T2.Orchestra) FROM conductor AS T1 LEFT JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T1.Age <= 60",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            }
        ],
        "behavior_monitoring": [
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT first_name FROM Students WHERE middle_name != 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "66417bddc2dbaaa5bb310e7f53ad2e309d23ef34",
                "query": "SELECT T1.teacher_id, T2.student_id FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.detention_type_code = 'type1' OR T2.detention_type_code BETWEEN 'type2' AND 'type3' OR T2.detention_type_code = (SELECT detention_type_code FROM Ref_Detention_Type WHERE detention_type_description = 'type4') GROUP BY T2.student_id HAVING COUNT(T1.teacher_id) > 1 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "846dd77342c9678076b59fb7a8db24bdedf6bb40",
                "query": "SELECT COUNT(DISTINCT T1.first_name) FROM Students AS T1 INNER JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.date_first_rental <= T2.zip_postcode",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "6082d0ac6c09533a135ac8711dea982cfc25cf3b",
                "query": "SELECT T1.teacher_id FROM Teachers AS T1, Teachers AS T2 WHERE T1.teacher_id != T2.teacher_id GROUP BY T1.teacher_id HAVING MIN(T1.teacher_id) =",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ="
            },
            {
                "hash": "f1c0d6cec56251a74eec6e28932e76271225f4b2",
                "query": "SELECT T1.first_name, T1.last_name, T1.middle_name, T2.first_name, T2.last_name FROM Students AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.date_left_university BETWEEN '2020-01-01' AND '2021-12-31' ORDER BY T2.date_first_rental ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "167c35555e320d98d4b79c9492daae875a4419cd",
                "query": "SELECT T1.student_id FROM Students AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.cell_mobile_number BETWEEN 100 AND 1000 AND NOT EXISTS (SELECT T3.teacher_id FROM Teachers AS T3 WHERE T3.teacher_id = T1.student_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "ddc52e1127ccf376cc676bd7b38a5f74ff43598c",
                "query": "SELECT COUNT(student_id), COUNT(DISTINCT detention_id) FROM Students_in_Detention",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "193feb7e53c35c6dd2c96f3d3c3a39db8f498904",
                "query": "SELECT T1.last_name FROM Students AS T1 JOIN Student_Addresses AS T2 ON T1.student_id = T2.student_id WHERE T2.monthly_rental <= 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "09f7304a2061f45d8a1b169685796c68ebd33d58",
                "query": "SELECT T1.first_name FROM Students AS T1 WHERE T1.cell_mobile_number = '1234567890' OR T1.email_address = 'student@example.com' OR EXISTS (SELECT 1 FROM Student_Addresses AS T2 WHERE T2.student_id = T1.student_id AND T2.date_address_to IS NULL) ORDER BY T1.date_first_rental DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "60c80fb16b5eb7f6aa3fb416f130e20d9f58999f",
                "query": "SELECT * FROM Ref_Incident_Type WHERE incident_type_code != 'IT001' ORDER BY incident_type_description ASC",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "19a0da553000735a022bb99e0bfa3e9b90d704b1",
                "query": "SELECT T1.student_id FROM Students AS T1 JOIN Student_Addresses AS T2 ON T1.student_id = T2.student_id WHERE T2.monthly_rental > 1000 ORDER BY T1.student_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f1f823b3796f5e41d53d8ff18cc5371d51df9f46",
                "query": "SELECT T1.student_id, T2.address_id FROM Students AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.student_id < 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "54b87308a4c4eaa949803873cc5e35c743325476",
                "query": "SELECT T1.teacher_id FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.gender = 'Male' AND T2.detention_type_code = 'Major' AND T2.teacher_id NOT IN (SELECT teacher_id FROM Detention WHERE detention_type_code = 'Minor') GROUP BY T2.teacher_id HAVING AVG(T2.datetime_detention_end) > '2022-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "0be4f6a30169f239f3e4aa70655eb3f53d68f587",
                "query": "SELECT T2.incident_type_description FROM Ref_Incident_Type AS T1 JOIN Behavior_Incident AS T2 ON T1.incident_type_code = T2.incident_type_code JOIN Students_in_Detention AS T3 ON T2.incident_id = T3.incident_id JOIN Detention AS T4 ON T3.detention_id = T4.detention_id WHERE T4.datetime_detention_end BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T2.incident_type_description DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3ddbcbf093acee4b8249aad9c61907f0abd16240",
                "query": "SELECT T1.detention_type_code FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code = T2.detention_type_code JOIN Teachers AS T3 ON T2.teacher_id = T3.teacher_id WHERE T3.teacher_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "80dd14a5395e5eafb7c4392afcdbfb46449d3791",
                "query": "SELECT COUNT(DISTINCT T1.teacher_id), COUNT(DISTINCT T2.student_id) FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.detention_type_code != 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "956475c794b0425287d2c50177f954d2741c42ec",
                "query": "SELECT T1.address_type_code, SUM(T2.line_1) FROM Ref_Address_Types AS T1 JOIN Addresses AS T2 ON T1.address_type_code = T2.address_id WHERE T1.address_type_code = '123' OR T2.line_1 BETWEEN 'Street 1' AND 'Street 10' OR T2.line_1 = 'Street 5'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "a1f9eb7326950aba532faf9c8be0cae651324229",
                "query": "SELECT T1.student_id FROM Students AS T1 JOIN Students_in_Detention AS T2 ON T1.student_id = T2.student_id WHERE T2.incident_id < 100 AND T2.detention_id > 50 AND NOT EXISTS (SELECT T3.student_id FROM Students AS T3 JOIN Students_in_Detention AS T4 ON T3.student_id = T4.student_id WHERE T3.student_id = T1.student_id AND T4.detention_id = 25)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "ef2111933032aa554dc47bd112bf8cef2a0ba1fa",
                "query": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.zip_postcode < 10000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "707a56b05ec7af24eca1b5dbff4876b3d36ae4dd",
                "query": "SELECT AVG(T1.monthly_rental), AVG(T2.date_address_to) FROM Student_Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.date_address_from BETWEEN '2020-01-01' AND '2020-12-31' OR T2.zip_postcode = '12345' AND NOT EXISTS (SELECT 1 FROM Students AS T3 WHERE T3.student_id = T1.student_id AND T3.email_address IS NULL) ORDER BY T1.monthly_rental DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "907ca96dd37aafedefb86ddf238885c302c222b4",
                "query": "SELECT COUNT(DISTINCT T1.student_id) FROM Students AS T1 JOIN Behavior_Incident AS T2 ON T1.student_id = T2.student_id JOIN Detention AS T3 ON T2.incident_id = T3.detention_id WHERE T3.datetime_detention_start < T2.date_incident_start ORDER BY COUNT(DISTINCT T1.student_id) DESC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            }
        ],
        "club_leader": [
            {
                "hash": "d8cbd4a0577612b732b5bb94182b82b4e8248bda",
                "query": "SELECT COUNT(DISTINCT T1.Club_ID), COUNT(DISTINCT T1.Club_Name) FROM club AS T1 WHERE T1.Overall_Ranking > 5 OR T1.Club_ID NOT IN (SELECT T2.Club_ID FROM club_leader AS T2 WHERE T2.Year_Join BETWEEN 2010 AND 2020)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "46bf96218db1a8ad8f0aedbb2330730cf7007031",
                "query": "SELECT SUM(Member_ID), MAX(Age) FROM member ORDER BY Age DESC",
                "template": "SELECT SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cfdc3225ced84b5bdc26d9820d4a38bbe1f32a6d",
                "query": "SELECT COUNT(DISTINCT T1.Member_ID), T2.Age FROM member AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Age <= 20 GROUP BY T2.Age",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE# GROUP BY T2.#COLUMN#"
            },
            {
                "hash": "7e79d73bff7bb2aee3f5875ad813eefeef70876d",
                "query": "SELECT MIN(Club_ID), MAX(Overall_Ranking), AVG(Team_Leader) FROM club WHERE Overall_Ranking > 100 ORDER BY Club_ID ASC",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3694a70661e9a877de4908966347b6f988dc3ff5",
                "query": "SELECT COUNT(DISTINCT T2.Club_Name), T1.Name FROM Member AS T1 JOIN club AS T2 ON T1.Member_ID = T2.Club_ID GROUP BY T2.Club_Name HAVING SUM(T1.Age) > 100 ORDER BY COUNT(DISTINCT T2.Club_Name) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "07fe1e2d9fd8bb3ecbfd2840a1b8b0481868806a",
                "query": "SELECT Age FROM member WHERE Age > 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8e6d6a564677dee879d8c464304ba473eb9bf2ce",
                "query": "SELECT T1.Name, T2.Overall_Ranking, COUNT(DISTINCT T1.Member_ID), SUM(T2.Overall_Ranking), MAX(T2.Overall_Ranking) FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID JOIN member AS T3 ON T1.Member_ID = T3.Member_ID WHERE T3.Age < 20",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "97bcf498b2cd6d45a6903ec38f3f4c5af8bf28c6",
                "query": "SELECT Name FROM member WHERE Age >= 18",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "93a93df668c62488b07882f7597759f687a7ea91",
                "query": "SELECT T1.Name FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID = T2.Member_ID WHERE NOT EXISTS (SELECT 1 FROM club AS T3 WHERE T3.Club_ID = T2.Club_ID AND T3.Overall_Ranking < 10) ORDER BY T1.Age ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b07345795933a98f950087b5d110a7f62ba3f6b8",
                "query": "SELECT COUNT(DISTINCT T1.Club_ID), COUNT(DISTINCT T2.Club_ID), COUNT(DISTINCT T1.Club_ID) FROM club AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "be565ab921bfb112f2ebd1cbdc820c13be981afc",
                "query": "SELECT T1.Club_ID FROM club AS T1 INNER JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Overall_Ranking >= T2.Overall_Ranking",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN#"
            },
            {
                "hash": "b4d4132fcd6dc851d83aff3e5b36a75dd3b4587e",
                "query": "SELECT MAX(T.Age) FROM member AS T WHERE T.Nationality = 'USA' OR T.Age BETWEEN 20 AND 30 OR T.Member_ID = 101 ORDER BY T.Age DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "296dbfa03796ac8d7d358f1f9bcf09ec764f0d51",
                "query": "SELECT * FROM member WHERE Age BETWEEN 20 AND 30 ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "eb2b202921f18aa5c829434d2e01b46d3908c3c2",
                "query": "SELECT T1.Club_Name, COUNT(DISTINCT T2.Age) FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Year_Join BETWEEN '1970' AND '1980'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "7ec5f9fcba4574ca6356f32d904abb8e769f4a71",
                "query": "SELECT T1.Club_Name, T3.Nationality, COUNT(T2.Club_ID) FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID JOIN member AS T3 ON T2.Member_ID = T3.Member_ID WHERE T3.Age > (SELECT AVG(Age) FROM member) AND T1.Overall_Ranking > 50 AND T1.Club_Name IN (SELECT Club_Name FROM club WHERE Overall_Ranking > 75) ORDER BY T1.Club_Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5384006e72bf1fa634a46d7f2daba9e3e0d28dfc",
                "query": "SELECT T1.Club_Name, COUNT(DISTINCT T2.Member_ID) FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Overall_Ranking < 10 GROUP BY T1.Club_Name ORDER BY T1.Club_Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d8fcb77b1a681db22f6e81397eafb01fbddb622b",
                "query": "SELECT Name, MIN(Age) FROM member WHERE Nationality != 'USA' ORDER BY Name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dc940cbf10e81657225598e5a13b44694e578278",
                "query": "SELECT T1.Club_Name FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Overall_Ranking BETWEEN 10 AND 50 AND T1.Team_Leader = 'John Doe' GROUP BY T1.Club_Name HAVING COUNT(T2.Member_ID) > 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "489d701f9cf049078b644df0f5d415082fdaffa9",
                "query": "SELECT T1.Club_Name FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID JOIN member AS T3 ON T2.Member_ID = T3.Member_ID WHERE T3.Age = 25 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "aad34a2a0013bf9bf72ba2e20c0e2e76f0f213ac",
                "query": "SELECT T1.Name, MIN(T2.Age) FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T1.Name HAVING MIN(T2.Age) <= 30",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "dc48487c7da26c18828b5609b91463190b02ba56",
                "query": "SELECT T1.Name FROM member AS T1 JOIN club_leader AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Year_Join = '2000' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "68adff1acea26a01874b89aaf325e177be43852a",
                "query": "SELECT T1.Club_ID, COUNT(DISTINCT T2.Member_ID) FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Overall_Ranking = 1 ORDER BY T1.Club_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f0612418845e78a8bca9032bcb0b2cfce8eec178",
                "query": "SELECT COUNT(DISTINCT T2.Club_ID), COUNT(DISTINCT T3.Club_Name), COUNT(DISTINCT T1.Nationality) FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID JOIN member AS T3 ON T2.Club_ID = T3.Member_ID WHERE T2.Overall_Ranking > (SELECT MAX(Overall_Ranking) FROM club) ORDER BY T3.Nationality DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            }
        ],
        "wta_1": [
            {
                "hash": "00738d3713747c747b057681239bf5e00f37420f",
                "query": "SELECT SUM(T1.winner_rank_points) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id GROUP BY T2.last_name HAVING SUM(T1.winner_rank_points) <= 10000 ORDER BY SUM(T1.winner_rank_points) ASC",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "63d2178a083e9968220509768a3ad312e5838cb7",
                "query": "SELECT T1.first_name, COUNT(T2.tourney_id) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T1.hand = 'Right' GROUP BY T1.first_name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "eca014b268f12a82e7e2ae477b4efa8ee4ae4dd6",
                "query": "SELECT T1.first_name, T2.winner_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T2.winner_id = T3.player_id WHERE T2.winner_age < 30 ORDER BY T2.winner_rank_points DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3e2d4cd89460d03b9a6849168bf24fe59cc6ee57",
                "query": "SELECT M1.loser_ioc, M2.winner_ioc FROM matches M1, matches M2 WHERE M1.match_num = M2.match_num AND M1.winner_id = M2.loser_id AND M1.loser_id BETWEEN 1 AND 100 ORDER BY M1.match_num DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "fd6702de1a932ec77fd9d429456194d055e92c38",
                "query": "SELECT COUNT(DISTINCT T1.hand), T1.last_name FROM players AS T1 WHERE T1.country_code = 'rus' OR T1.hand = 'right' OR T1.player_id IN (SELECT player_id FROM rankings)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "1676e974351983ebd143f40dae4132f2c8e765b0",
                "query": "SELECT COUNT(DISTINCT T1.first_name), T1.hand FROM players AS T1 WHERE T1.hand != 'Right'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "bb26fbcfdad5964423e97dc0a48bb7b91e88b994",
                "query": "SELECT T1.first_name, COUNT(DISTINCT T2.match_num), COUNT(DISTINCT T3.match_num) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN matches AS T3 ON T1.player_id = T3.loser_id WHERE T1.country_code >= 'USA' LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8c5340cda6c85681993cb018cefe2aca5ae67b76",
                "query": "SELECT T1.first_name FROM players AS T1 WHERE T1.hand = 'Right' OR T1.country_code BETWEEN 'USA' AND 'CAN' OR T1.country_code NOT IN (SELECT country_code FROM players WHERE player_id < 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "598d60e968384610e75e47c23e43fd95bd1962ae",
                "query": "SELECT T1.first_name, T2.winner_rank FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.year BETWEEN 2000 AND 2010",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "03bcb616a06ae2cd4dcb4079ba955380f009fea1",
                "query": "SELECT T1.first_name, T1.last_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE EXISTS (SELECT 1 FROM rankings AS T4 WHERE T4.ranking_points > 1000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "a7ae0021c1d5ab6e6eade92a5bb4335dc82aa09b",
                "query": "SELECT first_name FROM players WHERE (loser_age BETWEEN 30 AND 35 AND player_id = 10) OR (ranking_date = '2001-01-01' OR player_id = 5) ORDER BY first_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#) OR (#COLUMN# = #VALUE# OR #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "524efd88ad89c8336280685ffa8e54af5efaddc2",
                "query": "SELECT COUNT(T1.player_id) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "2da186a087472d12c522c31ed6166cc339ea98fa",
                "query": "SELECT T1.first_name, T1.last_name, SUM(T2.winner_rank_points) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T2.winner_id = T3.player_id WHERE T1.hand = 'R' OR T2.winner_rank BETWEEN 1 AND 10 OR T3.ranking_date NOT IN (SELECT ranking_date FROM rankings WHERE ranking = 1)",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e9f362a9cf076bd8dc0c78f27b58c88b8e39b2c9",
                "query": "SELECT COUNT(DISTINCT T1.first_name), T1.hand FROM players AS T1 WHERE (T1.country_code = 'USA' OR T1.hand = 'Right') AND T1.player_id NOT IN (SELECT player_id FROM rankings WHERE ranking_points > 1000) ORDER BY T1.hand DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE (#COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#') AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1e739336537103cf23508246051e147e5f3dea15",
                "query": "SELECT T1.first_name, T2.winner_name FROM players AS T1 INNER JOIN matches AS T2 ON T1.player_id = T2.winner_id INNER JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T1.hand = 'Right' OR EXISTS (SELECT 1 FROM rankings WHERE ranking < 50) GROUP BY T1.first_name HAVING AVG(T3.ranking_points) > 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "ffdde88d69645119d30264674ba030f517067017",
                "query": "SELECT MIN(T1.loser_rank) , T1.loser_name FROM matches AS T1 JOIN players AS T2 ON T1.loser_id = T2.player_id WHERE T1.loser_rank_points >= 1000 GROUP BY T1.loser_name ORDER BY MIN(T1.loser_rank) ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "747ae947aebc0a1f04017d939025212e71cc17dc",
                "query": "SELECT COUNT(MATCHES.winner_id) FROM MATCHES WHERE MATCHES.winner_id >= 10 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6afe93571b3c74bafd0db7a260c1908eb948a5ab",
                "query": "SELECT AVG(T1.minutes) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T1.winner_hand = 'R' OR T2.hand = 'L' LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f3618142e65ac5fec62fb4999e0231e461d2d3c7",
                "query": "SELECT T1.first_name, COUNT(DISTINCT T3.match_num) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T1.player_id = T3.winner_id WHERE T3.winner_rank < 10 ORDER BY COUNT(DISTINCT T3.match_num) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "5bf0862dc9cae6542ec7351e6e011c490eae347a",
                "query": "SELECT T1.first_name, COUNT(DISTINCT T2.lloser_id) FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.loser_id WHERE T1.player_id NOT IN ( SELECT player_id FROM rankings ) ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "51077287e1d797fb9119e2aca06a89b18a843df2",
                "query": "SELECT SUM(T1.winner_rank_points) , MAX(T2.ranking_points) FROM matches AS T1 INNER JOIN rankings AS T2 ON T1.winner_id = T2.player_id WHERE T2.ranking_date = '2020-01-01'",
                "template": "SELECT SUM(#COLUMN#) , MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "dafec9f38ee1f03e468591128ca4d6efc044a5f8",
                "query": "SELECT * FROM players WHERE player_id > (SELECT MIN(player_id) FROM rankings)",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "edd6c1915ad5dd03fd15acfe7fdb61bc8feb5686",
                "query": "SELECT T3.winner_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T2.winner_id = T3.player_id WHERE T3.ranking_date < '2020-01-01' ORDER BY T3.ranking_points DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "94cc2af5427cd252d9154a80d5ef8668c63d7364",
                "query": "SELECT COUNT(DISTINCT player_id), ranking_points FROM rankings WHERE ranking_date BETWEEN '1995-01-01' AND '2000-12-31' ORDER BY ranking DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5285734e6b9395a451846e8a72dce3fc010d3452",
                "query": "SELECT T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id JOIN rankings AS T3 ON T1.player_id = T3.player_id WHERE T3.ranking < 10 ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "battle_death": [
            {
                "hash": "6a1b007ab6accf4688ee533262838cff143df530",
                "query": "SELECT T1.name, T2.tonnage FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T2.tonnage >= '100' AND T3.killed >= 10 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f0b3471c08b25613da2069c3a7a587995a605002",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM battle AS T1 WHERE T1.date BETWEEN '1800' AND '1900' AND T1.result = 'win' ORDER BY T1.id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e6b7bc9732e9be3f9e04b871197b8a21b6192fb6",
                "query": "SELECT name FROM battle WHERE date <= '1500-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f1e92352f3c5ae321900e6d46b61ca66a38b6565",
                "query": "SELECT date, MAX(id) FROM battle WHERE id BETWEEN 1 AND 10 GROUP BY date ORDER BY date ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "67a494e60b989d18d949fec749d5b466568a07f2",
                "query": "SELECT SUM(T1.tonnage) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T1.id > 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "52d2962e2e42d3ead81150a0376841d08b708b0d",
                "query": "SELECT COUNT(DISTINCT T1.result), MIN(T1.date) FROM battle AS T1 WHERE T1.date BETWEEN '1800-01-01' AND '1900-01-01' OR T1.bulgarian_commander = 'Name' AND T1.result = 'Result'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "603a657bb8617e6314212b0895d4e58697c4fcb0",
                "query": "SELECT COUNT(DISTINCT T2.name), COUNT(T1.id) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.date <= '1234-12-31' ORDER BY T2.name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "42111d22efb27eaac7941046bb4f229151597dc8",
                "query": "SELECT id, name FROM battle WHERE date BETWEEN '1800-01-01' AND '1900-12-31' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "8ddbcaf0d0c20903bb44042a38bce1720db8b8fc",
                "query": "SELECT id FROM battle WHERE date BETWEEN '1000' AND '1500' OR result = 'Victory' OR id NOT IN (SELECT lost_in_battle FROM ship)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "2b218190bab6e5ed53359e2690cdb5ed997c0407",
                "query": "SELECT name FROM battle WHERE date > '1945'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8d3d2e664116aedf5f9495ea4a3ae908bf7b5419",
                "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.result = 'win'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "f140c68e36859974ec9504c1ac63205ee3d178a4",
                "query": "SELECT T1.name, T2.name FROM battle AS T1 JOIN battle AS T2 ON T1.date <= T2.date LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# <= #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "eb283c7b3f5244797bb22403eb6ddcb482ab81fc",
                "query": "SELECT T1.name, T2.name, T3.note FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T1.date BETWEEN '2000-01-01' AND '2020-12-31' AND T2.disposition_of_ship = 'sunk' AND T3.killed > 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "36341716918ea788421a9271074322c8b957c5b9",
                "query": "SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T3.killed BETWEEN 1 AND 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "faa0796552ad365d6f924b2f3a1cafed8fcebaa7",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id WHERE T2.date BETWEEN '1700-01-01' AND '1800-12-31' AND T2.result = 'win' ORDER BY COUNT(DISTINCT T1.name) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "d9562c2ffc5ee660608980fb2b293b542f928263",
                "query": "SELECT COUNT(DISTINCT name), COUNT(DISTINCT latin_commander), COUNT(id) FROM battle LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "9931ccd816ba3b7338c1280a8d4bdd6f94c25412",
                "query": "SELECT MAX T1.tonnage FROM ship AS T1 JOIN battle AS T2 ON T1.lost_in_battle = T2.id GROUP BY T2.id HAVING MAX(T1.tonnage) = 1000 LIMIT 5",
                "template": "SELECT MAX #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f323de0028bfea7b893644751e5b288f6cee2a8f",
                "query": "SELECT T1.name, COUNT(T3.id) FROM battle AS T1 INNER JOIN ship AS T2 ON T1.id = T2.lost_in_battle INNER JOIN death AS T3 ON T2.id = T3.caused_by_ship_id WHERE T1.result = 'win' OR T2.tonnage BETWEEN 1000 AND 2000 OR T1.date > '1800' GROUP BY T1.name HAVING COUNT(T3.id) > 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "e1929cb71aef7353044b4dcb54f8c7aa26ea7bcf",
                "query": "SELECT result FROM battle AS T1 WHERE T1.bulgarian_commander != 'Name' ORDER BY T1.result DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f5c141c53096267741cfd65c18620fdbe1a9f0ef",
                "query": "SELECT COUNT(DISTINCT T2.ship_type) FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T1.result = 'win' AND T2.tonnage > 100 AND T2.id NOT IN (SELECT id FROM death AS T3 WHERE T3.killed > 10) GROUP BY T1.name HAVING MAX(T2.tonnage) > 500 ORDER BY T1.name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "feea5b37621b8967f2fa1dda77e5e2a4b29b9054",
                "query": "SELECT name FROM battle WHERE date BETWEEN 1800 AND 1900 OR latin_commander = 'John' ORDER BY date DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "manufactory_1": [
            {
                "hash": "f8c677245beea8b6876f7e52883f456898ad23e8",
                "query": "SELECT COUNT(DISTINCT T1.Code) FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer JOIN Products AS T3 ON T2.Manufacturer = T3.Manufacturer WHERE T2.Price = 100 ORDER BY T1.Code ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e25f24ea3a9ff3b1a11490a6f8939d1269c7a64e",
                "query": "SELECT * FROM Manufacturers WHERE Revenue BETWEEN 100 AND 1000 AND Code > 10",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "5f7e72c95fbedc0130a469b88f16a5f59c490c59",
                "query": "SELECT Name, AVG(Revenue) FROM Manufacturers WHERE Name = 'Toyota' GROUP BY Name HAVING AVG(Revenue) > 1000 ORDER BY Name ASC LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ae546934701d932d4dbe636cac8d4c7e37e891b2",
                "query": "SELECT T1.Headquarter, AVG(T2.Price) FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T1.Revenue > 10000 AND T2.Price BETWEEN 10 AND 50 AND T1.Headquarter = 'New York' GROUP BY T1.Headquarter HAVING AVG(T2.Price) > 20",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "3531f2613162f79bf37db7e7adfb56e55268cc9c",
                "query": "SELECT COUNT(Code) FROM Manufacturers WHERE Revenue != 0 ORDER BY Code DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3c27c5066bb365cbd0b4e8f21e6e2c5b3ad82bcf",
                "query": "SELECT Code FROM Manufacturers WHERE EXISTS (SELECT 1 FROM Products WHERE Manufacturer = Manufacturers.Code AND Price BETWEEN 50 AND 100) AND Revenue > 10000 AND Name = 'ABC'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1991a2550148d3eb8ade1b36f3d36441555ae576",
                "query": "SELECT T1.Name, T2.Price FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer JOIN Manufacturers AS T3 ON T2.Manufacturer = T3.Code WHERE T1.Headquarter = 'USA' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2087f68c51fa63c0ec98c392aa96c44365d584af",
                "query": "SELECT Name, COUNT(Code) FROM Manufacturers WHERE Revenue = 100000 GROUP BY Name LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "8d4da87415efa14513484d0a9022b56f59ec4426",
                "query": "SELECT AVG(Revenue) FROM Manufacturers WHERE Revenue > 1000 AND Revenue BETWEEN 10000 AND 100000",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "4cea3cf58e9681cc64cd3b92124494ae5ce81c07",
                "query": "SELECT MAX(Revenue) FROM Manufacturers WHERE Founder = 'Elon Musk' ORDER BY Revenue DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "492a937366d3a851b59c1d18480eb8f4c6ed2740",
                "query": "SELECT T1.Name, T2.Price FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T1.Revenue > 10000 AND T1.Code = 1 AND EXISTS (SELECT 1 FROM Products AS T3 WHERE T3.Manufacturer = T1.Code AND T3.Price > 50) GROUP BY T1.Name HAVING AVG(T2.Price) > 50 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# #COLUMN# #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# #COLUMN# #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d0cf84bad8962d1d0117e9a6dcbc2d3a8c1d53ee",
                "query": "SELECT Name, COUNT(Code) FROM Manufacturers GROUP BY Name HAVING COUNT(Code) > 1 ORDER BY COUNT(Code) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "83f9201f7ed9a9efdebc14ae30c06d17650a647a",
                "query": "SELECT T1.Name, T2.Name, SUM(T3.Price) FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer JOIN Products AS T3 ON T2.Manufacturer = T3.Manufacturer WHERE T1.Revenue <= 10000 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a1b627fb4a6712d5d88d738cfc5a450ab5649358",
                "query": "SELECT T1.Name FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T2.Price > 100 AND T1.Revenue BETWEEN 1000 AND 10000 AND T1.Headquarter = 'USA' ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "27e90e06669820373b955bef95546187b0b322ae",
                "query": "SELECT MAX(Revenue), MIN(Revenue), AVG(Revenue) FROM Manufacturers WHERE Revenue BETWEEN 10000 AND 50000",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "eb904a49adbf1b9aa497bc8b163b020d7ffa08a8",
                "query": "SELECT T1.Name FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T2.Price > 50 AND T1.Revenue > 10000 AND T1.Headquarter NOT IN (SELECT DISTINCT Headquarter FROM Manufacturers WHERE Founder = 'Founder1')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8ed5bf2d56b7a421c686ad7048735dd4455ec2f5",
                "query": "SELECT T1.Name, T2.Name FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T1.Revenue BETWEEN 1000 AND 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "b4a90e4025be5bc3677c1c9d115716dca7db0308",
                "query": "SELECT Name FROM Manufacturers WHERE Revenue > (SELECT MAX(Revenue) FROM Manufacturers) OR Code BETWEEN 1 AND 10 OR Code = (SELECT MAX(Code) FROM Products) GROUP BY Name HAVING MAX(Revenue) > 10000 ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3b6a14c464c4bcf16193a303150086a5b0a3c273",
                "query": "SELECT M1.Name, COUNT(DISTINCT P2.Code), P3.Name FROM Manufacturers M1 JOIN Products P1 ON M1.Code = P1.Manufacturer JOIN Products P2 ON M1.Code = P2.Manufacturer JOIN Products P3 ON M1.Code = P3.Manufacturer WHERE EXISTS (SELECT 1 FROM Products P4 WHERE P4.Manufacturer = M1.Code AND P4.Price > 50) ORDER BY M1.Revenue DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3d284d592ce2541fb787e2f87c7bddbca751a13a",
                "query": "SELECT T2.Name, COUNT(DISTINCT T2.Code), AVG(T1.Revenue) FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T1.Revenue BETWEEN 1000 AND 100000 AND NOT EXISTS (SELECT 1 FROM Products WHERE Price > 1000) ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0c4b02c40a53f4387a22dfc3d1ab4abfc47e3f88",
                "query": "SELECT T2.Name, T1.Headquarter FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer WHERE T1.Revenue > 10000 AND T2.Name IN (SELECT Name FROM Products WHERE Price > 500) ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "41a7bd5f7abbc1479790d5a33c42e7152edfb3e5",
                "query": "SELECT COUNT(Code) FROM Manufacturers WHERE Revenue BETWEEN 1000 AND 10000 AND Code NOT IN (SELECT Manufacturer FROM Products) GROUP BY Code ORDER BY Code DESC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c43ea1720b437718313fbd646020c18e8e306599",
                "query": "SELECT T1.Revenue, COUNT(T2.Code) FROM Manufacturers AS T1 JOIN Products AS T2 ON T1.Code = T2.Manufacturer GROUP BY T1.Revenue ORDER BY T1.Revenue DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "62a4d6217c104a6a2155dfc2f87b5380a8213d31",
                "query": "SELECT T1.Code, COUNT(T1.Code) FROM Manufacturers AS T1 WHERE T1.Code NOT IN ( SELECT T2.Manufacturer FROM Products AS T2 ) AND T1.Revenue BETWEEN 10000 AND 50000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 ) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "7d1eec085fa22db8ab60446df84f26bc2af694ce",
                "query": "SELECT T1.Name, T1.Revenue FROM Manufacturers AS T1 JOIN Manufacturers AS T2 ON T1.Code = T2.Code WHERE T1.Revenue BETWEEN 1000 AND 100000 OR T2.Headquarter = 'USA' GROUP BY T1.Name HAVING COUNT(T1.Code) > 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c952cf0eea67a1d1132deb3c2a9dddb14a9b74ec",
                "query": "SELECT Code, Name FROM Manufacturers WHERE Revenue BETWEEN 1000 AND 100000 OR Code NOT IN (SELECT Manufacturer FROM Products WHERE Price > 500)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            }
        ],
        "pilot_1": [
            {
                "hash": "409253082cc5dbeb18fe79ee9a5bc872f2fb9434",
                "query": "SELECT COUNT(DISTINCT T2.pilot_name), T1.location FROM Hangar AS T1 JOIN PilotSkills AS T2 ON T1.plane_name = T2.plane_name WHERE T2.age < 30 GROUP BY T1.location ORDER BY COUNT(DISTINCT T2.pilot_name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "c5538b022c64f6a6bb9b787e6ca8bb3a99a52d95",
                "query": "SELECT COUNT(DISTINCT T1.plane_name) FROM PilotSkills AS T1 GROUP BY T1.age HAVING COUNT(T1.plane_name) > 1 AND T1.age != 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "a47880feeb0c3f01781463606d25666849d16cd6",
                "query": "SELECT COUNT(DISTINCT T1.plane_name), COUNT(T3.location) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name JOIN Hangar AS T3 ON T1.plane_name = T3.plane_name WHERE T1.age > 30 OR T2.location IN (SELECT location FROM Hangar WHERE location = 'New York')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "cd9ece0cc5d990e803c72fe75f3e2c0603091da6",
                "query": "SELECT COUNT(plane_name) FROM PilotSkills WHERE age <= 30",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4c9ffe2844b4065ad7e63606b5c46189294fa54c",
                "query": "SELECT SUM(T1.age), T2.location, COUNT(T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age >= 40 LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "db801c3ed9496c6313ea4d77ed2bd292e6fa6c2d",
                "query": "SELECT T1.plane_name, MIN(T1.age) FROM PilotSkills AS T1 WHERE T1.pilot_name = 'John' AND EXISTS (SELECT 1 FROM Hangar AS T2 WHERE T1.plane_name = T2.plane_name AND T2.location = 'New York') GROUP BY T1.plane_name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "77056e3678db3f7b3f04aeb6529f3efc8b807b54",
                "query": "SELECT COUNT(DISTINCT T1.pilot_name), T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age = 50 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "711e51b9c036297d786de08f39cf0f978625e551",
                "query": "SELECT T1.plane_name, T1.age, T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age >= 30 ORDER BY T1.age DESC",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "d844c671d8a4fbbe0657ed7b1153ef6eb76e734f",
                "query": "SELECT pilot_name FROM PilotSkills WHERE age > 30 GROUP BY age",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "138ac6acdd600532e942c8c802c4a65be3b93141",
                "query": "SELECT T1.plane_name, SUM(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name HAVING SUM(T1.age) > 50",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "6f49bdf149a8ce2198ec0065b4f213a7cabb13e1",
                "query": "SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > (SELECT AVG(age) FROM PilotSkills)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "81cb7248ce52ef57a86f3a75370abdfb1fb44015",
                "query": "SELECT T1.pilot_name, COUNT(DISTINCT T2.location) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 40 OR T1.plane_name NOT IN (SELECT plane_name FROM Hangar WHERE location = 'New York') ORDER BY T1.pilot_name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a7e01af681c6e3c633d885ddad59e29c47012f95",
                "query": "SELECT T1.pilot_name, T2.location, SUM(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age BETWEEN 30 AND 40 AND T1.pilot_name = 'John' GROUP BY T2.location HAVING SUM(T1.age) > 100",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "80b69e6c6d4c36e4b9c9d9446577d0a8beaeb4d0",
                "query": "SELECT COUNT(DISTINCT T1.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location < 'New York' ORDER BY T1.age DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5e43ff4f96651035569d2c5f4d168e9fb569093a",
                "query": "SELECT T1.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 30 OR T2.location = 'New York' ORDER BY T1.age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a36cc4152c5231e8e4055c158b1250222d634500",
                "query": "SELECT T1.pilot_name, T2.pilot_name FROM PilotSkills AS T1 JOIN PilotSkills AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 50 AND T1.pilot_name = 'John'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "c96ba9d1279e5f213f5327d5543eb6cb04868396",
                "query": "SELECT T1.pilot_name, T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4cd2aef525048753c050dce8478bfa3817b3547d",
                "query": "SELECT T1.age, AVG(T1.age) FROM (SELECT T2.age, T2.plane_name FROM PilotSkills AS T2 WHERE T2.plane_name IN (SELECT plane_name FROM Hangar)) AS T1 GROUP BY T1.age",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)) AS #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "c3a35f97e667f2e4f64d59420cab48ed8bb5c619",
                "query": "SELECT T1.pilot_name, AVG(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age <= 40 GROUP BY T1.pilot_name LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "bb5b8a3e69cd2d48bf1ec533f3c36bac2b66d74a",
                "query": "SELECT T1.pilot_name, T1.plane_name FROM PilotSkills AS T1 JOIN PilotSkills AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age BETWEEN 30 AND 40 OR T1.age > 50 OR EXISTS (SELECT * FROM Hangar WHERE location = 'New York' AND plane_name = T1.plane_name) ORDER BY T1.pilot_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9fa576b90313c249ddd0ecaff354fd390e33e5b6",
                "query": "SELECT COUNT(DISTINCT T1.plane_name), COUNT(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'New York' AND T1.age > 30 ORDER BY T1.age ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "scholar": [
            {
                "hash": "8d312f5309a6f233a86dd9d6d73a93cf056891e1",
                "query": "SELECT AVG(p.numCiting) , j.journalName FROM paper AS p JOIN journal AS j ON p.journalId = j.journalId GROUP BY j.journalName ORDER BY AVG(p.numCiting) ASC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "390b114cc847709c27af7571b4e0bed840cc83b0",
                "query": "SELECT title FROM paper WHERE venueId = 10 AND year BETWEEN 2000 AND 2010 AND EXISTS (SELECT paperId FROM writes WHERE paper.paperId = writes.paperId AND authorId = 1) ORDER BY numCiting DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT T1.paperId) FROM writes AS T1 JOIN paper AS T2 ON T1.paperId = T2.paperId WHERE T2.year >= 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ee0e616e54bf72c5d2413ba2ddedfe74e7c5abf0",
                "query": "SELECT T1.title FROM paper AS T1 WHERE T1.venueId IN (SELECT T2.venueId FROM venue AS T2 WHERE T2.venueName = 'venueName')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9db9dd69ce1d408f8d25431c97ef58cc4222a08b",
                "query": "SELECT T1.venueName FROM venue AS T1 WHERE T1.venueName = 'Test Venue'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "fea492075c0fed31f902259060f808f0c0ea8ea5",
                "query": "SELECT T1.title FROM paper AS T1 WHERE T1.year BETWEEN 2000 AND 2010 OR T1.numCiting > 100 OR EXISTS (SELECT * FROM cite AS T2 WHERE T2.citingPaperId = T1.paperId) GROUP BY T1.title HAVING SUM(T1.numCitedBy) > 50",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "d640cad374273bf3b37eff773ff75f312bc3cd45",
                "query": "SELECT COUNT(DISTINCT T1.paperId), T2.year FROM paper AS T1 JOIN paper AS T2 ON T1.paperId = T2.paperId WHERE T1.numCiting < 10 ORDER BY T2.year DESC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# < #VALUE# ORDER BY T2.#COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "37f73e69948b8a6ba5cd3bf6ab78f0d6d4c1d64a",
                "query": "SELECT T1.authorName FROM author AS T1 JOIN writes AS T2 ON T1.authorId = T2.authorId JOIN paper AS T3 ON T2.paperId = T3.paperId WHERE T3.numCiting >= 10 ORDER BY T1.authorName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7e17544be0e7617c1a5fafc85e2aea5c2d295bd1",
                "query": "SELECT COUNT(DISTINCT T1.authorId), T1.authorId FROM writes AS T1 JOIN paper AS T2 ON T1.paperId = T2.paperId WHERE T2.year <= 2010 GROUP BY T1.authorId ORDER BY COUNT(DISTINCT T1.authorId) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "462982f7e8c77e26bc5bd9ff1c170e2f4544209a",
                "query": "SELECT T2.authorName, SUM(T1.numCiting) FROM writes AS T1 JOIN author AS T2 ON T1.authorId = T2.authorId WHERE T1.year < 2010 GROUP BY T2.authorName HAVING SUM(T1.numCiting) < 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) < #VALUE#"
            },
            {
                "hash": "3483448e642a219729288f6b998af6282e998241",
                "query": "SELECT COUNT(DISTINCT T1.paperId) , COUNT(DISTINCT T1.authorId) , SUM(T1.numCiting) FROM writes AS T1 INNER JOIN paper AS T2 ON T1.paperId = T2.paperId WHERE T2.year BETWEEN 2000 AND 2010 AND T2.numCiting > 100 GROUP BY T1.authorId",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "f5bc6385df2599cdfd8e0418d31861fa7c75711b",
                "query": "SELECT T1.paperName, T2.title, T3.authorName FROM paper AS T1 JOIN writes AS T2 ON T1.paperId = T2.paperId JOIN author AS T3 ON T2.authorId = T3.authorId WHERE T1.title != 'AI'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "a8572af802daee25c969ef18035e18d8f3b236c6",
                "query": "SELECT T1.authorName, T2.paperId FROM author AS T1 JOIN writes AS T2 ON T1.authorId = T2.authorId JOIN paper AS T3 ON T2.paperId = T3.paperId WHERE T1.authorName BETWEEN 'A' AND 'B' AND T2.paperId NOT IN (SELECT paperId FROM writes AS T4 JOIN author AS T5 ON T4.authorId = T5.authorId WHERE T5.authorName = 'C') AND T3.year > 2000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "5b4ad13ba444c706cae082294b7dd0260e2669a2",
                "query": "SELECT T1.title, T1.year FROM paper AS T1 WHERE EXISTS (SELECT T2.paperId FROM writes AS T2 WHERE T2.paperId = T1.paperId LIMIT 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# LIMIT 1)"
            },
            {
                "hash": "5b8b49bda49cf6c90cccd86707c5402f4862b148",
                "query": "SELECT COUNT(DISTINCT T3.authorName) FROM paper AS T1 JOIN writes AS T2 ON T1.paperId = T2.paperId JOIN author AS T3 ON T2.authorId = T3.authorId WHERE T1.year >= 2010 ORDER BY T1.year DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "24e68f6e2b9cf04de9d21e3771b4b5534c71a597",
                "query": "SELECT T1.authorName FROM author AS T1 JOIN writes AS T2 ON T1.authorId = T2.authorId JOIN paper AS T3 ON T3.paperId = T2.paperId WHERE T3.year < 2010",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "e684c4a0a07a67a9a1535a07c3d88d7e8e4f538e",
                "query": "SELECT COUNT(DISTINCT T1.authorId) FROM writes AS T1 JOIN paper AS T2 ON T1.paperId = T2.paperId GROUP BY T1.authorId HAVING COUNT(DISTINCT T1.authorId) > 1 ORDER BY COUNT(DISTINCT T1.authorId) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "af2ebfac5da2c1adbc2f3a3207ea1d0b617e5eb6",
                "query": "SELECT AVG(T1.numCiting), COUNT(DISTINCT T1.paperId) FROM paper AS T1 INNER JOIN writes AS T2 ON T1.paperId = T2.paperId LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "8026b36aae1190265f2d7f9d3f1114dc66c2bbbc",
                "query": "SELECT COUNT (DISTINCT T1.paperId), COUNT(T1.paperId) FROM paper AS T1 JOIN writes AS T2 ON T1.paperId = T2.paperId WHERE T1.venueId = 1 ORDER BY T1.paperId ASC",
                "template": "SELECT COUNT (DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "188b0a503a5851468d3a9173723832f9b9ce38ab",
                "query": "SELECT T1.title FROM paper AS T1 JOIN writes AS T2 ON T1.paperId = T2.paperId WHERE T1.year <= 2015 ORDER BY T1.title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f76684314fa4ecd7bc26dcf11b43a98c85489f60",
                "query": "SELECT T1.authorName, T2.title FROM author AS T1 JOIN writes AS T2 ON T1.authorId = T2.authorId JOIN paper AS T3 ON T2.paperId = T3.paperId WHERE T3.numCiting > 100 ORDER BY T3.numCiting DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "14d01312edde18647901640479a6550df334d86c",
                "query": "SELECT T1.venueName FROM venue AS T1 JOIN paper AS T2 ON T1.venueId = T2.venueId WHERE T2.title = 'Machine Learning'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "6ff9ab8dc857a43fe9f5a4e70901b686485b0353",
                "query": "SELECT SUM(T2.datasetId) , COUNT(T2.datasetId) FROM paper AS T1 JOIN paperDataset AS T2 ON T1.paperId = T2.paperId WHERE T1.year > 2010 AND T1.journalId IN ( SELECT T3.journalId FROM journal AS T3 WHERE T3.journalName = 'Journal A') AND T1.paperId NOT IN ( SELECT T4.citedPaperId FROM cite AS T4 )",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# )"
            },
            {
                "hash": "b25f0f50bcb2f813dddbc94a2f5d7136275ce5ce",
                "query": "SELECT T1.journalName, SUM(T1.journalId) FROM journal AS T1 WHERE T1.journalName != 'Journal1' GROUP BY T1.journalName LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
            }
        ],
        "solvency_ii": [
            {
                "hash": "e0e2e9f8bb2920e8282457774d6e065b1cf86d9a",
                "query": "SELECT COUNT(T1.Product_ID), SUM(T2.Product_Price) FROM Products_in_Events AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T1.Product_in_Event_ID BETWEEN 1 AND 100 OR T1.Event_ID IN (SELECT Event_ID FROM Events) OR T2.Product_Type_Code = 'A'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4d3ec917c40c080d4f88e82fcb48f1222d127996",
                "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Event_ID = 10 OR T1.Product_Type_Code = 'A' OR T1.Product_Price BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a71e44417bc42d0fc56fe0510113b9258b9ee0f9",
                "query": "SELECT COUNT(T1.Product_ID) FROM Products_in_Events AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T1.Event_ID = 100 AND T2.Product_Name = 'ProductA' AND NOT EXISTS (SELECT 1 FROM Events AS T3 WHERE T3.Event_ID = T1.Event_ID AND T3.Event_Type_Code = 'EventType1') LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "3db386046ffd8e24f64289396124ee458af426ed",
                "query": "SELECT Product_Name FROM Products WHERE Product_Price <= 1000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ba38417b480ccb05eb3fde7a57374a0a6d6786c0",
                "query": "SELECT T3.Product_Name FROM Products_in_Events AS T1 JOIN Products AS T3 ON T1.Product_ID = T3.Product_ID JOIN Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Product_in_Event_ID = 100 ORDER BY T3.Product_Price DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e944339cdb4c76dcad0528b2ecbdb393d5b2c596",
                "query": "SELECT COUNT(T1.Party_ID), T1.Party_Details FROM Parties AS T1 JOIN Parties_in_Events AS T2 ON T1.Party_ID = T2.Party_ID WHERE EXISTS (SELECT 1 FROM Events AS T3 WHERE T3.Event_ID = T2.Event_ID AND T3.Finance_ID > 10000 AND T3.Location_ID < 5000) GROUP BY T1.Party_Details HAVING COUNT(T1.Party_ID) > 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "ba47369fb0d651be783dce801ec1793efcd39a2c",
                "query": "SELECT Product_ID FROM Products WHERE NOT EXISTS (SELECT 1 FROM Products_in_Events AS T1 JOIN Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T2.Location_ID = 2 AND T1.Product_ID = Products.Product_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T1.#COLUMN# = #TABLE#.#COLUMN#) LIMIT 1"
            },
            {
                "hash": "510eaf7fb58d6b329e202e6e77f289a1f13d7d95",
                "query": "SELECT * FROM Products WHERE Product_Price > 10 OR Product_Name = 'Product1' OR NOT EXISTS ( SELECT 1 FROM Products_in_Events WHERE Products_in_Events.Product_ID = Products.Product_ID ) ORDER BY Product_Price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d6122d752ac7c685c0833055c8c12d369ac321c5",
                "query": "SELECT Product_Name FROM Products WHERE Product_Price >= 10 AND Product_Type_Code = 'ABC'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "6c2904bc046aec30d52e356e4ee861e2496dd35c",
                "query": "SELECT MAX(T1.Product_Name), MAX(T1.Product_Price) FROM Products AS T1 WHERE T1.Product_Type_Code = 'Type1' AND T1.Product_Price BETWEEN 100 AND 1000 ORDER BY T1.Product_ID DESC LIMIT 5",
                "template": "SELECT MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f8f3d62355c16929caacdc5bcb2a8b920b933ee2",
                "query": "SELECT COUNT(Product_ID) FROM Products_in_Events WHERE Product_in_Event_ID BETWEEN 100 AND 200 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0b59bc2dc9f8b62d5a903a8da903322fced20521",
                "query": "SELECT Product_Name FROM Products WHERE Product_Price BETWEEN 500 AND 1000 OR Product_Type_Code = 'Type1' OR Product_Type_Code NOT IN (SELECT Product_Type_Code FROM Products WHERE Product_Price > 1000) GROUP BY Product_Name HAVING MAX(Product_Price) > 500 ORDER BY Product_Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "81f073dd42fff6acdf3b5fbd338a6f4fb8ed3785",
                "query": "SELECT T1.Product_Name, T2.address_details FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID JOIN Events AS T3 ON T2.Event_ID = T3.Event_ID JOIN Addresses AS T4 ON T3.Address_ID = T4.Address_ID WHERE T1.Product_Price > 100 ORDER BY T1.Product_Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7b3627558c8c0712f178dca70f06ee70468c9153",
                "query": "SELECT COUNT(Product_Name), Product_Type_Code FROM Products WHERE Product_Type_Code != 'Electronics' GROUP BY Product_Type_Code",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "fb39c2535ced0567a1f3b0a032b599e1a748d681",
                "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Events AS T2 ON T1.Product_ID = T2.Event_ID JOIN Finances AS T3 ON T3.Finance_ID = T2.Finance_ID JOIN Products_in_Events AS T4 ON T4.Event_ID = T2.Event_ID WHERE T3.Other_Details NOT EXISTS (SELECT * FROM Events AS T5 WHERE T5.Finance_ID > 10000 AND T5.Finance_ID < 50000) OR T1.Product_Price > 5000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "b4bac2a5191e38dfb164e2173cb09387657f0907",
                "query": "SELECT Product_Price, AVG(Product_Price) FROM Products WHERE Product_Price >= 10 GROUP BY Product_Price ORDER BY Product_Price DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "80882d5f1b91cbfc8deb5a1c93b065d2aa0f04c3",
                "query": "SELECT COUNT(DISTINCT Product_ID) FROM Products_in_Events",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "239fec4902b4dd284defc83cb2f5067304b34514",
                "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID WHERE T1.Product_Price < 10 ORDER BY T1.Product_Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f7d9794b74949a4f87a0732f8b8fac436f9219d8",
                "query": "SELECT COUNT(DISTINCT T1.Product_Type_Code), T2.Event_Type_Code FROM Products AS T1 JOIN Products_in_Events AS T3 ON T1.Product_ID = T3.Product_ID JOIN Events AS T2 ON T3.Event_ID = T2.Event_ID WHERE T2.Event_Type_Code = 'Type1' AND T1.Product_Price BETWEEN 10 AND 100 AND T1.Product_Name = 'ProductA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "bc4f73e53f5a68f2cf3bf09da7822fc61e906ac5",
                "query": "SELECT T1.Product_Name, MAX(T2.Product_Price) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING T2.Product_Price <= 1000",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# <= #VALUE#"
            },
            {
                "hash": "553f80b4cad3d9499ff4057fe0a9a42d5a94973a",
                "query": "SELECT T1.Product_Name, T2.Event_Type_Code FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID ORDER BY T1.Product_Price DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "2d0b838591a36b2b12b76aa4cfda5c3bbb2ccec5",
                "query": "SELECT Product_Name FROM Products WHERE Product_Price <= 100 AND Product_ID = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "107bfa2cee29b3b6775b72b80b08fbb3cbb29a3f",
                "query": "SELECT T1.Product_Name, T2.Product_Name FROM Products AS T1 JOIN Products AS T2 ON T1.Product_Type_Code = T2.Product_Type_Code WHERE T1.Product_Price BETWEEN 100 AND 500 OR T2.Product_Price > 200 ORDER BY T1.Product_Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f78a3c65789422f9cb737e03aa7b584809dc3a5d",
                "query": "SELECT * FROM Products WHERE Product_Price < 10000 LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2f94830975b6ca94c45557990c1af636a3c8f526",
                "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price > (SELECT AVG(Product_Price) FROM Products) ORDER BY Product_Type_Code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "db24e1611e5941be077b0bb0f6b4899a32b92c42",
                "query": "SELECT T1.Party_ID, T1.Party_Details FROM Parties AS T1 JOIN Parties_in_Events AS T2 ON T1.Party_ID = T2.Party_ID WHERE T2.Event_ID BETWEEN 100 AND 200 AND T2.Role_Code = 'Manager'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0064b6a758336c4486b5b17e56ec3d94a78acbc1",
                "query": "SELECT COUNT(DISTINCT T1.Product_Name), COUNT(DISTINCT T2.Party_Details) FROM Products AS T1 JOIN Parties_in_Events AS T2 ON T1.Product_ID = T2.Event_ID WHERE T1.Product_Price BETWEEN 50 AND 100 AND T1.Product_Type_Code = 'A' AND NOT EXISTS (SELECT 1 FROM Events AS T3 WHERE T3.Event_ID = T2.Event_ID AND T3.Address_ID IS NULL) ORDER BY T1.Product_Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC"
            }
        ],
        "debate": [
            {
                "hash": "d50a9b1eae318d88e29b086d7678bc45a1e23459",
                "query": "SELECT T1.Name, AVG(T2.Num_of_Audience) FROM people AS T1 JOIN debate AS T2 ON T1.People_ID = T2.Debate_ID WHERE T1.Age <= 40 GROUP BY T1.Name LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a3dd9c733cb9d3eabad2e040a274213d4829d700",
                "query": "SELECT T1.Name, COUNT(T2.Affirmative) FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Negative WHERE T1.Age BETWEEN 30 AND 50 AND T1.District NOT IN ( SELECT District FROM people WHERE Party = 'Democrat' ) GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "4c22143cd4b14622098c480d17f550426d48761d",
                "query": "SELECT COUNT(DISTINCT T1.Debate_ID) , COUNT(T1.Affirmative) , COUNT(T1.Negative) FROM ( SELECT T2.Debate_ID , T2.Affirmative , T2.Negative FROM debate_people AS T2 WHERE T2.If_Affirmative_Win = 'yes' ) AS T1 ORDER BY T1.Debate_ID ASC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM ( SELECT #COLUMN# , #COLUMN# , #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AS T1 ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT Name FROM people WHERE Party = 'Democrat'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "b96dec17acdf886725710fd2e5ce10bfa73294ae",
                "query": "SELECT COUNT(T1.Debate_ID), T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.People_ID WHERE T1.Debate_ID BETWEEN 1 AND 10 AND T1.Affirmative NOT IN (SELECT Affirmative FROM debate_people WHERE If_Affirmative_Win = 'yes') GROUP BY T2.Name LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "7ec0c047601651efa56562059c0e855b09137e38",
                "query": "SELECT Name FROM people WHERE District = 'A' OR Age > 40 OR Party NOT IN (SELECT Party FROM people WHERE Age < 30) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "38404a80b6669113383cc1afdf37785501e70088",
                "query": "SELECT T1.District, AVG(T2.Num_of_Audience), T2.Venue FROM people AS T1 JOIN debate AS T2 ON T1.People_ID = T2.Debate_ID WHERE T2.Num_of_Audience > 10 AND T1.Age IN (SELECT Age FROM people WHERE Party = 'Democrat') LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "39b1944d38243ae70d876e30aefc9196b857af16",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Venue), COUNT(DISTINCT T3.Venue) FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Affirmative JOIN debate AS T3 ON T2.Debate_ID = T3.Debate_ID WHERE T3.Num_of_Audience BETWEEN 100 AND 500 AND T1.Age > 40 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e2db07da85638e9111a581cb9477a9dcac3ba5e8",
                "query": "SELECT T1.Name, COUNT(T2.Debate_ID) FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Affirmative WHERE T1.Age > 40",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "c70399688b0794ee8630c496d06f96f7982dfc97",
                "query": "SELECT T1.Name, COUNT(DISTINCT T3.Negative) FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Affirmative JOIN debate AS T3 ON T2.Debate_ID = T3.Debate_ID WHERE NOT EXISTS (SELECT 1 FROM debate AS T4 WHERE T4.Debate_ID = T3.Debate_ID AND T4.Num_of_Audience > 1000) LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "b71f4d72a7f025df6de64ed02a30fdb0b8f02814",
                "query": "SELECT T1.Name FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Negative WHERE T1.Age >= 30",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "86f18d7fc11c2d16429f935b9ccb38b19c8c7469",
                "query": "SELECT T2.Name, SUM(T1.Num_of_Audience) FROM debate AS T1 JOIN debate_people AS T3 ON T1.Debate_ID = T3.Debate_ID JOIN people AS T2 ON T3.Negative = T2.People_ID WHERE T2.Age >= 50 ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT T1.Name, COUNT(T1.People_ID) FROM people AS T1 WHERE T1.Age <= 50",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f42de541605c90ec25ada22d9e15c7ab05b40533",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 JOIN people AS T2 ON T1.People_ID < T2.People_ID WHERE T1.Age BETWEEN 20 AND 50 AND EXISTS (SELECT 1 FROM debate_people WHERE Debate_ID > 10)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "7b03225003177ce236d5c696d9dc4489f9122ad5",
                "query": "SELECT T1.Name, T2.Num_of_Audience FROM people AS T1 JOIN debate AS T2 ON T1.People_ID = T2.Debate_ID WHERE T2.Num_of_Audience <= 1000 ORDER BY T1.Age ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "abca8a975eda5691e5de051300df9e343214f8ca",
                "query": "SELECT T1.District, T1.Name FROM people AS T1 WHERE T1.Age > 30 AND T1.Age < 50 AND T1.Name NOT IN ( SELECT T2.Name FROM debate AS T3 JOIN debate_people AS T4 ON T3.Debate_ID = T4.Debate_ID JOIN people AS T2 ON T4.Negative = T2.People_ID WHERE T3.Venue = 'New York') ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e9dbbca90ce98f974bbcc4fb3b4cc4a9df192b71",
                "query": "SELECT Name FROM people WHERE Name NOT IN (SELECT Name FROM people WHERE District = 'North')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "48710c2ab3f0fd5cbc2f6c504ebb0d2ceca9a9dc",
                "query": "SELECT COUNT(DISTINCT T1.Debate_ID), COUNT(DISTINCT T2.Affirmative), COUNT(DISTINCT T3.Negative) FROM debate AS T1 JOIN debate_people AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T3.People_ID = T2.Negative WHERE T2.If_Affirmative_Win < 100 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0ab8cd48132a37980a29ccabb65993926ce02c9e",
                "query": "SELECT T.Name, AVG(T.Age) FROM people AS T WHERE T.District = 'North' OR T.Age > ( SELECT AVG(Age) FROM people AS S )",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# )"
            },
            {
                "hash": "50117d1e6fee64a82fb1d8e31b905530e544a7d2",
                "query": "SELECT Name FROM people WHERE Age > 50 OR Age BETWEEN 20 AND 40 OR Age > (SELECT MAX(Age) FROM people WHERE Party = 'Democrat') ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2d5a67f5365c245dcbd8ae395edd4d3ba760f138",
                "query": "SELECT T1.Name, T2.Date FROM people AS T1 JOIN debate AS T2 ON T1.People_ID = T2.Debate_ID WHERE T1.Age > 30 OR T1.Party = 'Democrat' OR T1.People_ID IN (SELECT Affirmative FROM debate_people WHERE If_Affirmative_Win = 'Yes')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1f05f362eabba58c047195f7538ce7cc57fefa9b",
                "query": "SELECT T1.Name, MIN(T2.Num_of_Audience) FROM people AS T1 JOIN debate_people AS T2 ON T1.People_ID = T2.Affirmative JOIN debate AS T3 ON T3.Debate_ID = T2.Debate_ID GROUP BY T1.Name ORDER BY MIN(T2.Num_of_Audience) ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC"
            },
            {
                "hash": "404326adf8007de2555ae8b3ab9f7a00ce8350f0",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 JOIN people AS T2 ON T1.District = T2.District WHERE T1.Age > 30 OR T2.Age BETWEEN 25 AND 40 OR T1.District = 'North' ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT Name FROM people WHERE Party != 'Democrat' ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e9c80e1847e194d285699ab7a7a46aa6649c13ee",
                "query": "SELECT Name FROM people AS Debate WHERE Age < 50 ORDER BY District DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "voter_2": [
            {
                "hash": "46f1048cca1eeb4c2b1e625ef35a1b0b1649833d",
                "query": "SELECT * FROM Student WHERE StuID = 100",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "dc653d7f9fbfde179296cb049e5319350fb0a3ef",
                "query": "SELECT T1.LName, T1.Fname FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Age BETWEEN 18 AND 25 ORDER BY T1.Fname DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f5c3e6ee065e7c26846ebbc6b004d486ca04c4fd",
                "query": "SELECT T1.LName, T2.Secretary_Vote FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID JOIN Voting_record AS T3 ON T1.StuID = T3.StuID WHERE T1.Age < 18 ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c40fc71fd00193ee931f4eb5dd39865aff731818",
                "query": "SELECT COUNT(DISTINCT T1.Major), T2.President_Vote FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID WHERE T1.Age <= 20 ORDER BY T2.President_Vote DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "b02011bd887ce6132c28a1e29d23712da314e987",
                "query": "SELECT COUNT(DISTINCT T1.Sex) FROM Student AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "251ee19db6176afa296ed7a621a688ac2081be3e",
                "query": "SELECT T1.Sex, COUNT(T2.President_Vote) FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID WHERE T1.Age < 20 ORDER BY T1.Sex ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7bcd8f85acde3974647b5298638a2c87f6ed02b1",
                "query": "SELECT LName, MAX(Age) FROM Student WHERE Age <= 20",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8ef4665bff42db395b995dcb404484b424adcc19",
                "query": "SELECT LName FROM Student WHERE Sex = 'M' AND Age BETWEEN 20 AND 25 AND StuID NOT IN (SELECT StuID FROM Voting_record WHERE Registration_Date IS NULL) GROUP BY LName HAVING MAX(Age) = 25 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f30ebe63ac709856f80c687e31334d7a03639630",
                "query": "SELECT LName, COUNT(DISTINCT StuID) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Voting_record WHERE Registration_Date IS NOT NULL) GROUP BY LName ORDER BY COUNT(DISTINCT Advisor) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "ac00eff2941514a13e68b88502ac186daabcebec",
                "query": "SELECT COUNT(DISTINCT T1.StuID) FROM Student AS T1 WHERE T1.Age > (SELECT AVG(T2.Age) FROM Student AS T2) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# AS T2) LIMIT #VALUE#"
            },
            {
                "hash": "c9a65a3038f7eed411b407ba11149f93eb11095c",
                "query": "SELECT Fname FROM Student LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "44d2d3de91b918d4b1c88141641b03d9fe2896c4",
                "query": "SELECT T1.StuID, T2.Registration_Date, T3.Election_Cycle FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID JOIN Voting_record AS T3 ON T1.StuID = T3.Vice_President_Vote WHERE T1.Age < 20",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "2ab9bac9ee3e683f25e6247d0ff29b75c063fe04",
                "query": "SELECT COUNT(DISTINCT T1.Age) , T2.President_Vote FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID WHERE T2.Registration_Date != '2020-01-01' ORDER BY T2.President_Vote DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0bb3a8446109a2ecf5e0ab71911a626aef52ee0d",
                "query": "SELECT T1.LName, COUNT(T2.Registration_Date) FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID WHERE T2.Registration_Date = '2020-01-01' AND T1.Age > 18 AND NOT EXISTS (SELECT 1 FROM Student AS T3 WHERE T3.StuID = T1.StuID AND T3.Major IS NULL) ORDER BY T1.LName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NULL) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c86f8016c52f736d85cb2024748e36f3c5e4a28e",
                "query": "SELECT T1.LName, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20 OR T1.Age BETWEEN 10 AND 30 OR T1.Age < 25",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "40b2f2b766d528ff8e8357f0783ca711cdcbafdc",
                "query": "SELECT T1.Major, AVG(T1.Age) FROM Student AS T1 WHERE T1.Sex = 'M' AND T1.Age > 18 AND EXISTS (SELECT 1 FROM Voting_record AS T2 WHERE T1.StuID = T2.StuID) GROUP BY T1.Major",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "2bc24084eaaf2b71cdb87d0fa460fb69b1cce622",
                "query": "SELECT AVG(T1.Age), T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Major != T2.Major GROUP BY T2.LName HAVING AVG(T1.Age) > 20 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "81c574cfd5960a2b9004fc0b7392a58c090a2802",
                "query": "SELECT T1.LName, SUM(T2.Election_Cycle) FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID WHERE T1.Age BETWEEN 20 AND 25 AND T1.Sex = 'M' GROUP BY T1.LName HAVING SUM(T2.Election_Cycle) > 2 ORDER BY T1.LName DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b6a2a015524bebcb31f857bbaa49e2f1664ffa83",
                "query": "SELECT COUNT(DISTINCT T2.Sex), T1.Registration_Date FROM Voting_record AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Registration_Date != '1999-04-27' GROUP BY T1.Registration_Date ORDER BY COUNT(DISTINCT T2.Sex) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "8cf4824274bba9b77f427db84dfa408dbb53ce51",
                "query": "SELECT T1.LName, T2.Registration_Date FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.StuID JOIN Voting_record AS T3 ON T2.StuID = T3.StuID WHERE T1.Age > 20 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f352dedaf7de06918624219094e665075dfe6a67",
                "query": "SELECT Fname FROM Student WHERE Major = 3 OR LName = 'Smith' OR StuID IN ( SELECT StuID FROM Voting_record ) ORDER BY LName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3628a44e0f528e86e6329cfb7d1c92ea83423e8a",
                "query": "SELECT MIN(Age) FROM Student WHERE Age <= 20",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "621e95a5092b4c1cef3d8c88bf43d10cdcc6e058",
                "query": "SELECT S.LName, S.Fname, S.Age FROM Student S WHERE S.Age BETWEEN 18 AND 25 AND S.Sex = 'M' AND S.Major = 1 AND NOT EXISTS (SELECT 1 FROM Voting_record V WHERE V.StuID = S.StuID AND V.Registration_Date IS NULL) GROUP BY S.LName, S.Fname, S.Age HAVING MAX(S.Age) > 20 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# IS NULL) GROUP BY #COLUMN#, #COLUMN#, #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "56fe451c7d818337c6e6bd5d3450145532f0963d",
                "query": "SELECT DISTINCT LName, Fname FROM Student AS T1 WHERE Age >= 20 LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            }
        ],
        "document_management": [
            {
                "hash": "8d5d94296eb4096bdeb78c2e5f8ba62c80bc004b",
                "query": "SELECT T1.document_structure_description FROM Document_Structures AS T1 WHERE T1.document_structure_code = 'DS-001' OR T1.document_structure_code IN (SELECT T2.document_structure_code FROM Documents AS T2 WHERE T2.document_name = 'Document-1') ORDER BY T1.document_structure_code DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "09e988f8261652aa402c013569a0773cfb0419d1",
                "query": "SELECT T1.document_name, T2.document_structure_description FROM Documents AS T1 JOIN Document_Structures AS T2 ON T1.document_structure_code = T2.document_structure_code WHERE T1.access_count >= 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "42f46dd16d59173915c7ce3018ef75d57db8f04e",
                "query": "SELECT T1.document_name, T2.access_count FROM Documents AS T1 JOIN Document_Functional_Areas AS T2 ON T1.document_code = T2.document_code WHERE T2.access_count < 100 ORDER BY T1.document_name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6203d32436cfa16f2818a09974cc0a17fc91f05f",
                "query": "SELECT T1.functional_area_description, MAX(T2.parent_functional_area_code) FROM Functional_Areas AS T1 INNER JOIN Functional_Areas AS T2 ON T1.functional_area_code = T2.functional_area_code WHERE T1.functional_area_description < 'functional_area_description' GROUP BY T1.functional_area_description ORDER BY T1.functional_area_description DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8e787137abd71c836408d0011d362b019eb4b836",
                "query": "SELECT COUNT(T1.document_code) FROM Documents AS T1 WHERE T1.document_type_code = 'code' AND EXISTS ( SELECT 1 FROM Document_Functional_Areas AS T2 WHERE T2.document_code = T1.document_code )",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "6e88001010cc3384d4ade15599ff0bde77ed1d72",
                "query": "SELECT role_description FROM Roles WHERE role_code BETWEEN 'R1' AND 'R10' AND role_code IN (SELECT role_code FROM Users) GROUP BY role_code HAVING MAX(role_code) = 'R10' ORDER BY role_code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4fb2a5c285f05a939ef961aee4e0b8241d3a8260",
                "query": "SELECT user_name FROM Users WHERE role_code = 'admin' AND user_login = 'root' AND password = 'password' ORDER BY user_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "128746516b66822f45001c1d5d84cceb743fcb7e",
                "query": "SELECT T1.image_name, T2.document_structure_description FROM Images AS T1 JOIN Document_Structures AS T2 ON T1.image_name = T2.document_structure_description WHERE T1.image_alt_text = 'alt_text'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "d92911cdfaa97358dbcbf5a8f103166d7bf8f52b",
                "query": "SELECT * FROM Documents WHERE access_count BETWEEN 10 AND 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "f24039e73d506cb9af4f12650f65f6a21e70a3cb",
                "query": "SELECT T1.document_code FROM Documents AS T1 WHERE T1.document_structure_code = 'structure_1' AND T1.document_type_code = 'type_1' AND T1.access_count BETWEEN (SELECT MIN(access_count) FROM Documents) AND (SELECT MAX(access_count) FROM Documents) ORDER BY T1.document_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2d3197c95236d3e672e8378511ab96d3f81209bc",
                "query": "SELECT COUNT(*) FROM Users WHERE user_id BETWEEN 100 AND 200 OR role_code IN (SELECT role_code FROM Roles WHERE role_description = 'Admin') ORDER BY user_id DESC",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "52c2ee2de4f1b44739331c1fa6406c1acc95ab8d",
                "query": "SELECT T1.document_name, COUNT(T1.document_code) FROM Documents AS T1 WHERE T1.access_count >= 10 GROUP BY T1.document_name ORDER BY COUNT(T1.document_code) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "7082e61087a8ab611a429d2c6bc64bbd56146b50",
                "query": "SELECT T1.document_code FROM Documents AS T1 JOIN Documents AS T2 ON T1.document_code = T2.document_code WHERE EXISTS (SELECT 1 FROM Document_Functional_Areas AS T3 WHERE T3.document_code = T1.document_code AND T3.functional_area_code = T2.document_type_code) GROUP BY T1.document_code HAVING COUNT(T1.document_code) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "93a071c111470a427372e3fd847e0661e88a811e",
                "query": "SELECT COUNT(DISTINCT T2.document_code) FROM Document_Structures AS T1 LEFT JOIN Documents AS T2 ON T1.document_structure_code = T2.document_structure_code WHERE NOT EXISTS (SELECT 1 FROM Document_Sections AS T3 WHERE T3.document_code = T2.document_code)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "bd117528d57856e56d15c1d58926798908d8d787",
                "query": "SELECT role_code, role_description FROM Roles WHERE role_code BETWEEN 'admin' AND 'user'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "d6bd751c14816b5f4ec1c742521cf94837be16a6",
                "query": "SELECT COUNT(section_sequence) FROM Document_Sections WHERE document_code = 'doc1' OR section_sequence BETWEEN 1 AND 10 OR section_title = 'section1' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "eae28d48b12534a978441879555af038c2bb975d",
                "query": "SELECT T1.document_name, T2.section_title, T3.image_alt_text FROM Documents AS T1 JOIN Document_Sections AS T2 ON T1.document_code = T2.document_code JOIN Document_Sections_Images AS T3 ON T2.section_id = T3.section_id WHERE T2.section_sequence <= 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "6a32dc804af8e998789199be9d88028278caf2c5",
                "query": "SELECT COUNT(DISTINCT T1.document_code), T2.section_title FROM Documents AS T1 JOIN Document_Sections AS T2 ON T1.document_code = T2.document_code WHERE T1.access_count < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "28d6230c712bcaf2d51dd9466b16fb24ec0c19fc",
                "query": "SELECT COUNT(DISTINCT T1.user_id), COUNT(DISTINCT T1.user_name), COUNT(DISTINCT T1.user_login) FROM Users AS T1 WHERE T1.role_code IN (SELECT T2.role_code FROM Roles AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "f445b0b090f114dca0462ebacd99402acd651a09",
                "query": "SELECT T1.document_structure_description FROM Document_Structures AS T1 JOIN Documents AS T2 ON T1.document_structure_code = T2.document_structure_code JOIN Document_Sections AS T3 ON T3.document_code = T2.document_code JOIN Document_Sections_Images AS T4 ON T4.section_id = T3.section_id WHERE T1.document_structure_description = 'structure' OR T2.document_name = 'document' OR T3.section_title IN (SELECT section_title FROM Document_Sections WHERE section_sequence > 1) ORDER BY T1.document_structure_description ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2051642181e6252058d96e0a999fe84a81afe9b2",
                "query": "SELECT T1.document_name FROM Documents AS T1 WHERE T1.document_structure_code = 'code1' AND EXISTS (SELECT T2.document_code FROM Document_Functional_Areas AS T2 WHERE T2.document_code = T1.document_code) ORDER BY T1.document_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a918961fcf462c76596206bed148187d8de2a383",
                "query": "SELECT T1.user_name, T2.role_description FROM Users AS T1 JOIN Roles AS T2 ON T1.role_code = T2.role_code",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "3fe258b063d09261f9b3ff314c47f0c5a382dab9",
                "query": "SELECT I.image_id, I.image_name FROM Images I WHERE EXISTS (SELECT 1 FROM Document_Sections_Images DSI WHERE DSI.image_id = I.image_id LIMIT 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            }
        ],
        "e_learning": [
            {
                "hash": "c7678cb27ccb74655de3ccf25ac9703f215a77fa",
                "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T1.author_id < 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7c129604f69f612ed9e855546a06c0a8b47d1c18",
                "query": "SELECT T1.subject_name, MIN(T3.test_result) FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Student_Tests_Taken AS T3 ON T2.course_id = T3.registration_id WHERE T1.subject_id = 1 GROUP BY T1.subject_name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5e905522e4e82fea5ed6288dc4e45bd60085759d",
                "query": "SELECT T1.course_name, T2.subject_name FROM Courses AS T1 INNER JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id INNER JOIN Course_Authors_and_Tutors AS T3 ON T1.author_id = T3.author_id WHERE T1.course_id >= 100 ORDER BY T1.course_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bd38dd67130c48914ad4f93da58a042e76afa3e4",
                "query": "SELECT COUNT(T1.course_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T2.date_of_completion IS NOT NULL AND T1.course_name = 'Mathematics' AND T1.course_id NOT IN (SELECT T3.course_id FROM Courses AS T3 JOIN Student_Course_Enrolment AS T4 ON T3.course_id = T4.course_id WHERE T4.date_of_enrolment < '2020-01-01') ORDER BY T1.course_name ASC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c4cb318f2cad384c027907b652935a0812bca0a6",
                "query": "SELECT MIN(COUNT(Course_Authors_and_Tutors.author_id)), MAX(COUNT(Course_Authors_and_Tutors.author_id)), COUNT(Course_Authors_and_Tutors.author_id) FROM Course_Authors_and_Tutors WHERE Course_Authors_and_Tutors.login_name != 'admin' LIMIT 10",
                "template": "SELECT MIN(COUNT(#COLUMN#)), MAX(COUNT(#COLUMN#)), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ed1ca0b115384977fb793a019f7857196d47ff29",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Course_Authors_and_Tutors AS T2 ON T1.author_id = T2.author_id WHERE T1.course_name = 'Mathematics' OR T2.personal_name = 'John' OR T1.course_id BETWEEN 100 AND 200 OR T1.course_id IN (SELECT course_id FROM Student_Course_Enrolment) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "f946814f78aa562af1b3a6f6ed1e0f265245371a",
                "query": "SELECT COUNT(T1.student_id) FROM Students AS T1 WHERE T1.student_id BETWEEN 1000 AND 2000 AND T1.login_name = 'john_doe' AND NOT EXISTS (SELECT T2.student_id FROM Student_Course_Enrolment AS T2 WHERE T2.student_id = T1.student_id)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "cb3ecfed0e8af7d5b6dcc643cabf8871736052c5",
                "query": "SELECT T1.family_name, T1.middle_name FROM Course_Authors_and_Tutors AS T1 WHERE T1.login_name = 'author1' OR T1.password = 'password1' OR T1.author_tutor_ATB BETWEEN 'ATB1' AND 'ATB2'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "b63a3fff204f0f8d403696250ceae8f337c51c21",
                "query": "SELECT T1.family_name, MIN(T1.middle_name) FROM Course_Authors_and_Tutors AS T1 WHERE T1.author_tutor_ATB = 'author' AND T1.gender_mf = 'm' AND T1.author_id BETWEEN 1 AND 100 GROUP BY T1.family_name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "4487d47755a0a5f9de690365d932107dd906076d",
                "query": "SELECT T1.family_name, T2.personal_name, T3.subject_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE T2.course_id < 10 ORDER BY T3.subject_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "72c3e44da460e9d4f750597a9b277aeff18f07da",
                "query": "SELECT COUNT(DISTINCT T1.course_name), T2.subject_name FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id ORDER BY T1.course_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "97c7623849e0e46fc649c62bcb7bb288fe7519e6",
                "query": "SELECT * FROM Courses WHERE course_name = 'math' OR course_name = 'science' AND course_id BETWEEN 100 AND 200 ORDER BY course_id ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f9d13f063edc27fcc5e03d3c1add53992e10eeb1",
                "query": "SELECT T1.course_name FROM Courses AS T1 WHERE EXISTS (SELECT 1 FROM Student_Course_Enrolment AS T2 WHERE T1.course_id = T2.course_id GROUP BY T2.course_id HAVING COUNT(T2.registration_id) = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# GROUP BY T2.#COLUMN# HAVING COUNT(T2.#COLUMN#) = #VALUE#)"
            },
            {
                "hash": "1bb0b7cef3c2434ba3f4dd2e53bf81ea373a5660",
                "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 INNER JOIN Courses AS T2 ON T1.author_id = T2.author_id INNER JOIN Subjects AS T3 ON T2.subject_id = T3.subject_id WHERE EXISTS (SELECT 1 FROM Student_Course_Enrolment AS T4 WHERE T4.course_id = T2.course_id LIMIT 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            },
            {
                "hash": "f98cb4e74712806e12e197c09c40d3d8f36b0ed3",
                "query": "SELECT T1.subject_name, T2.course_name FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Course_Authors_and_Tutors AS T3 ON T2.author_id = T3.author_id LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a9cf98a7ddd02d670db874806f9dd84ad5d32529",
                "query": "SELECT T1.family_name, AVG(T1.author_id) FROM Course_Authors_and_Tutors AS T1 GROUP BY T1.family_name HAVING AVG(T1.author_id) >= 10 ORDER BY T1.family_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6ae44f6436bdf503725c3a858dbdea42f194524e",
                "query": "SELECT T1.course_name, T4.subject_name, COUNT(T5.registration_id) FROM Courses AS T1 JOIN Course_Authors_and_Tutors AS T2 ON T1.author_id = T2.author_id JOIN Student_Course_Enrolment AS T3 ON T1.course_id = T3.course_id JOIN Subjects AS T4 ON T4.subject_id = T1.subject_id LEFT JOIN Student_Tests_Taken AS T5 ON T3.registration_id = T5.registration_id WHERE T1.course_name != '' ORDER BY COUNT(T5.registration_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '' ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "c8995e7deb9bea84f9b3042bec7f7e4c6be6e25d",
                "query": "SELECT T1.subject_name, T2.course_name, T3.student_id FROM Subjects AS T1 JOIN Courses AS T2 ON T1.subject_id = T2.subject_id JOIN Student_Course_Enrolment AS T3 ON T2.course_id = T3.course_id WHERE T3.date_of_enrolment <= '2020-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "56895456dfab0e00a7079e37a595ff0264609727",
                "query": "SELECT COUNT(T3.course_name), SUM(T3.course_name) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Courses AS T3 ON T2.course_id = T3.course_id WHERE (T3.course_name BETWEEN 'A' AND 'Z') OR EXISTS (SELECT T4.student_id FROM Students AS T4 WHERE T4.student_id = T2.student_id) OR T3.course_name = 'Math'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT COUNT(course_id) FROM Courses WHERE author_id < 100",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "be5b8d60e1117212daff69d0f45c2349aab86170",
                "query": "SELECT T1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = 'Mathematics' AND T1.gender_mf = 'M' AND T1.author_id BETWEEN 1 AND 100 AND EXISTS (SELECT 1 FROM Students AS T3 WHERE T3.family_name = T1.family_name) GROUP BY T1.family_name HAVING COUNT(T2.course_id) > 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ea2f22d1665743cf4c0b5559c638cbca12f026a2",
                "query": "SELECT COUNT(course_id) AS num_courses FROM Courses AS T1",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "97edac7bce99b651df119c4b5cc42bb1f24f038e",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING MIN(T2.date_of_enrolment) > '2020-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "dee775ceb997cb576104026eedd0511b2f90a178",
                "query": "SELECT COUNT(DISTINCT T2.student_id), COUNT(T3.registration_id) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id JOIN Student_Tests_Taken AS T3 ON T2.registration_id = T3.registration_id WHERE T2.date_of_enrolment BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "5bc95b01d3c41d4f68539b3db4977ade1f8c58e2",
                "query": "SELECT COUNT(Course_Authors_and_Tutors.author_id) FROM Course_Authors_and_Tutors WHERE Course_Authors_and_Tutors.author_tutor_ATB = 'Author' ORDER BY Course_Authors_and_Tutors.author_id DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "daf7e695df7c41ba81964d8ca55e0bd2aa2fe4ce",
                "query": "SELECT COUNT(T1.student_id), MAX(T1.student_id) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.date_of_registration <= '2020-01-01'",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            }
        ],
        "tv_shows": [
            {
                "hash": "cc66b2be8b7686aeb9648f3754fa19acd2a9248d",
                "query": "SELECT COUNT(DISTINCT T1.Station_name), COUNT(DISTINCT T2.Transmitter) FROM city_channel AS T1 JOIN radio AS T2 ON T1.ID = T2.Radio_ID WHERE T1.Owned_Since BETWEEN 2000 AND 2010 OR T2.Transmitter = 'Dublin' AND NOT EXISTS ( SELECT 1 FROM city_channel_radio WHERE City_channel_ID = T1.ID AND Is_online = 'Yes' ) GROUP BY T1.Affiliation HAVING AVG(T1.Owned_Since) > 2005 ORDER BY T1.Affiliation ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "215f6f46716b9242a86928db2e015fd6a2dae919",
                "query": "SELECT COUNT(ID) FROM city_channel WHERE Owned_Since <= 30 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "34c1725ad321e0a053cf04ff040f25a5341aac5f",
                "query": "SELECT T1.Station_name FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE NOT EXISTS (SELECT 1 FROM radio AS T3 WHERE T3.Radio_ID = T2.Radio_ID AND T3.Transmitter = 'Dublin') ORDER BY T1.Station_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT Owned_Since) FROM city_channel WHERE Owned_Since >= 2000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "88711a6aa2b93be87e9b15b2d49a5a628716e1b9",
                "query": "SELECT Station_name, City, COUNT(ID) FROM city_channel WHERE City >= 'Dublin' GROUP BY Station_name, City",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#, #COLUMN#"
            },
            {
                "hash": "1303980235eea334190fdaa135f824e32201e70d",
                "query": "SELECT COUNT(ID), City FROM city_channel WHERE Owned_Since < 1000 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "18d0be9c3584af8297e6cf905b7ce029ab88f78c",
                "query": "SELECT T1.City, T2.City FROM city_channel AS T1 JOIN city_channel AS T2 ON T1.ID = T2.ID WHERE T1.Owned_Since > T2.Owned_Since ORDER BY T1.City DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2613e955cbb72d0353398ae1b44cdc62498f2cd3",
                "query": "SELECT City, Station_name FROM city_channel",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "2b218190bab6e5ed53359e2690cdb5ed997c0407",
                "query": "SELECT City FROM city_channel WHERE City > 'Dublin'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "84a7b51c6c26862121bbb2e9dda777bacccabf6e",
                "query": "SELECT COUNT(ID) FROM city_channel AS T1 WHERE Owned_Since BETWEEN 1950 AND 1960",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "69800e01d3eba74353a60858159f2a8a41beda58",
                "query": "SELECT COUNT(City) FROM city_channel WHERE Owned_Since < 1000 LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d697db3371f5691d9f1024a25db882ab39884ed9",
                "query": "SELECT T1.Station_name, MAX(T4.ERP_kW) FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN radio AS T3 ON T2.Radio_ID = T3.Radio_ID JOIN city_channel_tv_show AS T4 ON T1.ID = T4.City_channel_ID GROUP BY T1.Station_name ORDER BY T1.Station_name ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d8c878e1e0b0019e161a918dd9a40f9272a2000b",
                "query": "SELECT COUNT(T1.ID), T3.Radio_MHz FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN radio AS T3 ON T2.Radio_ID = T3.Radio_ID WHERE T3.ERP_kW > 10 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "886c78be9260ba0bc67b9ab19728227c683607fc",
                "query": "SELECT T1.City, COUNT(T2.Radio_ID) FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T1.Owned_Since BETWEEN 1900 AND 2000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "b399eeaad41b5f46bf7c63eb0b337b0bb8c71b7b",
                "query": "SELECT T1.City, T2.Radio_MHz FROM city_channel AS T1 JOIN city_channel_radio AS T3 ON T1.ID = T3.City_channel_ID JOIN radio AS T2 ON T3.Radio_ID = T2.Radio_ID WHERE T2.Radio_MHz BETWEEN 1 AND 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "aee1bcb7cd4ab3c0afd5a3a6f6331c25a556722c",
                "query": "SELECT T1.City, COUNT(T2.Radio_ID) FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T2.Is_online <= 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "2d8fb75d93bffec2c02d14d5d23723c39079c8bd",
                "query": "SELECT COUNT(DISTINCT City_channel_ID), Is_free FROM city_channel_tv_show WHERE Is_online > 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "df5b6e7ee6934dd854c143af102878fbd096a02a",
                "query": "SELECT COUNT(ID) FROM city_channel WHERE Owned_Since >= 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "3daf64bdf5756f68216999582abf48bcf08075fe",
                "query": "SELECT COUNT(City), City FROM city_channel WHERE ID > 10 GROUP BY City",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "28e0f65054a31d1535e0a4455662bef149afbf94",
                "query": "SELECT Owned_Since FROM city_channel WHERE City = 'Dublin' OR Owned_Since BETWEEN 2000 AND 2010 OR Station_name = 'Test Station' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "88825949892c193913f6c6e09c239efb0971009c",
                "query": "SELECT Station_name, COUNT(Radio_ID) FROM city_channel AS T1, city_channel_radio AS T2 WHERE T1.ID = T2.City_channel_ID GROUP BY Station_name ORDER BY NULL",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# GROUP BY #COLUMN# ORDER BY NULL"
            },
            {
                "hash": "d43acf5e78e9edb6e912dcff584c657f5d934d7a",
                "query": "SELECT COUNT(DISTINCT T1.Radio_ID), T2.Transmitter FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID = T2.Radio_ID WHERE T1.City_channel_ID NOT IN (SELECT City_channel_ID FROM city_channel_tv_show WHERE Is_free = 'Yes') OR T2.Transmitter = 'Dublin' ORDER BY T1.Radio_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "474810de405c5ddb41f6e9e110672d086e5c1b49",
                "query": "SELECT COUNT(T1.Radio_ID), COUNT(DISTINCT T1.Transmitter) FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.Radio_ID = T2.Radio_ID",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "0d1675cfb19cc7f252354db5d188fada06155b63",
                "query": "SELECT COUNT(ID) FROM city_channel AS T1 WHERE T1.Station_name = 'Station_name'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "b07cef645de31ed2aa03fd3103220212a0ef91c4",
                "query": "SELECT City, Station_name FROM city_channel WHERE Owned_Since > 2000 OR ID IN (SELECT City_channel_ID FROM city_channel_tv_show WHERE Is_free = 1) ORDER BY City ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            }
        ],
        "game_1": [
            {
                "hash": "ec5b73a605cb0f5e2e93f14d363f09d87d1aff40",
                "query": "SELECT T1.Fname FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID WHERE T1.Age BETWEEN 18 AND 20 OR T3.GType = 'Strategy' ORDER BY T1.Fname ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "30565a046831d4c4e6d4cf5b280831315ecd2c8f",
                "query": "SELECT AVG(Age) FROM Student WHERE Sex = 'M'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "d32435d5c0a612d5e315e1f4cc880f15457ad188",
                "query": "SELECT SUM(T1.Hours_Played) FROM Plays_Games AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Major != 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "718c78b9d2af9f05af88dd03b6798aba9df0f7ab",
                "query": "SELECT COUNT(DISTINCT T1.Sex), T2.SportName FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20 AND EXISTS (SELECT 1 FROM Student AS T3 JOIN Plays_Games AS T4 ON T3.StuID = T4.StuID WHERE T3.Age > 20)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "f75773b9f9ee1de9f1be7ea81c11aa90fed79258",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID GROUP BY T1.LName HAVING MAX(T2.Hours_Played) > 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "eda789d8119d059395b90e042bf5fcbc03c34701",
                "query": "SELECT T1.LName, T2.GName FROM Student AS T1 JOIN Plays_Games AS T3 ON T1.StuID = T3.StuID JOIN Video_Games AS T2 ON T3.GameID = T2.GameID WHERE T1.Age < 20",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "cc16a8d21f4763bdff9f08b0c041c6bf75d5f0e4",
                "query": "SELECT T1.LName, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Age <= T2.Age",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "335c93260b36105ba98011a33591def33aa47742",
                "query": "SELECT MAX(T1.Age), T1.HoursPerWeek FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID WHERE T2.SportName = 'Football' AND T1.Sex = 'M' AND T2.HoursPerWeek BETWEEN 1 AND 10",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "9527c5b98e32b1d668b36455aa2e8262b78ac1c5",
                "query": "SELECT COUNT(DISTINCT T1.LName), SUM(T3.Hours_Played) FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID GROUP BY T1.LName HAVING SUM(T3.Hours_Played) BETWEEN 50 AND 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT AVG(Age) FROM Student WHERE Age < 20",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3ebf625887ce9366429ba53c4a7de6c756c34eb8",
                "query": "SELECT T1.LName, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.Advisor WHERE T1.Age BETWEEN 18 AND 25 ORDER BY T1.LName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "653af25760c422dc0011514fadb72c2595649e6c",
                "query": "SELECT COUNT(DISTINCT T1.StuID) FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID WHERE T2.Hours_Played <= 20 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a6f420ca68218f7d931f85a11c3fa3e5ecf4c504",
                "query": "SELECT T1.LName, T2.SportName, MIN(T1.Age) FROM Student AS T1 JOIN SportsInfo AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 18 GROUP BY T1.LName, T2.SportName",
                "template": "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#, #COLUMN#"
            },
            {
                "hash": "e179702b647774f5bee8498a60293e59df98ce2f",
                "query": "SELECT AVG(Age), StuID FROM Student WHERE Major < 5 GROUP BY StuID",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "680acfef825a2e50b9393ba5cf9246b42decde11",
                "query": "SELECT COUNT(DISTINCT T1.SportName), AVG(T1.HoursPerWeek) FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age BETWEEN 18 AND 25",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "24e0e9dc0ee7c49ceb4fe9da5f0a9a7c7bda6ec0",
                "query": "SELECT T1.LName, T1.Fname FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID WHERE EXISTS (SELECT 1 FROM SportsInfo AS T4 WHERE T4.StuID = T1.StuID LIMIT 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            },
            {
                "hash": "25dde6ca76d5a39246945cb89901a5236565d79b",
                "query": "SELECT T1.Sex, COUNT(DISTINCT T1.Major) FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID WHERE T1.StuID IN (SELECT StuID FROM SportsInfo) GROUP BY T1.Sex HAVING SUM(T2.Hours_Played) > 50 ORDER BY COUNT(DISTINCT T1.Major) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "355dd24dc5d278f8e9c674cffaa370ef636ebddb",
                "query": "SELECT T1.LName, SUM(T2.Age) FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.LName HAVING SUM(T2.Age) > 40 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "849e101b0d49a862b5b54ad90240b1f99b9ee3d7",
                "query": "SELECT S.LName, S.Fname, SUM(PG.Hours_Played) FROM Student AS S JOIN Plays_Games AS PG ON S.StuID = PG.StuID WHERE PG.Hours_Played = 10 GROUP BY S.LName, S.Fname ORDER BY S.Fname ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT LName, Fname FROM Student WHERE Age > 18",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "7075e641123287d4f8b5232b7703dc6bb0efcc45",
                "query": "SELECT T1.LName, T2.GName, COUNT(T1.StuID) FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 18 AND NOT EXISTS (SELECT 1 FROM Video_Games WHERE Video_Games.GameID = T2.GameID AND Video_Games.GType = 'Sports') ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e5211b67a2ecd2912c77f0d6c8648c13d3cf35b7",
                "query": "SELECT LName FROM Student WHERE LName BETWEEN 'a' AND 'z' OR Sex = 'male' OR Age > 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "c4035c86c2cf0035b06593841b9f86f4a6ad4274",
                "query": "SELECT T1.LName, T2.GName FROM Student AS T1 JOIN Plays_Games AS T2 ON T1.StuID = T2.StuID JOIN Video_Games AS T3 ON T2.GameID = T3.GameID WHERE T3.GType = 'sports' ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d6f7d16b8369bc7d0b81e3aee8eeb11f6ba5ad88",
                "query": "SELECT AVG(T1.Hours_Played), T2.GName FROM Plays_Games AS T1 JOIN Video_Games AS T2 ON T1.GameID = T2.GameID WHERE T1.Hours_Played <= 100",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "3bc244ce547b5e139b100937e86655c5eafbf69b",
                "query": "SELECT T1.GName FROM Video_Games AS T1 JOIN Plays_Games AS T2 ON T1.GameID = T2.GameID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T3.Age BETWEEN 20 AND 25 AND T1.GameID IN (SELECT T4.GameID FROM Video_Games AS T4 JOIN Plays_Games AS T5 ON T4.GameID = T5.GameID WHERE T5.Hours_Played > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#)"
            }
        ],
        "product_catalog": [
            {
                "hash": "69dd82d70a99fe4d082e93fe26b864a564223ab3",
                "query": "SELECT COUNT(catalog_level_number), SUM(price_in_dollars), MAX(price_in_euros) FROM Catalog_Contents WHERE price_in_pounds >= 100 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5aec151644e27dcb986c72fabd98c7dd74613c08",
                "query": "SELECT T1.catalog_level_name FROM Catalog_Structure AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_level_number = T2.catalog_level_number WHERE T2.catalog_level_number NOT IN (SELECT catalog_level_number FROM Catalog_Structure WHERE catalog_id = 1) ORDER BY T2.price_in_dollars DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fde605d029f0abeb83c8299f1bbdd6eeeeeb7d66",
                "query": "SELECT T2.catalog_entry_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T1.price_in_dollars > 1000 OR T1.price_in_dollars < 500 OR T1.catalog_level_number NOT IN (SELECT catalog_level_number FROM Catalog_Structure WHERE catalog_id = 1) ORDER BY T1.price_in_dollars ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0e2724f4590f9f00efde17b7e2dac3d936afd484",
                "query": "SELECT COUNT(DISTINCT attribute_name) FROM Attribute_Definitions WHERE attribute_id >= 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "a628edb4ee7a79365dd7a7960d2ef5e091516f25",
                "query": "SELECT MAX(T1.capacity) FROM Catalog_Contents AS T1 WHERE T1.length >= '100'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "f91ae380763dbc352a16885eab97843591431660",
                "query": "SELECT T1.catalog_level_name FROM Catalog_Structure AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_level_number = T2.catalog_level_number WHERE T2.price_in_dollars BETWEEN 10 AND 20 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5630600f77e68057b27eba77858c115516c1c75c",
                "query": "SELECT COUNT(T1.catalog_level_number), SUM(T2.price_in_dollars) FROM Catalog_Structure AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_level_number = T2.catalog_level_number WHERE T1.catalog_level_number = 1",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "3695501e317a175f333e9d0f35347ee828e5f4e4",
                "query": "SELECT COUNT(DISTINCT attribute_name), SUM(attribute_id) FROM Attribute_Definitions WHERE attribute_data_type <= 'text'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "0573d9dcfad7160f4ebc9469e435a469b2609438",
                "query": "SELECT T1.catalog_level_name, SUM(T2.price_in_dollars) FROM Catalog_Structure AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_level_number = T2.catalog_level_number GROUP BY T1.catalog_level_name HAVING SUM(T2.price_in_dollars) > 500",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "f1526ff4c284dc6e765a96923d725a04fa496fe4",
                "query": "SELECT T1.catalog_entry_name, T2.attribute_value FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id JOIN Attribute_Definitions AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.product_stock_number = 'ABC123' AND T3.attribute_name = 'Color'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "07fa4a77bb2f4309ebb25bc3761a3127a0fb536f",
                "query": "SELECT COUNT(DISTINCT catalog_id) FROM Catalogs ORDER BY catalog_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f6e0d1a6a796500fe5ea74e7895119eee9f73f6a",
                "query": "SELECT T1.catalog_name, SUM(T2.price_in_dollars) FROM Catalogs AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_id = T2.catalog_level_number WHERE T1.date_of_publication <= '2020-01-01' GROUP BY T1.catalog_name ORDER BY SUM(T2.price_in_dollars) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "3f28c6e39e9bf5828ecdd34c01d478c01472f900",
                "query": "SELECT T1.catalog_level_name, T2.catalog_entry_name FROM Catalog_Structure AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_level_number = T2.catalog_level_number JOIN Catalog_Contents_Additional_Attributes AS T3 ON T2.catalog_entry_id = T3.catalog_entry_id WHERE T1.catalog_level_number <= 5 AND T3.attribute_value = 'text' ORDER BY T1.catalog_level_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ff4742af702976a489cdab9a56c5576d46c8b148",
                "query": "SELECT catalog_name FROM Catalogs WHERE catalog_id IN (SELECT catalog_id FROM Catalog_Structure WHERE catalog_level_name = 'Hardware')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "d6de4c27352836626769887711c440b33468b5f2",
                "query": "SELECT T1.catalog_name FROM Catalogs AS T1 JOIN Catalog_Structure AS T2 ON T1.catalog_id = T2.catalog_id WHERE NOT EXISTS (SELECT 1 FROM Catalog_Contents AS T3 WHERE T3.catalog_level_number = T2.catalog_level_number) ORDER BY T1.catalog_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f0878b1a820842a5460cebd6a5566fa50e7b1a32",
                "query": "SELECT T2.attribute_name, COUNT(DISTINCT T1.attribute_value) FROM Catalog_Contents_Additional_Attributes AS T1 JOIN Attribute_Definitions AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.catalog_entry_id BETWEEN 1 AND 100 AND T1.catalog_level_number > 10 GROUP BY T2.attribute_name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "9f5e68cd83e48be335a0765aec9ff69f5ee34a8a",
                "query": "SELECT T1.attribute_name FROM Attribute_Definitions AS T1 WHERE T1.attribute_id = 1 OR T1.attribute_id IN ( SELECT T2.attribute_id FROM Catalog_Contents_Additional_Attributes AS T2 WHERE T2.attribute_value = 'test' ) GROUP BY T1.attribute_name HAVING AVG(T1.attribute_id) > 1 ORDER BY T1.attribute_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cb8268c4af16b83ad70be2548efaadfc08deeff9",
                "query": "SELECT COUNT(*) FROM Catalog_Contents WHERE price_in_dollars BETWEEN 10 AND 100 AND EXISTS (SELECT 1 FROM Catalog_Contents_Additional_Attributes WHERE attribute_id = 1 AND attribute_value = 'abc')",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f952d6b384e1fe6f541bb0dafd56b818bd40d0c4",
                "query": "SELECT T1.catalog_name FROM Catalogs AS T1 JOIN Catalog_Structure AS T2 ON T1.catalog_id = T2.catalog_id WHERE T2.catalog_level_number >= 3 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a12cc36c13fb2b8558116ac1ea6706c1742f685e",
                "query": "SELECT COUNT(DISTINCT T2.attribute_name), T1.catalog_entry_name, T2.attribute_name FROM Catalog_Contents AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_entry_id = T2.catalog_entry_id WHERE T2.attribute_value BETWEEN 'a' AND 'z' AND T1.catalog_level_number = 1 AND EXISTS (SELECT 1 FROM Attribute_Definitions AS T3 WHERE T3.attribute_name = T2.attribute_name) ORDER BY T2.attribute_name DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3d021b6bb9a342d97939b3afa9a87b87a3b50e55",
                "query": "SELECT T1.catalog_level_name FROM Catalog_Structure AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.catalog_level_number = T2.catalog_level_number WHERE T1.catalog_id = 1 AND T2.attribute_value = 'value' AND T2.attribute_id IN (SELECT attribute_id FROM Attribute_Definitions WHERE attribute_name = 'name') ORDER BY T1.catalog_level_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f8b1c4b94f519810b0d86926771b8ae2811663a3",
                "query": "SELECT T1.catalog_level_name, T2.attribute_name FROM Catalog_Structure AS T1 JOIN Attribute_Definitions AS T2 ON T1.catalog_level_number = T2.attribute_id WHERE T2.attribute_data_type = 'text' OR T1.catalog_id BETWEEN 1 AND 100 OR T1.catalog_id NOT IN (SELECT catalog_id FROM Catalogs WHERE catalog_publisher = 'ABC') ORDER BY T1.catalog_level_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8ba1e9ebdb0b2963bf2f1bc92b2932d61ed038f2",
                "query": "SELECT COUNT(DISTINCT T1.attribute_name), T2.price_in_dollars FROM Attribute_Definitions AS T1 JOIN Catalog_Contents_Additional_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.price_in_dollars BETWEEN 100 AND 200 OR T2.price_in_dollars > 500 OR T2.catalog_entry_id IN (SELECT catalog_entry_id FROM Catalog_Contents WHERE price_in_dollars < 200) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "f58e1dd2b51cd3dc8f47402ae6d3054a7fe7186a",
                "query": "SELECT COUNT(catalog_entry_id) FROM Catalog_Contents GROUP BY price_in_euros HAVING SUM(price_in_euros) > 500 ORDER BY price_in_euros DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "hospital_1": [
            {
                "hash": "399e2f5c5b9d517182a9a33dde34a0674eb05b04",
                "query": "SELECT COUNT(DISTINCT T1.Code) FROM Procedures AS T1 JOIN Trained_In AS T2 ON T1.Code = T2.Treatment JOIN Physician AS T3 ON T2.Physician = T3.EmployeeID JOIN Undergoes AS T4 ON T3.EmployeeID = T4.Physician WHERE T4.DateUndergoes > '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "c7b022778f3515d44554f03324f166276a065135",
                "query": "SELECT T1.Name FROM Physician AS T1 JOIN Physician AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Position = 'Head' OR T2.Position = 'Head' ORDER BY T1.EmployeeID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c0cc350d933c090aa16c949341159fad3a89241a",
                "query": "SELECT T1.Name FROM Physician AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.Physician WHERE T1.EmployeeID != 1001",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "0be522e0a5617a14d96ff61c4f5f538d6ad2f462",
                "query": "SELECT * FROM Physician WHERE EmployeeID = 101 OR EmployeeID NOT IN (SELECT Physician FROM Trained_In WHERE Treatment = 201) ORDER BY EmployeeID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b7b4664fea8c03650336b036026c0b7b256881c4",
                "query": "SELECT COUNT(DISTINCT Physician.EmployeeID), COUNT(Physician.EmployeeID) FROM Physician WHERE Physician.Position != 'SR'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "eec0f51d429910c323da808ad268a468eded77ee",
                "query": "SELECT Physician FROM ( SELECT COUNT(DISTINCT Physician) as Physician FROM Undergoes GROUP BY Physician ) AS T1 ORDER BY Physician DESC",
                "template": "SELECT #COLUMN# FROM ( SELECT COUNT(DISTINCT #COLUMN#) as #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ) AS T1 ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4b1db15a0530a701507999383a3db4bea34fe3f1",
                "query": "SELECT Name FROM Physician WHERE Position > 'Doctor'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "c3ee8f79e0f0dc6601c7b8254c62558f2cf45133",
                "query": "SELECT COUNT(T1.Patient), T2.Name FROM Patient AS T1 JOIN Undergoes AS T2 ON T1.SSN = T2.Patient WHERE T2.DateUndergoes >= '2020-01-01'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "c3fdb4931d40144347ef86975503c42abb6baf66",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.AppointmentID) FROM Physician AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.Physician WHERE T1.EmployeeID IN (SELECT Physician FROM Undergoes) ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "b27f7c6772b1b752de118639527bf7db94e67802",
                "query": "SELECT T1.Name FROM Physician AS T1 JOIN Affiliated_With AS T2 ON T1.EmployeeID = T2.Physician WHERE T2.Department = 5 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7452d39a00a2620cf871eaed47ede45c8229123a",
                "query": "SELECT T1.Name FROM Physician AS T1 WHERE T1.EmployeeID BETWEEN 100 AND 200 AND T1.SSN NOT IN (SELECT T2.Physician FROM Trained_In AS T2)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "393842cbee470bf2e63c3b1216381e28e374b65e",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM Physician AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.Physician",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "bbd176881773ab0f8703a71c26b372f0f096a6bb",
                "query": "SELECT T1.Name FROM Physician AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.Physician WHERE T1.Position < 'Intern' ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b4c3af155ab11338d6d352c5d1ff8925032f3f3b",
                "query": "SELECT T1.Name FROM Physician AS T1 WHERE T1.Position = 'Doctor' OR T1.EmployeeID IN (SELECT T2.Physician FROM Trained_In AS T2 WHERE T2.CertificationDate IS NOT NULL)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# IS NOT NULL)"
            },
            {
                "hash": "97b62dc582a7dd4da8831f82f5cf85aa7c5836dd",
                "query": "SELECT T1.Name, T2.Name FROM Physician AS T1 JOIN Physician AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.EmployeeID IN (SELECT Physician FROM Trained_In WHERE CertificationExpires > '2022-01-01') ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8bf6c8d02a048f489c5a7d5189605f31ca2987bf",
                "query": "SELECT T1.Patient, SUM(T2.Cost) FROM Undergoes AS T1 JOIN Procedures AS T2 ON T1.Procedures = T2.Code WHERE T1.AssistingNurse < 1000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "98d46a7583f58ed557413101e19bf1dee3796fbf",
                "query": "SELECT p.Name FROM Physician p WHERE p.EmployeeID > 1000 OR p.Position = 'Surgeon' OR p.Position IN ( SELECT T2.Position FROM Physician AS T1 JOIN Patient AS T2 ON T1.EmployeeID = T2.PCP )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "d11d660ef5c340b7c4eee4c5aaba1f8d6b3b72c8",
                "query": "SELECT COUNT(T1.Patient) FROM Appointment AS T1 JOIN Undergoes AS T2 ON T1.AppointmentID = T2.Stay WHERE T2.DateUndergoes < '2020-01-01'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE#"
            },
            {
                "hash": "e223a0b25d3c4cc1ac3a94ebb80579b548fc4c8a",
                "query": "SELECT COUNT(DISTINCT Physician) FROM Undergoes GROUP BY Procedures HAVING COUNT(Physician) > 1 ORDER BY Procedures ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d2d1d0da8598156651b230ebef9a38a69fe464dd",
                "query": "SELECT T1.Name, AVG(T2.Cost) FROM Physician AS T1 JOIN Undergoes AS T2 ON T1.EmployeeID = T2.Physician JOIN Trained_In AS T3 ON T2.Procedures = T3.Treatment WHERE T2.DateUndergoes BETWEEN '2000-01-01' AND '2020-01-01' OR T3.CertificationExpires > '2025-01-01' GROUP BY T1.Name HAVING AVG(T2.Cost) > 1000 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > '#VALUE#' GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1dc8d585cf5f6ae8c15dc75f9d38e6e9b553a175",
                "query": "SELECT T1.Name FROM Physician AS T1 JOIN Affiliated_With AS T2 ON T1.EmployeeID = T2.Physician WHERE T2.PrimaryAffiliation = 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cd78abcae6a918c9bd1d5893add14903484284e0",
                "query": "SELECT T1.Name, T1.Position FROM Physician AS T1 JOIN Trained_In AS T2 ON T1.EmployeeID = T2.Physician JOIN Procedures AS T3 ON T2.Treatment = T3.Code WHERE T1.Position != 'Surgeon' GROUP BY T1.Position HAVING AVG(T3.Cost) > 1000 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1bbda9749385ae478fa0635703e7a8847d87c8d7",
                "query": "SELECT S.Name FROM ( SELECT T1.Name, T1.Room, T2.RoomNumber FROM Patient AS T1 JOIN Stay AS T2 ON T1.SSN = T2.Patient ) AS S WHERE S.RoomNumber >= 100",
                "template": "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) AS #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "9110e71e23cb4560386cc837febd080641e5701a",
                "query": "SELECT COUNT(DISTINCT T2.AppointmentID), COUNT(DISTINCT T3.Patient), T1.Name FROM Physician AS T1 JOIN Appointment AS T2 ON T1.EmployeeID = T2.Physician JOIN Undergoes AS T3 ON T1.EmployeeID = T3.Physician WHERE T1.Position = 'Surgeon' OR T2.Start BETWEEN '2020-01-01' AND '2020-12-31' OR T3.DateUndergoes > '2020-12-31' GROUP BY T1.Name HAVING MAX(T2.Start) = '2020-12-31' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > '#VALUE#' GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "518625aac633709777d8d1b7d1b0c4a212b06076",
                "query": "SELECT COUNT(DISTINCT T1.AssistingNurse), T1.Physician FROM Undergoes AS T1 JOIN Undergoes AS T2 ON T1.Physician = T2.Physician WHERE T1.DateUndergoes BETWEEN T2.DateUndergoes AND T2.DateUndergoes AND T1.DateUndergoes BETWEEN T2.DateUndergoes AND T2.DateUndergoes",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# AND #COLUMN# AND #COLUMN# BETWEEN #COLUMN# AND #COLUMN#"
            }
        ],
        "candidate_poll": [
            {
                "hash": "9ba11178e95aa1eee81de2c7eb5a55d682b36262",
                "query": "SELECT COUNT(DISTINCT T1.Poll_Source), COUNT(T2.Name) FROM candidate AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Height > 170",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "90e2f84eadeb2b05218b8cff582f923eefbae6ef",
                "query": "SELECT T1.Name, T2.Date FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Sex = 'Male' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "716211d729402efe2468d4f9e21e0c491f11c316",
                "query": "SELECT T1.Name, T2.Date, T2.Poll_Source FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Support_rate BETWEEN 20 AND 50 OR T2.People_ID NOT IN (SELECT People_ID FROM candidate WHERE Date < '2020-01-01') LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "452f955a6fe4113e56c88c107642daecedc045a6",
                "query": "SELECT COUNT(DISTINCT T1.Name), T1.People_ID FROM people AS T1 WHERE T1.Height > 180 OR T1.Weight < 70 OR NOT EXISTS (SELECT 1 FROM candidate AS T2 WHERE T2.People_ID = T1.People_ID AND T2.Support_rate > 50) LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9cd735ad6a82b9a1e4227a7b525e501eb5f09a9c",
                "query": "SELECT T1.Name, T2.Support_rate FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T1.People_ID NOT IN (SELECT People_ID FROM candidate WHERE Date = '2020-01-01') ORDER BY T2.Support_rate DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9d9d487f0c50e8e013dcda28cdb7ea796f7459b1",
                "query": "SELECT * FROM candidate WHERE Support_rate != 10",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "f140c68e36859974ec9504c1ac63205ee3d178a4",
                "query": "SELECT T1.Name FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Support_rate <= 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "52745390ba132dcfe1b558e109b76911e80765b4",
                "query": "SELECT MAX(Support_rate) FROM candidate WHERE Date > '2020-01-01' ORDER BY Support_rate DESC LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6242b6fcf5ff10053869e4e1783c1ba833ff75a3",
                "query": "SELECT T1.Name, T2.Height, T2.Weight FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height < T1.Weight ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c9127dd0f7683e11e07844afd197c2ede764c9a1",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Sex), COUNT(DISTINCT Date_of_Birth) FROM people WHERE Sex = 'Male'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "d6122d752ac7c685c0833055c8c12d369ac321c5",
                "query": "SELECT Name FROM people WHERE Sex = 'Male' AND Height >= 180",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "b27179df4d417b12ce28a18067056761c5b7ad52",
                "query": "SELECT T1.Name, T1.Sex, T2.Poll_Source FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Name = 'John' AND T2.Date = '2020-01-01' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2d890906ec547625366e4553ee49e574b7ea4740",
                "query": "SELECT COUNT(DISTINCT T2.Name), COUNT(DISTINCT T2.Sex), SUM(T1.Support_rate) FROM candidate AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Poll_Source != 'TV'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "9b61f24fdf97f7c4372a64d18efdc4f7ef57ae6f",
                "query": "SELECT SUM(Support_rate) FROM candidate WHERE Poll_Source < 'National' ORDER BY SUM(Support_rate) DESC",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "01d759eabfc0990fca1c5a6af08a8b4450dbfe02",
                "query": "SELECT Name FROM people WHERE Sex = 'male' OR Height BETWEEN 170 AND 190 AND Weight = 70 ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d69158001c5912a6f1d83e0c6c47a7678a0ffeb1",
                "query": "SELECT AVG(Support_rate) FROM candidate LIMIT 1",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "4a97d9643630a1062d7af846f4fb1c3d09742a69",
                "query": "SELECT T1.Name, SUM(T2.Support_rate) FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Date > '2020-01-01' GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "76fd0b0e6d9636488fbd2bd2477d2920e55eede8",
                "query": "SELECT T1.Name, AVG(T2.Support_rate) FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Support_rate BETWEEN 10 AND 20 AND EXISTS (SELECT 1 FROM people AS T3 JOIN candidate AS T4 ON T3.People_ID = T4.People_ID WHERE T4.Consider_rate > 0) GROUP BY T1.Name HAVING AVG(T2.Support_rate) > 0.5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "29b80a14c09bd912aa1092d15962adda6edda1de",
                "query": "SELECT Name FROM people WHERE Sex = 'Male' AND Height BETWEEN 170 AND 180 OR Name = 'John' GROUP BY Name HAVING COUNT(Name) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "4cc7609fad0c2f72a81aef29f61ef1f97010e114",
                "query": "SELECT T1.Name, COUNT(T1.People_ID) FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Support_rate = 50 AND T2.Consider_rate = 30 GROUP BY T1.Name HAVING COUNT(T1.People_ID) > 2 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bbef67c2aeeac766b8a54cebb293d4a40c3b98f7",
                "query": "SELECT COUNT(DISTINCT Name), AVG(Support_rate) FROM candidate JOIN people ON candidate.People_ID = people.People_ID WHERE Support_rate >= 50 GROUP BY Name ORDER BY AVG(Support_rate) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "2652b52d5ed20c3fb916a0197cd4a335c68e48da",
                "query": "SELECT COUNT(Candidate_ID) FROM candidate WHERE People_ID IN (SELECT People_ID FROM people WHERE Sex = 'male') AND Support_rate > 50 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1dc259e5125922c6f01093789c67ee8bb00610df",
                "query": "SELECT COUNT(DISTINCT Candidate_ID), COUNT(DISTINCT People_ID), COUNT(DISTINCT Poll_Source) FROM candidate WHERE Support_rate >= 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "bb75327489aa11981b244616460315ca626e9e3f",
                "query": "SELECT T1.People_ID FROM candidate AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN candidate AS T3 ON T2.People_ID = T3.People_ID JOIN people AS T4 ON T3.People_ID = T4.People_ID WHERE T1.Support_rate > 50 AND T2.Weight BETWEEN 60 AND 80 AND T3.Candidate_ID NOT IN (SELECT Candidate_ID FROM candidate WHERE Poll_Source = 'Survey')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "3e27f11cc4c262f0d37080d28bbdbdbae17b6a16",
                "query": "SELECT T1.Name, SUM(T2.Support_rate) FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Poll_Source IN (SELECT Poll_Source FROM candidate GROUP BY Poll_Source HAVING COUNT(Poll_Source) > 1) GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "1070f7c094b8175ec02e89f9d6e66d59c52d39b5",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), T1.Support_rate, T1.Consider_rate FROM Candidate AS T1 WHERE T1.People_ID IN (SELECT People_ID FROM Candidate WHERE Support_rate = 0.5)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f4751ca0f292c8d7919eda9f864e0716624e3a0b",
                "query": "SELECT T1.Name, SUM(T2.Consider_rate) FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "343e065ea7d3fc3c9b562fe567383b0f4ea6368b",
                "query": "SELECT T1.Name, T2.Support_rate FROM people AS T1 JOIN candidate AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Date != '2020-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            }
        ],
        "museum_visit": [
            {
                "hash": "3bbe7f2efa103cde85079c7bc3671a2dafa6defe",
                "query": "SELECT COUNT(DISTINCT T2.visitor_ID) , COUNT(DISTINCT T1.Museum_ID) , T1.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket >= 1 ORDER BY T1.Num_of_Staff DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "71708accd030e74a1aeddaeeb5ea82a234b9b340",
                "query": "SELECT T1.Name, T2.Name FROM museum AS T1 JOIN museum AS T2 ON T1.Museum_ID < T2.Museum_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "75739ab4cb09151332d30adb4d871808ff2ff911",
                "query": "SELECT T1.Name, SUM(T3.Num_of_Ticket) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T1.Open_Year BETWEEN '2000' AND '2010' OR T3.Age > (SELECT AVG(Age) FROM visitor)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "b077dd3e0ae5647707983cd344eb08dbd82467de",
                "query": "SELECT COUNT(Museum_ID), SUM(Num_of_Staff) FROM museum LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "1485a062a001c9e2d4323ddc0f1f22f182d9957f",
                "query": "SELECT T1.Name, MAX(T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Museum_ID = 1 AND T1.Open_Year BETWEEN '1950' AND '1970' AND T1.Name = 'Art Gallery' GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "34ce4aa2a001bfb1b309a91fb4af9fce64ea9399",
                "query": "SELECT MIN(T1.Num_of_Staff) FROM museum AS T1 WHERE T1.Museum_ID IN ( SELECT T2.Museum_ID FROM visit AS T2 GROUP BY T2.Museum_ID HAVING MIN(T2.Num_of_Ticket) = 10 )",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# )"
            },
            {
                "hash": "c06df78743435eda2a92f17661c5d5dadc46a90e",
                "query": "SELECT T1.Name, SUM(T2.Num_of_Ticket) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Num_of_Staff < 50 GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "5005edb15129d56793572755e8f2f62211e142f0",
                "query": "SELECT T1.Name, MIN(T3.Total_spent) FROM museum AS T1 JOIN visit AS T3 ON T1.Museum_ID = T3.Museum_ID GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "7dd696325f378a1b1b47f9367a27fd67c123d91a",
                "query": "SELECT T1.Name, COUNT(T2.Museum_ID) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Open_Year BETWEEN '1990' AND '2000' AND T2.Num_of_Ticket > 5 GROUP BY T1.Name HAVING COUNT(T2.Museum_ID) > 100 ORDER BY COUNT(T2.Museum_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "03e42cd74c077ed0a8e833f7085a4006d177a30f",
                "query": "SELECT T1.Name, T2.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T1.Num_of_Staff > 50 AND T3.Age > 18",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "404b90be82e51e71d66f4115b4d0ade56f2613bb",
                "query": "SELECT T1.Name, SUM(T2.Num_of_Ticket) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "14cf3aaedace050c746456e513c3c42278316d35",
                "query": "SELECT T1.Name, MIN(T1.Num_of_Staff) FROM museum AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE NOT EXISTS (SELECT 1 FROM visit WHERE visit.Museum_ID = T1.Museum_ID) GROUP BY T1.Name ORDER BY T1.Num_of_Staff DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f3b5c9756da256f24cdfccad71b3cea41cf72068",
                "query": "SELECT T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Museum_ID IN (SELECT T2.Museum_ID FROM visit AS T2 GROUP BY T2.Museum_ID HAVING SUM(T2.Total_spent) > 10000)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "a84370ab17ab32e7699091e2959a8afe78a899c8",
                "query": "SELECT COUNT(Museum_ID), SUM(Num_of_Staff), COUNT(Open_Year) FROM museum",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "d4e72c54758c1867a5c0b99d3fb46baaa8137197",
                "query": "SELECT SUM(Num_of_Staff) FROM museum WHERE Open_Year = '1900'",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "96595ba890f3a5b5fd2f1ecfe60466bf45563df8",
                "query": "SELECT T1.Museum_ID, T2.Museum_ID, COUNT(T1.Museum_ID), COUNT(T2.Museum_ID) FROM visit AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Num_of_Ticket BETWEEN T2.Num_of_Ticket - 5 AND T2.Num_of_Ticket + 5 ORDER BY T1.Museum_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# - #VALUE# AND #COLUMN# + #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "40781f71af0befa275d018ad1db91f7fca15db47",
                "query": "SELECT T1.Name, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T2.Num_of_Ticket > 10 ORDER BY T2.Total_spent ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3c36cef3d64ce2676b2fcea017d67ccee89ad4b6",
                "query": "SELECT COUNT(DISTINCT T3.Museum_ID), T2.Num_of_Staff FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T1.Num_of_Staff != 5 GROUP BY T2.Num_of_Staff",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "80e9bc8b6369047bba3e106eb9f7bf931fdc6d36",
                "query": "SELECT COUNT(DISTINCT T2(visitor_ID)), COUNT(T2(visitor_ID)), COUNT(T2(visitor_ID)) FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Open_Year = '1990' AND T2.Num_of_Ticket > 2 AND T2.Total_spent BETWEEN 100 AND 200",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a9835fda6ade1d26949c5b2147b6570e333138ae",
                "query": "SELECT m.Name, MAX(vi.Num_of_Ticket) FROM museum m JOIN visit vi ON m.Museum_ID = vi.Museum_ID GROUP BY m.Name HAVING vi.Num_of_Ticket BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e3cda364903cd28591d4856c3608d2c85249fc43",
                "query": "SELECT Museum_ID FROM museum WHERE EXISTS (SELECT 1 FROM visit WHERE museum.Museum_ID = visit.Museum_ID AND Total_spent > 100 LIMIT 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# LIMIT 1)"
            },
            {
                "hash": "a1515a24567e2d7c4a919d418f62720e0c0462bd",
                "query": "SELECT T1.Name, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID JOIN visitor AS T3 ON T2.visitor_ID = T3.ID WHERE T3.Age BETWEEN 20 AND 30 OR T2.Num_of_Ticket = 5 OR EXISTS (SELECT 1 FROM visitor WHERE Level_of_membership > 2) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "6cece752795016b3c06c01156469caf821dc003f",
                "query": "SELECT T1.Name, T2.Total_spent FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID = T2.Museum_ID WHERE T1.Open_Year < 2000 ORDER BY T2.Total_spent ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5ca114e6ff30a7f501abd0f8e4bbc664882dfcd9",
                "query": "SELECT T1.Name FROM (SELECT Name, Museum_ID FROM museum WHERE Museum_ID IN (SELECT Museum_ID FROM visit WHERE visitor_ID IN (SELECT ID FROM visitor WHERE Level_of_membership > 2))) AS T1 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#))) AS #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "college_1": [
            {
                "hash": "d5685bd76ccee046ae0c17e4fc3b0b52e94999d9",
                "query": "SELECT T1.EMP_NUM FROM EMPLOYEE AS T1 WHERE T1.EMP_NUM = ( SELECT T2.PROF_NUM FROM CLASS AS T2 WHERE T2.CLASS_CODE = 'CLASS001' ) AND T1.EMP_NUM > 100 ORDER BY T1.EMP_NUM DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "bb4c4a39a449a4af563b518296337286953d6a82",
                "query": "SELECT MIN(T1.EMP_NUM) , T2.STU_LNAME FROM EMPLOYEE AS T1 INNER JOIN STUDENT AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T2.STU_GPA = 3.5 ORDER BY T2.STU_LNAME ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ccbd69740c05ba925c3e79bcd7cf158b8b54f75c",
                "query": "SELECT DEPT_NAME FROM DEPARTMENT WHERE DEPT_CODE IN (SELECT DEPT_CODE FROM COURSE WHERE CRS_CREDIT > (SELECT COUNT(DISTINCT CRS_CREDIT) FROM COURSE)) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#)) LIMIT #VALUE#"
            },
            {
                "hash": "983ba565c36ab6178b0bf7d25ca4fdd9e4295b7a",
                "query": "SELECT CRS_CODE FROM COURSE WHERE CRS_DESCRIPTION = (SELECT CRS_DESCRIPTION FROM COURSE WHERE CRS_CODE = 'CS101') GROUP BY CRS_CODE HAVING COUNT(CRS_CREDIT) > 1 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9a40afcd3315bca5fd66d6f542e026e3607add69",
                "query": "SELECT T1.STU_LNAME, COUNT(DISTINCT T2.CLASS_CODE), SUM(T3.STU_HRS) FROM STUDENT T1 JOIN ENROLL T2 ON T1.STU_NUM = T2.STU_NUM JOIN STUDENT T3 ON T1.STU_NUM = T3.STU_NUM WHERE T1.STU_GPA > 3.0 AND EXISTS ( SELECT 1 FROM EMPLOYEE T4 JOIN PROFESSOR T5 ON T4.EMP_NUM = T5.EMP_NUM WHERE T4.EMP_JOBCODE = 'PROF' )",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "adf3978e46395eb760f83e15b9e7159d5331e37e",
                "query": "SELECT T1.CRS_DESCRIPTION, T3.STU_HRS FROM COURSE AS T1 JOIN CLASS AS T2 ON T1.CRS_CODE = T2.CRS_CODE JOIN ENROLL AS T3 ON T2.CLASS_CODE = T3.CLASS_CODE JOIN STUDENT AS T4 ON T3.STU_NUM = T4.STU_NUM WHERE T4.STU_HRS <= 10 AND T3.ENROLL_GRADE <= 4 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a39df2560e3df751038994b2074c11b845fd6fd9",
                "query": "SELECT T1.EMP_LNAME FROM EMPLOYEE AS T1 WHERE NOT EXISTS (SELECT T2.EMP_NUM FROM PROFESSOR AS T2 WHERE T2.EMP_NUM = T1.EMP_NUM) GROUP BY T1.EMP_LNAME HAVING AVG(T1.EMP_NUM) > 1000 ORDER BY T1.EMP_LNAME ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "5e196cc27b9e08ad36768ea6a6faf619c4aad93a",
                "query": "SELECT COUNT(DISTINCT T1.CLASS_SECTION), COUNT(T1.CLASS_CODE) FROM CLASS AS T1 WHERE T1.CLASS_CODE > '1000' LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "b91daa463be02ab014e52f2bbce8c02a38830e05",
                "query": "SELECT T1.STU_LNAME, COUNT(DISTINCT T2.CLASS_CODE) FROM STUDENT AS T1 JOIN ENROLL AS T2 ON T1.STU_NUM = T2.STU_NUM WHERE EXISTS (SELECT 1 FROM CLASS AS T3 WHERE T3.CLASS_CODE = T2.CLASS_CODE AND T3.CLASS_TIME = '10:00') GROUP BY T1.STU_LNAME ORDER BY COUNT(DISTINCT T2.CLASS_CODE) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "78c4063df0efe9587bb8fa7a34b68b98072d1416",
                "query": "SELECT COUNT(DISTINCT CLASS_SECTION), COUNT(CLASS_TIME) FROM CLASS WHERE CLASS_ROOM != 'Old Building'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "245cb6f77b94adcff3724b701697ed793b889ae6",
                "query": "SELECT COUNT(DISTINCT T1.CR_CLASS_CODE) FROM CLASS AS T1 JOIN COURSE AS T2 ON T1.CRSCODE = T2.CRSCODE WHERE NOT EXISTS (SELECT 1 FROM ENROLL AS T3 WHERE T3.CLASS_CODE = T1.CLASS_CODE LIMIT 10)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            },
            {
                "hash": "ec510c4d09217ca5e10dc9b36a2b1fce4eaffe29",
                "query": "SELECT COUNT(CRS_CODE), MAX(CRS_CREDIT) FROM COURSE WHERE CRS_CREDIT BETWEEN 1 AND 3 OR CRS_CREDIT > 5 OR EXISTS (SELECT CRS_CODE FROM CLASS WHERE CRS_CODE = COURSE.CRS_CODE)",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN#)"
            },
            {
                "hash": "1b948c6fba73a6ba33b9fc7cefd946282b4d70cf",
                "query": "SELECT T1.CLASS_CODE, SUM(T2.STU_HRS) FROM CLASS AS T1 JOIN COURSE AS T2 ON T1.CRS_CODE = T2.CRS_CODE JOIN STUDENT AS T3 ON T2.DEPT_CODE = T3.DEPT_CODE WHERE T1.CLASS_SECTION < 3 ORDER BY T1.CLASS_CODE ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9d412bc6ea9014e83b4166702140ac5030472bca",
                "query": "SELECT COUNT(DISTINCT T1.STU_NUM), COUNT(DISTINCT T2.STU_NUM), SUM(T1.STU_HRS) FROM ENROLL AS T1 JOIN STUDENT AS T2 ON T1.STU_NUM = T2.STU_NUM ORDER BY T1.STU_NUM DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "29c20cde5e4e81bfe4f9b096ffa34b979b99c561",
                "query": "SELECT EMP_LNAME, EMP_FNAME FROM EMPLOYEE WHERE EMP_NUM = 101 ORDER BY EMP_LNAME ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "97bcf498b2cd6d45a6903ec38f3f4c5af8bf28c6",
                "query": "SELECT PROF_NUM FROM CLASS WHERE CLASS_SECTION >= 'A01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "fc9763a58076781ba4358ade2d6135923e96015e",
                "query": "SELECT STU_HRS, STU_GPA, STU_TRANSFER FROM STUDENT WHERE STU_HRS > 50 AND STU_GPA > 2.5 AND STU_TRANSFER > 10 ORDER BY STU_HRS ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f393ec73c7f7c26d0d7d46713cceea5126a362ae",
                "query": "SELECT COUNT(DISTINCT T1.EMP_NUM) FROM PROFESSOR AS T1 JOIN DEPARTMENT AS T2 ON T1.DEPT_CODE = T2.DEPT_CODE JOIN EMPLOYEE AS T3 ON T2.EMP_NUM = T3.EMP_NUM WHERE T3.EMP_JOBCODE >= 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "0d9f4dcb58f69fa4d8f4f3f27e175ec74ed77854",
                "query": "SELECT T1.STU_NUM, T1.STU_HRS FROM STUDENT AS T1 WHERE T1.STU_HRS BETWEEN 50 AND 100 AND EXISTS (SELECT T2.CLASS_SECTION FROM CLASS AS T2 WHERE T2.CLASS_CODE = T1.STU_CLASS) ORDER BY T1.STU_HRS ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5c4137722bd85a372eb59617b46004b9562de37c",
                "query": "SELECT T1.CLASS_CODE FROM CLASS AS T1 JOIN COURSE AS T2 ON T1.CRS_CODE = T2.CRS_CODE JOIN DEPARTMENT AS T3 ON T2.DEPT_CODE = T3.DEPT_CODE",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "07605a6e66db84e2fb4599739ebd0e0b9c0c2c77",
                "query": "SELECT * FROM CLASS WHERE CLASS_SECTION < 2 ORDER BY CLASS_CODE DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "403018912b1f6ace4c8fc2a3324b81aa0651d93a",
                "query": "SELECT T1.STU_LNAME, T2.CRS_DESCRIPTION FROM STUDENT AS T1 JOIN ENROLL AS T2 ON T1.STU_NUM = T2.STU_NUM JOIN CLASS AS T3 ON T2.CLASS_CODE = T3.CLASS_CODE JOIN COURSE AS T4 ON T3.CRS_CODE = T4.CRS_CODE WHERE T1.STU_GPA > 3.0 AND T1.STU_HRS BETWEEN 15 AND 20 AND T1.STU_LNAME NOT IN (SELECT STU_LNAME FROM STUDENT WHERE STU_CLASS = 'Freshman')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f599f23dfb3e5055c2bb18a79cb17823fad93af1",
                "query": "SELECT T1.STU_LNAME, COUNT(T2.CLASS_CODE) FROM STUDENT AS T1 JOIN ENROLL AS T2 ON T1.STU_NUM = T2.STU_NUM WHERE T1.STU_HRS <= 100 GROUP BY T1.STU_LNAME ORDER BY COUNT(T2.CLASS_CODE) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "4a06882980b984bd50e39ff1597319278de7ed67",
                "query": "SELECT T1.CRS_DESCRIPTION AS CLASS_NAME, T2.STU_LNAME AS CLASS_STUDENT FROM COURSE AS T1 JOIN STUDENT AS T2 ON T1.DEPT_CODE = T2.DEPT_CODE",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "0e01707f33d3c69df34b27768703fcbabbe6c04f",
                "query": "SELECT E.EMP_NUM FROM EMPLOYEE E WHERE NOT EXISTS (SELECT 1 FROM PROFESSOR P WHERE P.EMP_NUM = E.EMP_NUM)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "f2999a002b3b974d6e1938cb9c9a419c015590ff",
                "query": "SELECT T1.CLASS_TIME, MAX(T1.CLASS_SECTION) AS CLASS_SECTION, COUNT(T2.STU_NUM) FROM CLASS AS T1 JOIN ENROLL AS T2 ON T1.CLASS_CODE = T2.CLASS_CODE WHERE T1.CRS_CODE != 'MATH101' ORDER BY T1.CLASS_TIME ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "13f11a015e3798049b34f381fd1abe64a290d526",
                "query": "SELECT DEPT_NAME FROM DEPARTMENT WHERE DEPT_CODE = 'CSCI' ORDER BY DEPT_NAME ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "customer_complaints": [
            {
                "hash": "ff35b946dcc54b869a7bb1a1019038311d2f4217",
                "query": "SELECT COUNT(T1.staff_id), T2.product_name FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id WHERE T2.product_id != 100",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "be2a54808c8db53b9fb9c95a5eb5067e45e82ff5",
                "query": "SELECT COUNT(T1.staff_id), T2.product_name FROM Staff AS T1 JOIN Complaints AS T3 ON T1.staff_id = T3.staff_id JOIN Products AS T2 ON T3.product_id = T2.product_id WHERE T2.product_price BETWEEN 10 AND 20 ORDER BY T1.staff_id DESC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1d3973f5f0490e43e3d827ede4e7a6be63881299",
                "query": "SELECT T1.first_name FROM Staff AS T1 WHERE T1.staff_id = ( SELECT T2.staff_id FROM Complaints AS T2 WHERE T2.complaint_type_code = 'product' ) AND T1.gender = 'male' ORDER BY T1.staff_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8cd6e6c35e774fe0e6f57830c9d6f337650f202a",
                "query": "SELECT T1.first_name, T1.last_name FROM Staff AS T1 WHERE T1.gender = 'Male' OR T1.email_address IN (SELECT T2.email_address FROM Customers AS T2) AND T1.staff_id BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2) AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "9a4c126a54d27f37cc81420fbd29f7260d110e3b",
                "query": "SELECT COUNT(DISTINCT T1.staff_id), COUNT(T2.staff_id) FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_complaint_raised < '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "0b28ef63d65fcd121cf1d27eeb578580795c790f",
                "query": "SELECT T1.staff_id, MIN(T2.date_complaint_raised) FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id HAVING T1.staff_id = 12345 OR T2.date_complaint_closed BETWEEN '2020-01-01' AND '2020-12-31' OR T1.gender = 'M'",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "a15fe0fc77d114f866ba42d0e3cc2bcb82552a69",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Complaints AS T2 ON T1.product_id = T2.product_id WHERE T2.date_complaint_raised >= '2020-01-01' LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e2c07c47fc4501572a6ab183729afaef962e0347",
                "query": "SELECT T1.first_name, T2.last_name FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id > 10 GROUP BY T1.first_name HAVING MIN(T2.staff_id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            },
            {
                "hash": "b847dd3df392af89f82e907840a3f65e11436a88",
                "query": "SELECT COUNT(T1.staff_id), T2.customer_type_code FROM Staff AS T1 JOIN Complaints AS T3 ON T1.staff_id = T3.staff_id JOIN Customers AS T2 ON T3.customer_id = T2.customer_id WHERE T2.state = 'California' AND NOT EXISTS ( SELECT 1 FROM Products AS T4 WHERE T4.product_price < 100 ) LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "8feede895de68310ba7521b2d7d2214f72260d67",
                "query": "SELECT COUNT(product_id) FROM Products WHERE product_price < 100 ORDER BY product_id ASC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f50ebf2b0bcb4b6185bf446a47ab0a7c53390116",
                "query": "SELECT COUNT(DISTINCT T1.first_name), SUM(T2.product_price) FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_complaint_raised BETWEEN '2020-01-01' AND '2020-12-31' OR T2.complaint_status_code IN (SELECT complaint_status_code FROM Complaints WHERE complaint_type_code = 'type1') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "e77fdebf989359f50b53eb98f3362d266e5de76f",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.staff_id) FROM Customers AS T1 JOIN Complaints AS T2 ON T1.customer_id = T2.customer_id WHERE T2.complaint_outcome_code >= 'Closed'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5d3261e1b2b53752f9d229a15ec0d0c5136b000f",
                "query": "SELECT T1.staff_id FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id WHERE T2.complaint_id BETWEEN 100 AND 200 OR T2.product_id IN (SELECT product_id FROM Products WHERE product_price > 100) OR T1.gender = 'Male'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "3654c4393b7a601812d2752e4a780a40acf05644",
                "query": "SELECT T1.staff_id, COUNT(DISTINCT T2.staff_id) FROM Complaints AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id HAVING COUNT(T2.staff_id) > 1 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ea477fe64bad31aead6a9ee9c1c5cc73630c338f",
                "query": "SELECT T1.product_name, COUNT(DISTINCT T3.customer_id), T2.email_address FROM Products AS T1 JOIN Complaints AS T2 ON T1.product_id = T2.product_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id WHERE T2.complaint_status_code > 2 ORDER BY T1.product_price DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "137bce5d56a84dd5e2840976c077e22ba7474104",
                "query": "SELECT T1.email_address FROM Customers AS T1 WHERE T1.customer_type_code = 'INDIVIDUAL' AND T1.town_city = 'New York' AND T1.customer_id NOT IN (SELECT T2.customer_id FROM Complaints AS T2)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)"
            },
            {
                "hash": "91cb9962a3a97b9ec06b3b63a3810662c0f060b5",
                "query": "SELECT AVG(T1.product_price), COUNT(*) FROM Products AS T1 GROUP BY T1.product_name HAVING AVG(T1.product_price) != 0 ORDER BY AVG(T1.product_price) DESC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), COUNT(*) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) != #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "df0105ec064863c40de9726e3f0209d1c81f4db8",
                "query": "SELECT product_id FROM Products WHERE product_price BETWEEN 10 AND 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8e9e2cbd77eac95e62be5bf14bc6a4be8b5e350c",
                "query": "SELECT T1.product_name, T2.staff_id FROM Products AS T1 JOIN Complaints AS T2 ON T1.product_id = T2.product_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id WHERE T3.state <= 'California'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4ad10b24074270483abd774aa68bb49bf90be239",
                "query": "SELECT product_id FROM Products WHERE product_price >= 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e6e5746766f227672b12510b96d656b701b94174",
                "query": "SELECT first_name FROM Staff WHERE EXISTS (SELECT 1 FROM Complaints WHERE Complaints.staff_id = Staff.staff_id AND Complaints.customer_id = 100 AND Complaints.product_id BETWEEN 100 AND 200)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "a36637b52c253dc7cf5f7196c4ddad3d9f37f223",
                "query": "SELECT COUNT(DISTINCT staff_id), COUNT(DISTINCT gender), COUNT(DISTINCT first_name) FROM Staff WHERE staff_id = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "89a8a28fb731b263e9dac7cfcf2a14523e9b73f8",
                "query": "SELECT COUNT(staff_id) FROM Staff WHERE gender != 'M' ORDER BY staff_id DESC LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "33911b303588d02115a8c749e40896c6f5069064",
                "query": "SELECT T1.staff_id FROM Staff T1 JOIN Complaints T2 ON T1.staff_id = T2.staff_id JOIN Products T3 ON T2.product_id = T3.product_id JOIN Customers T4 ON T2.customer_id = T4.customer_id WHERE T2.product_id NOT IN ( SELECT product_id FROM Complaints WHERE product_id = 100) ORDER BY T1.staff_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# T1 JOIN #TABLE# T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "33295fa98a20b01a3f231377564cebde4fb3119f",
                "query": "SELECT T1.staff_id, T2.product_id, T3.customer_id FROM Staff AS T1 JOIN Complaints AS T2 ON T1.staff_id = T2.staff_id JOIN Products AS T3 ON T2.product_id = T3.product_id WHERE T2.complaint_status_code = 'Closed' AND T2.complaint_type_code BETWEEN 'Product' AND 'Service' AND NOT EXISTS (SELECT 1 FROM Customers WHERE Customers.customer_type_code = 'Business') ORDER BY T1.staff_id ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            }
        ],
        "wrestler": [
            {
                "hash": "e1deaf6b3fb4a20be90463a29b3cbe1534bb13ff",
                "query": "SELECT T1.Name, AVG(T1.Days_held), COUNT(DISTINCT T2.Team) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Name IN (SELECT T3.Name FROM wrestler AS T3 JOIN Elimination AS T4 ON T3.Wrestler_ID = T4.Wrestler_ID GROUP BY T3.Name HAVING AVG(T3.Days_held) > 100) GROUP BY T1.Name LIMIT 100",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "dd844921195a52244214b163b68e5df78694a203",
                "query": "SELECT T1.Name, COUNT(DISTINCT T3.Team) FROM wrestler AS T1 INNER JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID INNER JOIN Elimination AS T3 ON T3.Elimination_ID = T2.Elimination_ID WHERE T1.Days_held = '1' AND T2.Time = '9:25' AND EXISTS (SELECT 1 FROM Elimination AS T4 WHERE T4.Team = T3.Team AND T4.Eliminated_By = T2.Eliminated_By)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "0224217e4ae7f89f911459565389e13b8cac2d5c",
                "query": "SELECT T1.Name, T2.Time FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID JOIN Elimination AS T3 ON T2.Wrestler_ID = T3.Wrestler_ID WHERE T1.Days_held BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e23f9ba47161d88769eefbf0371f74e46a89921c",
                "query": "SELECT Days_held FROM wrestler WHERE Wrestler_ID = 1 ORDER BY Days_held DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a73b2b701670021e2e04ddd725fc2866d437ab69",
                "query": "SELECT Name, Days_held, Location FROM wrestler WHERE Wrestler_ID IN (SELECT Wrestler_ID FROM Elimination WHERE Eliminated_By = 'John' AND Team = 'Team A' AND Time = '10:00') ORDER BY Days_held DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b2732f50628b7008e99c6912bd3dda7126a66121",
                "query": "SELECT Name FROM wrestler WHERE Days_held = '1 day' OR Reign = '1' OR Wrestler_ID BETWEEN 1 AND 10 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "88b2656f629389c90e30bcd94cb4ffc3f58a2f2a",
                "query": "SELECT T1.Name, COUNT(T2.Elimination_ID) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Days_held BETWEEN 10 AND 20 OR T1.Reign = 'First' OR T1.Location = 'New York'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "d7efa3fc2e2a9e85958f8f5977ddcbf6c3cc8110",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Time FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Days_held BETWEEN 100 AND 200 AND T2.Time > '00:05:00'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "3853f41a02f6420fad797b9928599eefd6f16228",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Location), Event FROM wrestler",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "d402e301bd6a56e2d0869cf545215a2ff8c706f5",
                "query": "SELECT T1.Name, COUNT(T2.Elimination_ID) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID JOIN Elimination AS T3 ON T3.Eliminated_By = T1.Name WHERE T2.Time < '10:00' LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8b6e173d497e14feb171dc0b0e8371b5fba6656c",
                "query": "SELECT T1.Name, COUNT(T2.Elimination_ID) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID GROUP BY T1.Name HAVING COUNT(T2.Elimination_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "5c8c1ffeea20abe47c90a543e815802b4a8173b8",
                "query": "SELECT Name FROM wrestler WHERE Reign IN (SELECT Reign FROM wrestler GROUP BY Reign HAVING COUNT(DISTINCT Name) > 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)"
            },
            {
                "hash": "81d219d285fbfd8e89135a7d8fed4a894c8a9d49",
                "query": "SELECT T1.Name, COUNT(T2.Time) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID GROUP BY T1.Name ORDER BY COUNT(T2.Time) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "245a2910b08f34c86a89570f6ced8794eae281de",
                "query": "SELECT T1.Name FROM Elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Team = 'Raw' AND T1.Eliminated_By = 'Roman Reigns' AND T2.Days_held BETWEEN 10 AND 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "274e726085a8d5caf0afe88f10060ad731bea556",
                "query": "SELECT T1.Name FROM wrestler AS T1 WHERE NOT EXISTS (SELECT 1 FROM Elimination AS T2 WHERE T1.Wrestler_ID = T2.Wrestler_ID) GROUP BY T1.Name ORDER BY COUNT(DISTINCT T1.Reign) ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "75c277292f4f2901ebe3db6ad577bc8db45da940",
                "query": "SELECT T1.Name FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Name IN (SELECT T1.Name FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Eliminated_By = 'John Cena') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "166127bbc477ab0bbdb6265cce52307ffde2a634",
                "query": "SELECT COUNT(DISTINCT T2.Name), T3.Team FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID JOIN wrestler AS T3 ON T2.Wrestler_ID = T3.Wrestler_ID WHERE T3.Location BETWEEN 'New York' AND 'Chicago'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "4ad10b24074270483abd774aa68bb49bf90be239",
                "query": "SELECT Name FROM wrestler WHERE Days_held >= 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e722785518e4a49014c6ae9d1a2bfe98c5b6d49b",
                "query": "SELECT COUNT(DISTINCT T1.Wrestler_ID) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Team = 'Team A' OR T2.Eliminated_By = 'John Doe' AND T1.Name NOT IN (SELECT Name FROM wrestler AS T3 WHERE T3.Reign = 'Champion') GROUP BY T1.Name HAVING MIN(T2.Time)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            },
            {
                "hash": "330f9394dbe49506ce02b784588f1220abb5fb58",
                "query": "SELECT T1.Name, T1.Location FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Team = 'Team A' OR T2.Elimination_Move = 'Move X' OR T1.Wrestler_ID NOT IN ( SELECT Wrestler_ID FROM Elimination WHERE Elimination_ID = 'ID 1' ) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "ef002171d11ea4f84e9b16ae0ef2b83c11ed7940",
                "query": "SELECT COUNT(T2.Elimination_ID), T1.Name FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Time < 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "9fb2a6b6378d150cc00ddb703fd4b292b03bc6e5",
                "query": "SELECT T1.Name, MIN(T2.Time) FROM wrestler AS T1 JOIN Elimination AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T1.Days_held = '1000+' AND T2.Team = 'Team Angle' AND T2.Eliminated_By IS NOT NULL AND T1.Reign BETWEEN '2000' AND '2010' GROUP BY T1.Name LIMIT 5",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IS NOT NULL AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "181e8dd7162bde6eeb758953fcdb55b8b781e2ce",
                "query": "SELECT COUNT(DISTINCT Eliminated_By), COUNT(DISTINCT Time), Name FROM wrestler WHERE Reign = ' Singles' AND Days_held = ' 59' AND Location = 'Philadelphia, PA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "f3db74daee2a5db3a949d81c319049b8125743a0",
                "query": "SELECT MAX(Days_held) FROM wrestler WHERE Reign > '1'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "department_store": [
            {
                "hash": "076a35f8f05409a71676b821c1489cdd3bf890b2",
                "query": "SELECT MAX(T1.product_price) FROM Products AS T1 WHERE T1.product_id BETWEEN 100 AND 200 AND T1.product_price > 50 ORDER BY T1.product_price DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a9b1c62a86f1919e0a167409630c043093791fdb",
                "query": "SELECT T1.supplier_name, SUM(T2.total_value_purchased) FROM Suppliers AS T1 JOIN Product_Suppliers AS T2 ON T1.supplier_id = T2.supplier_id WHERE T2.total_value_purchased <= 1000 ORDER BY T1.supplier_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0762138f9c5e4566586a4825f2be188bc28f6a3c",
                "query": "SELECT T1.staff_name FROM Staff AS T1 WHERE T1.staff_id = 10 AND T1.staff_gender = 'M' AND T1.staff_id BETWEEN 5 AND 15",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "f308c477c1c8eeda3caa0b2e556d7ab4e9ae87d0",
                "query": "SELECT COUNT(DISTINCT T1.staff_name) FROM Staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_gender = 'Male' AND T2.department_id = 10 AND T2.job_title_code = 'Manager'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "d768863d6bc81e98f83dfe99cd578da473736784",
                "query": "SELECT COUNT(DISTINCT T1.staff_name), SUM(T2.total_value_purchased) FROM Staff AS T1 JOIN Product_Suppliers AS T2 ON T1.staff_id = T2.supplier_id WHERE T2.date_supplied_from BETWEEN '2020-01-01' AND '2021-01-01' GROUP BY T2.total_value_purchased ORDER BY T2.total_value_purchased ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8cab17216179603cd7760aed5a729db5a67e996c",
                "query": "SELECT T1.customer_name, COUNT(T2.order_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code != 'Cancelled'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "ebfab0143a47a528a1b558e5ba1dd81d6f18fac0",
                "query": "SELECT T1.staff_name, COUNT(T2.staff_name), SUM(T2.staff_id) FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id > 10 GROUP BY T1.staff_name HAVING COUNT(T2.staff_name) > 2 ORDER BY COUNT(T2.staff_name) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "9ed587f15ec5ee87fd01520ac7251cd2a933c6b1",
                "query": "SELECT T1.product_name, SUM(T2.total_value_purchased) FROM Products AS T1 JOIN Product_Suppliers AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name HAVING T1.product_name != 'Product A'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE#"
            },
            {
                "hash": "23e7037f8a3825aaa41faef4d3d88a3053b71b16",
                "query": "SELECT COUNT(DISTINCT T1.product_name) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.order_id IN (SELECT T3.order_id FROM Customer_Orders AS T3 WHERE T3.order_date > '2020-01-01') ORDER BY T1.product_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "93d800cfd61c55a574109ec7b7aae18bb47ff3fc",
                "query": "SELECT T1.department_name, COUNT(T2.staff_id) FROM Departments AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.department_id = T2.department_id WHERE T2.date_assigned_to <= '2020-01-01' ORDER BY T1.department_name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c5d0f7e273802443948232cd8ae1efb1a9f6c813",
                "query": "SELECT customer_name FROM Customers WHERE customer_address = 'New York' OR customer_phone NOT IN (SELECT store_phone FROM Department_Stores WHERE store_address = 'Los Angeles')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "c9cd1ac90326e4c9c424c56bf06633f917adf013",
                "query": "SELECT product_name FROM Products WHERE product_price BETWEEN 10 AND 20 OR product_name = 'Product A' OR NOT EXISTS (SELECT 1 FROM Product_Suppliers WHERE Product_Suppliers.product_id = Products.product_id) ORDER BY product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f5bc6385df2599cdfd8e0418d31861fa7c75711b",
                "query": "SELECT T2.staff_name, T1.department_name FROM Departments AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.department_id = T2.department_id JOIN Staff AS T3 ON T2.staff_id = T3.staff_id WHERE T1.department_name != 'Sales'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "0e1003b4f6091225f32b0b2d04fd4c6255fc079d",
                "query": "SELECT T1.staff_name FROM Staff AS T1 WHERE T1.staff_id = ( SELECT MAX(T2.staff_id) FROM Staff AS T2 GROUP BY T2.staff_gender )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# )"
            },
            {
                "hash": "46fecae03487e72e314aa261bec5b9f3c4cd8e0a",
                "query": "SELECT T1.customer_id, T1.customer_name FROM Customers AS T1 JOIN Customer_Addresses AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id = 5 AND T1.customer_code BETWEEN 100 AND 200 AND T1.customer_id > 10 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6d36cb6972dad9bd530dc98a4343aa0a54d99f3e",
                "query": "SELECT T1.product_name, T2.order_status_code, T3.store_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id JOIN Department_Stores AS T4 ON T3.customer_id = T4.dept_store_id WHERE T3.order_date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dc09eb49dfbef885eb77d5377b84d1425678013d",
                "query": "SELECT T3.staff_name, T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id WHERE T3.order_date > '2020-01-01' OR T1.product_price > 100 OR EXISTS (SELECT * FROM Departments AS T4 JOIN Staff_Department_Assignments AS T5 ON T4.department_id = T5.department_id WHERE T5.staff_id = T3.customer_id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "cc7164093fc46387c2cb45fa48ee365aab4e0a3f",
                "query": "SELECT T1.staff_id FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE NOT EXISTS (SELECT 1 FROM Staff_Department_Assignments AS T3 WHERE T3.staff_id = T1.staff_id AND T3.job_title_code = 'Manager') ORDER BY T1.staff_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bd0fcb5f88d8e6694709e3b93592a19776a4b795",
                "query": "SELECT COUNT(DISTINCT T1.dept_store_id), SUM(T2.product_price), COUNT(T3.staff_id) FROM Departments AS T1 JOIN Products AS T2 ON T1.department_id = T2.product_type_code JOIN Staff_Department_Assignments AS T3 ON T2.product_id = T3.department_id WHERE T2.product_price <= 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "2075c747f6d82cd5259451828b80ea5874260e9d",
                "query": "SELECT COUNT(T1.supplier_id), T2.dept_store_chain_name FROM Suppliers AS T1 JOIN Department_Store_Chain AS T2 ON T1.supplier_id != T2.dept_store_chain_id GROUP BY T2.dept_store_chain_name ORDER BY COUNT(T1.supplier_id) DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "52d0655288d190834b4d4b59e227fce715717049",
                "query": "SELECT COUNT(DISTINCT T1.supplier_id) FROM Suppliers AS T1 JOIN Product_Suppliers AS T2 ON T1.supplier_id = T2.supplier_id WHERE T2.date_supplied_from BETWEEN '2020-01-01' AND '2021-01-01' AND T1.supplier_phone = '1234567890'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "7f82f42544178349b35a89850611f5950233b036",
                "query": "SELECT DISTINCT T1.staff_name FROM Staff AS T1 WHERE EXISTS (SELECT 1 FROM Departments AS T2 WHERE T2.dept_store_id = 1 AND T2.department_id = T1.staff_id LIMIT 10)",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            },
            {
                "hash": "843b95467f9796755210377d653ee6acf8e4eecb",
                "query": "SELECT T1.product_name, SUM(T1.product_price) FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price <= T2.product_price LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "f82da4a77de542f4635f781dc90a769f564b8379",
                "query": "SELECT T1.supplier_name FROM Suppliers AS T1 WHERE T1.supplier_id IN (SELECT T2.supplier_id FROM Product_Suppliers AS T2 GROUP BY T2.supplier_id HAVING MAX(T2.total_value_purchased) > 10000) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "351a5b3b43a441f82212031771fcde01e9e470ff",
                "query": "SELECT SUM(T1.product_price), T4.staff_name FROM Products AS T1 INNER JOIN Order_Items AS T2 ON T1.product_id = T2.product_id INNER JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id INNER JOIN Staff AS T4 ON T3.customer_id = T4.staff_id WHERE T3.order_date BETWEEN '2020-01-01' AND '2020-12-31' AND T4.staff_id NOT IN (SELECT staff_id FROM Staff_Department_Assignments WHERE department_id = 1) ORDER BY SUM(T1.product_price) DESC LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "3aeace1c3debeae539c48160dc8a9fb0b0db2bd9",
                "query": "SELECT T1.customer_name, COUNT(T3.order_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_name LIMIT 100",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            }
        ],
        "government_shift": [
            {
                "hash": "d19ca445d94f1810478e8ef7d6d80419e5b914a3",
                "query": "SELECT T1.Service_ID, T2.Status_Code FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID GROUP BY T1.Service_ID HAVING COUNT(T1.Service_ID) > 5 ORDER BY T1.Service_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0300080f1d071ab12c1f1b2aa262cca27c5cf1c9",
                "query": "SELECT T1.Service_ID, AVG(T1.Customer_ID) FROM Customers_and_Services AS T1 JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Customer_ID BETWEEN 100 AND 200 GROUP BY T1.Service_ID ORDER BY T1.Service_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "66cf94be8429bdd88db7eaa4267c634597ef91e1",
                "query": "SELECT T1.Service_ID, T2.Customer_ID FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID JOIN Customers AS T3 ON T2.Customer_ID = T3.Customer_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "3994e5524b801608b27a20400f5cf0502881373d",
                "query": "SELECT T1.Service_ID FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T1.Service_ID = 1 AND T2.Customer_ID = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2fb519b1e307c9d8e2b8fb01d3bf7e6dbafba799",
                "query": "SELECT Service_ID FROM Services WHERE NOT EXISTS (SELECT 1 FROM Customer_Interactions WHERE Customer_Interactions.Service_ID = Services.Service_ID AND Status_Code = 'active')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0ab55703b6d6360ee4be94a220a1373708f882ad",
                "query": "SELECT T1.Service_Details FROM Services AS T1 WHERE T1.Service_ID = 12345 OR T1.Service_ID NOT IN (SELECT T2.Service_ID FROM Customers_and_Services AS T2 WHERE T2.Service_ID = 67890)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "658c3ca9b47eeb67fc2806cbadcddd156263e61f",
                "query": "SELECT T1.Service_Details FROM Customers_and_Services AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T1.Customer_ID < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "2f66911e428ac4c1a205c5c9232e2e06d0c660b9",
                "query": "SELECT Customers_and_Services_ID FROM Customers_and_Services WHERE Customer_ID IN (SELECT Customer_ID FROM Customer_Interactions WHERE Service_ID IN (SELECT Service_ID FROM Services ORDER BY Service_ID DESC))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC))"
            },
            {
                "hash": "7ae3be72974fd7f38b58819d373fbf047aadbf0f",
                "query": "SELECT T1.Customer_ID, COUNT(DISTINCT T1.Channel_ID) FROM Customer_Interactions AS T1 JOIN Channels AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T1.Status_Code = 'success' GROUP BY T1.Customer_ID HAVING MAX(T1.Customer_ID) = T1.Customer_ID ORDER BY COUNT(DISTINCT T1.Channel_ID) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "b6bbe0744e85f8cc14b1011215670742ecb5e101",
                "query": "SELECT Service_ID FROM Services WHERE Service_ID != 1 ORDER BY Service_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "92712b1bb0d18c72160f9a353cac964801e0fb4d",
                "query": "SELECT COUNT(Customer_ID) FROM Customers_and_Services WHERE Customer_ID BETWEEN 100 AND 200 AND Customers_and_Services_ID IN ( SELECT Customers_and_Services_ID FROM Analytical_Layer WHERE Pattern_Recognition = 'positive' ) LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "a7a20bdd03b8b99007d14dfb8a220141a9aed406",
                "query": "SELECT COUNT(DISTINCT T1.Service_ID), COUNT(DISTINCT T2.Channel_ID) FROM Services AS T1 JOIN Customer_Interactions AS T2 ON T1.Service_ID = T2.Service_ID JOIN Channels AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE T1.Service_ID >= 1 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7ab9a9024039c2eb4813493b63f738190e89a0c5",
                "query": "SELECT * FROM Customer_Interactions WHERE Customer_ID IN (SELECT Customer_ID FROM Customers) ORDER BY Customer_ID DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0344fa1ee0cafe3abc1f3ec3334a37292fef50c1",
                "query": "SELECT T1.Service_ID, MIN(T3.Status_Code) FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID JOIN Customer_Interactions AS T3 ON T2.Customer_ID = T3.Customer_ID WHERE T3.Status_Code <= 200 GROUP BY T1.Service_ID",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "30074983410bf5cb162b17fcc2e58b5c7ee24d51",
                "query": "SELECT T1.Service_ID, T1.Service_Details FROM Services AS T1 WHERE T1.Service_ID BETWEEN 10 AND 100 AND T1.Service_ID NOT IN (SELECT T2.Service_ID FROM Services AS T2 WHERE T2.Service_ID = 50) AND T1.Service_Details = 'details' ORDER BY T1.Service_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(Service_ID) FROM Services AS T1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "41d5cb32d5d831b3c575413cd0745d44a7586a81",
                "query": "SELECT T1.Service_ID FROM Services AS T1 JOIN Customers_and_Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_ID > 10 ORDER BY T1.Service_ID DESC LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a711a3ea7cffc56b6a832a21846799b322b6db1c",
                "query": "SELECT T1.Service_Details, T2.Customer_Details FROM Services AS T1 JOIN Customers_and_Services AS T3 ON T1.Service_ID = T3.Service_ID JOIN Customers AS T2 ON T3.Customer_ID = T2.Customer_ID WHERE T1.Service_ID BETWEEN 10 AND 100 AND T2.Customer_ID = 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "cdd9a4ee0bf91fbb06b61cf89f5f67ab7ed8dab6",
                "query": "SELECT T1.Customer_ID FROM Customers AS T1 JOIN Customer_Interactions AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Status_Code >= 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4083c69f83b9bde3beb30c6b0116dd00a950d922",
                "query": "SELECT Service_ID FROM Services WHERE NOT EXISTS (SELECT Customers_and_Services_ID FROM Customers_and_Services WHERE Customers_and_Services.Service_ID = Services.Service_ID) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#. #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "01f4fc1c95b22dfae28b263f9f7697d309fb34f2",
                "query": "SELECT T1.Customer_ID, T2.Service_Details FROM Customers AS T1 JOIN Customers_and_Services AS T3 ON T1.Customer_ID = T3.Customer_ID JOIN Services AS T2 ON T2.Service_ID = T3.Service_ID WHERE T1.Customer_ID <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "927aedc49856bca33152afe3ad7abd090e672a5f",
                "query": "SELECT T1.Customer_ID, COUNT(DISTINCT T2.Service_ID) FROM Customers AS T1 JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Customer_Interactions AS T3 ON T2.Customer_ID = T3.Customer_ID WHERE T3.Status_Code < 200 ORDER BY T1.Customer_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ca37eda90b397d8eb988118abec05ffb01774e0e",
                "query": "SELECT COUNT(Service_ID), Service_ID FROM Customer_Interactions GROUP BY Service_ID ORDER BY COUNT(Service_ID) DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "e20ead8082cba6dd2cbe7c5a286ae654f6c19c9f",
                "query": "SELECT Customer_ID, COUNT(Service_ID) FROM Customers_and_Services WHERE Customers_and_Services_Details < 'Sample Text' GROUP BY Customer_ID HAVING COUNT(Service_ID) > 0 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ab7ea38d0e51c551996920c4c0591f28d3a9ecd5",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID) FROM Customer_Interactions AS T1 JOIN Customers AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Customer_ID < 100 ORDER BY T2.Customer_ID ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE# ORDER BY T2.#COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "flight_company": [
            {
                "hash": "21a5ba593b9ed79721b2bc39dca5c401f1b21cbf",
                "query": "SELECT T1.name, T2.name, T3.Vehicle_Flight_number FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T1.ICAO != 'ABC'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT 1"
            },
            {
                "hash": "0bf30ef7b538b4fabb95564853966858f5482ca2",
                "query": "SELECT IATA FROM airport WHERE City = 'New York'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "58bac8bf684332adc5fa0bb25fea86113b021bd9",
                "query": "SELECT T1.name, T2.name, T3.Velocity FROM airport AS T1 JOIN flight AS T3 ON T1.id = T3.airport_id JOIN operate_company AS T2 ON T2.id = T3.company_id WHERE T3.Velocity >= 800 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "19a0da553000735a022bb99e0bfa3e9b90d704b1",
                "query": "SELECT * FROM operate_company WHERE Group_Equity_Shareholding > 10 ORDER BY id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "19d46eea7b90d3310e87f9e027a67498cd0be6e6",
                "query": "SELECT COUNT(name) , COUNT(ICAO) FROM airport AS T1",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "b746f32c5e47411445c9ad703edbcc105366f2ae",
                "query": "SELECT T1.id, T2.id FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.Country <= 'USA' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "428d5156d38b21af7fc7f4151f947879dc188a5b",
                "query": "SELECT T1.ICAO, MAX(T2.Velocity) FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T1.ICAO HAVING COUNT(DISTINCT T2.Pilot) <= 10 ORDER BY T1.ICAO ASC LIMIT 5",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# GROUP BY T1.#COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3a1439bec1dc8d296ada7113d75eaa98c1897a70",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T2.Date) FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T1.City = 'Paris'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "70d0ff19a38a5fb0e61350ff92ae4828ada9d6d8",
                "query": "SELECT AVG(T1.Velocity), AVG(T1.Altitude), COUNT(T2.id) FROM flight AS T1 JOIN airport AS T2 ON T1.airport_id = T2.id JOIN operate_company AS T3 ON T1.company_id = T3.id WHERE T3.Group_Equity_Shareholding <= 50 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a93fc72c85789704f008f4df039cbc17529f9a94",
                "query": "SELECT T1.name FROM airport AS T1 WHERE T1.id BETWEEN 100 AND 200 AND T1.City = 'New York' AND T1.Country = 'USA' ORDER BY T1.id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND T1.#COLUMN# = '#VALUE#' AND T1.#COLUMN# = '#VALUE#' ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "9e76105c058ffa1378c560e9e44075cdf0d0a0a2",
                "query": "SELECT COUNT(DISTINCT T2.id), T1.id FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T2.company_id != 1 GROUP BY T1.id ORDER BY COUNT(DISTINCT T2.id) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "73745aac9635342c30a256246192b78d78bba5c5",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name), SUM(T3.Velocity) FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T1.City >= 'A' GROUP BY T1.name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "8cfd7c8743d2e0a997ef82ca079fe66cf032e73b",
                "query": "SELECT T1.id, T2.name FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T3.id IN (SELECT id FROM operate_company WHERE Group_Equity_Shareholding > 50) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "10cc00983770ec39209b46921e25a297ddcdd1e0",
                "query": "SELECT Velocity FROM flight WHERE Altitude <= 10000 ORDER BY Velocity ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "49739e092b73d54958ab3a2c40b002365a209f8a",
                "query": "SELECT COUNT(DISTINCT T1.id), COUNT(DISTINCT T3.id), COUNT(T2.id) FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id JOIN operate_company AS T3 ON T2.company_id = T3.id WHERE T2.Velocity BETWEEN 500 AND 1000 AND T3.Group_Equity_Shareholding > 20 AND T1.Country = 'USA' ORDER BY T2.id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "910b48b22a00937d66b7cf5ed4df5cc4a5735b14",
                "query": "SELECT T1.IATA, T2.name FROM airport AS T1 INNER JOIN operate_company AS T2 ON T1.id = T2.id WHERE T1.ICAO BETWEEN 'A' AND 'Z' OR T1.Country = 'USA' OR NOT EXISTS (SELECT 1 FROM flight AS T3 WHERE T3 Velocity > 1000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "5f571179b5bf64b33fd7fa2f50d644fdb00663ab",
                "query": "SELECT T2.City, COUNT(DISTINCT T1.id) FROM flight AS T1 JOIN airport AS T2 ON T1.airport_id = T2.id WHERE T1.Velocity BETWEEN 500 AND 1000 OR T1.id IN (SELECT id FROM flight WHERE Velocity > 1000) OR T1.company_id = (SELECT id FROM operate_company WHERE name = 'Company A') GROUP BY T2.City HAVING COUNT(DISTINCT T1.id) > 1 ORDER BY T2.City ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "af023e0ea0a11b6e182d288549ee63f8f6602693",
                "query": "SELECT COUNT(f.id), f.Pilot, f.Altitude FROM flight AS f WHERE f.Velocity BETWEEN 200 AND 400 AND f.Altitude > 5000 AND f.Pilot = 'Bob'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "23fd580e2a76065a5ba9ab856d3bbe8f14b5e7d7",
                "query": "SELECT * FROM airport WHERE IATA IN ( SELECT IATA FROM airport WHERE City = 'New York' ) OR City IN ( SELECT City FROM airport WHERE Country = 'USA' )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "847deb3da08d50a75c9078cdcb7864c9f66989c3",
                "query": "SELECT T1.City, T2.Pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T2.id = 1 AND T2.Velocity > 100 AND T2.Altitude IN (SELECT T2.Altitude FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "0d5fc5aac8a5450f6e1584e70d2200a2bfd7f966",
                "query": "SELECT name FROM airport WHERE IATA != 'ABC' ORDER BY name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d5c247af2b4e398558c415c268071d17b664afd6",
                "query": "SELECT City, COUNT(DISTINCT IATA) FROM airport WHERE ICAO = 'KLAX' OR ICAO IN (SELECT ICAO FROM flight WHERE Altitude > 10000 AND Velocity < 500) OR ICAO = 'KJFK'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "66ae91961b9c1f0cbeaa8271ec91b382dad76437",
                "query": "SELECT T1.name, T2.name FROM airport AS T1 JOIN operate_company AS T2 ON T1.id = T2.id WHERE T1.ICAO = 'KJFK' OR T1.ICAO = 'KLAX' AND NOT EXISTS (SELECT 1 FROM flight AS T3 WHERE T3.company_id = T2.id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "c0b3e9c0ac3fa46d5ba4ce040ccba17b43b9d593",
                "query": "SELECT name FROM airport WHERE City >= 'New York'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5c843fd72b59c7046627a47084ed8b8de8dba47a",
                "query": "SELECT id FROM airport WHERE Country = 'USA' OR IATA = 'JFK' OR id = (SELECT airport_id FROM flight WHERE Velocity > 800) ORDER BY id ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "bc67224559260849b4568ff1cee9e33b4f10f20b",
                "query": "SELECT * FROM airport WHERE City = 'New York' OR Country = 'USA' OR EXISTS (SELECT 1 FROM flight WHERE flight.airport_id = airport.id AND flight.Date BETWEEN '2020-01-01' AND '2020-12-31')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.id = #TABLE#.id AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            }
        ],
        "tracking_software_problems": [
            {
                "hash": "887d98d2a5b2360baf24aeace4237bd3b6a5f90a",
                "query": "SELECT T1.problem_category_description, MAX(T2.log_entry_date) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T1.problem_category_code NOT IN (SELECT problem_category_code FROM Problem_Log WHERE problem_status_code = 'OPEN') GROUP BY T1.problem_category_description ORDER BY MAX(T2.log_entry_date) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "15332d0ff199f6ddd464313b38d3cbf58dcd1e79",
                "query": "SELECT COUNT(problem_category_code) FROM Problem_Category_Codes WHERE problem_category_code != 'NA'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "db5e9c1b5da1b5602fc51d67240f8d37eb810daa",
                "query": "SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code < 'code1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "def7897e8e717e09b09cd4f2505dad9b9711db80",
                "query": "SELECT T1.problem_category_description, MAX(T2.log_entry_date) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code JOIN Problem_Log AS T3 ON T2.problem_log_id = T3.problem_log_id JOIN Problems AS T4 ON T3.problem_id = T4.problem_id WHERE T2.log_entry_date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.log_entry_fix = 'Yes' OR T4.problem_description = 'Hardware Issue' GROUP BY T1.problem_category_description LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "58fe281e375b57a50a9a3207ebdae23d167c71d1",
                "query": "SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code BETWEEN 'code1' AND 'code2' ORDER BY problem_category_code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b5e5b8b9afe2e2e692ccc23ebedd73aabadf9855",
                "query": "SELECT COUNT(T4.problem_category_code), COUNT(T2.problem_status_code), T3.product_name FROM Problems AS T1 JOIN Product AS T3 ON T1.product_id = T3.product_id JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id JOIN Problem_Category_Codes AS T4 ON T2.problem_category_code = T4.problem_category_code WHERE T2.log_entry_date >= '2020-01-01'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "57fa51ba843b8b199aaf402266a9edd1ae74fb08",
                "query": "SELECT COUNT(problem_log_id) FROM Problem_Log AS T1 WHERE T1.problem_status_code != 'closed'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#'"
            },
            {
                "hash": "f44cfe70597514524cf11a881d2306968238c184",
                "query": "SELECT T1.problem_id, SUM(T2.log_entry_date) FROM Problems AS T1 JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id JOIN Staff AS T3 ON T2.assigned_to_staff_id = T3.staff_id WHERE T2.log_entry_date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.staff_first_name = 'John' OR T1.problem_description LIKE '%issue%' GROUP BY T1.problem_id HAVING SUM(T2.log_entry_date) > 10 ORDER BY T1.problem_id DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# LIKE #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d1081dbc7d59e2a315eeaa95e03fc5c1c05ccb77",
                "query": "SELECT T1.problem_log_id FROM Problem_Log AS T1 WHERE T1.problem_category_code = 'code1' OR T1.problem_id IN (SELECT T2.problem_id FROM Problems AS T2 WHERE T2.product_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c3d81e54e0f8f6d51f64d9a0260e091c53d3d8a3",
                "query": "SELECT COUNT(DISTINCT T1.staff_first_name), COUNT(DISTINCT T2.staff_last_name), T1.staff_id FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id = 5 OR T1.staff_id BETWEEN 10 AND 20 OR T2.staff_id > 3 ORDER BY T1.staff_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0a2febfbd6dfb33e53433b94928753f1b3c07058",
                "query": "SELECT COUNT(DISTINCT T1.problem_category_code), COUNT(DISTINCT T1.problem_category_description), T1.problem_category_description FROM Problem_Category_Codes AS T1 WHERE T1.problem_category_code = 'Code1' OR T1.problem_category_description = 'Description1' OR T1.problem_category_code NOT IN (SELECT T2.problem_category_code FROM Problem_Log AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "fd26dbdbb9c41a405ad4ad6d037b738ceaadcc03",
                "query": "SELECT T1.problem_category_code, COUNT(T2.problem_log_id) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_status_code != 'CLOSED' GROUP BY T1.problem_category_code LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "03b7416164dc60148467112c02832ec64587088a",
                "query": "SELECT MAX(T3.log_entry_date) FROM Problems AS T1 INNER JOIN Product AS T2 ON T1.product_id = T2.product_id INNER JOIN Problem_Log AS T3 ON T1.problem_id = T3.problem_id WHERE T3.log_entry_date <= '2020-01-01' ORDER BY T3.log_entry_date DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fffbdb229d5c90322a2f7f66c1b59a9a79f6c3ae",
                "query": "SELECT T1.problem_category_description, COUNT(T2.problem_log_id), SUM(T2.problem_log_id) FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.log_entry_date > '2020-01-01'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8f7daf2b42fdfb26f1300a69f20a9137c5d674ee",
                "query": "SELECT T1.staff_first_name FROM Staff AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.staff_id > 10 ORDER BY T1.staff_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e25f24ea3a9ff3b1a11490a6f8939d1269c7a64e",
                "query": "SELECT problem_id FROM Problems WHERE problem_id BETWEEN 1 AND 100 AND product_id = 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "884af3e2df1e7f08b895e0536b972c6db184c306",
                "query": "SELECT COUNT(*) FROM Problems WHERE problem_id < 10 LIMIT 5",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f52d8f098a52ab1f86a861d60bba064a6f77bc25",
                "query": "SELECT T1.problem_category_code, COUNT(T2.problem_log_id) FROM Problem_Log AS T1 JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id WHERE EXISTS (SELECT 1 FROM Problem_Log AS T3 WHERE T3.problem_id = T1.problem_id AND T3.log_entry_date > T1.log_entry_date) GROUP BY T1.problem_category_code",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "fce0912ac18ba9a01ca1c867b5d60e4757f48b84",
                "query": "SELECT T1.product_name, COUNT(T2.problem_id) FROM Product AS T1 JOIN Problems AS T2 ON T1.product_id = T2.product_id WHERE T2.date_problem_closed > '2020-01-01' ORDER BY COUNT(T2.problem_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "c3e8cf8f2060edef8be379e837450045cc31aa69",
                "query": "SELECT problem_category_code, COUNT(problem_category_code), problem_category_description FROM Problem_Category_Codes GROUP BY problem_category_code ORDER BY COUNT(problem_category_code) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "44e35d9d2a82fc21ad4955a9a1b3143a94c66c1d",
                "query": "SELECT T1.problem_category_code FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_log_id NOT IN (SELECT problem_log_id FROM Problem_Log WHERE problem_log_id = 10 OR problem_log_id = 11 OR problem_log_id = 12)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6c231b10551f5410cad818df0ecb1b5ff0691fe7",
                "query": "SELECT COUNT(DISTINCT problem_category_code) FROM Problem_Log WHERE log_entry_date BETWEEN '2005-01-01' AND '2005-12-31' ORDER BY problem_log_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cdb7f98c4fe92d1932d3e75ae9f2798225264058",
                "query": "SELECT problem_category_description FROM Problem_Category_Codes AS T1 WHERE EXISTS (SELECT 1 FROM Problem_Log AS T2 WHERE T2.problem_category_code = T1.problem_category_code AND T2.log_entry_description = 'details')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#')"
            },
            {
                "hash": "bf7da113029fd32de6296765e486944d9c20f3fe",
                "query": "SELECT P.product_name, S.staff_first_name FROM Product AS P JOIN Problems AS Pr ON P.product_id = Pr.product_id JOIN Staff AS S ON S.staff_id = Pr.reported_by_staff_id WHERE Pr.product_id = 1 AND Pr.reported_by_staff_id = 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS A JOIN #TABLE# AS B ON #COLUMN# = #COLUMN# JOIN #TABLE# AS C ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "aa864faa01f62735da8039980a53bea22a147bed",
                "query": "SELECT COUNT(DISTINCT T1.problem_category_code) FROM Problem_Log AS T1 JOIN Problem_Category_Codes AS T2 ON T1.problem_category_code = T2.problem_category_code WHERE T2.problem_category_description BETWEEN 'abc' AND 'xyz' ORDER BY COUNT(DISTINCT T1.problem_category_code) DESC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "de9ead6af08b0932846724ca9bc6fae2cb00ae84",
                "query": "SELECT T1.product_name, MIN(T2.log_entry_date) FROM Product AS T1 JOIN Problems AS T2 ON T1.product_id = T2.product_id JOIN Problem_Log AS T3 ON T2.problem_id = T3.problem_id GROUP BY T1.product_name HAVING T3.log_entry_date >= T2.date_problem_reported",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# >= #COLUMN#"
            },
            {
                "hash": "7a1d008068c197db4cfdc6a17dc030298a33e19f",
                "query": "SELECT problem_category_description FROM Problem_Category_Codes WHERE problem_category_code IN (SELECT problem_category_code FROM Problem_Log WHERE problem_id < 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            }
        ],
        "phone_1": [
            {
                "hash": "06ae3871c215ff376179319dc6168761b8d52a16",
                "query": "SELECT MIN(T1.RAM_MiB), MAX(T1.ROM_MiB), AVG(T1.Launch_year) FROM chip_model AS T1 ORDER BY T1.Launch_year ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0fbf401054a6ab466dcb6ca11c4b9d85b069253d",
                "query": "SELECT T1.Model_name, T2.Hardware_colours, SUM(T2.used_kb) FROM chip_model AS T1 JOIN screen_mode AS T2 ON T1.Model_name = T2.Graphics_mode GROUP BY T1.Model_name, T2.Hardware_colours ORDER BY T1.Model_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b232cd567b05cc75364b72990dd11a55a766991f",
                "query": "SELECT Company_name FROM phone WHERE (Launch_year BETWEEN 2010 AND 2015) OR (Hardware_colours IN (SELECT Hardware_colours FROM screen_mode)) OR (Model_name = 'Model1')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)) OR (#COLUMN# = #VALUE#)"
            },
            {
                "hash": "6d444dc52a3073f6307b549e696c86c5aa1f6540",
                "query": "SELECT Company_name, Launch_year FROM phone AS T1 JOIN chip_model AS T2 ON T1.chip_model = T2.Model_name WHERE T1.Accreditation_level > 1 ORDER BY T2.Launch_year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "54c3e00e409dc159ca44dcc9beaac934bcc3ebf6",
                "query": "SELECT T1.Launch_year, T2.Pixels FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ae0568be2b7da5d9372b16279630b421a2e90599",
                "query": "SELECT T1.Model_name, COUNT(DISTINCT T2.Hardware_Model_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.chip_model NOT IN (SELECT chip_model FROM phone WHERE Accreditation_type = 'Full') GROUP BY T1.Model_name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "c4c570e5bea11b7726246fa1910c94e9c87b7c5b",
                "query": "SELECT COUNT(DISTINCT Launch_year) FROM chip_model WHERE Launch_year >= 2000 ORDER BY Launch_year DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "353613f91523929ec8408eaf8dc449ebf7ebad3c",
                "query": "SELECT T1.Model_name, T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode ORDER BY T1.Model_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cabe263581afa1e49580fe2d74a4a96068774730",
                "query": "SELECT T1.Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T3.Graphics_mode = T2.screen_mode WHERE T2.Company_name = 'Apple' AND T1.Launch_year BETWEEN 2010 AND 2015 AND T3.Hardware_colours > 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c66c1b2ba0d00f00242f0c0d1f96c9a594011874",
                "query": "SELECT COUNT(DISTINCT T2.Company_name) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Accreditation_type = 'Full' OR T2.Date > '2020' ORDER BY T2.Accreditation_level DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "5d5e9f5404d057af4cc13d5b1de4ec5f81ee33df",
                "query": "SELECT T1.Hardware_Model_name, T2.Model_name FROM phone AS T1 JOIN chip_model AS T2 ON T1.chip_model = T2.Model_name WHERE T2.Launch_year > 2010 AND T1.Company_name = 'Apple' AND EXISTS (SELECT 1 FROM screen_mode AS T3 WHERE T3.Graphics_mode = T1.screen_mode AND T3.Char_cells = 'Color') ORDER BY T1.Hardware_Model_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6b368c52c91c532830ca659abc4393bbb7c86b49",
                "query": "SELECT AVG(T1.RAM_MiB) AS avg_ram, AVG(T1.ROM_MiB) AS avg_rom FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model",
                "template": "SELECT AVG(#COLUMN#) AS avg_#COLUMN#, AVG(#COLUMN#) AS avg_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ee26dfc78874a9bb48080fbf00f6e8d4d0a339dc",
                "query": "SELECT T2.Graphics_mode, COUNT(T1.Model_name) FROM chip_model AS T1 JOIN screen_mode AS T2 ON T2.Graphics_mode = T1.Model_name GROUP BY T2.Graphics_mode ORDER BY COUNT(T1.Model_name) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "229048d88c925ab54e356ad5ae880817f974b0ba",
                "query": "SELECT T1.Model_name, T2.Graphics_mode, COUNT(T3.Company_name) FROM chip_model AS T1 JOIN phone AS T3 ON T1.Model_name = T3.chip_model JOIN screen_mode AS T2 ON T3.screen_mode = T2.Graphics_mode WHERE T1.Launch_year > 2010 AND T2.Char_cells = '320x480' AND T3.Accreditation_level NOT IN (SELECT Accreditation_level FROM phone WHERE Accreditation_type = 'Type')",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0815d7f941bece560ca76aaf9e22c3cda3b5c809",
                "query": "SELECT COUNT(DISTINCT T1.Company_name), T1.Hardware_Model_name, T2.Graphics_mode FROM phone AS T1 JOIN screen_mode AS T2 ON T1.screen_mode = T2.Graphics_mode WHERE T1.Accreditation_level = 'High' OR T2.Hardware_colours BETWEEN 1000 AND 2000 OR T2.used_kb IN (SELECT T3.used_kb FROM screen_mode AS T3 WHERE T3.Type = 'Color') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "3d07e65888197ed2fec94afdad3cdcaa4f037be7",
                "query": "SELECT COUNT(DISTINCT Model_name), WiFi FROM chip_model WHERE Launch_year <= 2010 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ac66f574fd7484649f132e6df82eeba18245ffcc",
                "query": "SELECT T1.Model_name FROM chip_model AS T1 WHERE T1.Launch_year > 2010 OR T1.RAM_MiB BETWEEN 1024 AND 2048 OR T1.Model_name IN (SELECT Model_name FROM chip_model WHERE Launch_year > 2015) ORDER BY T1.Launch_year DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0217b0ea180b0014aba2ee0a3f650088626c1c72",
                "query": "SELECT T1.Model_name, T3.Company_name, T2.RAM_MiB FROM chip_model AS T1 JOIN phone AS T3 ON T1.Model_name = T3.chip_model JOIN screen_mode AS T2 ON T3.screen_mode = T2.Graphics_mode WHERE T2.Hardware_colours > 1 ORDER BY T1.Launch_year ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f799207ef92c6658e25e660f295478b7b3d46358",
                "query": "SELECT T1.Accreditation_type FROM phone AS T1 WHERE NOT EXISTS (SELECT 1 FROM chip_model AS T2 WHERE T2.Model_name = T1.chip_model AND COUNT(DISTINCT T2.Launch_year) = 1) ORDER BY T1.Accreditation_type ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND COUNT(DISTINCT #COLUMN#) = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2e098e3325a9056e142e6552a0f8bc875a403ca9",
                "query": "SELECT COUNT(DISTINCT T1.Graphics_mode), COUNT(DISTINCT T2.Company_name), COUNT(DISTINCT T2.Accreditation_type), T1.Char_cells FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb > 100 AND T2.Company_name = 'Apple' AND T2.Accreditation_level NOT IN (SELECT Accreditation_level FROM phone)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "7a4d7a60ebb57f0af9daa9b8095dee018e7c7c71",
                "query": "SELECT T3.Company_name, SUM(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T3 ON T1.Model_name = T3.chip_model WHERE T3.Accreditation_type = 'Normal' OR T1.Launch_year = 2005 OR T1.Model_name NOT IN ( SELECT Model_name FROM chip_model WHERE Launch_year > 2000 ) GROUP BY T3.Company_name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "e85422e49cf3ddf6448702e1152d1317fe02d606",
                "query": "SELECT AVG(T2.RAM_MiB) FROM phone AS T1 JOIN chip_model AS T2 ON T1.chip_model = T2.Model_name WHERE T2.Launch_year >= 2010",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# >= #VALUE#"
            },
            {
                "hash": "6860dac98dff6ec154a7a27da629ea5cabd38cc2",
                "query": "SELECT COUNT(DISTINCT Launch_year) FROM chip_model WHERE ROM_MiB < 256 ORDER BY Launch_year ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b3cda8a13893d3cb1b1449ecdc8314d19044973e",
                "query": "SELECT T1.Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE EXISTS (SELECT 1 FROM screen_mode AS T3 WHERE T3.Graphics_mode = T2.screen_mode AND T3.Hardware_colours > (SELECT AVG(Hardware_colours) FROM screen_mode))",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#))"
            },
            {
                "hash": "904312817e76c3825da41c84fa7d7aa61b120bbb",
                "query": "SELECT T1.Company_name, T2.Model_name, T3.Graphics_mode FROM phone AS T1 JOIN chip_model AS T2 ON T1.chip_model = T2.Model_name JOIN screen_mode AS T3 ON T1.screen_mode = T3.Graphics_mode WHERE (T2.RAM_MiB > 1000 OR T3.Graphics_mode = 1 OR EXISTS (SELECT 1 FROM phone AS T4 WHERE T4.Company_name = 'Apple')) ORDER BY T2.Launch_year DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#')) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "storm_record": [
            {
                "hash": "e0f0a2497f746e488c57ee94b781baf204acf166",
                "query": "SELECT T2.Region_name, SUM(T1.Number_Deaths) FROM storm AS T1 JOIN affected_region AS T3 ON T1.Storm_ID = T3.Storm_ID JOIN region AS T2 ON T3.Region_id = T2.Region_id WHERE T1.Max_speed > 10 OR T3.Region_id NOT IN (SELECT Region_id FROM region WHERE Region_code = 'ASIA') GROUP BY T2.Region_name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "c7e56660ef28520121b187f841e93718f6344858",
                "query": "SELECT Name AS storm_name FROM storm WHERE Storm_ID = 1",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "898697a56a5355493b605ef9fdc675b00bb12fa6",
                "query": "SELECT T1.Name, T1.Dates_active FROM storm AS T1 WHERE T1.Max_speed > 100 AND T1.Damage_millions_USD BETWEEN 1000 AND 10000 AND T1.Number_Deaths < 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "1731292e813cd58032b9a6bb6e02bd638ba8b795",
                "query": "SELECT COUNT(T1.Storm_ID), T2.Region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.Region_id = T2.Region_id GROUP BY T2.Region_name",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "ffbe4df83a08de7e3437cb30f806db32378cec95",
                "query": "SELECT MAX(T1.Number_Deaths) FROM storm AS T1 WHERE EXISTS (SELECT T2.Storm_ID FROM affected_region AS T2 WHERE T2.Storm_ID = T1.Storm_ID AND T2.Number_city_affected > 1) AND T1.Max_speed BETWEEN 100 AND 150 ORDER BY T1.Storm_ID ASC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a73f2a029cc0a3694cb3f83dc78e3f2a6a3bb7ac",
                "query": "SELECT T1.Name, SUM(T2.Number_city_affected) FROM affected_region AS T2 JOIN storm AS T1 ON T1.Storm_ID = T2.Storm_ID WHERE T2.Region_id <= 5 ORDER BY T1.Max_speed DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1c6ffa9cb335f44eeefb347d93f9d6f964f42778",
                "query": "SELECT T1.Region_name FROM region AS T1 INNER JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id INNER JOIN storm AS T3 ON T2.Storm_ID = T3.Storm_ID WHERE T3.Number_Deaths < 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "8cb49a19e42d747055dd4f74e06e52f2a9ca9526",
                "query": "SELECT MAX(Number_Deaths) FROM storm WHERE Max_speed <= 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "868153eab77d67fe2af87b8afa82a18d91ad73d5",
                "query": "SELECT COUNT(DISTINCT T1.Region_id), COUNT(DISTINCT T2.Region_id), COUNT(DISTINCT T1.Storm_ID) FROM affected_region AS T1 JOIN storm AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Number_city_affected = 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "aee1bcb7cd4ab3c0afd5a3a6f6331c25a556722c",
                "query": "SELECT T1.Name, COUNT(T2.Region_id) FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Max_speed <= 100",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "94d6ccbf6f75172d6f206099b01965ffbead8002",
                "query": "SELECT COUNT(DISTINCT T1.Region_name), COUNT(T2.Storm_ID) FROM region AS T1 JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id WHERE T2.Storm_ID = 1 AND EXISTS (SELECT 1 FROM storm AS T3 WHERE T3.Storm_ID = T2.Storm_ID AND T3.Max_speed > 100)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "56275ccdbfa5e53169c71fea07864d3a7644ff35",
                "query": "SELECT MIN(T1.Max_speed), COUNT(DISTINCT T1.Name) FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Damage_millions_USD >= 10 ORDER BY T1.Max_speed ASC",
                "template": "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "94354494651768288d87edae4fe0ba8330921a4f",
                "query": "SELECT T1.Region_name, COUNT(DISTINCT T3.Storm_ID), T3.Number_city_affected FROM region AS T1 JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id JOIN storm AS T3 ON T2.Storm_ID = T3.Storm_ID WHERE T3.Max_speed BETWEEN 20 AND 50 ORDER BY T3.Number_city_affected ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4c1fd92cd8d5cc0fc36a3cf9d808d102c5e73dd9",
                "query": "SELECT T1.Region_code FROM region AS T1 JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id JOIN storm AS T3 ON T2.Storm_ID = T3.Storm_ID WHERE T3.Max_speed = 100 AND T3.Damage_millions_USD = 1000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b613d13c1abcc16321254ba1246dba8492987833",
                "query": "SELECT COUNT(DISTINCT T1.Region_name), COUNT(DISTINCT T2.Storm_ID), COUNT(DISTINCT T3.Number_city_affected) FROM region AS T1 JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id JOIN storm AS T3 ON T2.Storm_ID = T3.Storm_ID WHERE T3.Damage_millions_USD < 10000 ORDER BY COUNT(DISTINCT T1.Region_name) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "061a12aaee11dec395936604696611f3c2f95011",
                "query": "SELECT Name FROM storm WHERE Number_Deaths > (SELECT AVG(Number_Deaths) FROM storm) OR Damage_millions_USD > 50 OR Max_speed > (SELECT MAX(Max_speed) FROM storm) ORDER BY Damage_millions_USD DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# > #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5a2ee77a0b41bc0b94d5be878bc875eab292cf8d",
                "query": "SELECT Name FROM storm WHERE Damage_millions_USD > 10 ORDER BY Name ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a80dbc6d0a96c00ce156e6f394baeace29e625d8",
                "query": "SELECT Name FROM storm WHERE Storm_ID IN (SELECT Storm_ID FROM affected_region WHERE Number_city_affected > 10) ORDER BY Damage_millions_USD DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fcc6cdc3e5caee446852be5620b8b2e3c8301286",
                "query": "SELECT COUNT(DISTINCT Name), SUM(Max_speed) FROM storm WHERE Number_Deaths NOT BETWEEN 100 AND 1000 AND Name = 'Typhoon' AND Storm_ID NOT IN (SELECT Storm_ID FROM affected_region WHERE Number_city_affected > 100) UNION ALL SELECT COUNT(DISTINCT Name), SUM(Max_speed) FROM storm WHERE Name = 'Hurricane' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) UNION ALL SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "513656be579cec3e10cc6030dab919994c2c66f7",
                "query": "SELECT SUM(Damage_millions_USD) FROM storm WHERE Max_speed BETWEEN 10 AND 20 LIMIT 5",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c3fb033f3de1208ef6a5a0773abd13670e4f7597",
                "query": "SELECT T1.Name, T2.Region_name FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "16f667d7f5e19df1553dd05ef5dd73cd6e26d34f",
                "query": "SELECT COUNT(DISTINCT T1.Storm_ID), SUM(T1.Damage_millions_USD) FROM affected_region AS T1 INNER JOIN storm AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Region_id != 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "5417d79a48377c2408c940745fb6d533954be4e4",
                "query": "SELECT T1.Storm_ID, T2.Region_name FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Max_speed > (SELECT AVG(Max_speed) FROM storm) ORDER BY T1.Storm_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bf1d5957b11dd39c674820833009994ef5c3a306",
                "query": "SELECT T1.Name FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T2.Number_city_affected > 5 AND T1.Max_speed BETWEEN 50 AND 100 AND T2.Region_id NOT IN (SELECT T3.Region_id FROM region AS T3 WHERE T3.Region_name = 'North') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "ea408a915eeacf43c2a752d239f1a0b7a604a236",
                "query": "SELECT T1.Name, T2.Region_name FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID JOIN region AS T3 ON T2.Region_id = T3.Region_id WHERE T1.Max_speed > 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "flight_1": [
            {
                "hash": "b8429800f2a067972bb1f5f88080afb4d0d11668",
                "query": "SELECT E.name, COUNT(*), AVG(C.eid) FROM Employee AS E JOIN Certificate AS C ON E.eid = C.eid JOIN Aircraft AS A ON C.aid = A.aid WHERE E.salary < 50000",
                "template": "SELECT #COLUMN#, COUNT(*), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "2a53e1364c9a522f4893f22da3f6455448420d44",
                "query": "SELECT aid, departure_date FROM flight WHERE departure_date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY departure_date ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5135b401bf6abb678a239492b7d0d15adc715776",
                "query": "SELECT T1.aid, COUNT(T2.eid), T3.name FROM flight AS T1 JOIN certificate AS T2 ON T1.aid = T2.aid JOIN employee AS T3 ON T2.eid = T3.eid GROUP BY T1.aid LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ba0d0b1940981b46012f39777d2f13023aea7e4b",
                "query": "SELECT T1.name FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "cda143f118d46b300f048549ef6224e6008a6385",
                "query": "SELECT T1.name FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid WHERE T1.distance > 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "c3f04818575f1600d61b3e87083368bb7f3402b7",
                "query": "SELECT T1.distance, T2.distance FROM flight AS T1 JOIN flight AS T2 ON T1.distance >= T2.distance ORDER BY T1.distance ASC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8eb5d0c2cd225dfe64605108f79a544fb6caa75b",
                "query": "SELECT COUNT(f.price), f.origin, f.distance FROM flight AS f WHERE f.price > 100 AND f.distance BETWEEN 500 AND 1000 AND f.aid IN ( SELECT aid FROM aircraft WHERE distance > 1000 ) GROUP BY f.origin",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "a3c85ea162ee330394298d93a24a12021c56ee74",
                "query": "SELECT COUNT(DISTINCT T2.aid), T1.aid, T1.distance FROM aircraft AS T1 INNER JOIN flight AS T2 ON T1.aid = T2.aid WHERE T1.distance != 1000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "5120b82faf140cfd2c161b55c2e185d15cee50be",
                "query": "SELECT T1.name, SUM(T2.price) FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid GROUP BY T1.name HAVING SUM(T2.price) > 1000 LIMIT 5",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "658c3ca9b47eeb67fc2806cbadcddd156263e61f",
                "query": "SELECT T1.distance FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid WHERE T1.distance < 1000 AND T2.distance < 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "8240a89d63efbcc17246754117fd9ea97ac10da4",
                "query": "SELECT T1.name FROM aircraft AS T1 JOIN ( SELECT aid FROM flight WHERE price > 10000 ) AS T2 ON T1.aid = T2.aid ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AS \""
            },
            {
                "hash": "d6122d752ac7c685c0833055c8c12d369ac321c5",
                "query": "SELECT name FROM aircraft WHERE distance >= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "fda99cfd385b833644c836b45461f8398a697eed",
                "query": "SELECT COUNT(DISTINCT aid), COUNT(DISTINCT name) FROM aircraft WHERE name != 'Boeing' ORDER BY COUNT(DISTINCT aid) DESC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "2faf42137e5438dc7b5700c60015d78e330022bd",
                "query": "SELECT T1.aid FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid WHERE EXISTS ( SELECT T3.eid FROM employee AS T3 JOIN certificate AS T4 ON T3.eid = T4.eid WHERE T4.aid = T1.aid ) GROUP BY T1.aid HAVING COUNT(T2.name) = 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b43db6c3a524b3c55a4c96bb6ac8f8b872a7987f",
                "query": "SELECT MAX(distance) FROM flight WHERE distance > 1000 LIMIT 5",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9eb39ab9e4b1c66b88630a619803799e9d85b6a9",
                "query": "SELECT T1.aid, COUNT(DISTINCT T2.aid) FROM flight AS T1 JOIN flight AS T2 ON T1.aid = T2.aid WHERE T1.distance BETWEEN 1000 AND 2000 AND T1.price > 100 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "62a4d6217c104a6a2155dfc2f87b5380a8213d31",
                "query": "SELECT T1.distance FROM flight AS T1 WHERE T1.distance BETWEEN 1000 AND 2000 AND T1.aid IN (SELECT T2.aid FROM aircraft AS T2 WHERE T2.distance > 1500) AND T1.price NOT IN (SELECT T3.price FROM flight AS T3 WHERE T3.origin = 'New York')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f4b8f5f3ffc963c99c1460a9114364573e8f057c",
                "query": "SELECT T1.destination FROM flight AS T1 WHERE T1.aid NOT IN ( SELECT T2.aid FROM aircraft AS T2 WHERE T2.distance > 1000 ) ORDER BY T1.distance DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d8c878e1e0b0019e161a918dd9a40f9272a2000b",
                "query": "SELECT COUNT(T1.flno), SUM(T2.distance) FROM flight AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid JOIN certificate AS T3 ON T2.aid = T3.aid JOIN employee AS T4 ON T3.eid = T4.eid WHERE T1.price > 10000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "952cf6347da527cc8bdaf68bb93f292eef90a178",
                "query": "SELECT T1.name FROM aircraft AS T1 JOIN flight AS T2 ON T1.aid = T2.aid WHERE EXISTS ( SELECT 1 FROM employee AS T3 JOIN certificate AS T4 ON T3.eid = T4.eid WHERE T4.aid = T1.aid ) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "249820928c84565eb6b48bbef97e980e41dfc2da",
                "query": "SELECT T1.origin, T1.destination, T2.destination FROM flight AS T1 JOIN flight AS T2 ON T1.origin = T2.destination AND T1.flno != T2.flno LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "948282d77bff3e1dd0a7cee0e1f5f30e9aff81d2",
                "query": "SELECT T1.distance * 2, T2.distance * 2, T1.distance + T2.distance FROM flight AS T1 JOIN flight AS T2 ON T1.aid = T2.aid WHERE T1.distance >= 1000 LIMIT 10",
                "template": "SELECT #COLUMN# * #VALUE#, #COLUMN# * #VALUE#, #COLUMN# + #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fd931edc9c464600fd59bfc9d173685fe24a0026",
                "query": "SELECT name FROM Employee WHERE salary > 100000 OR eid = 101 OR name = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "3cf2595711f1d41854807140a0d468fa27d509ff",
                "query": "SELECT COUNT(DISTINCT T1.aid), COUNT(*) FROM flight AS T1 WHERE T1.distance > 1000 AND T1.distance < 3000 AND T1.aid IN (SELECT aid FROM aircraft AS T2 WHERE T2.distance > 2000)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "323fbb36a4a41a02e3bef9b95bcd7d8235aa3260",
                "query": "SELECT T1.eid FROM employee AS T1 WHERE EXISTS ( SELECT 1 FROM certificate AS T2 WHERE T2.eid = T1.eid AND T2.aid IN ( SELECT aid FROM aircraft WHERE distance > 1000 ) ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ) LIMIT #VALUE#"
            }
        ],
        "soccer_2": [
            {
                "hash": "2fb994ba0d31e45979333d1b13d0c9f19701927c",
                "query": "SELECT pID FROM Player WHERE yCard = '2019-2020' AND HS = 12 ORDER BY pID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5705b1a02817e720c734946937fc33040f08bea0",
                "query": "SELECT COUNT (DISTINCT cName) , COUNT (pID) FROM College WHERE state = 'NY' ORDER BY enr DESC",
                "template": "SELECT COUNT (#COLUMN#) , COUNT (#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "97b73cd3128459d9a5e8a5ea056d2465b8ec4c0f",
                "query": "SELECT T1.pName FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID JOIN College AS T3 ON T2.cName = T3.cName WHERE T3.state != 'New York' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f0765a54d762b38292fb49ff527871afbc8897f9",
                "query": "SELECT MIN(T.enr) FROM College AS T WHERE T.state = 'CA' LIMIT 5",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "89b529e016f5fc9f20abb27ef4fd68584667333a",
                "query": "SELECT T1.cName, COUNT(T2.pID) FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T2.pID IN (SELECT pID FROM Player WHERE HS > 100 AND yCard = 'Senior') GROUP BY T1.cName ORDER BY COUNT(T2.pID) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#') GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "a55f341fe3fa7e1b6a58ded63c1bb76de9212821",
                "query": "SELECT MIN(T.enr) FROM College AS T GROUP BY T.state ORDER BY MIN(T.enr) DESC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC"
            },
            {
                "hash": "5c996b4dde983872de27c42559015407cdf507b3",
                "query": "SELECT COUNT(DISTINCT pID) FROM Tryout WHERE decision = 'yes' AND cName = 'Stanford'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT pName FROM Player WHERE HS != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "defa0e7e4bd9d2197a67812ec267b58c37249815",
                "query": "SELECT T1.pName, T2.cName, COUNT(T3.cName) FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID JOIN College AS T3 ON T2.cName = T3.cName WHERE T1.HS > 25",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "214796e4c99fd9c5cfe66fdb5f78979350cb9512",
                "query": "SELECT COUNT(DISTINCT cName) FROM Tryout WHERE decision <= 'yes' ORDER BY cName DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "46740f5f84f72efaaaeac0ae9f5fd3de745a4d91",
                "query": "SELECT COUNT(DISTINCT T1.cName), SUM(T1.enr) FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T1.enr >= 5000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c94e2d3d5877f97387acd31259af8f034dd76b20",
                "query": "SELECT COUNT(DISTINCT T1.pID), T2.enr FROM Tryout AS T1 JOIN College AS T2 ON T1.cName = T2.cName WHERE T1.decision = 'yes' OR T2.state = 'CA' OR T2.enr BETWEEN 5000 AND 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "9828b14ec7e4b7b6a8c3c9d454a37468f468f8e2",
                "query": "SELECT T.cName FROM College AS T WHERE T.state = 'CA' AND T.enr BETWEEN 1000 AND 5000 AND T.cName = 'Stanford' ORDER BY T.enr DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T WHERE T.#COLUMN# = #VALUE# AND T.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND T.#COLUMN# = #VALUE# ORDER BY T.#COLUMN# DESC"
            },
            {
                "hash": "357ec3bf1d89de285003686d7e47ca42849eb6a4",
                "query": "SELECT T1.cName FROM College AS T1 WHERE T1.state = 'CA' OR T1.state = 'NY' ORDER BY T1.enr DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "65986ddc2ae9aa5e26653608aa9084a7e6a94177",
                "query": "SELECT COUNT(DISTINCT pID), enr FROM College WHERE enr BETWEEN 1000 AND 2000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "152877c6484ae47dd6207d1ca3f1ba50db453354",
                "query": "SELECT state FROM College GROUP BY state HAVING MAX enr = ( SELECT MAX enr FROM College ) ORDER BY state ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e10b6ae96e58e05963ffd2086bdecb91c779652b",
                "query": "SELECT T1.pName, T2.cName FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID JOIN College AS T3 ON T2.cName = T3.cName WHERE T3.enr <= 10000 ORDER BY T3.enr ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "21929334399a6d8696f8468f93bb43ef8745bb10",
                "query": "SELECT * FROM Tryout WHERE EXISTS (SELECT 1 FROM College WHERE Tryout.cName = College.cName AND state = 'CA')",
                "template": "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1943f668abc0fba49589bdd50788f0f2a4da8648",
                "query": "SELECT pName FROM Player WHERE HS != 'AL' ORDER BY pID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f713d53f6ec312d84b161fa542cb4646f7d9d857",
                "query": "SELECT T1.cName, T2.pName FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T2.pID = 1 AND T1.enr BETWEEN 1000 AND 2000 AND EXISTS (SELECT 1 FROM Player AS T3 WHERE T3.pID = T2.pID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "529fa89bef07ef909b1e3ea46f74988e2fa5f520",
                "query": "SELECT T1.pName FROM Player AS T1 WHERE T1.pName BETWEEN 'John' AND 'Michael' OR T1.pID IN (SELECT T2.pID FROM Tryout AS T2 WHERE T2.decision = 'accepted') GROUP BY T1.pName HAVING MAX(T1.yCard) = 'Senior' ORDER BY T1.pName DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "65d0c49b2137c335b0d91abe8235d356b4550673",
                "query": "SELECT T2.state, AVG(T1.enr) FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName JOIN Player AS T3 ON T2.pID = T3.pID WHERE T3.yCard = 'senior' AND T2.decision = 'admit' AND T1.enr BETWEEN 1000 AND 2000 GROUP BY T2.state HAVING AVG(T1.enr) > 1500 ORDER BY AVG(T1.enr) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "e4ab187cf23025ffe1846f2fca16baf4e5cab46b",
                "query": "SELECT T1.cName, T2.pName, COUNT(T3.pID), T3.decision FROM College AS T1 JOIN Tryout AS T3 ON T1.cName = T3.cName JOIN Player AS T2 ON T2.pID = T3.pID WHERE T2.yCard != 'Junior' ORDER BY T2.pName ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e35e760e0d63e9a7b59f207c76c1e0c17388f88e",
                "query": "SELECT T1.state, MIN(T2.enr) FROM College AS T1 JOIN Tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision <= 'yes' GROUP BY T1.state ORDER BY T1.state ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ce4a6c38bd489f92fe2291e83bb797ce958925c0",
                "query": "SELECT T1.pName, T2.state FROM Player AS T1 JOIN College AS T2 ON T2.cName = ( SELECT T3.cName FROM Tryout AS T3 WHERE T3.pID = T1.pID AND T3.decision = 'yes' ) AND T1.HS > 10 ORDER BY T2.state ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7f5ae7b5c7a7ef0472b45815ec02723021fe41d6",
                "query": "SELECT T1.cName FROM College AS T1 WHERE T1.state = 'CA' OR T1.enr BETWEEN 1000 AND 2000 OR EXISTS (SELECT T2.pID FROM Player AS T2 WHERE T2.HS = 3 AND T2.pID = (SELECT T3.pID FROM Tryout AS T3 WHERE T3.cName = T1.cName)) ORDER BY T1.cName ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "796af81f39917f1a2e438bd2b0a9313ae9cd0503",
                "query": "SELECT COUNT(DISTINCT T1.pID), COUNT(T1.yCard), T2.cName FROM Player AS T1 JOIN Tryout AS T2 ON T1.pID = T2.pID JOIN College AS T3 ON T2.cName = T3.cName WHERE T1.yCard = 'Freshman' AND T2.pPos = 'Point Guard' AND T3.enr BETWEEN 10000 AND 20000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            }
        ],
        "activity_1": [
            {
                "hash": "ea03f7910790e1fe2aec7ce9edf4d443829586b6",
                "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid WHERE NOT EXISTS (SELECT 1 FROM Faculty_Participates_in AS T3 WHERE T3.actid = T1.actid) ORDER BY T1.activity_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "95cd7f74922014167d3d7cc34e4add4f66663949",
                "query": "SELECT T1.actid, T2.activity_name FROM Activity AS T1 JOIN Activity AS T2 ON T1.actid = T2.actid ORDER BY T1.actid ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "105c8cb3d9be69f0fa3981a1592deadbdf8261e5",
                "query": "SELECT activity_name, COUNT(actid) FROM Activity WHERE actid = 1 ORDER BY actid DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3f9208b279a0c30c93f8072a67e36b5f9b010f3a",
                "query": "SELECT T2.activity_name FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.stuid JOIN Activity AS T3 ON T2.actid = T3.actid WHERE T1.Age BETWEEN 20 AND 30",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e1102e2007f8bc5fa20f086a94c61ef9908e4931",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.stuid WHERE T1.Age >= 20 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ea3e8a8e6687417067fde43697e14d4d0d581478",
                "query": "SELECT COUNT(S.StuID) FROM Student AS S JOIN Participates_in AS P ON S.StuID = P.stuid WHERE S.Age BETWEEN 20 AND 25 AND EXISTS (SELECT 1 FROM Faculty_Participates_in AS F WHERE F.actid = P.actid)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "08e8c7f81999ca7b4424c653d80f1a05a44c9dc1",
                "query": "SELECT T1.activity_name FROM Activity AS T1, Activity AS T2 WHERE T1.actid = T2.actid AND T1.actid BETWEEN 100 AND 200 AND EXISTS (SELECT 1 FROM Activity WHERE activity_name = 'Tennis') ORDER BY T1.activity_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5c6e0e4a192a6a193d36040fbd8cad5d747d94e7",
                "query": "SELECT COUNT(DISTINCT T2.stuid), COUNT(DISTINCT T2.actid), COUNT(DISTINCT T1.actid) FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid WHERE T1.actid BETWEEN 100 AND 200 AND T1.activity_name = 'Sports' AND T2.stuid > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "18d9eab6ad8bd9e478ff1d678a9798c89549bdb4",
                "query": "SELECT * FROM Student WHERE Age > 18 AND Age < 25 AND StuID NOT IN (SELECT stuid FROM Participates_in WHERE actid = 1) LIMIT 10",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "20f0e23a49352893dd13b459d2d9f0c9b5c5b7c8",
                "query": "SELECT COUNT(DISTINCT activity_name) , activity_name, activity_name FROM Activity WHERE activity_name = 'Tennis' AND activity_name = 'Tennis' ORDER BY activity_name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9d9d487f0c50e8e013dcda28cdb7ea796f7459b1",
                "query": "SELECT activity_name FROM Activity WHERE actid != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "2b977e8ceec2c64f1a939a5455cd44d6a0eddbab",
                "query": "SELECT COUNT(DISTINCT T1.actid), T2.LName, T3.Fname FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid JOIN Student AS T3 ON T2.stuid = T3.StuID WHERE T3.Age > 20 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7b632c43831fddd2fa78fb456932baebf89eb9e4",
                "query": "SELECT T1.LName, SUM(T2.stuid) FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.stuid JOIN Faculty_Participates_in AS T3 ON T2.actid = T3.actid WHERE T1.Sex != 'M' ORDER BY SUM(T2.stuid) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "d476fba77091036974477f46a46b926f0d68b6b8",
                "query": "SELECT activity_name FROM Activity WHERE actid <= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "03a70fe8065a8453b44063528c128c5f8cb37211",
                "query": "SELECT T4.activity_name, T1.LName, MAX(T1.Age), MAX(T3.Room) FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.stuid JOIN Faculty_Participates_in AS T3 ON T2.actid = T3.actid JOIN Activity AS T4 ON T3.actid = T4.actid WHERE T1.Age BETWEEN 20 AND 30 AND T3.Room = 'R101' AND NOT EXISTS ( SELECT 1 FROM Faculty WHERE FacID = T3.FacID AND Phone = 123456789 ) GROUP BY T4.activity_name, T1.LName ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d32435d5c0a612d5e315e1f4cc880f15457ad188",
                "query": "SELECT COUNT(T1.actid), T2.LName FROM Activity AS T1 INNER JOIN Faculty_Participates_in AS T2 ON T1.actid = T2.actid WHERE T1.activity_name != 'Sports'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "4a227c961539080d4f2f76daba3b658fc1bdf51c",
                "query": "SELECT COUNT(DISTINCT T1.actid), COUNT(T1.actid) FROM Activity AS T1 JOIN Faculty_Participates_in AS T2 ON T1.actid = T2.actid WHERE T2.FacID = 10 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "56f790af17c6b89ba4ba558e31b738cd1e74d6be",
                "query": "SELECT T1.activity_name, SUM(T2.stuid) FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid WHERE T2.stuid >= 10 GROUP BY T1.activity_name HAVING SUM(T2.stuid) > 50",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "fec1bf8780839bf7f62a718a26d062bad0f74930",
                "query": "SELECT COUNT(DISTINCT T1.LName) FROM Student AS T1 WHERE T1.Sex = 'M' AND T1.Age > 20 AND T1.StuID NOT IN (SELECT T2.stuid FROM Participates_in AS T2) ORDER BY T1.LName DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "21929334399a6d8696f8468f93bb43ef8745bb10",
                "query": "SELECT T1.activity_name FROM Activity AS T1 WHERE EXISTS (SELECT 1 FROM Faculty_Participates_in AS T2 WHERE T2.actid = T1.actid)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "82fc05f910d796e27ab320b89d98851c9fc598c7",
                "query": "SELECT T3.activity_name, COUNT(T1.stuid) FROM Participates_in AS T1 JOIN Activity AS T3 ON T1.actid = T3.actid JOIN Student AS T2 ON T1.stuid = T2.StuID WHERE T2.Sex = 'M' GROUP BY T3.activity_name ORDER BY COUNT(T1.stuid) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "9c0c65e25b0f4051cbdeb76cef7478603c537fad",
                "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid JOIN Student AS T3 ON T2.stuid = T3.StuID WHERE T1.actid BETWEEN 100 AND 200 OR T3.Age > 20 OR T3.Sex = 'F'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ba27cdf5276865d4416939dfbf2503be2170bcb5",
                "query": "SELECT COUNT(DISTINCT T2.LName) FROM Faculty_Participates_in AS T1 JOIN Faculty AS T2 ON T1.FacID = T2.FacID WHERE T2.Age < 30 GROUP BY T1.actid HAVING MIN(T2.Age)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# < #VALUE# GROUP BY T1.#COLUMN# HAVING MIN(T2.#COLUMN#)"
            },
            {
                "hash": "4f0331e10fdb34d7fe2054452deda5f838f81ffb",
                "query": "SELECT T1.activity_name, AVG(T1.actid) FROM Activity AS T1 WHERE T1.actid = 101 GROUP BY T1.activity_name HAVING AVG(T1.actid) = 101",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS  WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "028086bcb9f2b3183a9710d016dbdd2cd1b8d37f",
                "query": "SELECT COUNT(DISTINCT T3.LName), COUNT(DISTINCT T3.Fname), COUNT(DISTINCT T3.city_code) FROM Faculty_Participates_in AS T1 JOIN Activity AS T2 ON T1.actid = T2.actid JOIN Student AS T3 ON T3.StuID = T2.actid WHERE T3.Major > 100 OR T3.Sex = 'M' OR NOT EXISTS (SELECT 1 FROM Faculty AS T4 WHERE T3.Major = T4.FacID) ORDER BY T3.Age DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "18e2a504bb3ede62480ea6ce24fedc01ffe92870",
                "query": "SELECT COUNT(*) FROM Student WHERE Age BETWEEN 20 AND 30 OR Sex = 'M' OR NOT EXISTS (SELECT 1 FROM Participates_in WHERE Participates_in.stuid = Student.StuID)",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "ccedbe67f60aaeb391f9d04e1a71d976e035f530",
                "query": "SELECT COUNT(DISTINCT T1.actid), SUM(T2.Age) FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid JOIN Student AS T3 ON T2.stuid = T3.StuID WHERE T3.Age >= 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "104aa6002b091817b7e964a4bab5e048c52cc61e",
                "query": "SELECT T1.actid FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid WHERE T1.actid > 1 AND T2.stuid = 10 AND NOT EXISTS (SELECT 1 FROM Faculty_Participates_in AS T3 WHERE T3.actid = T1.actid)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "849875698f0a2a3b8d7ccd05be3a27368f227823",
                "query": "SELECT COUNT(DISTINCT T1.stuid), T2.activity_name FROM Participates_in AS T1 JOIN Activity AS T2 ON T1.actid = T2.actid WHERE T1.stuid != 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            }
        ],
        "apartment_rentals": [
            {
                "hash": "31a90ce2a6f642a85015f4dc73aa3703512936bf",
                "query": "SELECT apt_id FROM Apartments WHERE apt_type_code = 'Studio' OR apt_number BETWEEN 1 AND 10 OR apt_number IN (SELECT apt_number FROM Apartments WHERE bedroom_count = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "808ca1e2ab028e56f049a0174d00f5ccc7d4088d",
                "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_phone < '1234567890' ORDER BY building_short_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "aaa3ee9a9ab93cb882e570d72c999b21051d861b",
                "query": "SELECT COUNT(DISTINCT T1.building_id) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bedroom_count > 3 OR T1.building_phone = '1234567890' OR T2.bathroom_count BETWEEN 2 AND 4",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "57fa51ba843b8b199aaf402266a9edd1ae74fb08",
                "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_phone != '123456789'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "c8134cd5778b10700f88608b36a01df428bee5df",
                "query": "SELECT * FROM Apartment_Buildings AS T1 WHERE T1.building_id BETWEEN 1 AND 10 OR T1.building_short_name = 'ABC' OR T1.building_phone = '123-456-7890' LIMIT 5",
                "template": "SELECT * FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3dc05d9a06732ea5673f912d0193509a559a243e",
                "query": "SELECT COUNT(*) FROM Apartment_Bookings WHERE booking_start_date BETWEEN '2020-01-01' AND '2020-12-31' OR booking_status_code IN (SELECT booking_status_code FROM Apartment_Bookings WHERE booking_start_date < '2020-01-01') LIMIT 100",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "78141e814f732802d80807ac2879474c0b574d1c",
                "query": "SELECT T1.apt_number FROM Apartments AS T1 WHERE T1.bathroom_count > 2 OR T1.bathroom_count BETWEEN 1 AND 3 OR T1.bedroom_count = 4 ORDER BY T1.apt_number ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT DISTINCT T1.building_short_name FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name != 'test'",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "740423d424c8b7852a06b8cadd33d0472cf426e7",
                "query": "SELECT AVG(T1.bedroom_count) FROM Apartments AS T1 JOIN Apartment_Facilities AS T2 ON T1.apt_id = T2.apt_id WHERE T1.building_id > 100 AND T1.room_count BETWEEN 2 AND 5 OR T2.facility_code = 'GYM'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "489f556b613eb6f51e8e5858c4591dbb6df468a4",
                "query": "SELECT T1.building_full_name, T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count >= 2 ORDER BY T1.building_full_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0fc263cecba1df73c5961314edf5ca2a33a71ab1",
                "query": "SELECT COUNT(apt_id) FROM Apartments WHERE bedroom_count >= 3",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "211e2d5db21d0481c48b68d28406c4e659241952",
                "query": "SELECT T1.building_full_name, COUNT(DISTINCT T2.apt_type_code) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bedroom_count >= 3 ORDER BY T1.building_full_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d442c8047f7a8e7a31cb15f6cd3b3520752706f7",
                "query": "SELECT COUNT(apt_number) FROM Apartments WHERE apt_type_code = 'Studio'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "6161b6d5b85486bb56db36c09b43856164f6a977",
                "query": "SELECT COUNT(DISTINCT T1.apt_id) FROM Apartments AS T1 JOIN Apartment_Facilities AS T2 ON T1.apt_id = T2.apt_id WHERE T1.bedroom_count > 2 ORDER BY T1.apt_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2e942b388d4984c75b9704d21c9090f95d258a5a",
                "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_id NOT IN (SELECT building_id FROM Apartments WHERE apt_id IN (SELECT apt_id FROM Apartment_Facilities WHERE facility_code = 'gym'))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "ac7fb47084594a65858ecec8d1f64e0561913b76",
                "query": "SELECT building_short_name FROM Apartment_Buildings AS T1 WHERE T1.building_full_name = 'ABC Building' AND T1.building_short_name BETWEEN 'Apt 1' AND 'Apt 10' AND T1.building_id NOT IN ( SELECT T2.building_id FROM Apartments AS T2 ) ORDER BY T1.building_short_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "28a589c3db62482d9928eb44ee729bfcbb10ad38",
                "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_full_name > 'Apartment'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "44680dffa3dcc7a2254416911c4bbee356d09543",
                "query": "SELECT COUNT(apt_id) FROM Apartments WHERE bedroom_count <= 3 ORDER BY apt_id DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "873813a3cb0489d2437b2a559bc929d32226ee3a",
                "query": "SELECT COUNT(apartment_id) AS apartment_id, SUM(total_lease_amount) AS total_lease_amount FROM ( SELECT T1.building_id AS apartment_id, T2.apt_number * T3.monthly_rent AS total_lease_amount FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id JOIN Apartment_Facilities AS T3 ON T2.apt_id = T3.apt_id ) WHERE total_lease_amount BETWEEN 1000 AND 2000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM ( SELECT #COLUMN# AS #COLUMN#, #COLUMN# * #COLUMN# AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ff0b3a07395b076502fb33e0821751cf3552502b",
                "query": "SELECT T1.building_full_name, COUNT(T1.building_short_name) FROM Apartment_Buildings AS T1 GROUP BY T1.building_full_name HAVING COUNT(T1.building_short_name) >= 2 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f52b336637f2d0387dd07c256be052fbc03031c0",
                "query": "SELECT apt_type_code FROM Apartments WHERE building_id != 1 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "38b6919a4e26f2437736c3971a8ee1e9ebac0d1d",
                "query": "SELECT T1.building_full_name FROM ( SELECT T2.building_full_name, AVG(T1.room_count) AS average_room_count FROM Apartments AS T1 INNER JOIN Apartment_Buildings AS T2 ON T1.building_id = T2.building_id WHERE T2.building_address LIKE 'Park%' GROUP BY T2.building_full_name ) AS T1 WHERE T1.average_room_count > 2",
                "template": "SELECT #COLUMN# FROM ( SELECT #COLUMN#, AVG(#COLUMN#) AS average_#COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' GROUP BY #COLUMN# ) AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "0c684672b6aac8c9df26f88cc4aa8443cde9a9c5",
                "query": "SELECT T1.building_address, COUNT(T2.apt_id) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_phone = '123-456-7890' AND EXISTS ( SELECT * FROM Apartment_Facilities AS T3 WHERE T2.apt_id = T3.apt_id AND T3.facility_code = 'Gym' )",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# )"
            },
            {
                "hash": "4ae1437b45843b9d7535f41f94e572ba06d98825",
                "query": "SELECT COUNT(T1.apt_id), COUNT(T2.apt_id), T4.building_short_name FROM Apartments AS T1 JOIN Apartment_Facilities AS T2 ON T1.apt_id = T2.apt_id JOIN View_Unit_Status AS T3 ON T1.apt_id = T3.apt_id JOIN Apartment_Buildings AS T4 ON T4.building_id = T1.building_id WHERE T3.status_date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.facility_code = 'FACILITY_CODE_1' OR T1.room_count > 3",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "c4b82f655e748bc85db1c947d8baf57025d4b246",
                "query": "SELECT T1.building_short_name FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_phone = '1234567890' AND T2.bedroom_count > 2 AND NOT EXISTS (SELECT 1 FROM Guests AS T3 WHERE T3.gender_code = 'M') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c4533e7216ae16d0e9f95520fb975b8baca6746c",
                "query": "SELECT T1.building_short_name, COUNT(T2.apt_id) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id JOIN Apartment_Facilities AS T3 ON T2.apt_id = T3.apt_id WHERE T1.building_phone BETWEEN '123456789' AND '987654321' OR T3.facility_code = 'pool' OR EXISTS ( SELECT apt_id FROM Apartment_Bookings AS T4 WHERE T4.apt_id = T2.apt_id AND T4.booking_status_code = 'confirmed' ) GROUP BY T1.building_short_name ORDER BY COUNT(T2.apt_id) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "c216b513c38d0d1bf27f5a8a7a8d9565cdef0366",
                "query": "SELECT MAX building_phone FROM Apartment_Buildings WHERE building_id = 1",
                "template": "SELECT MAX #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            }
        ],
        "dog_kennels": [
            {
                "hash": "8f6fdc5b47ccb1ee4c243bd8edb4ee5fdd3c1838",
                "query": "SELECT T1.breed_name FROM Breeds AS T1 WHERE T1.breed_code NOT IN ( SELECT T2.breed_code FROM Dogs AS T2 GROUP BY T2.breed_code HAVING SUM(T2.age) > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "efe578c1b125ab067a2aaaa89394be33efccfe60",
                "query": "SELECT T1.breed_name FROM (SELECT T2.breed_name, T1.dog_id FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code) AS T1 WHERE T1.dog_id NOT IN (SELECT T2.dog_id FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id)",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "d36a0245d57ad319af622b6fcf3ab23427690377",
                "query": "SELECT COUNT(*) FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id WHERE T1.cost_of_treatment > 100 LIMIT 5",
                "template": "SELECT COUNT(*) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.breed_name FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code WHERE T1.breed_name = 'Labrador'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "998ce638f24da1f062a34388c60fc4e34a6cdac4",
                "query": "SELECT COUNT(DISTINCT T1.treatment_type_code) FROM Treatments AS T1 WHERE T1.date_of_treatment > '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "71f660931532786c3f6323a00e4163d3c992785b",
                "query": "SELECT T1.breed_name, T2.cost_of_treatment FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id WHERE T1.breed_code = 'ABC' AND T3.cost_of_treatment > (SELECT AVG(cost_of_treatment) FROM Treatments) AND T3.date_of_treatment > (SELECT date_of_treatment FROM Treatments WHERE treatment_id = 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2a1672eab22f9b1d56f5a4c48fc93ff4ead578e0",
                "query": "SELECT T1.dog_id FROM Dogs AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id WHERE NOT EXISTS (SELECT 1 FROM Treatments WHERE Treatments.dog_id = T1.dog_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "1f8549ca03b4ccb174a584e905d80214f1d89cde",
                "query": "SELECT T1.first_name, T2.name FROM Owners AS T1 INNER JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age BETWEEN 3 AND 10 AND T2.weight IN (SELECT T3.size_description FROM Sizes AS T3 WHERE T3.size_code = T2.size_code) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "08d9e16df6859d34e8d81468d98a5a6c98089adb",
                "query": "SELECT T1.breed_name, SUM(T2.cost_of_treatment), SUM(T3.charge_amount) FROM Breeds AS T1 INNER JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code INNER JOIN Charges AS T3 ON T2.dog_id = T3.charge_id WHERE T2.age BETWEEN 2 AND 5 AND T2.gender NOT IN (SELECT gender FROM Dogs WHERE abandoned_yn = 'Y') AND T3.charge_amount > 50 ORDER BY T1.breed_name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "66d3593ffe4c580d2842fdf2dc4225e3db2158e5",
                "query": "SELECT COUNT(DISTINCT T1.breed_name) , COUNT(DISTINCT T1.breed_code) , COUNT(T2.treatment_id) FROM Breeds AS T1 JOIN Treatments AS T2 ON T2.treatment_type_code = T1.breed_code WHERE T2.cost_of_treatment >= 200 LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1187e15fdc43c462644e974e66d3b584a69c7fb3",
                "query": "SELECT breed_name, breed_code FROM Breeds ORDER BY breed_code DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b098498040ab62c3204365196bb518d91d3a4c54",
                "query": "SELECT COUNT(DISTINCT T1.professional_id), T2.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id WHERE T2.date_of_treatment <= '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "0f2d47fe2b45626202d6acfb5790e62f6dbca3b1",
                "query": "SELECT T1.dog_id FROM Dogs AS T1 WHERE T1.breed_code IN (SELECT T2.breed_code FROM Breeds AS T2 WHERE T2.breed_name = 'Labrador')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6ac7d64c91f324bd39a8d2acc17989e00aeb773a",
                "query": "SELECT * FROM Owners WHERE last_name = 'Smith' OR first_name = 'John' OR email_address BETWEEN 'a' AND 'z'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "645c52ead5d435e8e6dad981c0327ca13947894c",
                "query": "SELECT COUNT(DISTINCT T1.treatment_type_code) FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code WHERE T2.treatment_type_description <= 'some description' ORDER BY T1.treatment_type_code ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "66065960f21a8aa64e17672440198fb8ddaf57d5",
                "query": "SELECT T1.name, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id WHERE T1.age > 5 OR T2.city = 'New York' AND NOT EXISTS (SELECT 1 FROM Treatments AS T3 WHERE T3.dog_id = T1.dog_id AND T3.cost_of_treatment > 1000) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "b0143d1f0ee1ef1d893a213b681a61d5dfae4d9d",
                "query": "SELECT breed_name FROM Breeds WHERE breed_name != 'Mixed'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "afe2a616cf56a08a703b61218f4bdc84c588323d",
                "query": "SELECT COUNT(DISTINCT breed_name) FROM Breeds WHERE breed_code > 10 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "658c3ca9b47eeb67fc2806cbadcddd156263e61f",
                "query": "SELECT T1.dog_id, T2.cost_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T2.cost_of_treatment < 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "1b2d92294396aaef5005f473b128ca0de2967b65",
                "query": "SELECT T1.first_name, SUM(T2.cost_of_treatment) FROM Owners AS T1 JOIN Treatments AS T2 ON T1.owner_id = T2.dog_id WHERE T1.owner_id = 1 OR T2.date_of_treatment BETWEEN '2020-01-01' AND '2020-12-31' AND NOT EXISTS (SELECT 1 FROM Professionals WHERE T2.professional_id = professional_id)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "c068083776a1d1fe259989420e6fca972a80e6ff",
                "query": "SELECT COUNT(T1.dog_id), T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code WHERE EXISTS (SELECT T3.treatment_id FROM Treatments AS T3 WHERE T3.dog_id = T1.dog_id)",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "91c0bd5b07cee93ce822756381810040d46a0cc0",
                "query": "SELECT T1.breed_name AS BreedName, COUNT(DISTINCT T2.dog_id) FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code WHERE T2.weight BETWEEN 10 AND 20 OR T2.age > 5 OR T2.gender = 'Male' GROUP BY T1.breed_name ORDER BY T1.breed_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# AS #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "33f0161e44790114c42a2c4ee9a99a67c97d8ace",
                "query": "SELECT T1.breed_code, T1.breed_name FROM Breeds AS T1 WHERE T1.breed_code > T2.size_code ORDER BY T1.breed_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c69f5cf6e5bbc0c3b51f11573fca8a4294faa98d",
                "query": "SELECT T1.first_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.breed_code = 'Golden Retriever' OR T2.age BETWEEN 1 AND 5 OR T2.gender NOT IN (SELECT DISTINCT T3.gender FROM Dogs AS T3 WHERE T3.breed_code = 'Poodle') ORDER BY T1.first_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ac8ac44a5e4e822e003e36ff2447eaea30ae9a78",
                "query": "SELECT Dogs.breed_code FROM Dogs AS T1 WHERE T1.breed_code != 'Mixed' ORDER BY T1.breed_code DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#' ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "57c3edffe2839c18b59a82aa50a5c310fd410111",
                "query": "SELECT dog_id FROM Dogs WHERE date_arrived BETWEEN '2020-01-01' AND '2020-12-31' OR weight = 'Small' OR abandoned_yn NOT IN (SELECT abandoned_yn FROM Owners WHERE owner_id > 100)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            }
        ],
        "network_2": [
            {
                "hash": "8baa48143b904cd95f5740b0e33c4b328e9a2e27",
                "query": "SELECT T1.city, T2.year, T3.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T3.name = T2.friend WHERE T1.gender = 'Male' OR T2.year > 2010 OR EXISTS (SELECT 1 FROM Person AS T4 WHERE T4.age > 30)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "2786a60c2c387eefc217fdf860db7a5bdbf3c321",
                "query": "SELECT name FROM Person WHERE city = 'New York' AND job = 'Engineer'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "973b6c015e7f3aadd8f3699bff322619e2e78ac2",
                "query": "SELECT name FROM Person WHERE name NOT IN (SELECT T1.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "7e49feeac4400709515e6ec14bf5d9a67c216f6d",
                "query": "SELECT T1.name, COUNT(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T2.friend = T3.name WHERE T1.age BETWEEN 20 AND 30 AND T1.city IN ('New York', 'Chicago') AND T1.job IN (SELECT T4.job FROM Person AS T4 WHERE T4.gender = 'Female') LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (#VALUE#, #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "f78a3c65789422f9cb737e03aa7b584809dc3a5d",
                "query": "SELECT name FROM Person WHERE age < 30 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d6f7d16b8369bc7d0b81e3aee8eeb11f6ba5ad88",
                "query": "SELECT T1.name, COUNT(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.age <= 30",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "14271ff6051062e0f1acee1835d944968f9e3864",
                "query": "SELECT COUNT(DISTINCT T1.friend) FROM PersonFriend AS T1 WHERE T1.year < 2000 ORDER BY T1.name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c795b35b01f5dc2f3e3b50554c9196a4e8ff4331",
                "query": "SELECT T1.name FROM Person AS T1 WHERE T1.age > 25 OR T1.city = 'New York' OR NOT EXISTS (SELECT 1 FROM PersonFriend AS T2 WHERE T2.name = T1.name) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dd1644614b0efd74df0555e1252e08ce051e3019",
                "query": "SELECT T1.age, COUNT(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.age <= 30 GROUP BY T1.age ORDER BY T1.age ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d12f6adf21c93f77bf40114b362ee614414e0be8",
                "query": "SELECT T1.city, AVG(T1.age), SUM(T1.age), COUNT(T1.name) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T2.friend = T3.name WHERE T1.age BETWEEN 20 AND 30 OR T1.city = 'New York' OR T1.age > 40 LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7e7a84bc196818ea5736a7b116bd75a7679959e1",
                "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE NOT EXISTS (SELECT T3.friend FROM PersonFriend AS T3 WHERE T3.friend = 'John')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e9dbbca90ce98f974bbcc4fb3b4cc4a9df192b71",
                "query": "SELECT name FROM Person WHERE city NOT IN (SELECT city FROM Person WHERE job = 'Doctor')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "fff8096ca44257dba811284353db10cc4e439075",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.age BETWEEN 20 AND 30 OR T1.city = 'New York' OR T1.name NOT IN (SELECT name FROM Person WHERE job = 'Engineer') ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2e46674d1b82b257286b44eae90de0eb855143b4",
                "query": "SELECT name FROM Person WHERE name NOT IN (SELECT name FROM PersonFriend WHERE year = 2000) ORDER BY name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "49fa9fd7d92e6c7d5254ede90065e00b479d856b",
                "query": "SELECT T3.name, T1.name, MIN(T2.year) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T2.friend = T3.name GROUP BY T3.name, T1.name",
                "template": "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN#"
            },
            {
                "hash": "34e795fd0e7f328d9d9ff87721d04caad405bae5",
                "query": "SELECT T1.name, SUM(T2.year) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T2.friend = T3.name WHERE T2.year > 2000 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "160b7e64995c36a492e479f6a3251af6c6553ae6",
                "query": "SELECT T1.name, COUNT(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.age <= 25 ORDER BY COUNT(T2.friend) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "6439551fd55c81b8fc277d7362340bb0cd54653e",
                "query": "SELECT T1.name, COUNT(T2.friend), COUNT(T1.name) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.gender = 'M'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "92e6c1a4079dd49c9c4c2beac7d065b916283158",
                "query": "SELECT COUNT(DISTINCT job), AVG(age) FROM Person WHERE age BETWEEN 18 AND 65 OR city = 'New York' OR gender = 'Male'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "179f3a6d637ab3e8f23b9a477ba75ad1e68ca8c9",
                "query": "SELECT T1.name, COUNT(T2.year) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T2.friend = T3.name WHERE T1.age BETWEEN 20 AND 30 OR T2.year > 2010 AND T3.age > T2.year ORDER BY COUNT(T2.year) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# > #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "9ccdab3275c0ad0afd3759e016996a8309282bd3",
                "query": "SELECT T1.name, COUNT(T1.friend) FROM Person AS T2 INNER JOIN PersonFriend AS T1 ON T2.name = T1.name WHERE T2.age > 20 GROUP BY T1.name HAVING COUNT(T1.friend) > 1",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT name FROM Person WHERE city != 'New York'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "2f938d08a6bf54c987411c6f147eca15ec5ad689",
                "query": "SELECT T1.name, COUNT(T2.friend), COUNT(T1.name) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.age < 20 AND T1.city = 'New York' AND T2.year IN (SELECT year FROM PersonFriend WHERE name = 'John') LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "002b6aab74c7e6cd09331bb6bf326eed694a5d34",
                "query": "SELECT T1.name, T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name JOIN Person AS T3 ON T3.name = T2.friend WHERE T1.age BETWEEN 20 AND 30 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "765f6ef3b436ce43f96fa9c17def7a7408e58b10",
                "query": "SELECT MIN(T1.age), T1.name FROM Person AS T1 WHERE T1.age > 20 LIMIT 5",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            }
        ],
        "car_road_race": [
            {
                "hash": "c06df78743435eda2a92f17661c5d5dadc46a90e",
                "query": "SELECT T1.Driver_Name, COUNT(T2.Road) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age < 40 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "25638b3ae7738c37edf403389c15d0bba900d66f",
                "query": "SELECT MAX(Age) FROM driver WHERE Age >= 30",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "073276258040080a2dc48c9528c836c4bebe3a50",
                "query": "SELECT Driver_Name, Driver_ID FROM Driver WHERE Driver_ID != 1 ORDER BY Driver_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2c8714b820a249ddd0aa35ea1461aa49525ad417",
                "query": "SELECT T1.Driver_Name, T2.Driver_Name FROM driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T1.Driver_Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "868a0d6819aab708ffd0065b2432c88d41f753d8",
                "query": "SELECT Driver_Name FROM driver AS T1 WHERE Age < 30 ORDER BY Driver_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c1f2c794612c0c1ea6b75e81a21eaa6335d40e6d",
                "query": "SELECT Age, COUNT(Driver_ID) FROM driver WHERE Driver_ID != 1 GROUP BY Age HAVING COUNT(Driver_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "4ecbcb56eac9f975fc98b7448c78288d837f99e2",
                "query": "SELECT T1.Driver_Name, AVG(T1.Age) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Constructor = 'Constructor1' AND T2.Winning_driver = 'Driver1' AND T1.Driver_ID BETWEEN (SELECT Driver_ID FROM driver WHERE Driver_Name = 'Driver2') AND (SELECT Driver_ID FROM driver WHERE Driver_Name = 'Driver3') GROUP BY T1.Driver_Name HAVING AVG(T1.Age) > 30",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "34e2942dc7f45286dd1f4c3e07cb7822bff2a3ca",
                "query": "SELECT Driver_Name FROM driver WHERE Driver_ID = (SELECT Driver_ID FROM race WHERE Race_Name = 'Monaco') ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "51cb801090e985286b68fedfd959d98482e240e6",
                "query": "SELECT T1.Driver_Name, T2.Driver_Name FROM driver AS T1 JOIN driver AS T2 ON T1.Driver_ID != T2.Driver_ID GROUP BY T1.Driver_Name, T2.Driver_Name",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#, #COLUMN#"
            },
            {
                "hash": "8bd493143007ebc4cd9f1bc98399860ce780f617",
                "query": "SELECT Driver_Name, MIN(Age) FROM driver WHERE Age BETWEEN 20 AND 40 LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7eaf6f0c286421f31a902e4cb43d48c5781e02b4",
                "query": "SELECT MAX(Age) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Winning_driver = 'Yes') AND Constructor = 'Ferrari'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "a1e5cd9570b8c3c243b004d9003b1635c72a7f42",
                "query": "SELECT COUNT(DISTINCT T1.Driver_Name), T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age BETWEEN 20 AND 30 AND T2.Road IN (SELECT Road FROM race WHERE Winning_driver = 'John')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2693ead3d2c8c12309b63cc4c8c3642db7d541e2",
                "query": "SELECT T1.Driver_Name, T2.Race_Name, T1.Constructor FROM driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "8f204951e0bb22ddb3163e88ebac821ab44deaa3",
                "query": "SELECT Driver_Name, COUNT(Road) FROM driver WHERE Chassis != 'Yes' GROUP BY Driver_Name ORDER BY Driver_Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6b02e1b9e7384d42e48b59f3a1210fd6ec69e225",
                "query": "SELECT COUNT(DISTINCT T1.Driver_ID), MAX(T1.Age) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Constructor = 'Ferrari' AND T2.Road BETWEEN 1 AND 10 AND EXISTS (SELECT 1 FROM race AS T3 WHERE T3.Road = 5)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5f718b423e89cfad76becb87d5a50488347d59e1",
                "query": "SELECT COUNT(DISTINCT Driver_Name) FROM driver WHERE Age > 30 OR Age BETWEEN 20 AND 30 OR Constructor = 'Ferrari' ORDER BY Driver_ID ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0fded3c39eee1d8f463d454fb2b66d3a357c401d",
                "query": "SELECT T1.Driver_Name FROM Driver AS T1 WHERE T1.Age BETWEEN 25 AND 30 OR T1.Constructor = 'Ferrari' OR T1.Driver_ID IN (SELECT Driver_ID FROM Race) ORDER BY T1.Driver_Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8d7e5e7f44d453eb7a5b3259667fa7d0bae8308a",
                "query": "SELECT COUNT(DISTINCT T1.Driver_ID), COUNT(DISTINCT T2.Road), COUNT(T2.Road) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Road > 10) ORDER BY T2.Road DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a78bc03118e1b72a375f6f5a2bcd7cc1ca0495b9",
                "query": "SELECT T1.Driver_Name, AVG(T2.Pole_Position) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age >= 40 GROUP BY T1.Driver_Name HAVING AVG(T2.Pole_Position) IS NOT NULL ORDER BY AVG(T2.Pole_Position) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) IS NOT NULL ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "a88c5ccfaf2645782370a5cfdb9356adbf30680d",
                "query": "SELECT COUNT(DISTINCT Driver_Name), Driver_Name FROM driver AS T1 WHERE Driver_ID > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "f8930255bbe20d2cd135f681ff9d99aa83aa2d16",
                "query": "SELECT COUNT(T2.Winning_driver), T1.Engine FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Road = 1 OR T1.Age < (SELECT AVG(Age) FROM driver) GROUP BY T1.Engine",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "1c7550db8fb6dc458f2d401143dc0998b54504bf",
                "query": "SELECT T1.Driver_Name, T2.Race_Name, T3.Report FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN race AS T3 ON T2.Road = T3.Road WHERE T2.Race_Name = (SELECT T4.Race_Name FROM race AS T4 WHERE T4.Pole_Position = 'yes') ORDER BY T1.Driver_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "335a5216b11b2e1ea34ecd9b01a28c07e9895e08",
                "query": "SELECT T1.Driver_Name, COUNT(T2.Race_Name) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age BETWEEN 30 AND 40 OR T1.Driver_Name IN (SELECT Driver_Name FROM driver WHERE Entrant = 'McLaren')",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "28d334a5a96de33db14d4e0515f3ce1050ba39cd",
                "query": "SELECT T1.Driver_ID FROM driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age > 25 OR T2.Age = 30 OR T1.Engine IN (SELECT Engine FROM driver WHERE Age = 35)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "riding_club": [
            {
                "hash": "19e7330c4874e370d3b0e2779a8c0ea272503a6d",
                "query": "SELECT COUNT(DISTINCT c.Club_name), AVG(c.Start_year) FROM club c JOIN coach co ON c.Club_ID = co.Club_ID JOIN player_coach pc ON co.Coach_ID = pc.Coach_ID WHERE c.Region = 'North' AND pc.Starting_year > 2000 AND c.Club_ID NOT IN (SELECT Club_ID FROM match_result WHERE Gold > 10) ORDER BY c.Start_year DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "48e800d7386aa6c98902791b57889e3defada3dc",
                "query": "SELECT Player_name, AVG(Votes) FROM player WHERE Gender = 'Male' AND Player_ID NOT IN (SELECT Player_ID FROM player_coach WHERE Starting_year < 2010) GROUP BY Player_name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "a4f3e32417957a13ba34344a6170e5ec88af8d45",
                "query": "SELECT Sponsor_name FROM player WHERE Votes <= 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "02c192647c762f99d52e07aee80ac55f122c9f62",
                "query": "SELECT T1.Player_name, T2.Player_name FROM player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T1.Gender = 'Male'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "08bc4c6585052cd94c7eaf354d01d77268987949",
                "query": "SELECT T1.Player_name, T2.Coach_name, T3.Club_name FROM player AS T1 JOIN player_coach AS T2 ON T1.Player_ID = T2.Player_ID JOIN coach AS T3 ON T2.Coach_ID = T3.Coach_ID WHERE T1.Player_ID != 10 AND T1.Player_ID != 11",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "89543c76e11998c2e8601ce3548cdd65e29c7d56",
                "query": "SELECT T1.Rank FROM coach AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Rank >= 10 AND T2.Start_year >= 2000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6f7b2fcc62cf9da116154add63b072295417fe49",
                "query": "SELECT Player_name FROM player WHERE Sponsor_name != 'Nike' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e08aef94650835236c5a29aefe27f3fa10d9919f",
                "query": "SELECT COUNT(Player_name), MIN(Votes), Sponsor_name FROM player WHERE Player_ID <= 10 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fd8308422ec8195f1f38f4ab74ad85d786dfae93",
                "query": "SELECT T1.Player_name FROM player AS T1 JOIN player_coach AS T2 ON T1.Player_ID = T2.Player_ID JOIN coach AS T3 ON T2.Coach_ID = T3.Coach_ID WHERE T1.Gender != T3.Gender ORDER BY T1.Player_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "85e799b0de4f5dcbbfcaf7d08b0e7c982a3e5194",
                "query": "SELECT T1.Player_name, COUNT(T1.Player_name), COUNT(DISTINCT T2.Player_name) FROM player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T1.Votes > 100 OR T1.Rank = 'A' OR NOT EXISTS (SELECT 1 FROM player AS T3 WHERE T3.Player_ID = T1.Player_ID AND T3.Gender = 'M') ORDER BY T1.Player_name ASC LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "95c3f52382f509f4cbf7cb57b818fb5ec0d2679d",
                "query": "SELECT MAX(Rank) FROM player WHERE Votes > 100",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "27d5625e20470411c1cbb721c81c43103c574a4f",
                "query": "SELECT Player_name FROM player WHERE Votes BETWEEN 100 AND 200 AND Sponsor_name = 'Nike' ORDER BY Rank ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b69d9132c6ddd977a1e4530d639155725f69d5d3",
                "query": "SELECT T1.Player_name FROM player AS T1 JOIN player_coach AS T2 ON T1.Player_ID = T2.Player_ID JOIN coach AS T3 ON T2.Coach_ID = T3.Coach_ID WHERE T1.Player_ID = 100 AND T3.Coach_ID = 50 AND T1.Player_ID NOT IN (SELECT T4.Player_ID FROM player AS T4 JOIN player_coach AS T5 ON T4.Player_ID = T5.Player_ID WHERE T5.Starting_year < 2015) ORDER BY T1.Player_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "78ed4fba2525ad8f75d3c126f15681887a49b849",
                "query": "SELECT T1.Player_name, T2.Coach_name FROM player AS T1 JOIN player_coach AS T3 ON T1.Player_ID = T3.Player_ID JOIN coach AS T2 ON T3.Coach_ID = T2.Coach_ID WHERE NOT EXISTS (SELECT 1 FROM match_result AS T4 WHERE T4.Club_ID = T2.Club_ID) ORDER BY T1.Rank ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "18b6ba6fb8aa54cb976e1f8ae64c61b5b32bab5f",
                "query": "SELECT T1.Player_name, T3.Club_name, T2.Rank FROM player AS T1 JOIN player_coach AS T2 ON T1.Player_ID = T2.Player_ID JOIN club AS T3 ON T3.Club_ID = T2.Coach_ID WHERE T2.Rank > (SELECT MAX(Rank) FROM coach AS T4 JOIN player_coach AS T5 ON T4.Coach_ID = T5.Coach_ID)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "de75bc528cd14dbed423daa54fac63981939ae95",
                "query": "SELECT Player_name, Sponsor_name FROM player WHERE Player_name = 'John' OR Sponsor_name = 'Nike' AND Rank = 'Pro'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b31ed1407ffacd063ac526c4f1eac1beb1171752",
                "query": "SELECT COUNT(Player_ID), SUM(Votes) FROM player WHERE Rank != '1'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "1b1dddc296d31ff5a4e98a7e3d8eb0efeb2b3e25",
                "query": "SELECT COUNT(DISTINCT T1.Player_ID), T2.Coach_name FROM player AS T1 JOIN player_coach AS T2 ON T1.Player_ID = T2.Player_ID JOIN coach AS T3 ON T2.Coach_ID = T3.Coach_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "fe0ad50f2ef8c138239a1e14d6c3faa26d2353de",
                "query": "SELECT T1.Club_name, COUNT(DISTINCT T3.Player_ID) FROM club AS T1 JOIN coach AS T2 ON T1.Club_ID = T2.Club_ID JOIN player_coach AS T3 ON T2.Coach_ID = T3.Coach_ID WHERE T2.Rank <= 10 GROUP BY T1.Club_name ORDER BY COUNT(DISTINCT T3.Player_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "bbc1b1c2e2d1e9236d4408390ad038ca68a38a64",
                "query": "SELECT COUNT(DISTINCT Player_name), Sponsor_name FROM player WHERE Player_ID = (SELECT Player_ID FROM player_coach WHERE Coach_ID = (SELECT Coach_ID FROM coach WHERE Rank = 1)) AND Gender = 'Male' ORDER BY Player_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "700728075acfb23a11793ffc61356e9b90cdac52",
                "query": "SELECT T1.Player_name, SUM(T1.Votes) FROM player AS T1 WHERE T1.Rank = 'A' AND T1.Votes BETWEEN (SELECT AVG(Votes) FROM player) AND (SELECT MAX(Votes) FROM player) ORDER BY T1.Votes ASC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT AVG(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cd9ece0cc5d990e803c72fe75f3e2c0603091da6",
                "query": "SELECT MAX(Votes) FROM player WHERE Rank <= 5",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "735e8fce933f7e000aabbe15ee13ce2a6be15925",
                "query": "SELECT COUNT(DISTINCT T1.Player_name) AS Player_name FROM player AS T1 WHERE T1.Votes > 1000 ORDER BY Player_name DESC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3b5ffc743447a4caae66eeba5cb04c823456e8c2",
                "query": "SELECT Club_ID FROM club WHERE Start_year BETWEEN 1990 AND 2000 AND Club_name = 'Club1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            }
        ],
        "coffee_shop": [
            {
                "hash": "6394b2dc2558c764ea7e1b51497b0bdc872d061d",
                "query": "SELECT T1.Shop_ID FROM happy_hour AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Num_of_shaff_in_charge < 5 OR T2.Num_of_shaff_in_charge BETWEEN 3 AND 10 OR T1.HH_ID NOT IN (SELECT HH_ID FROM happy_hour WHERE Month = 'January') ORDER BY T1.Shop_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "12a7945d444725c0d317a48fd64cd28254b514c3",
                "query": "SELECT Name FROM member AS T1 WHERE Age > 18",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "0762138f9c5e4566586a4825f2be188bc28f6a3c",
                "query": "SELECT T1.Shop_ID, T2.Total_amount FROM shop AS T1 JOIN happy_hour_member AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Score > 4 AND T1.Open_Year BETWEEN 2015 AND 2018 AND T2.Total_amount < 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "07fe1e2d9fd8bb3ecbfd2840a1b8b0481868806a",
                "query": "SELECT Shop_ID FROM shop WHERE Score > 3 AND Num_of_staff > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "ec70010f501d404ef56f203daedfa1ac41dd982f",
                "query": "SELECT COUNT(DISTINCT T1.Shop_ID), T1.Address FROM shop AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID JOIN happy_hour_member AS T3 ON T2.HH_ID = T3.HH_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "b71f4d72a7f025df6de64ed02a30fdb0b8f02814",
                "query": "SELECT T1.Name, T2.Level_of_membership FROM member AS T1 JOIN happy_hour_member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Time_of_purchase >= 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "e14999744e3b530bf0e45c0e2d753514b413b433",
                "query": "SELECT COUNT(DISTINCT T1.Shop_ID) FROM shop AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Score > 4 OR T1.Num_of_staff = 'Few' OR T1.Shop_ID IN (SELECT Shop_ID FROM happy_hour WHERE Num_of_shaff_in_charge > 5) ORDER BY T1.Shop_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "12a14ef8c10cbad980da4041ba150b0e9111c92f",
                "query": "SELECT AVG(T1.Score), T2.Time_of_purchase FROM shop AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T2.Time_of_purchase BETWEEN 10 AND 20 OR T1.Score > 50",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "59ac4c8b62e405352dd4e39e725e618ac0cbd6d8",
                "query": "SELECT T1.Shop_ID, T2.Total_amount FROM shop AS T1 JOIN happy_hour AS T3 ON T1.Shop_ID = T3.Shop_ID JOIN happy_hour_member AS T2 ON T3.HH_ID = T2.HH_ID WHERE T1.Score > 4 GROUP BY T1.Shop_ID ORDER BY T1.Score DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f5d09c8725da7e2dd5ac1c35df61b9a34293ff7b",
                "query": "SELECT Time_of_purchase, Address FROM member WHERE Age > 30 ORDER BY Time_of_purchase ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7343971ed19bace2ee4ccf06f79d370e84e7c788",
                "query": "SELECT MIN(T1.Total_amount), COUNT(DISTINCT T2.Name) FROM happy_hour_member AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID LIMIT 1",
                "template": "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "7fcff1217d10bb057ac607d953d9cc26554aeb09",
                "query": "SELECT T1.Shop_ID FROM happy_hour AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE T1.Month = 'January' AND T2.Month = 'February' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "50810b7f028f119aa16ff8620f6be279d9e6e4d2",
                "query": "SELECT T1.Shop_ID, T1.Address FROM shop AS T1 WHERE EXISTS (SELECT 1 FROM happy_hour AS T2 WHERE T2.Shop_ID = T1.Shop_ID AND T2.Num_of_shaff_in_charge > 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE#)"
            },
            {
                "hash": "cc0f3af3f0504dbb2bc02cffcca380b25eac5ddd",
                "query": "SELECT * FROM shop WHERE Score <= 5 ORDER BY Score ASC LIMIT 1",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f41f421bc4132dbb748923008527ade341f51737",
                "query": "SELECT T1.Shop_ID FROM shop AS T1 WHERE T1.Address = 'Tokyo' AND T1.Score BETWEEN 4 AND 5 AND EXISTS (SELECT 1 FROM member AS T2 WHERE T2.Address = 'Tokyo' AND T2.Age > 20)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "b2eddf470272522acb9a27a8da429cf89f03b539",
                "query": "SELECT T1.Shop_ID FROM shop AS T1 JOIN happy_hour AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE NOT EXISTS (SELECT 1 FROM happy_hour_member AS T3 WHERE T3.HH_ID = T2.HH_ID AND T3.Total_amount < 100)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "6f3a0dbc1cfab657dd0b30f84b398241ba6780ef",
                "query": "SELECT Address, Score FROM shop WHERE (Age > 25 OR Score BETWEEN 1 AND 10) AND Address = 'London' ORDER BY Score DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a4392b0a4e06718afd34ef2652d0f109f49b2b0a",
                "query": "SELECT T2.Address, SUM(T1.Total_amount) FROM happy_hour_member AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Level_of_membership = 1 AND EXISTS ( SELECT T3.Shop_ID FROM happy_hour AS T3 WHERE T3.Shop_ID = 1 ) GROUP BY T2.Address",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "7566dfda9cd8874fc7e1e1f9d2a499c811ef089c",
                "query": "SELECT SUM(T1.Score) FROM shop AS T1 WHERE T1.Shop_ID > 10 AND T1.Shop_ID NOT IN ( SELECT T2.Shop_ID FROM happy_hour AS T2 ) OR T1.Score < ( SELECT SUM(T3.Num_of_shaff_in_charge) FROM happy_hour AS T3 )",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) OR #COLUMN# < ( SELECT SUM(#COLUMN#) FROM #TABLE# )"
            },
            {
                "hash": "ae40a6043395b9f4408a5979bb7271840bf43aa9",
                "query": "SELECT T1.Shop_ID AS ID, T1.Score, MAX(T2.Total_amount) FROM shop AS T1 JOIN happy_hour_member AS T2 ON T1.Shop_ID = T2.HH_ID WHERE T2.Member_ID = 123 ORDER BY T1.Score ASC",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a8ed46e9387bebcd0e9787007aed0a448fc2bb48",
                "query": "SELECT Shop_ID FROM shop WHERE Score BETWEEN 3 AND 5 AND Address NOT IN (SELECT Address FROM member) AND Num_of_staff = 'Small'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2c0e161272032d3604777313f438b0cf4110fd4d",
                "query": "SELECT T1.Name, SUM(T2.Total_amount) FROM member AS T1 JOIN happy_hour_member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Age = 25 GROUP BY T1.Name ORDER BY SUM(T2.Total_amount) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "f83eca3a3bed98e53a28a7c5313640c29efba209",
                "query": "SELECT m.Address, h.Month, hhm.Total_amount FROM shop s JOIN happy_hour h ON s.Shop_ID = h.Shop_ID JOIN happy_hour_member hhm ON h.HH_ID = hhm.HH_ID JOIN member m ON hhm.Member_ID = m.Member_ID ORDER BY m.Address ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d71e83fc24d8b3073e2c33bd5f579a9ff62c3131",
                "query": "SELECT T1.Name, T3.Address FROM member AS T1 JOIN happy_hour_member AS T2 ON T1.Member_ID = T2.Member_ID JOIN happy_hour AS T3 ON T2.HH_ID = T3.HH_ID WHERE T3.Num_of_shaff_in_charge <= 5 AND T1.Level_of_membership = 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            }
        ],
        "company_employee": [
            {
                "hash": "f7b69890b8ea060af788e7329dc5a148329dde37",
                "query": "SELECT MAX(T1.Age) FROM people AS T1 WHERE T1.Age <= 30 LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3a820d1fd4fc75d11cedc747acb99a7b903befea",
                "query": "SELECT p.Name, c.Name FROM people AS p JOIN employment AS e ON p.People_ID = e.People_ID JOIN company AS c ON e.Company_ID = c.Company_ID WHERE p.Age > 30 AND p.Age < 50 AND c.Sales_in_Billion = 10 ORDER BY p.Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2855c0895b6b6d77b7196dbb4b4b2ce374741f53",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Age = T2.Age ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1fd5d1e840b33d8e44dbacad5e9cf1a5da1828b9",
                "query": "SELECT T1.People_ID, SUM(T1.Year_working) FROM employment AS T1 WHERE T1.People_ID BETWEEN 10 AND 20 AND T1.Year_working IN (SELECT T2.Year_working FROM employment AS T2 WHERE T2.Company_ID = 10) GROUP BY T1.People_ID HAVING SUM(T1.Year_working) > 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "9802e03ee6ca91a02d7cc5a70bd7eeb405dec398",
                "query": "SELECT T1.Name, MIN(T1.Age) FROM people AS T1 WHERE T1.Age <= 30 GROUP BY T1.Name ORDER BY MIN(T1.Age) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "15584d02a22f55eb82881560e84c47959d4350a6",
                "query": "SELECT Name FROM people WHERE Age > 30 OR Name = 'John' OR Nationality NOT IN (SELECT Nationality FROM people WHERE Graduation_College = 'MIT') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "0a90c2ebbdbd3a0685ecaa5eceb0c4dff5f6b4b7",
                "query": "SELECT COUNT(DISTINCT e.Company_ID) , COUNT(e.Year_working) FROM employment e WHERE e.Year_working < 5 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2674f13778c24b465ba8f7d7122f742924e1f80d",
                "query": "SELECT T2.Name FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Age BETWEEN 20 AND 50 OR T1.Nationality = 'USA' ORDER BY T1.Age ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "da8f16cb16ee9599880f423a5cde8d3ea4a96605",
                "query": "SELECT COUNT(DISTINCT Name) FROM company WHERE Headquarters = 'USA' OR Headquarters = 'Canada' OR Headquarters IN (SELECT Headquarters FROM company WHERE Sales_in_Billion > 10) ORDER BY Name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "77203e96941b871b7c85112afcb92381d984dc51",
                "query": "SELECT COUNT(DISTINCT T2.Name), T1.Name FROM people AS T1 JOIN company AS T2 ON T1.Graduation_College != T2.Headquarters GROUP BY T1.Name",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "9c30c974cf79717fd372a3b996364fa79f84c72e",
                "query": "SELECT MAX(T1.Sales_in_Billion), T1.Name FROM company AS T1 JOIN employment AS T2 ON T1.Company_ID = T2.Company_ID JOIN people AS T3 ON T2.People_ID = T3.People_ID WHERE T3.Age >= 30 ORDER BY T1.Sales_in_Billion DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5fd3c17671d89cd4e21d803b3e0c688d0c977c3f",
                "query": "SELECT Name AS people_name FROM people WHERE Age != 30 ORDER BY Age DESC",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "32ee01e74a549b8f7989e94e0b7eb8c62d4239a6",
                "query": "SELECT COUNT(DISTINCT T1.Name), MIN(T2.Profits_in_Billion) FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T3.Company_ID = T2.Company_ID GROUP BY T3.Headquarters HAVING MIN(T2.Profits_in_Billion) > 10 ORDER BY T2.Profits_in_Billion DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3a9c5932f30ded2f8aaa255d9fe1efc179d94ab4",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T1.Age BETWEEN 20 AND 30",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "75c6a227cc57e09d28f908789c882a54978f7e5b",
                "query": "SELECT T1.Name, COUNT(T2.Company_ID), COUNT(T3.Company_ID) FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID WHERE T3.Industry = 'Finance' ORDER BY T1.Age DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1cbc8fa450e6990b106ec4d0abeacc0598ab6845",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(T2.Company_ID) FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "6598627959fc3061ef11797f4f2fd751f064490b",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Company_ID), COUNT(T3.Company_ID) FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T2.Company_ID = T3.Company_ID GROUP BY T1.Name ORDER BY COUNT(T3.Company_ID) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "8a038d2ad36531c7c03a922382a04b9f8947ab42",
                "query": "SELECT T1.Name, T2.Name, COUNT(T3.People_ID) FROM company AS T1 JOIN employment AS T2 ON T1.Company_ID = T2.Company_ID JOIN people AS T3 ON T2.People_ID = T3.People_ID WHERE T3.Age > 25 AND T1.Industry = 'Finance' AND T3.Nationality IN (SELECT Nationality FROM people WHERE Graduation_College = 'Harvard') ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a472bf93b0d7bef7d0c049c58971b740eefc18f1",
                "query": "SELECT Name FROM company WHERE Name NOT IN (SELECT Name FROM company AS T1 JOIN employment AS T2 ON T1.Company_ID = T2.Company_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "b43d2930c3a3f12910321b1c2c031718aeda756e",
                "query": "SELECT COUNT(DISTINCT T3.Industry), COUNT(DISTINCT T2.Nationality), COUNT(T2.Name) FROM people AS T2 JOIN employment AS T1 ON T2.People_ID = T1.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T2.Age = 30",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "92ef2fabae1b45a89a362db8fe4a1f85b41143e5",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Company_ID) FROM people AS T1 JOIN employment AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T3.Company_ID = T2.Company_ID WHERE T1.Nationality = 'American' ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "841f6364b7bb7fd90a0b9632c0fbc5437491f3c8",
                "query": "SELECT Name, AVG(Age) FROM ( SELECT T1.Name, T1.Age FROM people AS T1 INNER JOIN employment AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Company_ID = 1 ) GROUP BY Name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#"
            }
        ],
        "products_for_hire": [
            {
                "hash": "7f477825d51b666e6b0dcf1d4110e1419d373f7a",
                "query": "SELECT COUNT(customer_id) FROM Customers WHERE date_last_hire > '2020-01-01'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "2f3fe02d69af3d51628e75cc896aa358b312f261",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(T1.customer_id) FROM Customers AS T1 JOIN Bookings AS T2 ON T1.customer_id = T2.customer_id LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a7886143f1b7803fd43b060be2d0cad53538603a",
                "query": "SELECT T1.first_name, COUNT(T2.booking_id) FROM Customers AS T1 JOIN Bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.first_name HAVING COUNT(T2.booking_id) > 1 WHERE T1.good_or_bad_customer < 'bad'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "169523aa766d8d23726a124a2083b23fb5affc8d",
                "query": "SELECT T1.good_or_bad_customer FROM Customers AS T1 JOIN Bookings AS T2 ON T1.customer_id = T2.customer_id WHERE T2.booking_start_date IN (SELECT T3.booking_start_date FROM Bookings AS T3 WHERE T3.count_hired = '1')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "b44efb5ca08319f150905ac686dff8a7f1bea353",
                "query": "SELECT COUNT(DISTINCT T1.coupon_id) FROM Discount_Coupons AS T1 WHERE T1.coupon_amount < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d1d2290bd0f7b73fd883a28c1054654c687f4a7e",
                "query": "SELECT T1.product_name FROM Products_for_Hire AS T1 WHERE T1.daily_hire_cost BETWEEN 10 AND 20 AND NOT EXISTS (SELECT 1 FROM Bookings AS T2 JOIN Products_Booked AS T3 ON T2.booking_id = T3.booking_id WHERE T2.booking_status_code = 'cancelled' AND T3.product_id = T1.product_id) GROUP BY T1.product_name HAVING AVG(T1.daily_hire_cost) > 15 ORDER BY T1.product_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "909245241ab09502445779fbb4b6e96f71610605",
                "query": "SELECT T1.first_name, T2.payment_date FROM Customers AS T1 JOIN Payments AS T2 ON T1.customer_id = T2.customer_id WHERE T1.good_or_bad_customer = 'good' AND T2.amount_paid_in_full_yn = 'yes' AND T2.amount_due BETWEEN 100 AND 500 ORDER BY T1.first_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "713fbb9f9e8c61b784eb01843992595dcddb9274",
                "query": "SELECT SUM(T2.daily_hire_cost) FROM Products_for_Hire AS T1 JOIN Products_Booked AS T2 ON T1.product_id = T2.product_id WHERE T1.product_type_code = 'bike' ",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5ea4d7db4ac8ddbcd3cae9379089b6f5f49518c4",
                "query": "SELECT SUM(T1.amount_payable) FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id JOIN Discount_Coupons AS T4 ON T3.coupon_id = T4.coupon_id",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "286a4e207493cdfa156fef02f5bc3bea12dc5343",
                "query": "SELECT T1.first_name, T1.last_name FROM Customers AS T1 WHERE T1.customer_id = 123 OR T1.date_last_hire BETWEEN '2020-01-01' AND '2020-12-31' OR T1.good_or_bad_customer NOT IN (SELECT T2.good_or_bad_customer FROM Customers AS T2 WHERE T2.customer_id < 100) ORDER BY T1.customer_id ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7694201cfcbfbf73372de0e24245a2a0d5a2d60e",
                "query": "SELECT T1.coupon_amount, T2.first_name, T3.product_name FROM Discount_Coupons AS T1 JOIN Customers AS T2 ON T1.coupon_id = T2.coupon_id JOIN Products_for_Hire AS T3 ON T3.product_id = T1.coupon_id WHERE T1.date_issued <= '2020-01-01' GROUP BY T3.product_name HAVING MIN(T3.daily_hire_cost) ORDER BY T1.coupon_amount ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "76e3e5d43f2cc175bf1b6e991ffbada932b4020d",
                "query": "SELECT T1.coupon_amount AS coupon_amount FROM Discount_Coupons AS T1 WHERE T1.coupon_amount < 10 ORDER BY T1.coupon_amount ASC LIMIT 10",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cddd8b5770bc49bc70c711039861be2b64190a7f",
                "query": "SELECT * FROM Customers WHERE amount_paid = 1 LIMIT 1",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5b19bbd3d6694315c872133496baf6563ea25bba",
                "query": "SELECT T1.good_or_bad_customer FROM Customers AS T1 WHERE NOT EXISTS (SELECT 1 FROM Payments AS T2 WHERE T2.customer_id = T1.customer_id AND T2.amount_paid < 100) ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bef7b090e6980574512808ed3b77a7c7b4fb7859",
                "query": "SELECT SUM(T1.amount_payable), AVG(T2.amount_paid) FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id WHERE T1.customer_id = 100 OR EXISTS (SELECT 1 FROM Customers AS T3 WHERE T3.good_or_bad_customer = 'good')",
                "template": "SELECT SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9d3fbebc48c748540974bc5840bd4d0dbb34ef97",
                "query": "SELECT T1.first_name FROM Customers AS T1 JOIN Bookings AS T2 ON T1.customer_id = T2.customer_id WHERE T2.amount_of_discount < (SELECT MAX(amount_of_discount) FROM Bookings) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "aa41c77637064d800f715aa9c53d69c579a0fb45",
                "query": "SELECT T1.first_name, COUNT(DISTINCT T2.booking_id), COUNT(T3.product_id), COUNT(DISTINCT T4.product_id), SUM(T5.amount_of_discount), T2.booking_status_code FROM Customers AS T1 JOIN Bookings AS T2 ON T1.customer_id = T2.customer_id JOIN Products_Booked AS T3 ON T2.booking_id = T3.booking_id JOIN Products_for_Hire AS T4 ON T3.product_id = T4.product_id JOIN Payments AS T5 ON T2.booking_id = T5.booking_id WHERE T1.good_or_bad_customer = 'good' AND T2.booking_start_date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.booked_amount IN (SELECT booked_amount FROM Products_Booked WHERE booking_id > 1000) ORDER BY SUM(T5.amount_of_discount) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "13d4fd9fd256aecfb6b6bed804ccfd939304bb5f",
                "query": "SELECT SUM(T1.coupon_amount) FROM Discount_Coupons AS T1 WHERE T1.coupon_id IN (SELECT T2.coupon_id FROM Customers AS T2 GROUP BY T2.coupon_id HAVING COUNT(T2.coupon_id) = 1) ORDER BY T1.coupon_amount ASC",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d29e23562b588c19713897c8b775979a65bd9e29",
                "query": "SELECT T1.coupon_id FROM Discount_Coupons AS T1 WHERE T1.coupon_amount > 100 AND T1.date_issued > '2020-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "110910e4d88aa9b4aaed3646623ab39da8d8b003",
                "query": "SELECT T1.first_name, T2.product_name FROM Customers AS T1 JOIN Bookings AS T3 ON T1.customer_id = T3.customer_id JOIN Products_Booked AS T4 ON T3.booking_id = T4.booking_id JOIN Products_for_Hire AS T2 ON T4.product_id = T2.product_id WHERE T3.booking_start_date <= '2022-01-01' ORDER BY T2.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2ab094ca43aaeb165a663bcccf4cd5388697ff40",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), SUM(T1.amount_payable) FROM Bookings AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.good_or_bad_customer = 'good' AND T1.amount_payable BETWEEN 100 AND 500",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = '#VALUE#' AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "9439f9c703a2c17a8683b156fd66f026009e5d04",
                "query": "SELECT T1.customer_id, SUM(T2.amount_paid) FROM Customers AS T1 JOIN Payments AS T2 ON T1.customer_id = T2.customer_id JOIN Bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.coupon_id = 1 OR T3.booking_status_code = 'A' OR T3.booking_start_date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "d12fe12956628431bb1ad6407df7b4276c764606",
                "query": "SELECT COUNT(DISTINCT T1.coupon_id), COUNT(DISTINCT T2.customer_id), SUM(T1.coupon_amount) FROM Discount_Coupons AS T1 JOIN Customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T1.date_issued < T2.date_last_hire OR T1.coupon_amount > 0 OR EXISTS (SELECT 1 FROM Payments AS T3 WHERE T3.customer_id = T2.customer_id) ORDER BY T1.coupon_amount ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            }
        ],
        "club_1": [
            {
                "hash": "296c8204d3c60e6d298f31580c9b04cd8fdd763c",
                "query": "SELECT T1.LName, T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Age < 20 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a1983b555008dcdcf73e12e2abd5dbb5dd6dc25f",
                "query": "SELECT Fname FROM Student WHERE Age > 18 ORDER BY Fname ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6746348e395ee4129decc487574a718835af13e4",
                "query": "SELECT AVG(T1.Age) FROM Student AS T1 GROUP BY T1.Major HAVING AVG(T1.Age) > 20 ORDER BY AVG(T1.Age) DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "8e787137abd71c836408d0011d362b019eb4b836",
                "query": "SELECT COUNT(ClubName) FROM Club WHERE ClubLocation = 'New York' AND EXISTS (SELECT ClubName FROM Club AS T1 JOIN Member_of_club AS T2 ON T1.ClubID = T2.ClubID WHERE T2.Position = 'President' AND T1.ClubDesc = 'Sports')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T1.#COLUMN# = #VALUE#)"
            },
            {
                "hash": "3be710c3f27b327af73493ca4d5db3c3d628a68d",
                "query": "SELECT T1.ClubName, T2.Position FROM Club AS T1 JOIN Member_of_club AS T2 ON T1.ClubID = T2.ClubID JOIN Student AS T3 ON T3.StuID = T2.StuID ORDER BY T1.ClubName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "800d18e51a7307aefad1f2630f6dcdd2b92e4185",
                "query": "SELECT DISTINCT T2.LName, T2.Fname, T2.Age FROM Student AS T1 JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID WHERE T2.Position = 'President' OR T2.Position = 'Vice-President' OR T2.Age BETWEEN 18 AND 25 ORDER BY T2.Age DESC",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5490534c0335af3d3b936d14f99a1fc85b50108c",
                "query": "SELECT T1.LName FROM Student AS T1 JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID WHERE T2.Position = 'President' AND T1.Major = 100 AND T1.city_code = (SELECT ClubLocation FROM Club)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "2a03ffe0bb4f11146d122a43ba83e1523f72d7d0",
                "query": "SELECT S.LName, MIN(M.Position) FROM Student S JOIN Member_of_club M ON S.StuID = M.StuID WHERE EXISTS (SELECT 1 FROM Club C WHERE C.ClubID = M.ClubID) GROUP BY S.LName ORDER BY S.LName DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "21f72986fcae6abe606b7564864f607c7401494b",
                "query": "SELECT T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T2.ClubID = T3.ClubID WHERE T1.Age > 20 AND T1.Sex = 'M' ORDER BY T2.ClubName ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0eac317765b322febd8d61214b076dc2089dd837",
                "query": "SELECT S.LName, COUNT(DISTINCT M.StuID) FROM Student S JOIN Member_of_club M ON S.StuID = M.StuID WHERE S.Age > 20 AND M.Position = 'President' ORDER BY S.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "896590c73b1c2fe87435c3b0ce2150c40574983f",
                "query": "SELECT T1.LName, COUNT(DISTINCT T2.ClubName) FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Age BETWEEN 18 AND 22 AND T1.Sex = 'M' AND NOT EXISTS (SELECT 1 FROM Club AS T4 WHERE T4.ClubName = 'Basketball' AND T4.ClubID = T2.ClubID) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "e79d592a8ba71a884f90736869cf52bf0ca0e185",
                "query": "SELECT T1.ClubName, T2.ClubDesc FROM Club AS T1 JOIN Member_of_club AS T2 ON T1.ClubID = T2.ClubID JOIN Student AS T3 ON T2.StuID = T3.StuID WHERE T1.ClubLocation = 'New York' ORDER BY T1.ClubName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "9264a5e4dc8fc78e4abc2c5b3e70b8ceb5cfce58",
                "query": "SELECT COUNT(DISTINCT T1.ClubID), COUNT(T2.ClubID) FROM Club AS T1 JOIN Member_of_club AS T2 ON T1.ClubID = T2.ClubID WHERE T2.Position = 'President' ORDER BY T1.ClubName ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c5cce50f118d641f3976a4385d88588efba65456",
                "query": "SELECT COUNT(DISTINCT T2.ClubID) FROM Student AS T1 JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID WHERE T1.Sex = 'M'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "393842cbee470bf2e63c3b1216381e28e374b65e",
                "query": "SELECT COUNT(DISTINCT ClubID) FROM Member_of_club",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "2277c9ae221a8f4e9a637581656a84de9f3a9e9c",
                "query": "SELECT DISTINCT T1.ClubName, COUNT(DISTINCT T3.StuID) FROM Club AS T1 JOIN Member_of_club AS T2 ON T1.ClubID = T2.ClubID JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE NOT EXISTS (SELECT 1 FROM Club AS T4 JOIN Member_of_club AS T5 ON T4.ClubID = T5.ClubID JOIN Student AS T6 ON T6.StuID = T5.StuID WHERE T4.ClubName = T1.ClubName AND T6.Age > 20) ORDER BY T1.ClubName DESC",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "803a820ef0d9b0691219b00fce4c7dae3bec5d5f",
                "query": "SELECT T1.LName, COUNT(T2.StuID) FROM Student AS T1 JOIN Member_of_club AS T2 ON T1.StuID = T2.StuID WHERE T2.ClubID NOT IN (SELECT ClubID FROM Club WHERE ClubLocation = 'New York') GROUP BY T1.LName HAVING COUNT(T2.StuID) > 2 ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3445f50fc18e28a2c07d9a3485422fdb54dd12f8",
                "query": "SELECT T1.LName, COUNT(DISTINCT T2.ClubName), MAX(T1.Age) FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Age > 20 OR T2.ClubName = 'Club1' OR T2.ClubDesc IN (SELECT ClubDesc FROM Club WHERE ClubLocation = 'Location1') GROUP BY T1.LName ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9308e318ac271a684d91c66364acb2a6a3a83ef8",
                "query": "SELECT T1.LName, T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T2.ClubID = T3.ClubID WHERE T1.Age BETWEEN 20 AND 22 AND EXISTS (SELECT 1 FROM Club WHERE ClubLocation = 'New York') ORDER BY T1.LName DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "064e7171e9bd239c45672978aa7db8e68c400692",
                "query": "SELECT T1.LName, T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Age BETWEEN 20 AND 25 OR T1.LName = 'Smith' OR T1.Sex = 'F'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "16e81159bd68489628cc13041ea1f3edd95e9aa3",
                "query": "SELECT T1.StuID, T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T2.ClubID = T3.ClubID WHERE T1.Major != 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "591ec380829dda98d654e46e3dc5d814c28af09f",
                "query": "SELECT SUM(StuID), COUNT(LName), MAX(Age) FROM Student",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Sex != 'F'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "895c3744c7ed3ba1588005ac431452577dcb5305",
                "query": "SELECT COUNT(T1.StuID), T2.ClubName FROM Student AS T1 JOIN Member_of_club AS T3 ON T1.StuID = T3.StuID JOIN Club AS T2 ON T3.ClubID = T2.ClubID WHERE T1.Age BETWEEN 20 AND 30 AND T1.Sex = 'M' GROUP BY T2.ClubName LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
            }
        ],
        "wine_1": [
            {
                "hash": "f0fad6e39e649dc1f782477efe12dbf62c0f64e1",
                "query": "SELECT T1.Grape FROM grapes AS T1 WHERE T1.ID NOT IN (SELECT T2.Grape FROM wine AS T2 WHERE T2.Year = 2015) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "24dd029f6cb1d0cfeb6d4f40ec2d1bb3f8a23b36",
                "query": "SELECT Grape, Color FROM grapes WHERE ID = (SELECT Grape FROM wine WHERE Score > 90 AND Year = (SELECT MAX(Year) FROM wine)) LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#"
            },
            {
                "hash": "6587129a366b2c0339ddbfd9c893a9bf31c12f70",
                "query": "SELECT MIN(Price) FROM wine WHERE State = 'California' OR Year BETWEEN 2010 AND 2015 OR Name LIKE '%Chardonnay%'",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# LIKE '%#VALUE#%'"
            },
            {
                "hash": "bacd04bb88ffe63860ffcfd83d9614f50e40efae",
                "query": "SELECT T1.Grape, AVG(T1.Price) FROM wine AS T1 JOIN wine AS T2 ON T1.No = T2.No WHERE T1.Price < 50 GROUP BY T1.Grape HAVING AVG(T1.Price) > 20",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "df0c9799e7c60bb049242fd1cab7f2679d9a5aa4",
                "query": "SELECT T1.Appelation FROM appellations AS T1 WHERE T1.No = ( SELECT COUNT(T2.No) FROM wine AS T2 WHERE T2.Appelation = T1.Appelation GROUP BY T2.Appelation ORDER BY COUNT(T2.No) ASC LIMIT 5 )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = ( SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #TABLE##COLUMN# GROUP BY #TABLE##COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE# )"
            },
            {
                "hash": "a51562c7193f0f3c5eeaf58505a5d8759a0291d1",
                "query": "SELECT MAX(Year) FROM wine WHERE Price <= 100",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "38d243ef58953b2e0a4491ae22516a65ebc8bf88",
                "query": "SELECT Grape FROM grapes WHERE NOT EXISTS (SELECT 1 FROM wine WHERE wine.Grape = grapes.Grape AND wine.Score > 90)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "1f4d807e1860589b54544da5169b0501a05b83f1",
                "query": "SELECT T1.Grape, T3.Appelation FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape JOIN appellations AS T3 ON T3.Appelation = T2.Appelation WHERE T2.Score BETWEEN 80 AND 90 AND T2.Year NOT IN (SELECT Year FROM wine WHERE Score < 70) ORDER BY T1.ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "91bbe2ec36b1b320efcd19a4c1e8346e4e8583e3",
                "query": "SELECT Name FROM wine WHERE Year BETWEEN 2010 AND 2015 OR Price > 10 OR EXISTS (SELECT Grape FROM grapes WHERE grapes.Grape = wine.Grape AND grapes.Color = 'red')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1af95ef53cde70eb590f5c5964f98366a564a830",
                "query": "SELECT T1.Grape FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = 'red' AND T2.Year = 2010 AND T1.ID NOT IN (SELECT T3.ID FROM grapes AS T3 WHERE T3.Color = 'white') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9e1f5f09bf2f8ce825303a37184d9e1198f36190",
                "query": "SELECT T1.Grape, T2.Appelation FROM grapes AS T1 JOIN wine AS T2 ON T1.Grape = T2.Grape JOIN appellations AS T3 ON T2.Appelation = T3.Appelation ORDER BY T1.Grape ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7cee3d62ca86672aa519dfbc6a1b0b0071820206",
                "query": "SELECT AVG(T1.Price), T2.Appelation FROM wine AS T1 JOIN grapes AS T2 ON T1.Grape = T2.Grape JOIN appellations AS T3 ON T3.Appelation = T1.Appelation WHERE T1.Score != 90",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "605ebe85b0c136430b9d5be75d8a3dec5a88dd97",
                "query": "SELECT Name FROM wine WHERE State NOT IN ( SELECT State FROM wine WHERE Score > 90 ) ORDER BY Year DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "da0eee1ee158670bb7cf608c431dad858070e61e",
                "query": "SELECT T1.Appelation, COUNT(DISTINCT T1.County) FROM ( SELECT Appelation, County FROM appellations WHERE State != 'CA' ) AS T1 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ) AS T1 LIMIT #VALUE#"
            },
            {
                "hash": "b2f855c03f794e5dd9eaca79338a64497fddd6f8",
                "query": "SELECT Name FROM wine LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "64f29be35ee64b5007295bedb65667dddbf0f284",
                "query": "SELECT * FROM wine WHERE Appelation IN (SELECT Appelation FROM wine WHERE Price > 50) LIMIT 100",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c1dbc78dc7f1ce175da3ccd3b201066fda117bee",
                "query": "SELECT w.Grape, SUM(w.Price) FROM wine w JOIN grapes g ON w.Grape = g.Grape WHERE w.Year BETWEEN 2000 AND 2010 GROUP BY w.Grape HAVING SUM(w.Price) > 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "89112a2692fbc827965ccc0f742a2164b729ef5b",
                "query": "SELECT T1.Grape FROM grapes AS T1 WHERE EXISTS (SELECT 1 FROM wine AS T2 WHERE T1.Grape = T2.Grape GROUP BY T1.Grape HAVING COUNT(DISTINCT T2.Winery) > 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)"
            },
            {
                "hash": "a535f4b05c7459e8d36b59efd00a0bcc7e474b9f",
                "query": "SELECT T1.Winery, COUNT(T1.No), T2.Color FROM wine AS T1 JOIN grapes AS T2 ON T1.Grape = T2.Grape WHERE T1.Price BETWEEN 50 AND 100 OR T1.Score > 90 OR T1.Year = 2010 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "aa33ad172d22fc8b810918af3105818c12ce46b7",
                "query": "SELECT T1.Appelation, T3.Winery FROM appellations AS T1 JOIN wine AS T2 ON T1.No = T2.No JOIN wine AS T3 ON T1.Appelation = T3.Appelation WHERE T3.Price > 50 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3a48d0964fa290d9de4f38b6bf15ad9338dc62bd",
                "query": "SELECT T1.Appelation, SUM(T2.Price) FROM appellations AS T1 JOIN wine AS T2 ON T1.No = T2.Appelation WHERE T1.State = 'California' AND T2.Price > 20 AND NOT EXISTS (SELECT 1 FROM wine AS T3 WHERE T3.Winery = T2.Winery AND T3.Year < 2010) LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) LIMIT #VALUE#"
            }
        ],
        "poker_player": [
            {
                "hash": "3da4e3dba09591a034c4658af3028dcf29405aeb",
                "query": "SELECT T1.Name, SUM(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID JOIN poker_player AS T3 ON T2.People_ID = T3.People_ID WHERE T1.Height <= 180 GROUP BY T1.Name ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e70c29df8efe0688a72cfa00f2e4650ad598ef12",
                "query": "SELECT T1.Name, SUM(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "3cf2595711f1d41854807140a0d468fa27d509ff",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), SUM(T2.Final_Table_Made) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Nationality = 'USA' AND T2.Earnings > 1000000 AND T1.Height IN (SELECT Height FROM people WHERE Height > 180)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "20ea235e17e747661ca6a6f5868b875953f61fbe",
                "query": "SELECT T1.Height, T1.Nationality, COUNT(T2.Poker_Player_ID) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID GROUP BY T1.Height, T1.Nationality ORDER BY T1.Height ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a88a68c7767661db38b57d993345ab82ec1694af",
                "query": "SELECT T1.Name, MIN(T2.Final_Table_Made) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank < 100 LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "dd62b21a011a4c3ee076eedeef6074395fe5f3ea",
                "query": "SELECT MAX(T1.Earnings) AS max_earning, T2.Name FROM poker_player AS T1 INNER JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height >= 180 ORDER BY T1.Earnings DESC LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) AS max_earning, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d54ced82f328fec53f0b7bf3d1734dcb82de104c",
                "query": "SELECT T1.Nationality, T2.Earnings FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID JOIN poker_player AS T3 ON T2.Poker_Player_ID = T3.Poker_Player_ID WHERE T2.Final_Table_Made >= 1 AND T3.Best_Finish >= 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "f5592dd8a3689892f4a06bfc7075fc09173f9cdc",
                "query": "SELECT COUNT(DISTINCT T1.People_ID) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN poker_player AS T3 ON T1.People_ID = T3.People_ID WHERE T2.Nationality = 'USA' AND T2.Height BETWEEN 175 AND 185 AND T1.Earnings IN (SELECT MAX(Earnings) FROM poker_player)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "59765f5466bcd51dae2a7f6b750a729a8b656247",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player WHERE Final_Table_Made > 10) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "61814c57344f2d418d56748bc85c77a4aa601e70",
                "query": "SELECT T1.Name, T2.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = 180 OR T1.People_ID BETWEEN 1 AND 100 OR T2.Money_Rank = 10 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d12550c0edba525d8a21d9c90e5b2ce3c77fb23e",
                "query": "SELECT T1.Name, SUM(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made < 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "e74c72068833f6f4ad93f173952452322f06ecb2",
                "query": "SELECT T2.Name, SUM(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 180 AND T2.Nationality = 'American' AND T1.Best_Finish BETWEEN 1 AND 10 GROUP BY T2.Name HAVING SUM(T1.Earnings) > 100000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE# AND T2.#COLUMN# = #VALUE# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "32573ed9e4c610e877dbe89ec4f98803175cabc0",
                "query": "SELECT T1.People_ID, T2.Height FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height != 180",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "874d962af82eec4fc81cee2afecfa636c04a1db9",
                "query": "SELECT T1.Name, T2.Earnings FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made BETWEEN 1 AND 5 AND T2.Best_Finish > 10 AND T2.People_ID NOT IN (SELECT People_ID FROM poker_player WHERE Earnings < 10000) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "109cb768fd851fb4f0d9eb0ddd28c42d193b0b29",
                "query": "SELECT COUNT(DISTINCT T1.Name) AS people_Name, COUNT(T1.Poker_Player_ID) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Best_Finish BETWEEN 1 AND 5 AND T2.Money_Rank > 100 AND T2.Final_Table_Made IS NOT NULL",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IS NOT NULL"
            },
            {
                "hash": "4c8d5a995e4f27136162f2ce2b2b2da2bc9a154b",
                "query": "SELECT T1.People_ID, T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Final_Table_Made > 10 OR T2.Nationality = 'American' OR EXISTS (SELECT 1 FROM people WHERE Height BETWEEN 170 AND 180) ORDER BY T1.People_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b8d2f19791dfa5e18dd4a7c6e8575803ceb8b31d",
                "query": "SELECT P1.Name, P2.Final_Table_Made FROM poker_player AS P2 JOIN people AS P1 ON P2.People_ID = P1.People_ID WHERE P2.Best_Finish = 1 AND P1.Height = 175 LIMIT 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "df5b6e7ee6934dd854c143af102878fbd096a02a",
                "query": "SELECT COUNT(People_ID), SUM(Earnings) FROM poker_player WHERE Final_Table_Made >= 1",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "13f11a015e3798049b34f381fd1abe64a290d526",
                "query": "SELECT Poker_Player_ID FROM poker_player WHERE Nationality = 'American' ORDER BY Poker_Player_ID ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f704c85151ad4db47709ae8ac2f6139c896b7b4d",
                "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings >= 1000000 ORDER BY T1.Height DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "63b17599a28763e07252c7f68270ec885269af2e",
                "query": "SELECT T2.Nationality, COUNT(DISTINCT T1.Poker_Player_ID) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height = 175 ORDER BY T2.Nationality ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6000e31b846590bb4c22a65ce9d8e02bd341ee0b",
                "query": "SELECT T1.Name, T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Money_Rank IN (SELECT MAX(Money_Rank) FROM poker_player)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "5131d7205a37fb5c97a4a7380c6749cfef14a760",
                "query": "SELECT T1.Nationality, AVG(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 180 AND T2.Final_Table_Made > 5 AND T2.People_ID NOT IN (SELECT People_ID FROM poker_player WHERE Earnings < 10000) GROUP BY T1.Nationality ORDER BY AVG(T2.Earnings) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "ac61fbc16e213ffa6f14a0d29e89bea1372c3c5e",
                "query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Final_Table_Made BETWEEN 1 AND 10 AND T2.Best_Finish > 5 GROUP BY T1.Name HAVING AVG(T2.Earnings) > 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "cbb3f72c582c437fe310f65506b4ba2587c670f2",
                "query": "SELECT COUNT(T2.People_ID), MIN(T1.Earnings), MAX(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Money_Rank > 10 ORDER BY T1.Earnings ASC",
                "template": "SELECT COUNT(#COLUMN#), MIN(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "architecture": [
            {
                "hash": "91804c74360dcb10bb88331e53bb89d6d54f4f3e",
                "query": "SELECT T1.name, T2.name, T3.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T1.id = T3.architect_id WHERE T1.nationality = 'USA' OR T2.length_meters BETWEEN 100 AND 200 OR T3.built_year > 1900 ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "df5b6e7ee6934dd854c143af102878fbd096a02a",
                "query": "SELECT COUNT(id), COUNT(length_meters) FROM bridge WHERE length_feet >= 1000",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "2630a12b586860ce64ebff4857af9c27e2261d0c",
                "query": "SELECT name FROM architect WHERE length_meters BETWEEN 50 AND 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "f40eff4646eacb918866bf172279eaba49dca3a7",
                "query": "SELECT COUNT(DISTINCT name) FROM architect WHERE id > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "c671c932f9ba73f741081d036da1ca5a52e1f361",
                "query": "SELECT T1.name FROM architect AS T1 JOIN architect AS T2 ON T1.id = T2.id WHERE T1.id BETWEEN 1 AND 10 OR T1.name IN (SELECT name FROM architect WHERE nationality = 'British') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "a2de442bae742a772dbd371ddf8d0aa0f640a1a9",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.id) FROM architect AS T1 WHERE T1.gender = 'Male' OR T1.nationality = 'Italian' OR EXISTS (SELECT 1 FROM bridge AS T2 WHERE T2.architect_id = T1.id)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "8b0969ad65f2121e9a43cee147b0d46b9890d0fc",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.name) FROM architect AS T1 JOIN bridge AS T2 ON T2.architect_id = T1.id JOIN mill AS T3 ON T3.architect_id = T1.id WHERE T2.name != 'Tower Bridge'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "2a48615d53d1c2dac00fae68ad554f8d077b1990",
                "query": "SELECT T1.name FROM architect AS T1 JOIN architect AS T2 ON T1.id = T2.id WHERE T1.name = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "f58fe32ef986760049fee34e97d0b8c5bfa8a0bb",
                "query": "SELECT architect_id, COUNT(location) AS count FROM mill GROUP BY architect_id",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5fab6fa01ee85e51f192a11c3d04169830bd6e0b",
                "query": "SELECT COUNT(DISTINCT name), COUNT(DISTINCT nationality) FROM architect WHERE gender != 'Male' ORDER BY id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b83bc8f080fd20f05aeb70595809f25348b7c6d4",
                "query": "SELECT COUNT(DISTINCT T1.name), T1.nationality FROM architect AS T1 WHERE T1.id < 100 ORDER BY T1.name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# < #VALUE# ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "1e9d3d5a5474d258dea89ce48922d27a08f80f61",
                "query": "SELECT T1.name, T2.name, T3.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T2.architect_id = T3.architect_id WHERE T1.gender != 'Male' ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "687dbba9f4c109748d9eebf09f394e96a129d588",
                "query": "SELECT T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T1.id = T3.architect_id LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "8877f321c28a097c29ff6d75924120bbafba916a",
                "query": "SELECT T1.nationality, T2.name, T3.location FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T1.id = T3.architect_id",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "fdc37f7fda4f2e1dc4aa9eac13b504f4609f81f5",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name), T2.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id WHERE EXISTS (SELECT 1 FROM mill AS T3 WHERE T3.architect_id = T1.id)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "e72963d9620482813680d5b906ced98bc1961eae",
                "query": "SELECT T1.name, T2.name, COUNT(T2.location) FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id WHERE T2.length_feet < 1000 ORDER BY T2.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "06b871263a3cc8943afa5eefd64c0ff59d440dc9",
                "query": "SELECT name, id FROM architect WHERE id = (SELECT architect_id FROM bridge ORDER BY length_feet DESC LIMIT 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)"
            },
            {
                "hash": "d40a2899972721251b914eec6cd75fde2c95cd01",
                "query": "SELECT T1.name, COUNT(T2.id), COUNT(T3.id) FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T1.id = T3.architect_id WHERE T2.length_meters <= 1000 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f55ebc3839d10d2bcf0c6c7c26725b73f778deb6",
                "query": "SELECT T1.name, COUNT(T1.id) FROM architect AS T1 WHERE T1.nationality = 'Japanese' OR T1.name BETWEEN 'A' AND 'K' GROUP BY T1.name HAVING COUNT(T1.id) > 1 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9d8f15f944e904ab68a34b99eafb30b92bbe3f20",
                "query": "SELECT T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id WHERE T2.length_feet > 100 ORDER BY T2.length_feet ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "16e81159bd68489628cc13041ea1f3edd95e9aa3",
                "query": "SELECT T1.name, T1.nationality FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id WHERE T1.gender != 'Male'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "5eb5c1b9d72ca6db53812c88162282e843715193",
                "query": "SELECT name FROM architect WHERE id NOT IN (SELECT architect_id FROM bridge) ORDER BY id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3eabe23272087731247e62e560cd05405c7dd399",
                "query": "SELECT T1.name, T2.length_meters FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id WHERE T2.length_meters < 200 ORDER BY T2.length_meters ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "606d75b124ea36781a6b2e8ff02d3e41568a5ca7",
                "query": "SELECT T1.name, MIN(T2.length_meters) FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "185f1b3e13dd28777c1de5a26707b23502cfadaa",
                "query": "SELECT name FROM architect WHERE id IN (SELECT architect_id FROM bridge WHERE length_meters > 100) ORDER BY id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6ede7d00e7eb6529b28f83fbb695d1c86de95991",
                "query": "SELECT name FROM architect WHERE name = (SELECT name FROM architect WHERE nationality = 'Italian') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "06d16d94def03cf47ee2177ad21e43b9a253d447",
                "query": "SELECT T1.name, COUNT(T2.id), COUNT(T3.id) FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id JOIN mill AS T3 ON T1.id = T3.architect_id ORDER BY T1.id DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1763f8fde07a5d309f6e55f8de57b78bdbe1683c",
                "query": "SELECT id FROM bridge WHERE length_meters > (SELECT AVG(length_meters) FROM bridge) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            }
        ],
        "ship_1": [
            {
                "hash": "3a3fba83a3e44591f822ee5f392614e5111c1867",
                "query": "SELECT * FROM captain AS T1 WHERE T1.Ship_ID IN (SELECT Ship_ID FROM Ship AS T2 WHERE T2.Built_Year > 1990)",
                "template": "SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "c0b3e9c0ac3fa46d5ba4ce040ccba17b43b9d593",
                "query": "SELECT Name FROM captain WHERE age >= '50'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "e179702b647774f5bee8498a60293e59df98ce2f",
                "query": "SELECT AVG(T1.age) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Built_Year < 1999 GROUP BY T1.age",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "c9a65a3038f7eed411b407ba11149f93eb11095c",
                "query": "SELECT Name FROM captain LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "b3187c29142fd7abe90c793c1c6d82b056d0d40b",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Class) FROM Ship AS T1 JOIN captain AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Built_Year BETWEEN 1950 AND 2000 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT Name FROM captain WHERE Class != 'Destroyer'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "1799c98b4a8bd20caa2e5b6c071912c60637ee07",
                "query": "SELECT T1.Name, T2.Name, T1.age FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Built_Year BETWEEN 1990 AND 2000 ORDER BY T1.age ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "0b061f74824f2e9b79187535e28cc57129ff6835",
                "query": "SELECT T1.Name, T2.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Built_Year BETWEEN 1900 AND 1950 AND T1.age > 50 ORDER BY T2.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "04b4192c95cc38e874817d2403dc35e9a192d673",
                "query": "SELECT T1.Name, T1.age, T2.Class FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.age",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "f6e5392304513a5692543c6dbbfd15cf575b1c86",
                "query": "SELECT COUNT(Ship_ID) FROM captain WHERE Name = 'John'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "4661547306cfc7b70c2a965cfe1396e2f139e375",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Ship_ID) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.age > 50 AND T2.Built_Year BETWEEN 1900 AND 1950 AND T1.Rank = 'Captain' ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d51cd6b504a35138da7c9fcf4970026b6da64a84",
                "query": "SELECT T2.Name, COUNT(DISTINCT T1.Ship_ID), MIN(T2.Built_Year) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.age = '40' GROUP BY T2.Name LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "02cc07292318d078cf5503ee723eda2ae98742c2",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T2.Name) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN captain AS T3 ON T2.Ship_ID = T3.Ship_ID WHERE T1.age < '30' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3492d2adf6515698ae36cf21006f2bba73434ff9",
                "query": "SELECT Name, Class FROM captain WHERE age > 18 OR Name IN (SELECT Name FROM captain WHERE Ship_ID = 1) ORDER BY Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c064151011453686760d114d7ac4e3d4295f09ad",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Ship_ID), AVG(T3.Built_Year) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN Ship AS T3 ON T2.Ship_ID = T3.Ship_ID WHERE T1.age > 40 AND T2.Ship_ID = 1 AND NOT EXISTS (SELECT 1 FROM captain WHERE captain.Ship_ID = 1) GROUP BY T1.Name HAVING AVG(T3.Built_Year) > 10 ORDER BY T1.Name DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "da7155af21129e750bd03c25e9d06f1a92c08eda",
                "query": "SELECT MAX(age) FROM captain WHERE Ship_ID = 1 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "db19d74907b1260b23821cf2f8fe1aae90295ee3",
                "query": "SELECT MAX(age), MIN(age) FROM captain WHERE Built_Year BETWEEN 1800 AND 1850",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "70fa9608545116642cfb496f5efe33eb9b0411bb",
                "query": "SELECT Captain_ID, MAX(Built_Year) FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE Built_Year BETWEEN 1800 AND 1900 OR T1.age > 40 OR T1.Rank = 'Captain' GROUP BY Captain_ID",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "0fb93cb259c86f55576da5ce8f73ecee1ab8a2cb",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Name), SUM(T2.Built_Year) FROM Ship AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Built_Year < 1900 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "2d119a4252b6a8b59244c2f42bb3d5d27167fab4",
                "query": "SELECT Name FROM captain ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0a1cff94e1f9747f3f433507de70c629e8045231",
                "query": "SELECT c.Name, COUNT(DISTINCT s.Name) FROM captain c JOIN Ship s ON c.Ship_ID = s.Ship_ID WHERE c.age > 40 OR c.Rank = 'Lieutenant' GROUP BY c.Name ORDER BY c.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ff3c0653a1b0f967eee93958cf9956b783021ef6",
                "query": "SELECT Ship_ID FROM captain WHERE age > 50 ORDER BY Ship_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a01a28f667ef7c865e3b7149cc705607f49c1c4b",
                "query": "SELECT T1.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Name NOT IN (SELECT Name FROM captain WHERE age = 'old')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "50a840f192eb66b542e4da61cfc9e6f804a461c8",
                "query": "SELECT T1.Name, T2.Name FROM captain AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN Ship AS T3 ON T2.Class = T3.Class WHERE T1.Name IN (SELECT Name FROM captain WHERE age = 'Old')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "party_host": [
            {
                "hash": "d4108bc8ec2788dd947a0bbebf364110300f8f33",
                "query": "SELECT Name FROM host WHERE Nationality = 'American' AND Age BETWEEN '20' AND '30' AND Host_ID IN (SELECT Host_ID FROM party_host WHERE Party_ID = 1) ORDER BY Name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7bd9683bda37cb7cec2a2bc92a80e43fd17c7a14",
                "query": "SELECT Party_Theme, COUNT(DISTINCT Host_ID), MAX(Number_of_hosts) FROM party WHERE Party_ID <= 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT Name FROM host WHERE Nationality != 'American'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d442c8047f7a8e7a31cb15f6cd3b3520752706f7",
                "query": "SELECT Name FROM host WHERE Host_ID = 1 ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "15d8ef5319e1e396fc4dd0da831284d5b99187c4",
                "query": "SELECT Party_Theme FROM party WHERE NOT EXISTS (SELECT 1 FROM host WHERE host.Host_ID = party.Party_ID) AND Number_of_hosts BETWEEN 5 AND 10 ORDER BY Party_Theme DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "523a1bdeb8e26f94066bfe5847521e2975cd3ef5",
                "query": "SELECT Name FROM host WHERE Nationality = 'American' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "2fe4c34f9a5718dd8cd396bc0ee7c793e4c81d1a",
                "query": "SELECT T1.Party_Theme, T2.Name FROM party AS T1 JOIN party_host AS T3 ON T1.Party_ID = T3.Party_ID JOIN host AS T2 ON T3.Host_ID = T2.Host_ID WHERE T1.Number_of_hosts < T2.Age",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#"
            },
            {
                "hash": "d3c35231385f4cd6218f439337e07e59bd6fb3af",
                "query": "SELECT T1.Party_Theme, T2.Name FROM party AS T1 JOIN party_host AS T3 ON T1.Party_ID = T3.Party_ID JOIN host AS T2 ON T3.Host_ID = T2.Host_ID WHERE T1.Location = T2.Nationality ORDER BY T1.Number_of_hosts DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b0909ff423def5d08c134fb8d84fb133ca6809e4",
                "query": "SELECT COUNT(DISTINCT party.Party_ID) FROM party WHERE party.Party_ID NOT IN ( SELECT COUNT(DISTINCT T1.Party_ID) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T2.Host_ID = T3.Host_ID GROUP BY T1.Party_ID, T2.Party_ID, T3.Host_ID ) ORDER BY party.Party_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN#, #COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d953e561cc12186a4a50bdf024eff67475bd5a77",
                "query": "SELECT Name, COUNT(DISTINCT Party_ID) FROM host ORDER BY Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "de63d020ad44cd58a233c384a7c2b6506c8a6de8",
                "query": "SELECT T1.Party_Theme, COUNT(T2.Host_ID) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID WHERE T1.Number_of_hosts <= 5 GROUP BY T1.Party_Theme ORDER BY T1.Party_Theme ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4632463f7b7c1220b021b2b304af606c4f35c485",
                "query": "SELECT COUNT(T1.Party_ID) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID WHERE T2.Host_ID = 1 AND T2.Is_Main_in_Charge = 'Yes' AND T1.Number_of_hosts BETWEEN 1 AND 10 AND NOT EXISTS (SELECT 1 FROM host AS T3 WHERE T3.Host_ID = T2.Host_ID AND T3.Age = 'Old')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5986f67f0997be2f325320fea9725f11a2a80c85",
                "query": "SELECT COUNT ( DISTINCT T1.Name ), T2.Party_Theme FROM host AS T1 JOIN party_host AS T3 ON T1.Host_ID = T3.Host_ID JOIN party AS T2 ON T2.Party_ID = T3.Party_ID WHERE T1.Nationality != T2.Location LIMIT 10",
                "template": "SELECT COUNT ( DISTINCT #COLUMN# ), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "24e68f6e2b9cf04de9d21e3771b4b5534c71a597",
                "query": "SELECT T1.Name FROM host AS T1 WHERE T1.Age < '30'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "8d3d2e664116aedf5f9495ea4a3ae908bf7b5419",
                "query": "SELECT COUNT(T1.Party_ID) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T2.Host_ID = T3.Host_ID WHERE T1.Location = 'New York'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "527237700343addb9b8af7f97d77312f7948ae3c",
                "query": "SELECT T1.Party_Theme, COUNT(T3.Host_ID) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T3.Host_ID = T2.Host_ID WHERE T1.Location = 'Paris' OR T3.Name = 'John Smith' OR T3.Age BETWEEN 20 AND 30 GROUP BY T1.Party_Theme LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ebf753f629cd67bacb332c670cd2121ac5371608",
                "query": "SELECT COUNT(DISTINCT T1.Host_ID), T2.Name FROM party_host AS T1 JOIN host AS T2 ON T1.Host_ID = T2.Host_ID WHERE T1.Party_ID BETWEEN 1 AND 100 AND EXISTS (SELECT 1 FROM party WHERE Party_ID = T1.Party_ID AND Party_Theme = 'Theme') AND T2.Nationality = 'American' ORDER BY COUNT(DISTINCT T1.Host_ID) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "0671e1963761c1c065a754532027d07f9fc7e762",
                "query": "SELECT SUM(Number_of_hosts), Party_Theme FROM party GROUP BY Party_Theme HAVING SUM(Number_of_hosts) > 10 ORDER BY SUM(Number_of_hosts) DESC LIMIT 5",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "ef148b22c8a46735fb463549f7b5b0c3d2e88e4d",
                "query": "SELECT T1.Party_Theme, COUNT(DISTINCT T2.Host_ID), COUNT(DISTINCT T3.Party_ID), COUNT(DISTINCT T1.Location) FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T2.Host_ID = T3.Host_ID GROUP BY T1.Party_Theme HAVING AVG(T1.Number_of_hosts) > 1 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "72ec69a603fc62ac5b78e151d4f4743fcc1b41c7",
                "query": "SELECT T1.Party_Theme, T3.Name FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T2.Host_ID = T3.Host_ID WHERE T1.First_year BETWEEN '1990' AND '2000' AND T3.Age > 30 GROUP BY T1.Party_Theme ORDER BY T1.Party_Theme DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b03b8ecb0f1d32af07e22e32120140d53de0f80f",
                "query": "SELECT COUNT(T1.Party_ID), SUM(T2.Number_of_hosts) FROM party_host AS T1 JOIN party AS T2 ON T1.Party_ID = T2.Party_ID",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "fb50fd70397b8efc16c4a8eaabd9c3619a466f6d",
                "query": "SELECT T1.Name, T2.Party_Theme FROM host AS T1 INNER JOIN party_host AS T2 ON T1.Host_ID = T2.Host_ID INNER JOIN party AS T3 ON T2.Party_ID = T3.Party_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "72ed3d1d45b3fa23063996f5c7affb1aa7dbe59a",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Party_Theme FROM host AS T1 JOIN party_host AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T3.Party_ID = T2.Party_ID WHERE T1.Age BETWEEN 20 AND 30 AND T3.First_year > 2000 AND T2.Is_Main_in_Charge = 'yes' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fab2df85202313cefdf99603ad5583fd41286260",
                "query": "SELECT T1.Party_Theme FROM party AS T1 JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID JOIN host AS T3 ON T3.Host_ID = T2.Host_ID WHERE NOT EXISTS (SELECT T4.Name FROM host AS T4 WHERE T4.Host_ID = T2.Host_ID AND T4.Nationality = 'Indian') GROUP BY T1.Party_Theme",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "15e0682a79888726913d17a556fd8ab97d97b532",
                "query": "SELECT T1.Name FROM (SELECT T1.Name, T2.Party_ID FROM host AS T1 JOIN party_host AS T2 ON T1.Host_ID = T2.Host_ID) AS T1 WHERE T1.Party_ID >= 1",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# >= #VALUE#"
            }
        ],
        "medicine_enzyme_interaction": [
            {
                "hash": "b9dfcf6a6d9450991c898d6e74f0c5616fed2b5a",
                "query": "SELECT T1.id, SUM(T1.id), COUNT(T1.id) FROM medicine AS T1 WHERE T1.name IN (SELECT T2.name FROM enzyme AS T2 WHERE T2.Location = 'Liver' AND T2.Porphyria = 'Acute Intermittent') ORDER BY T1.id ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e31496eb014fc86ad0ec2c1300237ef67aee482c",
                "query": "SELECT T1.name FROM medicine AS T1 WHERE T1.Trade_Name = 'Acetaminophen' OR EXISTS ( SELECT 1 FROM medicine_enzyme_interaction AS T2 JOIN enzyme AS T3 ON T2.enzyme_id = T3.id WHERE T3.name = 'CYP2D6' AND T2.medicine_id = T1.id ) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "527b927c8c54be993b0fbc61b8fea787889fc24b",
                "query": "SELECT T1.name, T1.Trade_Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id WHERE T1.id <= 10 AND T2.interaction_type <= 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "e8d199cbe02f8b84738a83b8bb0bc4cba854e263",
                "query": "SELECT T1.id, T1.name, T1.Trade_Name, T1.FDA_approved FROM medicine AS T1 WHERE T1.id <= 100 AND T1.id <= 500 AND T1.id <= 1000",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f5231cd88780888cfe8f7af0fb7cf24916d270ef",
                "query": "SELECT COUNT(m.id), m.name FROM medicine AS m LEFT JOIN medicine_enzyme_interaction AS mei ON m.id = mei.medicine_id WHERE m.FDA_approved >= 'Yes'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "141841038d8573f2e6becda9237058b0893468b9",
                "query": "SELECT T1.Trade_Name FROM medicine AS T1 WHERE T1.FDA_approved = 'yes' GROUP BY T1.Trade_Name ORDER BY COUNT(T1.id) DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "57de46aabe89c11fd1baee138e2ddac6c19411cf",
                "query": "SELECT COUNT(DISTINCT T2.medicine_id) FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id WHERE T1.enzyme_id IN (SELECT id FROM enzyme WHERE Location = 'Mitochondria')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "183231c3d15887ee27641bb4e0379cbdc04567de",
                "query": "SELECT T1.name, T2.name FROM medicine AS T1 JOIN medicine AS T2 ON T1.id = T2.id WHERE T1.name <= T2.Trade_Name ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0565fecb2fdf8052f48a272f167c59051c8deb3c",
                "query": "SELECT COUNT(DISTINCT medicine_id) FROM medicine_enzyme_interaction WHERE interaction_type = 'inhibitor' OR EXISTS ( SELECT 1 FROM medicine WHERE medicine_enzyme_interaction.medicine_id = medicine.id AND medicine.Trade_Name = 'drug' ) OR medicine_enzyme_interaction.enzyme_id BETWEEN 10 AND 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN# AND #TABLE#. #COLUMN# = '#VALUE#' ) OR #TABLE#. #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "d36a0245d57ad319af622b6fcf3ab23427690377",
                "query": "SELECT COUNT(T1.id), T1.id FROM medicine AS T1 WHERE T1.id > 1 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bf0a2e201e7c9db1d0e0fa37460d732439b894c6",
                "query": "SELECT T1.name, T2.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id WHERE T2.interaction_type <= 'inhibitor' GROUP BY T1.name ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "eb74253a917ed05815f12eec6559c754a722f475",
                "query": "SELECT T1.id, COUNT(DISTINCT T2.id) FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id WHERE T2.interaction_type > 'inhibitor' ORDER BY T1.id ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bb4d7b6491f9f05a49ccd6877dae8cb9f1e8e5cd",
                "query": "SELECT COUNT(T1.id), SUM(T1.OMIM) FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T1.OMIM > 100",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "70250e6d2f8aba6efd388693529871b4b672f076",
                "query": "SELECT T1.name, T3.interaction_type FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T2.medicine_id = 10 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4fdf2f84fb75c54a710f717dee0d79938ba43b08",
                "query": "SELECT MAX(T1.id), T2.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id WHERE T2.FDA_approved != 'approved' ORDER BY T1.id DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "525c3dbd134afbfbec925ab39c99cc8d9870e092",
                "query": "SELECT T1.id, T2.id FROM medicine AS T1 JOIN medicine AS T2 ON T1.id = T2.id WHERE T1.name > 'a' AND T2.name BETWEEN 'a' AND 'b' GROUP BY T2.id HAVING MIN(T1.id) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1c6758ab131ec861119d7fd140fada867fd32bc9",
                "query": "SELECT T2.name, COUNT(DISTINCT T1.id), SUM(CASE WHEN T2.Porphyria = 'yes' THEN 1 ELSE 0 END) FROM medicine_enzyme_interaction AS T1 JOIN enzyme AS T2 ON T1.enzyme_id = T2.id WHERE T2.name = 'Enzyme1' GROUP BY T2.name ORDER BY COUNT(DISTINCT T1.id) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(CASE WHEN #COLUMN# = #VALUE# THEN 1 ELSE 0 END) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "b8558d03fa6fde03d999ce931b8f37447a85a5e5",
                "query": "SELECT T1.id FROM medicine AS T1 JOIN medicine AS T2 ON T1.id = T2.id WHERE NOT EXISTS (SELECT 1 FROM medicine_enzyme_interaction AS T3 WHERE T3.medicine_id = T1.id AND T3.interaction_type = 'inhibitor')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "7255310c1dc2692d0f7de3897a4a613c2945dd4b",
                "query": "SELECT id FROM medicine WHERE id BETWEEN 1 AND 10 ORDER BY id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "eea84b017d403db05efe57b31f86e2c4b8fd232a",
                "query": "SELECT T1.id, T2.id FROM medicine AS T1 JOIN medicine AS T2 ON T1.id = T2.id WHERE T1.id = 1 AND T1.id BETWEEN 1 AND 10 AND T1.id NOT IN (SELECT T3.id FROM medicine AS T3 WHERE T3.name = 'test') ORDER BY T1.id ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3be99b857f2b07505cf4d7686ac6db708cb68af7",
                "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id JOIN enzyme AS T3 ON T2.enzyme_id = T3.id WHERE T1.id IN (SELECT medicine_id FROM medicine_enzyme_interaction WHERE enzyme_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "12a84961d8d0d7ad6103f2b70a910f80087ef152",
                "query": "SELECT T1.id, MIN(T2.OMIM) FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T1.name = 'Enzyme1' AND T2.interaction_type BETWEEN 'Type1' AND 'Type2' AND T2.medicine_id IN (SELECT id FROM medicine WHERE FDA_approved = 'Yes') GROUP BY T1.id",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "4e47470f536e1ee18a8501d7fd70a3758d4cac8a",
                "query": "SELECT DISTINCT T1.id, T2.id FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.medicine_id WHERE T2.medicine_id BETWEEN 1 AND 10 AND T1.name = 'Ibuprofen' AND EXISTS (SELECT 1 FROM enzyme WHERE id = T2.enzyme_id) ORDER BY T1.id ASC",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5cd68fbb40b43956bba5bd084fc6afe807d7333a",
                "query": "SELECT T2.name, T2.Trade_Name, T1.enzyme_id, T1.interaction_type FROM medicine_enzyme_interaction AS T1 INNER JOIN medicine AS T2 ON T1.medicine_id = T2.id WHERE T2.id != 1",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            }
        ],
        "icfp_1": [
            {
                "hash": "35907f0d9bfcb1832450f3ca6bd07423c30b3341",
                "query": "SELECT T1.country, COUNT(DISTINCT T2.fname), SUM(T2.authOrder) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE T2.authOrder < 10 GROUP BY T1.country ORDER BY COUNT(DISTINCT T2.fname) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "ae2a15b2a59bfe217d7e26773ee68d55cca8f2c1",
                "query": "SELECT COUNT(DISTINCT T2.authID), COUNT(T1.paperID) FROM Papers AS T1 JOIN Authorship AS T2 ON T1.paperID = T2.paperID WHERE T1.paperID = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "531295aec164f709c96d87ccc14822950068a8ed",
                "query": "SELECT I.instID, AVG(A.authOrder) FROM Authorship AS A JOIN Inst AS I ON A.instID = I.instID JOIN Authors AS T1 ON A.authID = T1.authID WHERE T1.authID BETWEEN 1 AND 10 GROUP BY I.instID ORDER BY I.instID ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f1f11da9c2853f0a14e2bda35d5d8130c8a0e697",
                "query": "SELECT T1.fname FROM Authors AS T1 JOIN Authorship AS T2 ON T1.authID = T2.authID JOIN Inst AS T3 ON T3.instID = T2.instID WHERE T3.country = 'USA' OR T1.lname = 'Smith' OR T1.authID BETWEEN (SELECT MIN(authID) FROM Authors) AND (SELECT MAX(authID) FROM Authors) ORDER BY T1.fname DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "de0a904292491f85e42fbf9d7927a9939db427fc",
                "query": "SELECT COUNT(DISTINCT T1.paperID) AS Total, T3.name FROM Authorship AS T1 JOIN Authors AS T2 ON T1.authID = T2.authID JOIN Inst AS T3 ON T3.instID = T1.instID WHERE T1.authOrder = 1 OR T1.paperID BETWEEN 1 AND 10 OR NOT EXISTS (SELECT 1 FROM Papers AS T4 WHERE T4.paperID = T1.paperID AND T4.title = 'Test Title') GROUP BY T3.name ORDER BY COUNT(DISTINCT T1.paperID) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "567dcc23117f88cd374a6d9a321b7e555139b50c",
                "query": "SELECT T1.name, T2.fname FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID JOIN Authors AS T3 ON T2.authID = T3.authID WHERE EXISTS (SELECT T4.paperID FROM Papers AS T4 WHERE T4.paperID = T2.paperID) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7684bda389a94dcc5c7c9e375b9e58e91b8b652b",
                "query": "SELECT COUNT(DISTINCT T1.instID), COUNT(DISTINCT T2.paperID) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID JOIN Authors AS T3 ON T2.authID = T3.authID JOIN Papers AS T4 ON T2.paperID = T4.paperID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "7f57e804550af94601b1ac6da1514984edd37252",
                "query": "SELECT T1.name, T2.lname, COUNT(DISTINCT T3.title), SUM(T3.paperID), SUM(T4.authID) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID JOIN Authors AS T3 ON T2.authID = T3.authID JOIN Papers AS T4 ON T2.paperID = T4.paperID WHERE T1.country < 'France' ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ff4742af702976a489cdab9a56c5576d46c8b148",
                "query": "SELECT I.name, I.country FROM Inst I WHERE I.instID IN (SELECT T2.instID FROM Authorship AS T1 JOIN Authors AS T2 ON T1.authID = T2.authID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "66dd20d6ce42fdea6afe63a14229762a7116f79e",
                "query": "SELECT DISTINCT T1.fname, T1.lname FROM Authors AS T1 JOIN Authorship AS T2 ON T1.authID = T2.authID WHERE T2.authOrder != 1 LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b6c9673c7823b11f1d7489bfd331d96f57bb7b3a",
                "query": "SELECT T1.name FROM Inst AS T1 WHERE NOT EXISTS (SELECT T2.authID FROM Authorship AS T2 WHERE T2.instID = T1.instID) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b44c661fbf6c9fb7315fd2145590e9500cd4ec6e",
                "query": "SELECT I.name FROM Inst I WHERE NOT EXISTS ( SELECT * FROM Authorship A JOIN Papers P ON A.paperID = P.paperID WHERE A.instID = I.instID GROUP BY P.paperID HAVING MIN(A.authOrder) > 1 ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "87b9c3e2b57e9c599d2db12bb076dfc1462c371a",
                "query": "SELECT T1.name FROM Inst AS T1 JOIN Inst AS T2 ON T1.instID = T2.instID WHERE T1.instID > 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9a6b3e0f88512382fb3ada6522d18339821c2c36",
                "query": "SELECT T2.name, COUNT(DISTINCT T1.paperID) FROM Authorship AS T1 JOIN Inst AS T2 ON T1.instID = T2.instID JOIN Authors AS T3 ON T1.authID = T3.authID GROUP BY T2.name ORDER BY COUNT(DISTINCT T1.paperID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "adf6a7c93066fbbc919e9f1ae42bbfdc5344add9",
                "query": "SELECT T3.name, COUNT(DISTINCT T1.paperID), COUNT(T2.authID) FROM Papers AS T1 JOIN Authorship AS T2 ON T1.paperID = T2.paperID JOIN Inst AS T3 ON T3.instID = T2.instID WHERE T3.country > 'USA'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "137a5d1b37fd4efb95fc35ec2c7ebf407cc28c0a",
                "query": "SELECT T1.instID, COUNT(T2.paperID) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE EXISTS (SELECT T3.authID FROM Authors AS T3 WHERE T3.authID = T2.authID) GROUP BY T1.instID ORDER BY T1.instID ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cf95121661901bcdc340062b7369747b14d7e271",
                "query": "SELECT name FROM Inst WHERE country = 'USA' OR country = 'Canada' OR instID NOT IN (SELECT instID FROM Authorship WHERE authID = 1) ORDER BY name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ea4de67bf954177d42d0f1e16cc73b98f1c780a6",
                "query": "SELECT T3.authOrder, SUM(T1.paperID), T2.fname FROM Papers AS T1 JOIN Authorship AS T2 ON T1.paperID = T2.paperID JOIN Authors AS T3 ON T2.authID = T3.authID WHERE T3.authID > 10 GROUP BY T3.authOrder HAVING SUM(T1.paperID) > 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "43fb80a3c974fe8e6115a5f7fb5ec61b6cc7ac36",
                "query": "SELECT I.country, COUNT(DISTINCT A.authID) FROM Authors A JOIN Authorship ASH ON A.authID = ASH.authID JOIN Inst I ON ASH.instID = I.instID WHERE I.instID BETWEEN 10 AND 20 AND I.country = 'USA' GROUP BY I.country ORDER BY I.country ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "18131c98190df3b7111f2b2578765fd16a7e62ab",
                "query": "SELECT T1.name, COUNT(T2.paperID) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE T2.authOrder > 1 GROUP BY T1.name HAVING COUNT(T2.paperID) > 5 LIMIT 10 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2c1b42bed6d51e346a8c213716496fe4d2e85640",
                "query": "SELECT T1.name, T3.title FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID JOIN Papers AS T3 ON T2.paperID = T3.paperID WHERE T2.authOrder > 1 AND T1.country = 'USA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "e4ca867948a29565ef8a31369c56554d865dc2e9",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.authID) FROM Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID JOIN Authors AS T3 ON T2.authID = T3.authID WHERE T2.paperID IN (SELECT T4.paperID FROM Authorship AS T4 JOIN Authors AS T5 ON T4.authID = T5.authID WHERE T5.lname = 'Smith') GROUP BY T1.name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "eef075eed93609c2cabb4565685f7a76cd239302",
                "query": "SELECT COUNT(DISTINCT T1.authID), COUNT(T2.paperID) FROM Authorship AS T1 JOIN Papers AS T2 ON T1.paperID = T2.paperID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "0208f3e05c1f7c47e7cdfc987102e3bb5d1446cb",
                "query": "SELECT COUNT(DISTINCT T3.fname), COUNT(T4.authID) FROM Authors AS T3 JOIN Authorship AS T4 ON T3.authID = T4.authID JOIN Inst AS T1 ON T4.instID = T1.instID JOIN Papers AS T2 ON T4.paperID = T2.paperID WHERE T1.country = 'USA' AND T2.paperID BETWEEN 1 AND 100 AND T4.authOrder > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "74bd13f2e2433f120da0e30523981be7a4de201c",
                "query": "SELECT T1.fname, T2.title, COUNT(DISTINCT T3.instID) FROM Authors AS T1 JOIN Authorship AS T2 ON T1.authID = T2.authID JOIN Inst AS T3 ON T2.instID = T3.instID WHERE T1.fname = 'John' AND T2.authOrder BETWEEN 1 AND 5 AND T3.country = 'USA' GROUP BY T1.fname, T2.title ORDER BY T1.fname ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "customers_campaigns_ecommerce": [
            {
                "hash": "fc16842d3335f3558f4fc8108bc114e7f1a2cb36",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'John Doe' AND T2.mailshot_id = (SELECT T3.mailshot_id FROM Mailshot_Campaigns AS T3 WHERE T3.mailshot_name = 'Campaign 1') ORDER BY T1.customer_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "dfa9ab4860a9370b03321bad22db3186b4d8fb24",
                "query": "SELECT T1.customer_name, T2.mailshot_name FROM Customers AS T1 JOIN Mailshot_Customers AS T3 ON T1.customer_id = T3.customer_id JOIN Mailshot_Campaigns AS T2 ON T3.mailshot_id = T2.mailshot_id WHERE T1.customer_id = 100 AND T2.mailshot_start_date > '2020-01-01' AND T2.mailshot_name NOT IN (SELECT mailshot_name FROM Mailshot_Campaigns WHERE mailshot_end_date < '2020-01-01')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "2786a60c2c387eefc217fdf860db7a5bdbf3c321",
                "query": "SELECT T1.customer_name, T2.mailshot_name FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.mailshot_id = 1 AND T1.customer_phone = '1234567890'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0638afac1498febedd5c05733314298cf2ad8cd3",
                "query": "SELECT * FROM Customers WHERE customer_id BETWEEN 100 AND 200 AND EXISTS (SELECT 1 FROM Customer_Addresses WHERE Customers.customer_id = Customer_Addresses.customer_id)",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN#)"
            },
            {
                "hash": "dc8149175fa42efbbe9ced5a06ba3a7b9d7a4194",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customer_Addresses AS T1 JOIN Customer_Addresses AS T2 ON T1.premise_id = T2.premise_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "f2ee345f70475149c5c952c3d77c17e5b1391679",
                "query": "SELECT T2.customer_name FROM Customer_Addresses AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c34e5bdc5077dae2d51c38bfa3107e04172dc6b2",
                "query": "SELECT T5.customer_name, T6.product_category FROM Customers AS T5 JOIN Customer_Addresses AS T1 ON T5.customer_id = T1.customer_id JOIN Premises AS T2 ON T1.premise_id = T2.premise_id JOIN Customer_Orders AS T3 ON T5.customer_id = T3.customer_id JOIN Order_Items AS T4 ON T3.order_id = T4.order_id JOIN Mailshot_Customers AS T6 ON T5.customer_id = T6.customer_id WHERE T3.order_status_code < 'Delivered' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "517e822b3d48f1eda3561f83bcf0265b2a90e0ea",
                "query": "SELECT T1.product_name, T2.mailshot_name FROM Products AS T1 JOIN Mailshot_Campaigns AS T2 ON T1.product_category = T2.product_category",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "7e07ab66a39c212422cfcab27b485ef17225ecdc",
                "query": "SELECT customer_name FROM Customers WHERE customer_phone = '1234567890' OR customer_email = 'example@example.com' OR customer_id BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "57f099e4a06ae8d0a41f3759a16c2f79859f62e1",
                "query": "SELECT COUNT(T1.customer_id), SUM(T2.order_shipping_charges), COUNT(T3.order_id) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Customers AS T3 ON T1.customer_id = T3.customer_id ORDER BY T1.order_id DESC",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "402a2f434c3971f4fbbf9f94b4b5c4e0370053e1",
                "query": "SELECT COUNT(DISTINCT customer_name), COUNT(DISTINCT customer_phone) FROM Customers WHERE customer_id >= 100 ORDER BY customer_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0265a704375d3894b47979e186911025c661ad6f",
                "query": "SELECT T1.customer_name, T1.customer_phone FROM Customers AS T1, Mailshot_Customers AS T2 WHERE T1.customer_id = T2.customer_id AND T2.outcome_code = 'success' ORDER BY T1.customer_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3abb1534d1e01cb3880cd9ddb70c98c89fb6cd52",
                "query": "SELECT T1.customer_name, COUNT(DISTINCT T1.customer_id), COUNT(T2.order_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_name HAVING COUNT(T2.order_id) > 1 ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "557506b81f292a507d6c26c6965a86f5c6e49b6d",
                "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Customer_Addresses AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_address_from >= '2020-01-01' ORDER BY T1.customer_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "80822393363edd4658dc44b33fe7b66317d38966",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.mailshot_id) FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "044879215b045186deb50c1cdfca2d089895416e",
                "query": "SELECT product_name AS NewProduct, MIN(product_category) FROM Products GROUP BY product_name ORDER BY NewProduct ASC",
                "template": "SELECT #COLUMN# AS #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "107bd9796a9d418aac7b8dff3dc351e28fa9161f",
                "query": "SELECT T1.customer_name, T2.mailshot_name FROM Customers AS T1 INNER JOIN Mailshot_Customers AS T3 ON T1.customer_id = T3.customer_id INNER JOIN Mailshot_Campaigns AS T2 ON T3.mailshot_id = T2.mailshot_id WHERE T2.mailshot_start_date >= T3.mailshot_customer_date",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN#"
            },
            {
                "hash": "75d06fcc68fd9e7dba5503803f68bf3a096ef757",
                "query": "SELECT T1.customer_name, T2.customer_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id = 100 AND T2.customer_id BETWEEN 200 AND 300 AND T1.customer_id NOT IN (SELECT customer_id FROM Mailshot_Customers) GROUP BY T1.customer_name HAVING MAX(T1.customer_id) = 100 ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "38b5db3eda6c588172d07df9c9b6a74411b69b8b",
                "query": "SELECT T1.order_id, T2.order_id FROM Customer_Orders AS T1 JOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id WHERE T1.order_shipping_charges > T2.order_shipping_charges GROUP BY T1.order_id HAVING MAX(T1.order_shipping_charges) ORDER BY T1.order_id DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "78f84ab40a98eea68c08ea110c95f07eb0aa3489",
                "query": "SELECT T1.product_category, COUNT(DISTINCT T3.customer_id) FROM Mailshot_Campaigns AS T1 INNER JOIN Mailshot_Customers AS T2 ON T1.mailshot_id = T2.mailshot_id INNER JOIN Customers AS T3 ON T3.customer_id = T2.customer_id WHERE T1.mailshot_end_date IS NOT NULL AND T2.outcome_code = 'success' AND EXISTS ( SELECT * FROM Customer_Addresses AS T4 WHERE T4.customer_id = T3.customer_id AND T4.date_address_from IS NOT NULL )",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IS NOT NULL AND #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NOT NULL )"
            },
            {
                "hash": "48d9a4bdffaf2d44b80abfd571f628baabaeb729",
                "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Mailshot_Campaigns AS T3 ON T2.mailshot_id = T3.mailshot_id WHERE T3.mailshot_start_date > '2022-01-01' ORDER BY T1.customer_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d894300c6358d7ab5a98385700214e1fea5388c6",
                "query": "SELECT T1.customer_name, T2.mailshot_name FROM Customers AS T1 JOIN Mailshot_Customers AS T3 ON T1.customer_id = T3.customer_id JOIN Mailshot_Campaigns AS T2 ON T3.mailshot_id = T2.mailshot_id WHERE T3.mailshot_customer_date >= '2020-01-01' ORDER BY T2.mailshot_start_date DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "df98a20371f910e8dee9a7ab14b11fbe2c110bfd",
                "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Mailshot_Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.mailshot_id = 1 OR T2.outcome_code = 'success' OR T1.customer_id IN (SELECT customer_id FROM Mailshot_Customers WHERE mailshot_id = 2)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6044845a6659dd5d02fd1dce0ecb233b60dde574",
                "query": "SELECT T3.mailshot_name FROM Mailshot_Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Mailshot_Campaigns AS T3 ON T1.mailshot_id = T3.mailshot_id WHERE T1.outcome_code = 'success' ORDER BY T3.mailshot_start_date ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "31264ed4573336fc946ffadf7a00f0cdedadf06b",
                "query": "SELECT DISTINCT T4.customer_name FROM Customers AS T4 JOIN Customer_Addresses AS T3 ON T4.customer_id = T3.customer_id JOIN Premises AS T2 ON T3.premise_id = T2.premise_id JOIN Customer_Orders AS T1 ON T4.customer_id = T1.customer_id WHERE T2.premises_type = 'Residential' AND T1.order_status_code = 'Delivered' AND EXISTS ( SELECT T5.mailshot_id FROM Mailshot_Customers AS T5 JOIN Mailshot_Campaigns AS T6 ON T5.mailshot_id = T6.mailshot_id WHERE T5.customer_id = T4.customer_id AND T6.mailshot_start_date BETWEEN '2020-01-01' AND '2020-12-31' )",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# )"
            }
        ],
        "election": [
            {
                "hash": "a0965856c5eef8ee847813e5674ae9d49ed84939",
                "query": "SELECT COUNT(T1.County_Id), T2.Party FROM county AS T1 JOIN party AS T2 ON T1.County_Id = T2.Party_ID WHERE T1.Population BETWEEN 10000 AND 50000 AND T1.County_name NOT IN (SELECT T3.County_name FROM county AS T3 WHERE T3.Zip_code = '12345') LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "1cbc7461e71fabb009990ee9c892492da1c848b3",
                "query": "SELECT SUM(Population) FROM county WHERE County_name = 'Baltimore' ORDER BY County_name ASC",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "03bcb616a06ae2cd4dcb4079ba955380f009fea1",
                "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_Id = T2.District JOIN party AS T3 ON T2.Party = T3.Party_ID WHERE EXISTS (SELECT 1 FROM county AS T4 JOIN election AS T5 ON T4.County_Id = T5.District WHERE T5.Party = T3.Party_ID AND T4.Population > 10000) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "5a964245bcfcdb72df8734635ca355680e4c7817",
                "query": "SELECT T1.County_name, T2.Year, T3.District FROM county AS T1 JOIN party AS T2 ON T1.County_Id = T2.Party_ID JOIN election AS T3 ON T2.Party_ID = T3.Party WHERE T3.District >= 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "9d3dde2b1fbc2a1312a48e7ce0a840fab4e2df44",
                "query": "SELECT County_name, COUNT(Party_ID), MAX(Population) FROM county WHERE Population >= 10000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "b05a1fe2c7ec23a77071edf19a89be553ece5b7c",
                "query": "SELECT SUM(Population) FROM county WHERE County_name != 'New York' ORDER BY County_Id DESC",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "10137a9129e3bddcda944ca630c442dadda88273",
                "query": "SELECT COUNT(DISTINCT County_name), COUNT(DISTINCT Population) FROM county WHERE County_name = 'CountyA' OR County_Id BETWEEN 1 AND 100 OR Population > 500000 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bc22ecf90c22ec0336865f2eb96a3338be007534",
                "query": "SELECT T1.County_name, T2.County_name FROM county AS T1 JOIN county AS T2 ON T1.County_Id = T2.County_Id WHERE T1.Population = T2.Population ORDER BY T1.County_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b0dadd37419fc44b0c834d61f2384f24f98e4023",
                "query": "SELECT T1.County_name, SUM(T2.Population) FROM county AS T1 JOIN election AS T3 ON T1.County_Id = T3.District JOIN party AS T2 ON T2.Party_ID = T3.Party WHERE T2.Year >= 2000 GROUP BY T1.County_name ORDER BY T1.County_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "95dab9f5a0b2cfbd3f141a37d35ada9416b30ea0",
                "query": "SELECT T1.County_name, T2.Party, COUNT(T1.County_Id) FROM county AS T1 JOIN party AS T2 ON T1.County_Id = T2.Party_ID WHERE T1.Population <= 1000000 ORDER BY T1.County_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "674498ad794e3c4680910db43aa48244160b59ab",
                "query": "SELECT T.County_name, T.Population FROM county AS T WHERE T.Population = 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d72043920a9b5a5bceb7dd78fefa95e2e44e9409",
                "query": "SELECT MIN(Population) FROM county WHERE County_Id >= 1000",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "73ae0c4cb02742f40cd22e87f554f0695048f89f",
                "query": "SELECT COUNT(DISTINCT County_Id), COUNT(DISTINCT County_name), COUNT(Population) FROM county AS e",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "a628edb4ee7a79365dd7a7960d2ef5e091516f25",
                "query": "SELECT COUNT(County_Id) FROM county WHERE Population >= 1000",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "a7de4478b02c4fa95325a2acbfda1fd7ddb544c9",
                "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_Id = T2.District JOIN party AS T3 ON T2.Party = T3.Party_ID WHERE T2.Counties_Represented = (SELECT Counties_Represented FROM election WHERE Delegate = 'Delegate') ORDER BY T1.Population ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a99869ee4e0be7e154edb1a7ec204cd01007af00",
                "query": "SELECT COUNT(T1.County_Id), SUM(T1.Population) FROM county AS T1 JOIN election AS T2 ON T1.County_Id = T2.District WHERE T1.County_Id BETWEEN 1 AND 10 AND T2.District NOT IN (SELECT District FROM election WHERE Delegate = 'John Doe') AND T1.Population > 10000",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "9ab4437f46e61cbe380f2871f80a624e19d0abd5",
                "query": "SELECT COUNT(Population) AS population_count, AVG(Population) AS population_avg FROM county AS election WHERE County_name != 'Albany'",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN#, AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "0af4fdb925cb4a20167158913aec5ede7e911dad",
                "query": "SELECT AVG(T1.Population), SUM(T2.Year), COUNT(T3.District) FROM county AS T1 JOIN party AS T2 ON T1.County_Id = T2.Party_ID JOIN election AS T3 ON T2.Party_ID = T3.Party",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c9a65a3038f7eed411b407ba11149f93eb11095c",
                "query": "SELECT County_name FROM county LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "65e9ef16f0d044961fd0939fb6ee93454ffc180e",
                "query": "SELECT COUNT(DISTINCT County_name) AS Zip_code FROM county ORDER BY County_Id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9315c85f6146c167d74a193259cd62c9deb56711",
                "query": "SELECT Party, COUNT(DISTINCT Governor) FROM party WHERE Party != 'Democrat'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "1cab3915c48cf5bc686f48fba1609b2e7ba557e4",
                "query": "SELECT T1.County_name, T2.Party FROM county AS T1 JOIN election AS T2 ON T1.County_Id = T2.District JOIN party AS T3 ON T2.Party = T3.Party_ID WHERE T2.District = 1 AND T3.Year = 2020 ORDER BY T1.County_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "dc48487c7da26c18828b5609b91463190b02ba56",
                "query": "SELECT County_name FROM county AS T1 WHERE County_name = 'CountyA' ORDER BY County_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9baf18768355f1621f102b2f00333feefc406ff6",
                "query": "SELECT T1.County_name, MAX(COUNT(DISTINCT T1.Population)) FROM county AS T1 WHERE T1.County_Id <= 10 GROUP BY T1.County_name",
                "template": "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "4a0253c613082ba10a58fd7d489a920efda6af19",
                "query": "SELECT County_name FROM county WHERE Population > 100000 LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6d36cb6972dad9bd530dc98a4343aa0a54d99f3e",
                "query": "SELECT T1.County_name, T2.Party, T3.Delegate FROM county AS T1 JOIN election AS T3 ON T1.County_Id = T3.District JOIN party AS T2 ON T3.Party = T2.Party_ID WHERE T1.Population BETWEEN 100000 AND 500000 ORDER BY T1.Population ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "eaec7ea56d6353668c0b671b7eb93235eeb02d16",
                "query": "SELECT MAX(Population) FROM county AS T1 WHERE County_Id <= 10 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            }
        ],
        "scientist_1": [
            {
                "hash": "4c1fd92cd8d5cc0fc36a3cf9d808d102c5e73dd9",
                "query": "SELECT S1.Name FROM Scientists AS S1 JOIN AssignedTo AS A1 ON S1.SSN = A1.Project WHERE A1.Project = 1 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "361e7913508e4efcc81a57f076c63fb01ca95b14",
                "query": "SELECT T2.Name FROM Scientists AS T1 INNER JOIN AssignedTo AS T2 ON T1.SSN = T2.Project WHERE T2.Project = 'AeH1' AND EXISTS (SELECT 1 FROM Projects AS T3 WHERE T3.Code = T2.Project AND T3.Hours > 100) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "07649447b197fb6f8da9368d52cfd60fbc3c446b",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T1.SSN), COUNT(T1.SSN) FROM Scientists AS T1 WHERE T1.SSN = 12345 OR T1.Name BETWEEN 'John' AND 'Mike'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "b3c92dc6bbc56e21b19d26202e8a02213256b278",
                "query": "SELECT T1.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T3.Hours <= 100 AND T1.Name = T3.Name",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #COLUMN#"
            },
            {
                "hash": "1669923c2a559acc1325edae8b66c8eef5fe7610",
                "query": "SELECT * FROM AssignedTo AS T1, AssignedTo AS T2 WHERE T1.Project = T2.Project AND T1.Hours > (SELECT AVG(Hours) FROM Projects)",
                "template": "SELECT * FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "ab654019f99732d89420b35b270ba7b8ca1f1f57",
                "query": "SELECT T1.Name, MIN(T3.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ccacbe1ebfa25ed7693918fdc21e6cf9b1569846",
                "query": "SELECT COUNT(DISTINCT T1.Name), SUM(T2.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist WHERE T1.Name != 'John' GROUP BY T1.Name ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f48d28076bc546af58a2ffe643c326126421a2ff",
                "query": "SELECT Name FROM Scientists WHERE NOT EXISTS (SELECT 1 FROM AssignedTo WHERE Scientist = Scientists.SSN) ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8aa71b2aeb4deaa1a9f5388edeed98c3eb698eb5",
                "query": "SELECT P.Name, COUNT(A.Project) FROM Projects P JOIN AssignedTo A ON P.Code = A.Project WHERE P.Hours > 1000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "df13a09b597d03831c7d4666dbcdb47bbfbeac0c",
                "query": "SELECT COUNT(DISTINCT T2.Name), T1.Name FROM AssignedTo AS T1 JOIN Scientists AS T2 ON T1.Scientist = T2.SSN WHERE T2.Name < 'John' ORDER BY COUNT(DISTINCT T2.Name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "93c6cc42d63dac1237631e589fc94dc06260a033",
                "query": "SELECT T1.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Project WHERE T2.Project NOT IN (SELECT Project FROM AssignedTo WHERE Scientist = 101) AND T2.Project = 'AeH' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b55039b27a4bf3929fbb08b8a10c342f6ecb56e4",
                "query": "SELECT S1.Name FROM Scientists AS S1 WHERE S1.SSN = (SELECT T1.Scientist FROM AssignedTo AS T1 WHERE T1.Project = 'AeH2') OR S1.Name = 'John Smith' OR (S1.SSN BETWEEN (SELECT MIN(T1.SSN) FROM Scientists AS T1) AND (SELECT MAX(T1.SSN) FROM Scientists AS T1)) ORDER BY S1.SSN DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE# OR (#COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f7f4c790f058e010b80794bfe4548a1a0e082953",
                "query": "SELECT T2.Name, MAX(T3.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T1.SSN = 12345 OR T2.Project BETWEEN 'AeH1' AND 'Ast1' OR T3.Hours > 100 GROUP BY T2.Name HAVING MAX(T3.Hours) > 100",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "cc0f3af3f0504dbb2bc02cffcca380b25eac5ddd",
                "query": "SELECT Name FROM Scientists WHERE Name <= 'John' ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2ba23ca18b601c8685e8c946af2f87c4ea898f99",
                "query": "SELECT T2.Name FROM AssignedTo AS T1 JOIN Scientists AS T2 ON T1.Scientist = T2.SSN WHERE T1.Project BETWEEN 'AeH1' AND 'Ast1' AND T1.Project = 'AeH1' ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0a8f473b41edf4f306c0a73e0d9b08d432326586",
                "query": "SELECT T1.Name FROM Scientists AS T1 WHERE T1.SSN IN (SELECT T2.Project FROM AssignedTo AS T2 WHERE T2.Project = 'AeH1' AND T1.SSN = T2.Scientist) OR T1.Name = 'John Smith' ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND T1.#COLUMN# = T2.#COLUMN#) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e69f3bbcb42a6869a47dcedeec5b39331e7b9836",
                "query": "SELECT T3.Name, COUNT(T2.Code) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T3.Hours < 100 GROUP BY T3.Name ORDER BY T3.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a846495057f65565e0d90dfb4c149ef4948f602b",
                "query": "SELECT T1.Name, COUNT(T2.Code) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist GROUP BY T1.Name HAVING COUNT(T2.Code) > 1 ORDER BY COUNT(T2.Code) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "e48e191730e4f7694c32c1c06a8ef8fa03b57779",
                "query": "SELECT T1.Name, MAX(T2.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T3 ON T1.SSN = T3.Scientist JOIN Projects AS T2 ON T3.Project = T2.Code WHERE T2.Hours <= 100 GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "c7b5253a2a4412aef6117ead5464c8d318451edc",
                "query": "SELECT T1.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist WHERE T2.Project = 'AeH1' OR EXISTS (SELECT 1 FROM Projects AS T3 WHERE T3.Code = T2.Project AND T3.Hours > 100) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a5f9336a0688f06fa2ff4e998c898967d9e00a07",
                "query": "SELECT T2.Name, COUNT(T3.Project) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T3.Code = T2.Project WHERE T1.SSN = T2.Scientist ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1abd8df4fe664fd73b82a22ebb02bfb9e167650e",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Code) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist WHERE T2.Project IN (SELECT Code FROM Projects WHERE Hours BETWEEN 100 AND 200) OR T2.Project NOT IN (SELECT Code FROM Projects WHERE Hours > 200)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "3b52bfcd011e426b8e5c6533e786ba69a2fc0ebd",
                "query": "SELECT COUNT(DISTINCT T2.Code) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T3.Code = T2.Project WHERE T2.Project = T3.Code",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c269f31a660d5f73d99b8c112d11a77c42bbdea9",
                "query": "SELECT T1.Name, AVG(T2.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T3 ON T1.SSN = T3.Scientist JOIN Projects AS T2 ON T3.Project = T2.Code GROUP BY T1.Name HAVING AVG(T2.Hours) < 50 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "36cb61d08984d6ecbb976f3fe66b1772990d3a43",
                "query": "SELECT T2.Name FROM (SELECT Name FROM Scientists WHERE Name = 'John' OR Name IN (SELECT T1.Name FROM Scientists AS T1 WHERE T1.SSN = 12345)) AS T3 JOIN Projects AS T2 ON T3.Name = T2.Name LIMIT 5",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AS \""
            },
            {
                "hash": "765137a4627c7ee4529353f3f8993ab89201fcf6",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Code FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code WHERE T1.Name = 'John' OR T3.Hours BETWEEN 100 AND 200 OR T3.Code IN (SELECT Code FROM Projects WHERE Name = 'Project1') ORDER BY T1.Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a96983600e9f1816728db166cb70b5e63719dcc0",
                "query": "SELECT T1.Name, COUNT(T3.Project) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code GROUP BY T1.Name HAVING COUNT(T3.Project) > 2",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "40cbf38e999b47c251fd91c1a94cef6386a87cfe",
                "query": "SELECT T1.Name, SUM(T2.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist WHERE NOT EXISTS (SELECT 1 FROM Projects AS T3 WHERE T3.Code = T2.Project AND T3.Hours > 100)",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "bb7ca579b5b144dfe55b0538991e8403aba27c6d",
                "query": "SELECT T1.Name, MIN(T2.Hours) FROM Scientists AS T1 JOIN AssignedTo AS T3 ON T1.SSN = T3.Scientist JOIN Projects AS T2 ON T3.Project = T2.Code WHERE T2.Hours >= 100 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "6c01a1a1ee1839854a2aa3f26fd2c122c3269289",
                "query": "SELECT Name FROM Scientists WHERE Name = 'John' OR Name = 'Mike' ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "network_1": [
            {
                "hash": "f33a9c38b82866f16aa7de0575175cc820b2736b",
                "query": "SELECT H1.name, COUNT(DISTINCT H2.name), MIN(H1.grade) FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID JOIN Likes L ON H1.ID = L.student_id GROUP BY H1.name HAVING MIN(H1.grade) >= 9 ORDER BY H1.name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bac85b31e9cc3b5f0be05d71a82cf10edf596846",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.liked_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T2.student_id = T3.student_id WHERE T1.grade BETWEEN 9 AND 12",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a82797bb8a92661d5d2485a855d92f4a06d8f0a9",
                "query": "SELECT T1.name, SUM(T2.grade) FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.ID = T2.ID WHERE T1.grade > 9 ORDER BY T1.ID ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6c672fc2b726bb8dc2e3c9996b0ca4df6054b889",
                "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.ID = T2.ID WHERE T1.grade < T2.grade GROUP BY T1.name HAVING MAX(T2.grade)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#)"
            },
            {
                "hash": "30dbe4c7d0ffb7d9b58deb32baab7fee83daf1b1",
                "query": "SELECT name FROM Highschooler WHERE grade > 9 ORDER BY name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ce78f610cef72554920225718201d8ff8e689068",
                "query": "SELECT T1.name, T2.friend_id FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade = 9 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "71f0925be80bf4b10ca61cb135f7b3336cc93d9c",
                "query": "SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name != T2.friend_id GROUP BY T1.name ORDER BY COUNT(T2.friend_id) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "cdd9a4ee0bf91fbb06b61cf89f5f67ab7ed8dab6",
                "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade >= 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "62108ffc499259abb26f21484b9f473a84a4dff6",
                "query": "SELECT H1.grade, COUNT(DISTINCT H2.name), MIN(H1.grade) FROM Highschooler AS H1 JOIN Friend AS F ON H1.ID = F.student_id JOIN Highschooler AS H2 ON F.friend_id = H2.ID JOIN Likes AS L ON H2.ID = L.liked_id WHERE H1.grade <= 10 GROUP BY H1.grade",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "37f2eccda133a48b4365072d7fa4e0e2bbc784f9",
                "query": "SELECT name FROM Highschooler WHERE ID = 1000 ORDER BY name ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a67b89eb1c631eb6de1db06c4764e3a8949f1a44",
                "query": "SELECT T1.name, COUNT(T1.ID) FROM Highschooler AS T1 WHERE T1.ID IN (SELECT T2.student_id FROM Friend AS T2 WHERE T2.friend_id = 1) AND T1.grade = 9",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "ba0d0b1940981b46012f39777d2f13023aea7e4b",
                "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id = 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8a16c0083d6d8a3557c5a0ee0f8363aa72fde6dd",
                "query": "SELECT T1.name, COUNT(T2.name) FROM Highschooler AS T1 JOIN Highschooler AS T2 ON T1.ID = T2.ID WHERE T1.grade = T2.grade AND T2.ID NOT IN (SELECT liked_id FROM Likes) GROUP BY T1.name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "4418c03e7ff3034e7b54e5a88e15dded04d8d74e",
                "query": "SELECT T1.name, T2.liked_id FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 9 ORDER BY T2.liked_id ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2802fe10540071cb2f3f84a214c451613ace9807",
                "query": "SELECT T1.ID FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T2.friend_id = T3.student_id WHERE EXISTS (SELECT 1 FROM Highschooler AS T4 WHERE T4.ID = T3.liked_id AND T4.grade > T1.grade) GROUP BY T1.ID HAVING MAX(T1.grade) > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "729aacd84d496f99aec9f97ef3a78cc0a9b1bee3",
                "query": "SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade = 11 AND T2.friend_id NOT IN ( SELECT student_id FROM Likes WHERE liked_id = 100 )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "3dcff03b0019d775e5aec60d8be6bbbedb2de404",
                "query": "SELECT T1.name, COUNT(T2.friend_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "a19ae6db8133da162d3c9b9932f1f5bcfc87292f",
                "query": "SELECT name FROM Highschooler WHERE ID NOT IN ( SELECT student_id FROM Friend WHERE friend_id IN ( SELECT liked_id FROM Likes WHERE student_id = 1501 ) ) GROUP BY name HAVING COUNT(DISTINCT liked_id) = 1 AND COUNT(DISTINCT friend_id) = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE# AND COUNT(DISTINCT #COLUMN#) = #VALUE#"
            },
            {
                "hash": "b3cd25b53289fb1e29381227884c4d89619a4d7e",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.liked_id) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T2.friend_id = T3.student_id WHERE T1.grade > 9 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "23e7037f8a3825aaa41faef4d3d88a3053b71b16",
                "query": "SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY COUNT(DISTINCT liked_id) ASC)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC)"
            },
            {
                "hash": "462bcc2530a49a1da3c9d1c698abd83a8b5f269c",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.friend_id), T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade >= 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ed8fd7c6ddcaf2a7810c16a3a9a4fe89dcc214e5",
                "query": "SELECT name, SUM(grade) FROM Highschooler WHERE grade < 10 GROUP BY name HAVING SUM(grade) > 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "4ab2fd00c712c46d02d9b151e3e9cf96c1611725",
                "query": "SELECT T1.ID, T1.grade FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T2.friend_id NOT IN (SELECT liked_id FROM Likes WHERE student_id = T1.ID) AND T1.grade > 9 GROUP BY T1.grade HAVING MAX(T1.grade) = 12 ORDER BY T1.grade ASC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "country_language": [
            {
                "hash": "ca110d3668b2b0c83a23a136486b5ce108d3223a",
                "query": "SELECT id, name FROM countries",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "b2732f50628b7008e99c6912bd3dda7126a66121",
                "query": "SELECT T1.name FROM countries AS T1 WHERE T1.overall_score BETWEEN 70 AND 90 OR T1.justice_score > 80 OR T1.politics_score = 95 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fa029919adfd357cccb7ec80890f89eba2d773ee",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.id) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id JOIN languages AS T3 ON T2.language_id = T3.id WHERE T1.overall_score BETWEEN 70 AND 80 AND T1.name = 'Argentina' GROUP BY T1.name ORDER BY COUNT(DISTINCT T3.id) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "245a2910b08f34c86a89570f6ced8794eae281de",
                "query": "SELECT T1.name, T2.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T3.id = T2.country_id WHERE T1.name = 'English' AND T3.overall_score BETWEEN 0 AND 100 AND T3.education_score > 80",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "2b218190bab6e5ed53359e2690cdb5ed997c0407",
                "query": "SELECT name FROM languages WHERE id > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "2416256d3b9e1e720066d1e64270db07ba18761c",
                "query": "SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id WHERE T1.overall_score > 50 AND T1.economics_score BETWEEN 60 AND 80 AND T2.language_id = 1 ORDER BY T1.overall_score ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0fcc1493aaec39f5027a1358470856dfa2adcd04",
                "query": "SELECT COUNT(T1.id), T2.name FROM countries AS T1 JOIN official_languages AS T3 ON T1.id = T3.country_id JOIN languages AS T2 ON T2.id = T3.language_id WHERE T1.overall_score = 80",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "bd281a8f8434e55d8a0eaf15e391446a62449042",
                "query": "SELECT T2.name, T1.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id WHERE T1.country_id >= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "952bf91aff9bf140d6f23f16e6bb786e3d4912d8",
                "query": "SELECT T1.name, T2.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score >= 60 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "27570aab74445087f156ca5e4763774b8938c07c",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.name), COUNT(DISTINCT T3.name) FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.name = 'USA' OR T3.overall_score > 80 OR T3.id IN (SELECT T4.country_id FROM official_languages AS T4 WHERE T4.language_id = 1) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "947a1323d85222806502d7b363d498e14e27711b",
                "query": "SELECT MAX(T1.overall_score), MIN(T2.education_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id WHERE T1.id BETWEEN 10 AND 20 AND T2.language_id IN (SELECT id FROM languages WHERE name = 'English')",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5e35dcc1f125082a34f5b0bdd9c3418f6b2c50cc",
                "query": "SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score < (SELECT AVG(overall_score) FROM countries)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "e770fa1fe44eff7cc2e5ba44c5dbbb9e04f1a24b",
                "query": "SELECT T1.name, T2.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score != 100 ORDER BY T3.overall_score ASC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1f8549ca03b4ccb174a584e905d80214f1d89cde",
                "query": "SELECT T1.name, T2.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T1.id IN (SELECT id FROM official_languages WHERE country_id = 1) AND T3.overall_score BETWEEN 50 AND 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6f8993263494dcb855e921b833709597d571edb4",
                "query": "SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id JOIN countries AS T3 ON T2.country_id = T3.id WHERE T3.overall_score > 80 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f569cc720aecff3ba4b6ac27d3d039c0b8b7b986",
                "query": "SELECT T1.name FROM languages AS T1 WHERE EXISTS (SELECT 1 FROM official_languages AS T2 WHERE T2.language_id = T1.id AND T2.country_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1fd7561fbdacf42aef30821f4ef180d3b05d7bf2",
                "query": "SELECT COUNT(DISTINCT T1.name), SUM(T2.overall_score) FROM languages AS T1 JOIN official_languages AS T3 ON T1.id = T3.language_id JOIN countries AS T2 ON T2.id = T3.country_id WHERE T2.overall_score < 70",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "37f73e69948b8a6ba5cd3bf6ab78f0d6d4c1d64a",
                "query": "SELECT T1.name, COUNT(T2.name) FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id WHERE T1.name >= 'English' GROUP BY T1.name ORDER BY COUNT(T2.name) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "9c4695c21492ee9c9f69056201c947c0097780dd",
                "query": "SELECT T1.name, AVG(T2.overall_score) FROM languages AS T1 JOIN official_languages AS T3 ON T1.id = T3.language_id JOIN countries AS T2 ON T2.id = T3.country_id WHERE T1.name = 'English' AND T2.overall_score BETWEEN 80 AND 100 GROUP BY T1.name HAVING COUNT(DISTINCT T2.id) > 5 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "24c2472dfc398041445f2e39f5464c8c81788f55",
                "query": "SELECT T1.name AS language_name FROM countries AS T1 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "43cdbeb8f3522eeb340962007351d6f3e7941a05",
                "query": "SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id WHERE NOT EXISTS (SELECT T3.name FROM countries AS T3 WHERE T3.id = T2.country_id) GROUP BY T1.name HAVING MAX(T3.overall_score) IS NULL ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) IS NULL ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "98217f9e9a0b35c7069b9cb2eec9cefefc668bec",
                "query": "SELECT T1.name, SUM(T2.overall_score) FROM languages AS T1 JOIN official_languages AS T3 ON T1.id = T3.language_id JOIN countries AS T2 ON T2.id = T3.country_id GROUP BY T1.name ORDER BY SUM(T2.overall_score) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "a060ec9c25bae2b97afd04ebb965f12004373d28",
                "query": "SELECT T1.name, T2.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id ORDER BY T2.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT COUNT(T1.id) , T2.name FROM countries AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.country_id WHERE T1.overall_score <= 50",
                "template": "SELECT COUNT(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "188b0a503a5851468d3a9173723832f9b9ce38ab",
                "query": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id JOIN countries AS T3 ON T3.id = T1.country_id WHERE T3.overall_score <= 50 ORDER BY T2.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "farm": [
            {
                "hash": "aab27b344dc2ae9410095e545210c7fabf7f8567",
                "query": "SELECT DISTINCT T1.Official_Name FROM city AS T1 WHERE NOT EXISTS (SELECT 1 FROM farm_competition AS T2 WHERE T2.Host_city_ID = T1.City_ID AND T2.Hosts = 'official') ORDER BY T1.City_ID DESC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "602909293446224ad95cfd146a4c3fc215070db7",
                "query": "SELECT MAX(Total_Horses) FROM farm WHERE Year <= 2010 ORDER BY Total_Horses ASC LIMIT 5",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "9c5a6d6bf6ef5f878751a6700b6feec6998ce112",
                "query": "SELECT T1.Official_Name, T2.Total_Horses FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID JOIN competition_record AS T3 ON T2.Competition_ID = T3.Competition_ID WHERE T1.Population <= 10000 ORDER BY T2.Total_Horses ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "299bbe0266f097b6b31c2ab52603475248409a6b",
                "query": "SELECT COUNT(DISTINCT T1.Farm_ID) FROM competition_record AS T1 JOIN competition_record AS T2 ON T1.Competition_ID = T2.Competition_ID WHERE T1.Rank > 10 OR T2.Rank = 5 AND T1.Farm_ID BETWEEN 100 AND 200 LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "66df904912ed5bd04f294e0b0d9f18ea587010ea",
                "query": "SELECT T1.City_ID, COUNT(T2.Competition_ID) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T2.Year IN (SELECT Year FROM farm_competition WHERE Theme = 'Farm Competition') GROUP BY T1.City_ID ORDER BY T1.City_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b2cf3dd7f4ebfc3f6f6df713db3728840e828c19",
                "query": "SELECT T1.City_ID, COUNT(T2.Competition_ID) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 100000 AND T2.Year BETWEEN 2010 AND 2020 AND T1.Census_Ranking = 'Capital' LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3f7efab20839a4c9a327c2a3c70236ce935ac8d6",
                "query": "SELECT T1.City_ID, MIN(T1.Population) FROM city AS T1 JOIN city AS T2 ON T1.City_ID = T2.City_ID WHERE T1.Population BETWEEN 10000 AND 100000 GROUP BY T1.City_ID ORDER BY T1.City_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8c0269ce331f96b26177f58766055395c32f5475",
                "query": "SELECT Official_Name FROM city WHERE Area_km_2 > 100 AND EXISTS (SELECT * FROM farm_competition WHERE Host_city_ID = city.City_ID AND Theme = 'Agriculture') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #TABLE#.City_ID AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "f3db74daee2a5db3a949d81c319049b8125743a0",
                "query": "SELECT MAX(T2.Oxen) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.City_ID > 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "07fe1e2d9fd8bb3ecbfd2840a1b8b0481868806a",
                "query": "SELECT Farm_ID FROM farm WHERE Total_Horses > 100 AND Working_Horses > 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "2cb3af4fa4f51b17e76cd3b6400e857d34e0f417",
                "query": "SELECT T1.Official_Name, T2.Theme, T3.Rank FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID JOIN competition_record AS T3 ON T2.Competition_ID = T3.Competition_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ca6b44e4bba47931dfc080afad9b206932504ab2",
                "query": "SELECT COUNT(DISTINCT T1.Farm_ID) FROM competition_record AS T1 JOIN competition_record AS T2 ON T1.Farm_ID = T2.Farm_ID WHERE T1.Rank > 1 AND T2.Rank BETWEEN 2 AND 5 AND T1.Competition_ID = 10 ORDER BY COUNT(DISTINCT T1.Farm_ID) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "62279855ac79a4bdab14a15ecdb1b0e2bc129fa6",
                "query": "SELECT Host_city_ID, AVG(Rank) FROM farm_competition JOIN competition_record ON farm_competition.Competition_ID = competition_record.Competition_ID GROUP BY Host_city_ID HAVING AVG(Rank) = 1",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "6e4dc97baa10659e4d3fb340c67faa29a86fcedf",
                "query": "SELECT T1.City_ID FROM city AS T1 JOIN city AS T2 ON T1.City_ID = T2.City_ID WHERE T1.Population > (SELECT AVG(Population) FROM city)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "b7cd57ff2c9db0d023b917b45ccae15b42ff3df8",
                "query": "SELECT COUNT(DISTINCT T1.Farm_ID), COUNT(T2.Competition_ID) FROM farm AS T1 JOIN competition_record AS T2 ON T1.Farm_ID = T2.Farm_ID WHERE T2.Rank = 1 OR T1.Total_Horses > 10 OR EXISTS (SELECT 1 FROM competition_record AS T3 WHERE T3.Farm_ID = T1.Farm_ID AND T3.Competition_ID IN (SELECT Competition_ID FROM competition_record WHERE Rank = 1))",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "6ada02927705ef907f9aa99a071da5eeaeb2d78f",
                "query": "SELECT T1.Official_Name, COUNT(DISTINCT T2.Farm_ID) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID JOIN competition_record AS T3 ON T2.Competition_ID = T3.Competition_ID WHERE T2.Year < 2000",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "a7d8d133429c8422803e11788ebcb2cfb0f94ab3",
                "query": "SELECT AVG(Population) FROM city WHERE City_ID IN ( SELECT Host_city_ID FROM farm_competition WHERE Theme = 'Farm Competition' ) LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "1bf5db651f58d230203dfa6b0d81df045738cac3",
                "query": "SELECT * FROM farm_competition WHERE Year BETWEEN 2018 AND 2020 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b75ab50e2780b986119c0597babb53b1f232bd5d",
                "query": "SELECT Farm_ID FROM farm WHERE Oxen != 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "176f13910766241aae64afdb24aefe90bb52a141",
                "query": "SELECT COUNT(DISTINCT T2.City_ID) FROM farm_competition AS T1 JOIN city AS T2 ON T1.Host_city_ID = T2.City_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "8c15c1159477ea1027219f4fdd81b40a60e9be66",
                "query": "SELECT Official_Name, AVG(Population) FROM city WHERE Status = 'City' AND Population BETWEEN 100000 AND 200000 GROUP BY Official_Name HAVING AVG(Population) > 150000",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "a427e29797af7c9ab0fa054be4cd0c340d60c1b6",
                "query": "SELECT DISTINCT T2.Official_Name, COUNT(DISTINCT T4.Farm_ID) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID JOIN competition_record AS T3 ON T2.Competition_ID = T3.Competition_ID JOIN farm AS T4 ON T3.Farm_ID = T4.Farm_ID WHERE T2.Year >= 2010 ORDER BY COUNT(DISTINCT T4.Farm_ID) DESC",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "cab9d864c4021629114525279af6ce5a21a06f0b",
                "query": "SELECT COUNT(DISTINCT farm_competition.Host_city_ID), farm_competition.Theme FROM farm_competition WHERE farm_competition.Year = 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a60fd16c2acbb0af0037e3d5c778307f22e866fd",
                "query": "SELECT T1.City_ID FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 500000 OR T2.Year = 2010 OR NOT EXISTS (SELECT 1 FROM competition_record AS T3 WHERE T2.Competition_ID = T3.Competition_ID) ORDER BY T1.City_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "chinook_1": [
            {
                "hash": "3006f03439c4303598b9aa90ff829839c87a45ea",
                "query": "SELECT MIN(T1.AlbumId) AS AlbumId, MAX(T1.Title) AS Title FROM Album AS T1 ORDER BY T1.AlbumId ASC",
                "template": "SELECT MIN(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7d83ce8466780e89d08b101b12b56d31c4eea305",
                "query": "SELECT COUNT(T1.AlbumId), T1.Title, T2.Name FROM Album AS T1 JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.AlbumId BETWEEN 1 AND 10 AND T2.Name = 'Artist Name'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "0f11b498ae4834b486f699621e8650aafe62132a",
                "query": "SELECT T1.Name, AVG(T2.UnitPrice) FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId WHERE T2.UnitPrice <= 1.99 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f4bdbdb7476a5f152ac8837ed6ed883bafb3a4cb",
                "query": "SELECT T1.Name FROM (SELECT T1.Name FROM Album AS T1 WHERE T1.Title = 'For Those About To Rock We Salute You' AND T1.AlbumId BETWEEN 1 AND 10 AND T1.AlbumId IN (SELECT T2.AlbumId FROM Track AS T2 WHERE T2.Name = 'For Those About To Rock We Salute You')) AS T ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)) AS T ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e4bf0f97679bea5994925fbeefbfe607eb6a28e4",
                "query": "SELECT T1.Name FROM Track AS T1 JOIN MediaType AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.UnitPrice <= 1.99",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "842520f4d43417beaaeae938f0073f04e987fd98",
                "query": "SELECT Title FROM Album WHERE AlbumId >= 1 ORDER BY Title DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9b971092b2ea242c07bc2cf6d85b25df169da84e",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId WHERE T2.UnitPrice BETWEEN 0.99 AND 1.99 AND T2.UnitPrice > (SELECT AVG(UnitPrice) FROM Track)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "1f3a1958d27e69067722843a61dd40ff05867fcf",
                "query": "SELECT FirstName, LastName, Email FROM Customer WHERE Country = 'USA' AND City = 'New York' AND State NOT IN (SELECT State FROM Employee)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "5f4f3cc8555ce095f9e07f2a24a658249fbab7a6",
                "query": "SELECT COUNT(UnitPrice) FROM InvoiceLine ORDER BY UnitPrice ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cdb1dece8fad9502436647388fd02372f7c166d7",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.TrackId) FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId WHERE T2.Composer = 'Composer Name' OR T2.UnitPrice < 1 OR T2.TrackId IN (SELECT TrackId FROM InvoiceLine WHERE Quantity > 1)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "9eaa424f902352bb84228b24e217c362d0c5249d",
                "query": "SELECT T1.Name, T2.Title, SUM(T3.UnitPrice) FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId JOIN InvoiceLine AS T3 ON T2.TrackId = T3.TrackId WHERE T2.Milliseconds > 100000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "35fbb135a4d1f2793376e74c159e71f5fb941fe6",
                "query": "SELECT Title FROM Album WHERE ArtistId = 1 AND AlbumId BETWEEN 1 AND 10 AND Title = 'Test' ORDER BY Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "adf1885aa48569be639aad140aa0214fd360e5f7",
                "query": "SELECT T1.GenreId FROM Genre AS T1 WHERE T1.GenreId IN ( SELECT T2.GenreId FROM Track AS T2 GROUP BY T2.GenreId HAVING MAX(T2.UnitPrice) = 1.99 )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# )"
            },
            {
                "hash": "fc0f4eb52c0a2288ff76da640e7f16bdd55a974d",
                "query": "SELECT COUNT(T1.Name) FROM Track AS T1 WHERE T1.Name = 'song' AND T1.TrackId BETWEEN 1 AND 100 AND T1.TrackId IN (SELECT T2.TrackId FROM InvoiceLine AS T2 WHERE T2.UnitPrice > 0.99)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "b948e69cdd3de842a9093263d31838ac367c2796",
                "query": "SELECT COUNT(DISTINCT T1.GenreId), COUNT(DISTINCT T1.MediaTypeId), T2.Name FROM Track AS T1 JOIN MediaType AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.UnitPrice < 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "37adcd4a46fbededac5edcc3856d6f86370716ac",
                "query": "SELECT T1.Title FROM (SELECT AlbumId, Title FROM Album) AS T1 WHERE T1.AlbumId = 1 OR T1.AlbumId = (SELECT AlbumId FROM Album WHERE AlbumId = 2) ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE#) AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "a16452df87da4bb6bab8e2b05f6458bd2e666387",
                "query": "SELECT DISTINCT T1.Name FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId WHERE T1.GenreId < 10 OR T2.Name = 'song' ORDER BY T1.Name ASC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fff5068adb5908965d0d04ec96b08f5ad8c6629e",
                "query": "SELECT T1.Name FROM Track AS T1 JOIN Track AS T2 ON T1.TrackId = T2.TrackId WHERE T1.Name NOT IN (SELECT Name FROM Track WHERE AlbumId = 1) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a8b6274ff06721b3cb1fd15121b1388c323d7c4c",
                "query": "SELECT COUNT(DISTINCT T1.Title) FROM Album AS T1 JOIN Artist AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = 'Coldplay' AND NOT EXISTS (SELECT * FROM Track AS T3 WHERE T3.AlbumId = T1.AlbumId AND T3.Name = 'Yellow')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "511fd6199870cf3c82e531aaab819ce045e9c974",
                "query": "SELECT T1.Name, T2.Name FROM Track AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = 'Song' OR T1.Name BETWEEN 'Song' AND 'Song2' OR T2.Name = 'Song3' ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "163a7fcc521c3a16124ab1567c95da2c0994b140",
                "query": "SELECT T1.Name, T1.Title FROM (SELECT T2.Name, T1.Title FROM Track AS T1 JOIN Album AS T2 ON T1.AlbumId = T2.AlbumId) AS T1 WHERE T1.Title >= 'A' ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM (SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "28dd4c0532da4ca18d3f4e6d182736879bfc7fac",
                "query": "SELECT T1.Name, SUM(T2.Name) FROM Genre AS T1 JOIN Track AS T2 ON T1.GenreId = T2.GenreId JOIN PlaylistTrack AS T3 ON T2.TrackId = T3.TrackId GROUP BY T1.Name LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "796658ef6441cf368b1e7c8cb5ed68bd1e977fb0",
                "query": "SELECT COUNT(DISTINCT T1.TrackId), COUNT(DISTINCT T2.InvoiceLineId), T3.Quantity FROM Track AS T1 JOIN InvoiceLine AS T2 ON T1.TrackId = T2.TrackId JOIN Invoice AS T3 ON T2.InvoiceId = T3.InvoiceId WHERE T1.Name = 'song' OR T2.UnitPrice > 1 OR T3.Total = (SELECT MAX(Total) FROM Invoice)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "a15fc42dc32427ddfa74e732078f4b8fc0559365",
                "query": "SELECT COUNT(T1.TrackId), T2.Title FROM Track AS T1 JOIN Album AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.Title >= 'Title' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "393842cbee470bf2e63c3b1216381e28e374b65e",
                "query": "SELECT COUNT(DISTINCT T1.UnitPrice) FROM InvoiceLine AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "2431cc428f29090e884983fa040dcf7a18bf6017",
                "query": "SELECT T1.Name FROM Artist AS T1 JOIN Album AS T2 ON T1.ArtistId = T2.ArtistId JOIN Track AS T3 ON T3.AlbumId = T2.AlbumId WHERE T3.UnitPrice > 1 GROUP BY T1.Name HAVING MIN(T3.UnitPrice)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            }
        ],
        "hr_1": [
            {
                "hash": "1257e09f15e8118394b54850439e63b15e0b39ef",
                "query": "SELECT COUNT(DISTINCT T1.JOB_ID) FROM employees AS T1 JOIN jobs AS T2 ON T1.JOB_ID = T2.JOB_ID WHERE T2.MIN_SALARY >= 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5ea4d7db4ac8ddbcd3cae9379089b6f5f49518c4",
                "query": "SELECT COUNT(T1.REGION_ID), COUNT(T1.REGION_ID) FROM regions AS T1 JOIN countries AS T2 ON T1.REGION_ID = T2.REGION_ID JOIN locations AS T3 ON T3.COUNTRY_ID = T2.COUNTRY_ID JOIN departments AS T4 ON T3.LOCATION_ID = T4.LOCATION_ID JOIN employees AS T5 ON T5.DEPARTMENT_ID = T4.DEPARTMENT_ID",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "8a8c821d521012e9d99cf85fdd89ff8897498245",
                "query": "SELECT MAX(SALARY) FROM employees WHERE SALARY <= 10000 ORDER BY SALARY DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "02aee300412e963203ec853cfe16dac2b4102463",
                "query": "SELECT COUNT(T1.REGION_ID), AVG(T3.SALARY) FROM regions AS T1 JOIN countries AS T2 ON T1.REGION_ID = T2.REGION_ID JOIN employees AS T3 ON T2.COUNTRY_ID = T3.DEPARTMENT_ID JOIN departments AS T4 ON T3.DEPARTMENT_ID = T4.DEPARTMENT_ID WHERE T3.SALARY < 10000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ef6e1a30e749e8d18bf158620bdde9f519d96f26",
                "query": "SELECT REGION_NAME FROM regions WHERE REGION_NAME != 'Asia'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d3ade956ace0e5638c838630446fd079fa7af436",
                "query": "SELECT * FROM employees WHERE SALARY >= 10000 ORDER BY SALARY ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "68b176a9b2297fc1b141f0b68c0bcb54aeed4040",
                "query": "SELECT job_id FROM employees WHERE salary = ( SELECT MAX(SALARY) FROM employees ) GROUP BY job_id HAVING MAX(SALARY) = ( SELECT MAX(SALARY) FROM employees ) ORDER BY job_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "15c7db8ffcfe8dad59bf6a7ae3b87c79aea736a6",
                "query": "SELECT COUNT(DISTINCT JOB_ID) FROM employees WHERE SALARY BETWEEN 5000 AND 10000 OR JOB_ID IN (SELECT JOB_ID FROM job_history WHERE START_DATE > '2000-01-01')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "f0b82875054f481d961d71ace35c2da6d99becc3",
                "query": "SELECT COUNT(DISTINCT LOCATION_ID) AS LOCATION_COUNT, MIN(POSTAL_CODE) AS MIN_POSTAL_CODE, MAX(CITY) AS MAX_CITY FROM locations WHERE CITY != 'San Francisco' ORDER BY LOCATION_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, MIN(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cf6f9eb3abc3e2b03705d8001377fcedf220cdcb",
                "query": "SELECT * FROM employees AS e WHERE e.SALARY BETWEEN 10000 AND 20000 AND e.JOB_ID NOT IN (SELECT JOB_ID FROM jobs WHERE MIN_SALARY < 5000) AND e.DEPARTMENT_ID = 80",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "76c614f3550b6c5a487ba186a8aff19cbe3feae3",
                "query": "SELECT DISTINCT REGION_NAME AS r_name FROM regions WHERE REGION_ID < 4 OR REGION_ID BETWEEN 2 AND 5 OR REGION_NAME = 'Europe' ORDER BY REGION_NAME ASC LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "41faf8256a434ca7c37edd83ebe241fd62a8ab38",
                "query": "SELECT COUNT(DISTINCT T1.COUNTRY_NAME), T2.JOB_TITLE FROM countries AS T1 JOIN locations AS T2 JOIN employees AS T3 JOIN jobs AS T4 ON T1.COUNTRY_ID = T2.COUNTRY_ID AND T2.LOCATION_ID = T3.DEPARTMENT_ID AND T3.JOB_ID = T4.JOB_ID WHERE T1.COUNTRY_NAME > 'USA' ORDER BY COUNT(DISTINCT T1.COUNTRY_NAME) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# JOIN #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "5666dfcb24ef4919b87a2b0eeb69c9793afc6b52",
                "query": "SELECT T1.COUNTRY_NAME FROM countries AS T1 JOIN regions AS T2 ON T1.REGION_ID = T2.REGION_ID WHERE T1.COUNTRY_ID = 'US' AND T1.COUNTRY_NAME BETWEEN 'A' AND 'M' AND EXISTS (SELECT 1 FROM locations WHERE LOCATION_ID = T1.LOCATION_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "7af92b2b43a0cf4ef9aebaa3ec7fedf596a70868",
                "query": "SELECT REGION_NAME FROM regions WHERE REGION_ID BETWEEN 100 AND 200 OR REGION_NAME = 'Europe' ORDER BY REGION_NAME ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "262c401a3612c0603587e67afed6dbf82f58c543",
                "query": "SELECT FIRST_NAME, LAST_NAME FROM employees WHERE HIRE_DATE BETWEEN '1995-01-01' AND '1995-12-31' OR SALARY > 10000 OR JOB_ID = 'IT_PROG' ORDER BY EMPLOYEE_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "30b1db9cdd29c6706b4b20026a29e307ebe4578b",
                "query": "SELECT COUNTRY_NAME FROM countries AS T1 WHERE REGION_ID <= 2",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "6e7911d4c93cd113d7e4a4a4df74754c32325496",
                "query": "SELECT T1.FIRST_NAME, T2.JOB_TITLE, T3.DEPARTMENT_NAME FROM employees AS T1 JOIN jobs AS T2 ON T1.JOB_ID = T2.JOB_ID JOIN departments AS T3 ON T1.DEPARTMENT_ID = T3.DEPARTMENT_ID WHERE EXISTS (SELECT 1 FROM job_history WHERE EMPLOYEE_ID = T1.EMPLOYEE_ID) ORDER BY T1.SALARY DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1bbda9749385ae478fa0635703e7a8847d87c8d7",
                "query": "SELECT LOCATION_ID AS LOCATION FROM locations WHERE STREET_ADDRESS >= '1600 Farnam St.'",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "adc8bfcca160d4653ac7072a707091f4f01c37de",
                "query": "SELECT job_title FROM jobs WHERE (MIN_SALARY = 10000 OR MIN_SALARY BETWEEN 5000 AND 15000 OR MAX_SALARY > (SELECT MIN_SALARY FROM jobs WHERE JOB_TITLE = 'Marketing Manager'))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "18140dbe070b45a7bccd4de358ce17f6db31de47",
                "query": "SELECT COUNT(DISTINCT LOCATION_ID), COUNT(DISTINCT STREET_ADDRESS), COUNT(DISTINCT POSTAL_CODE), COUNT(DISTINCT CITY), COUNT(DISTINCT STATE_PROVINCE), COUNT(DISTINCT COUNTRY_ID) FROM locations AS T1 ORDER BY COUNTRY_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "86061a9ef3cf796c48f55b07e254d695a247d969",
                "query": "SELECT T1.COUNTRY_NAME FROM countries AS T1 JOIN regions AS T2 ON T1.REGION_ID = T2.REGION_ID WHERE T1.COUNTRY_ID = 'US' ORDER BY T1.COUNTRY_NAME DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "machine_repair": [
            {
                "hash": "6f53e52bc1ff8314a1f17ccd3834a15d492495a3",
                "query": "SELECT T1.Name, SUM(T1.value_points) FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id WHERE T1.Age < 30 GROUP BY T1.Name HAVING SUM(T1.value_points) > 1000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "704ac02c8aa102bf8c12e026e382a6b8f0830a7c",
                "query": "SELECT T3.Name FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id JOIN repair AS T3 ON T3.repair_ID = T2.repair_ID WHERE T1.Team = 'Team-A' AND T2.Machine_ID BETWEEN 100 AND 200 AND T3.repair_ID NOT IN (SELECT repair_ID FROM machine) ORDER BY T3.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f0e229afa3bb364945e297de642ac7fda67ae789",
                "query": "SELECT T1.Name, MAX(T2.Making_Year) FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id GROUP BY T1.Name HAVING T1.Team != 'Alpha' ORDER BY MAX(T2.Making_Year) DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# != #VALUE# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "c84e46083578c3776caec4e228fa54e8faf8fa4d",
                "query": "SELECT T1.Name, COUNT(T2.Machine_ID), COUNT(T1.repair_ID) FROM repair AS T1 JOIN repair_assignment AS T2 ON T1.repair_ID = T2.repair_ID WHERE T2.Machine_ID = 10 AND T1.Launch_Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.technician_id > 5 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ef5154195241f97e166ec29616fd5d27a493846d",
                "query": "SELECT T1.Name FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id WHERE T1.Age > (SELECT AVG(Age) FROM technician) AND T2.Machine_ID = (SELECT Machine_ID FROM machine ORDER BY value_points ASC LIMIT 1) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0638afac1498febedd5c05733314298cf2ad8cd3",
                "query": "SELECT T1.Machine_ID FROM machine AS T1 WHERE T1.Making_Year BETWEEN 2010 AND 2015 AND T1.Class = 'ClassA' AND EXISTS (SELECT 1 FROM repair_assignment AS T2 WHERE T2.Machine_ID = T1.Machine_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "0bfd2071a2000a158a87a559edb17e40e488da4a",
                "query": "SELECT T1.Name AS Machine , COUNT(T2.Machine_ID) FROM machine AS T1 INNER JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID GROUP BY T2.Machine_ID HAVING COUNT(T2.Machine_ID) <= 5",
                "template": "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "75300dc79d9aac413ee0cfb6e7d4b496539c68a5",
                "query": "SELECT T1.Name, T2.value_points FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id JOIN repair AS T3 ON T2.repair_ID = T3.repair_ID JOIN machine AS T4 ON T2.Machine_ID = T4.Machine_ID WHERE T4.Making_Year <= 2005 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "3e8603a45386372f9fde2516246948f3c387e898",
                "query": "SELECT T1.name, T2.value_points FROM machine AS T1 INNER JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID WHERE T2.value_points > 100 ORDER BY T2.value_points DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "37f73e69948b8a6ba5cd3bf6ab78f0d6d4c1d64a",
                "query": "SELECT T2.Name, MAX(T1.value_points) FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID WHERE T1.Making_Year >= 2020 ORDER BY MAX(T1.value_points) DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "1c6ffa9cb335f44eeefb347d93f9d6f964f42778",
                "query": "SELECT MAX(Machine_ID) FROM machine WHERE Making_Year < 2020",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "412c2982854ea6af9e828c9fffdd4aa90ce6a64c",
                "query": "SELECT T1.Name FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id JOIN repair AS T3 ON T2.repair_ID = T3.repair_ID WHERE T3.Launch_Date <= '2020-01-01' ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d51f9c135c20669b806f343d79271c95163b385a",
                "query": "SELECT DISTINCT T1.Machine_ID FROM machine AS T1 WHERE T1.Making_Year BETWEEN 2010 AND 2015 OR T1.value_points > 100 AND T1.Machine_ID NOT IN (SELECT Machine_ID FROM machine WHERE Class = 'A')",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0bf84c9fd82005682f5d2d2f2f7355dbe1fb9e75",
                "query": "SELECT T1.Machine_ID, T2.Machine_ID FROM machine AS T1 JOIN machine AS T2 ON T1.Machine_ID <= T2.Machine_ID ORDER BY T1.Machine_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fc296b96661220cc443262bc32387d2ae620d8d5",
                "query": "SELECT T1.Machine_ID, T2.repair_ID FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID ORDER BY T1.Machine_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e49961515d17315a19dd00002094659839714816",
                "query": "SELECT T1.name, T2.Making_Year, T3.Name FROM repair AS T1 JOIN repair_assignment AS T2 ON T1.repair_ID = T2.repair_ID JOIN technician AS T3 ON T3.technician_id = T2.technician_id WHERE T2.Machine_ID < 100",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "eda51e85c6c5b938f8932ff6c2a7b63c3ded6b09",
                "query": "SELECT T1.Name, T2.Name FROM technician AS T1 JOIN technician AS T2 ON T1.Age BETWEEN 20 AND T2.Age",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# BETWEEN #VALUE# AND #COLUMN#"
            },
            {
                "hash": "a29d13332a85bd5c3d5215d610c774446afef299",
                "query": "SELECT T2.repair_ID FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID WHERE T1.Machine_ID != 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "57e2ee39810775dee9743810ba9974967e9a0f69",
                "query": "SELECT T1.Name, AVG(T1.value_points) FROM machine AS T1 WHERE T1.Making_Year <= 2000 GROUP BY T1.Name ORDER BY AVG(T1.value_points) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "1c3919bc057df1987cae0e5de265148261986793",
                "query": "SELECT T1.Name, T3.Making_Year FROM technician AS T1 JOIN repair_assignment AS T2 ON T1.technician_id = T2.technician_id JOIN machine AS T3 ON T2.Machine_ID = T3.Machine_ID WHERE EXISTS (SELECT 1 FROM repair AS T4 WHERE T4.repair_ID = T2.repair_ID AND T4.name = 'Repair1') LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "1127a5bc04bdc0f4475916d76d1a6306324956ef",
                "query": "SELECT T1.Name FROM technician AS T1 JOIN technician AS T2 ON T1.Team = T2.Team WHERE T1.technician_id = T2.technician_id AND T1.Name = 'John' AND EXISTS (SELECT T3.Name FROM technician AS T3 JOIN technician AS T4 ON T3.Team = T4.Team WHERE T3.Name = 'John')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "d12550c0edba525d8a21d9c90e5b2ce3c77fb23e",
                "query": "SELECT T3.Name, COUNT(T1.repair_ID) FROM repair AS T1 JOIN repair_assignment AS T2 ON T1.repair_ID = T2.repair_ID JOIN technician AS T3 ON T3.technician_id = T2.technician_id WHERE T3.Age < 30",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "4318925296170859847aeb5e43a3944e656f2646",
                "query": "SELECT T1.Machine_ID, T1.Making_Year FROM machine AS T1 WHERE T1.value_points > 10 AND T1.Making_Year BETWEEN 2000 AND 2010 AND T1.quality_rank < 5 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ee6c236455e634c472f5240f4584195ebce34488",
                "query": "SELECT AVG(T1.value_points), T2.name FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID GROUP BY T2.repair_ID ORDER BY T2.name ASC",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f9b9a28d10f9847240441827c00eded1164b0a8b",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Notes FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID JOIN repair AS T3 ON T2.repair_ID = T3.repair_ID WHERE T3.Launch_Date BETWEEN '2020-01-01' AND '2022-12-31' ORDER BY T1.Machine_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5414587a54f88ed521febb815b4c33b163f0c4a2",
                "query": "SELECT COUNT(DISTINCT T4.Name) FROM repair AS T1 JOIN repair_assignment AS T2 ON T1.repair_ID = T2.repair_ID JOIN technician AS T3 ON T2.technician_id = T3.technician_id JOIN machine AS T4 ON T2.Machine_ID = T4.Machine_ID WHERE T3.Team = 'Team A' OR T1.Launch_Date > '2020-01-01' OR T4.value_points > (SELECT AVG(value_points) FROM machine) ORDER BY T1.repair_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a96d0462f4523ffb789536fc5a55ca241c83daf2",
                "query": "SELECT T1.name FROM machine AS T1 JOIN repair_assignment AS T2 ON T1.Machine_ID = T2.Machine_ID WHERE T1.Making_Year > 2010",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "aan_1": [
            {
                "hash": "c4b48b4e3b02f2e1133dca1ae64f77281ec4efbe",
                "query": "SELECT COUNT(T1.paper_id) FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id JOIN Paper AS T3 ON T2.cited_paper_id = T3.paper_id WHERE T1.year = 2020 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "22df47660f34faea8e011d65f8d888bae9e41ffc",
                "query": "SELECT T1.title FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id WHERE T1.year > T2.year LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "66dd20d6ce42fdea6afe63a14229762a7116f79e",
                "query": "SELECT T1.affiliation_id FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id WHERE T2.author_id != 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e2c987225f2a0bff9c0273376cec13bd6cd5de91",
                "query": "SELECT T1.name FROM Paper AS T1 WHERE T1.year > ( SELECT AVG(T2.year) FROM Paper AS T2 ) AND T1.year < ( SELECT MAX(T3.year) FROM Paper AS T3 )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT AVG(#COLUMN#) FROM #TABLE# ) AND #COLUMN# < ( SELECT MAX(#COLUMN#) FROM #TABLE# )"
            },
            {
                "hash": "512434fdc456f496270dff92b32205999c71462a",
                "query": "SELECT T1.paper_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.year <= 2010",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "3b2e4861640a2772b39e9d4210520f0146dd93df",
                "query": "SELECT T1.title FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id WHERE T1.year < 2000 ORDER BY T1.year DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ca52e8b0e215d1fbbffc733559b23ba3b3b004b4",
                "query": "SELECT COUNT(DISTINCT T2.paper_id) , COUNT(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id WHERE T2.author_id != 1 ORDER BY T1.venue ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5e8d26e0c3567963db764214e2cf5593dc3d25af",
                "query": "SELECT T1.paper_id FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.paper_id JOIN Paper AS T3 ON T2.cited_paper_id = T3.paper_id WHERE T1.year BETWEEN 2000 AND 2010 OR T3.venue NOT IN (SELECT venue FROM Paper WHERE year < 2000)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "39d2ebceff304cdb4445f2c62a6a013e4e9f7976",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T2.name), COUNT(DISTINCT T3.title) FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T1.address = 'London' AND T2.author_id BETWEEN 10 AND 20 AND T3.year > 2000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "dbc5f16fcb3dd73cbe048c7c6bd57fc4d059f349",
                "query": "SELECT T2.paper_id FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id WHERE T1.name = 'John' AND T2.paper_id = 'P1' AND NOT EXISTS ( SELECT 1 FROM Citation AS T3 WHERE T3.paper_id = T2.paper_id ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) LIMIT #VALUE#"
            },
            {
                "hash": "2c5000ea1708644f1ea4ddd3895546f9f110d715",
                "query": "SELECT T1.name AS affiliation_name, T2.name AS author_name FROM Affiliation AS T1, Author AS T2, Author_list AS T3 WHERE T1.affiliation_id = T3.affiliation_id AND T2.author_id = T3.author_id",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2, #TABLE# AS T3 WHERE T1.#COLUMN# = T3.#COLUMN# AND T2.#COLUMN# = T3.#COLUMN#"
            },
            {
                "hash": "5fd3c17671d89cd4e21d803b3e0c688d0c977c3f",
                "query": "SELECT paper_id FROM Paper WHERE year != 2020 ORDER BY year DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2af47dcec745a4af3911081d4d671adca6f37af7",
                "query": "SELECT COUNT(DISTINCT T1.author_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year > 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "ed7198c1e1a480a78edfe9ca429901074acd7f9b",
                "query": "SELECT COUNT(paper_id), COUNT(author_id), affiliation_id FROM Author_list WHERE affiliation_id > 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "40ea82d4390a3d661706917f1271bb62268038c8",
                "query": "SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T2.author_id = 10 OR T3.name = 'John' OR T1.year BETWEEN 2000 AND 2010 ORDER BY T1.title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e98217e4cf721074d04db40a14957831c9335643",
                "query": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id WHERE T2.affiliation_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "93c735e9cae112623609d0adac65d7db54d171c9",
                "query": "SELECT T2.name FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id WHERE T2.name != '' ORDER BY T2.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0e3cc5a1bbe20232bb4c922017d3d390d8df007e",
                "query": "SELECT T2.name, T1.name, T3.address FROM Author_list AS T1 INNER JOIN Author AS T2 ON T1.author_id = T2.author_id INNER JOIN Affiliation AS T3 ON T1.affiliation_id = T3.affiliation_id LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "71412a052f27e3cf6dce4067f3e82aa0072c23cb",
                "query": "SELECT COUNT(DISTINCT T1.author_id) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.year BETWEEN 2000 AND 2010 OR T1.name = 'John' OR T3.venue = 'SIGMOD'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "b0444c1c441b997e9e07a623ab51be6eb1cdf08b",
                "query": "SELECT T1.title, COUNT(DISTINCT T2.affiliation_id), SUM(T2.affiliation_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id WHERE NOT EXISTS (SELECT T3.paper_id FROM Citation AS T3 WHERE T3.paper_id = T1.paper_id) GROUP BY T1.title",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "ad021e1e7160a53185bdf232af1078ed669f2bf6",
                "query": "SELECT COUNT(DISTINCT T1.paper_id), T2.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id WHERE T2.author_id = 10 OR T1.year BETWEEN 2000 AND 2010 OR T2.affiliation_id > 5 GROUP BY T2.title",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "93d7957eb08200cb25093bc07cd599ce0d9211ac",
                "query": "SELECT T1.title, COUNT(DISTINCT T2.affiliation_id), AVG(T3.year) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.paper_id WHERE T3.year >= 2000 GROUP BY T1.title LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "2b8a54018e2591beb242ec220a40e22069f87b7e",
                "query": "SELECT T1.title, AVG(T3.year) FROM Paper AS T1 JOIN Citation AS T2 ON T1.paper_id = T2.cited_paper_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE NOT EXISTS (SELECT T4.paper_id FROM Citation AS T4 WHERE T4.paper_id = T1.paper_id AND T4.cited_paper_id = T3.paper_id) GROUP BY T1.title ORDER BY AVG(T3.year) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "c92df25fad8cc0d5ec428303d68ca6d69e551fdd",
                "query": "SELECT T1.name, COUNT(T2.author_id) FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id WHERE T2.author_id = 1 OR T2.author_id IN (SELECT author_id FROM Author_list WHERE paper_id = 'P1') OR T2.author_id = 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "eded2b78ca5cdbcd2766c5c2258b5ff22766b7ed",
                "query": "SELECT title FROM Paper WHERE year >= 2000 ORDER BY title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c6d88d9924aebef92b0ba2240ad1473243048f72",
                "query": "SELECT COUNT(T1.paper_id), T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T1.author_id = 10 AND T2.year BETWEEN 2000 AND 2010 AND T1.affiliation_id NOT IN (SELECT affiliation_id FROM Affiliation WHERE name = 'University of California')",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "71f8833d880f9ce7f50779eb7d48a90bc3f017e6",
                "query": "SELECT COUNT(DISTINCT T1.author_id) FROM Author_list AS T1 WHERE T1.paper_id = 'paper_1'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a45525686e9c7c4bd06abea7591b10ae129935a3",
                "query": "SELECT COUNT(DISTINCT T2.author_id), COUNT(T1.paper_id) FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id WHERE T1.affiliation_id = 1 OR T2.name = 'John' OR T2.author_id IN (SELECT author_id FROM Author_list WHERE affiliation_id = 2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "party_people": [
            {
                "hash": "30dbe4c7d0ffb7d9b58deb32baab7fee83daf1b1",
                "query": "SELECT * FROM (SELECT Region_name, Date, Label, Format, Catalogue FROM region WHERE Region_ID > 5 ORDER BY Region_name ASC) AS subquery",
                "template": "SELECT * FROM (SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC) AS subquery"
            },
            {
                "hash": "9ecef61903b999f4b18c068d71c573deff5bd103",
                "query": "SELECT * FROM region WHERE Region_ID = 1 AND Region_ID BETWEEN (SELECT MIN(Region_ID) FROM region) AND (SELECT MAX(Region_ID) FROM region) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "c5ae377711f921b13636410900590ab80aa99043",
                "query": "SELECT * FROM region WHERE Region_ID <= 10 ORDER BY Region_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "007314b6f06e7a499333c4b569593a614225b8fd",
                "query": "SELECT T1.Region_name, T2.Member_Name, COUNT(T1.Region_ID) FROM region AS T1 JOIN member AS T2 ON T1.Region_ID = T2.Party_ID WHERE T1.Region_ID = 10 AND T1.Label = 'label' AND T2.Member_Name BETWEEN 'name1' AND 'name2' GROUP BY T2.Member_Name HAVING COUNT(T1.Region_ID) = 5 ORDER BY T2.Member_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4e3446c03c476c9927e896d1497a7cd5a30c5ce0",
                "query": "SELECT Region_ID FROM region WHERE Date BETWEEN '1900-01-01' AND '2000-12-31' ORDER BY Region_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c0ea805644f36b2ae00ecfcb2c181118e6077e9e",
                "query": "SELECT COUNT(DISTINCT Region_ID) FROM region WHERE Region_name != 'test'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "fe55f303a6ce7b5f10c512fbbafba71bb3f2360f",
                "query": "SELECT T1.Region_name, T2.Member_Name FROM region AS T1 JOIN party AS T2 ON T1.Region_ID = T2.Region_ID JOIN member AS T3 ON T2.Party_ID = T3.Party_ID WHERE T1.Region_ID BETWEEN 10 AND 20 OR T2.Party_ID = 5 OR T3.Member_ID > 15",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "8eec3710e8d83bd5559dfd6c394c321ed4338455",
                "query": "SELECT Region_name FROM region WHERE Region_ID = 1 AND Region_ID IN ( SELECT Region_ID FROM party WHERE Party_ID = 1 )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "0b0f4a2edd83e5168251e17b3d31c378e213b1a6",
                "query": "SELECT Party_name, MAX(Region_ID) FROM party WHERE Party_name != 'ABC' ORDER BY Party_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8331360cc94c30d50d4d6004f3333dab554bb4c5",
                "query": "SELECT T1.Member_Name FROM member AS T1 JOIN party AS T2 ON T1.Party_ID = T2.Party_ID WHERE T2.Region_ID BETWEEN 10 AND 20 OR T2.Party_ID IN (SELECT Party_ID FROM party_events) OR T2.Minister = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "a92ec5d4c1a25c62af1ada45d71a30d74fffad03",
                "query": "SELECT Format FROM region WHERE Date BETWEEN '1900-01-01' AND '2000-01-01' AND Region_ID = 1 ORDER BY Format ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7a3b86ec1e43fdf9871bdb5ef5341f8b9bd29a38",
                "query": "SELECT T1.Party_name, T2.Member_Name FROM party AS T1 JOIN member AS T2 ON T1.Party_ID = T2.Party_ID WHERE NOT EXISTS (SELECT 1 FROM party_events AS T3 WHERE T3.Party_ID = T1.Party_ID AND T3.Event_Name = 'Election') ORDER BY T1.Party_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f6dcbf3a8626c9a12e440f53ae0d5bd45372c581",
                "query": "SELECT Region_name FROM region WHERE Format != 'pdf' ORDER BY Region_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "938bc8d0f3fc71e637b40d42aff91a4487476e15",
                "query": "SELECT Region_ID FROM region WHERE Region_ID < 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "0f4cbbd6b363a6f6d7cc42d41cc45302a7b56af2",
                "query": "SELECT DISTINCT T1.Minister FROM party AS T1 JOIN member AS T2 ON T1.Party_ID = T2.Party_ID WHERE T1.Party_name = 'Party_name' OR T1.Region_ID IN (SELECT Region_ID FROM region WHERE Region_name = 'Region_name') LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c952cf0eea67a1d1132deb3c2a9dddb14a9b74ec",
                "query": "SELECT Region_name FROM region WHERE Region_ID = 1 OR Date BETWEEN '2020-01-01' AND '2020-12-31' OR NOT EXISTS (SELECT 1 FROM party WHERE party.Region_ID = region.Region_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "5cb6624048a0caac9ca7c58320cb0675f3e52ddd",
                "query": "SELECT T1.Region_name, T2.Party_name FROM region AS T1 JOIN party AS T2 ON T1.Region_ID = T2.Region_ID JOIN member AS T3 ON T2.Party_ID = T3.Party_ID WHERE T3.Member_ID <= 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "715758096c8d267c9042e926de5642b07a387407",
                "query": "SELECT COUNT(DISTINCT T1.Member_Name) FROM member AS T1 JOIN party AS T2 ON T1.Party_ID = T2.Party_ID JOIN party_events AS T3 ON T2.Party_ID = T3.Party_ID JOIN region AS T4 ON T2.Region_ID = T4.Region_ID WHERE T1.Member_ID < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "06ad8a85c43fa492590dfc9c2c9e8a268b3f30e0",
                "query": "SELECT Region_name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM party WHERE Party_name = 'ABC') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "6891596e0df580f808e63b9dadc72a08266abe9f",
                "query": "SELECT T1.Region_name, T2.Member_Name FROM region AS T1 JOIN party AS T2 ON T1.Region_ID = T2.Region_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "19a9272dc135d6efb90ae685d3d957a231d5bb79",
                "query": "SELECT T1.Region_name FROM region AS T1 WHERE T1.Region_ID = 1 AND T1.Region_ID IN ( SELECT T2.Region_ID FROM party AS T2 WHERE T2.Party_ID = 1 ) ORDER BY T1.Region_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "89e49528cffefbd6b239fd180f651a1d4543af42",
                "query": "SELECT T1.Region_name, T2.Party_name, T3.Member_Name FROM region AS T1 JOIN party AS T2 ON T1.Region_ID = T2.Region_ID JOIN member AS T3 ON T2.Party_ID = T3.Party_ID WHERE T1.Region_ID = 1 AND T2.Party_ID = 'A' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d6122d752ac7c685c0833055c8c12d369ac321c5",
                "query": "SELECT Party_name FROM party WHERE Party_ID >= 1 AND Party_name = 'Party_name'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "7a027a744d2b0849ea1e29d3dec218bfd00cec9b",
                "query": "SELECT AVG(T1.Region_ID), AVG(T1.Region_ID) AS T1 FROM region AS T1 GROUP BY T1.Region_name HAVING AVG(T1.Region_ID) > 1 ORDER BY T1.Region_ID DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) AS #TABLE# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "cre_Doc_Control_Systems": [
            {
                "hash": "cd9ece0cc5d990e803c72fe75f3e2c0603091da6",
                "query": "SELECT COUNT(T1.document_type_code) AS doc_count, T1.document_type_description FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_type_code <= 'X' GROUP BY T1.document_type_description",
                "template": "SELECT COUNT(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "4f67869d0eac682a78c603a5a85cae3b2983acc1",
                "query": "SELECT COUNT(DISTINCT T1.document_id) FROM Circulation_History AS T1 JOIN Circulation_History AS T2 ON T1.document_id = T2.document_id WHERE T1.employee_id = T2.employee_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#"
            },
            {
                "hash": "895c3744c7ed3ba1588005ac431452577dcb5305",
                "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = 'D001' AND document_type_code BETWEEN 'D001' AND 'D005' AND LENGTH(document_type_description) > 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND LENGTH(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f41c99ee4c58fa90d5c516e5182715a4254f3d04",
                "query": "SELECT MAX(draft_number) FROM Draft_Copies",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "0565aab702cd4b7205a43c3348c8cb58e3829f8a",
                "query": "SELECT COUNT(DISTINCT T2.document_type_description) FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_status_code = 'active' AND T1.receipt_date BETWEEN '2020-01-01' AND '2020-12-31' AND NOT EXISTS (SELECT 1 FROM Documents_Mailed AS T3 WHERE T3.document_id = T1.document_id) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "940fefab455dc82d649bb8a9553ca16ddd8b6f91",
                "query": "SELECT T1.document_type_description, MIN(T2.receipt_date) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE T2.document_status_code = 'active' AND T2.receipt_date BETWEEN '2022-01-01' AND '2022-12-31' AND T2.shipping_agent_code NOT IN (SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = 'Default Agent') GROUP BY T1.document_type_description LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "0b47eaf15d3fd0055d02d1ac1c4a09c124e4b38f",
                "query": "SELECT T1.document_type_description, T2.document_status_description FROM Ref_Document_Types AS T1 JOIN Ref_Document_Status AS T2 ON T1.document_type_code = T2.document_status_code JOIN Documents AS T3 ON T2.document_status_code = T3.document_status_code WHERE T3.document_id <= 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "7fe1f60b42642d275bada81469f998bb0edfc665",
                "query": "SELECT T1.document_id, COUNT(T2.document_id) FROM Documents AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE NOT EXISTS (SELECT 1 FROM Documents_Mailed WHERE Documents_Mailed.document_id = T1.document_id) GROUP BY T1.document_id LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "1f154b0b5062525e4b0f376c9afc61d45cdf15f3",
                "query": "SELECT COUNT(DISTINCT T1.employee_id) FROM Circulation_History AS T1 JOIN Circulation_History AS T2 ON T1.document_id = T2.document_id WHERE T1.draft_number > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "2fb519b1e307c9d8e2b8fb01d3bf7e6dbafba799",
                "query": "SELECT document_type_code FROM Ref_Document_Types WHERE NOT EXISTS (SELECT document_type_code FROM Documents WHERE Ref_Document_Types.document_type_code = Documents.document_type_code)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN#)"
            },
            {
                "hash": "3c6a62f6246725577afa946b3c8ccc48d94ede32",
                "query": "SELECT T1.document_type_code, COUNT(DISTINCT T1.document_type_description), COUNT(DISTINCT T2.document_id) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T2.document_type_code = T1.document_type_code WHERE T2.document_status_code = 'active' AND T1.document_type_code = 'official' AND T2.receipt_date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T1.document_type_code ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c508da12050f6c8a1125dbd6a780642808388868",
                "query": "SELECT MAX(receipt_date) FROM Documents WHERE document_status_code < 'Draft'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "7f9b72b677eccb3090bdf0bd1c18a64b9313c696",
                "query": "SELECT T1.document_type_description FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE EXISTS (SELECT 1 FROM Circulation_History WHERE document_id = T2.document_id ORDER BY copy_number ASC LIMIT 1) ORDER BY T1.document_type_description ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T2.#COLUMN# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "00ac166ee1b89b4f0dcb1ea28f00b5c06c7c1670",
                "query": "SELECT T1.document_type_code, COUNT(T2.document_id) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Documents_Mailed AS T3 ON T2.document_id = T3.document_id WHERE T2.document_status_code = 'active' AND T3.mailing_date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.document_type_description = 'Report'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "385afe4f7d1c402bedc2ceafe6994ce4af81113c",
                "query": "SELECT COUNT(DISTINCT T1.document_status_code), SUM(T2.document_type_code) FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.document_type_code = T2.document_type_code GROUP BY T1.document_status_code HAVING SUM(T2.document_type_code) > 10 ORDER BY COUNT(DISTINCT T1.document_status_code) ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "ab65cf0e779865ce9a511eaab13fdc28aa79831c",
                "query": "SELECT COUNT(T1.document_id), SUM(T2.draft_number) FROM Documents AS T1 JOIN Document_Drafts AS T2 ON T1.document_id = T2.document_id JOIN Draft_Copies AS T3 ON T2.document_id = T3.document_id WHERE T2.document_id BETWEEN 1 AND 10 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1bbda9749385ae478fa0635703e7a8847d87c8d7",
                "query": "SELECT T1.document_type_description FROM Ref_Document_Types AS T1 WHERE T1.document_type_code >= 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= '#VALUE#'"
            },
            {
                "hash": "3d699fb06f76216da6dde040f586122c304fef14",
                "query": "SELECT COUNT(DISTINCT employee_id), COUNT(DISTINCT role_code) FROM Employees WHERE role_code != 'Manager'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "b399eeaad41b5f46bf7c63eb0b337b0bb8c71b7b",
                "query": "SELECT T1.document_type_description, T2.document_id FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE T2.document_id BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "4604984f63f659209f22cc003c6bf261d2cfb9f4",
                "query": "SELECT COUNT(document_id), COUNT(shipping_agent_code) FROM Documents WHERE receipt_date <= '2022-01-01' GROUP BY document_status_code ORDER BY document_type_code ASC",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7f7075b465c6c2c2910d36437b4a7aa8cb095257",
                "query": "SELECT T1.document_type_description, T2.document_type_code FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE (T1.document_type_code BETWEEN 'A' AND 'Z') OR (T2.document_type_code = 'P') OR (T1.document_type_description = 'document_type_description') GROUP BY T1.document_type_description HAVING COUNT(T1.document_type_code) > 10 ORDER BY T1.document_type_description ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN '#VALUE#' AND '#VALUE#') OR (#COLUMN# = '#VALUE#') OR (#COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "66f70e71dacf355af4f4954dede91883a701d731",
                "query": "SELECT MAX(T1.document_type_code) AS document_type_code, T1.document_type_description FROM Ref_Document_Types AS T1 WHERE T1.document_type_code = 'type1' ORDER BY T1.document_type_code DESC",
                "template": "SELECT MAX(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "185c710f71dcb71e9477fde42044ff8a7da94eee",
                "query": "SELECT T1.document_type_code, COUNT(T1.document_type_code) FROM Ref_Document_Types AS T1 WHERE NOT EXISTS (SELECT 1 FROM Documents AS T2 WHERE T2.document_type_code = T1.document_type_code AND T2.document_status_code = 'Draft') AND T1.document_type_description = 'Draft'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "a04d1fd2c527f23233f2a472f0a9f568a97ff74d",
                "query": "SELECT DISTINCT T1.document_type_code FROM Ref_Document_Types AS T1 WHERE T1.document_type_code IN (SELECT T2.document_type_code FROM Documents AS T2 WHERE T2.document_id BETWEEN 10 AND 20) AND T1.document_type_description IN (SELECT T3.document_type_description FROM Documents AS T3 WHERE T3.document_id = 15)",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "16c9e755f47dfc3a20045c04c5e8cc94207e8542",
                "query": "SELECT T1.document_type_description, MIN(T2.document_id) FROM Ref_Document_Types AS T1 LEFT JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_type_code = 'type1' OR T2.document_id IN (SELECT document_id FROM Documents WHERE document_status_code = 'status1') GROUP BY T1.document_type_description ORDER BY T1.document_type_description DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f862f18c81cc98d6d7e6efabc63169cab8cd7533",
                "query": "SELECT T1.document_type_description FROM Ref_Document_Types AS T1 WHERE T1.document_type_code < 'A100'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < '#VALUE#'"
            },
            {
                "hash": "7122c89b8760147d662fcc3f8765395d8cc3064d",
                "query": "SELECT COUNT(DISTINCT document_status_code), COUNT(DISTINCT document_type_code), COUNT(document_id) FROM Documents AS T1 WHERE document_id = 1 OR document_id IN ( SELECT document_id FROM Document_Drafts WHERE draft_number = 1 ) OR EXISTS ( SELECT document_id FROM Draft_Copies WHERE document_id = T1.document_id AND copy_number = 1 ) ORDER BY document_id ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "da02bd0698970837a15957e3ab767b59fa6504e2",
                "query": "SELECT T1.document_type_description FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Document_Drafts AS T3 ON T2.document_id = T3.document_id WHERE NOT EXISTS (SELECT * FROM Circulation_History AS T4 WHERE T4.document_id = T3.document_id AND T4.employee_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            }
        ],
        "tvshow": [
            {
                "hash": "1b914e2d903ecf471395b80d6bb788f50aebef62",
                "query": "SELECT COUNT(T1.id) AS count_id, T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = 'ABC' OR T2.Title BETWEEN 'A' AND 'Z' OR T1.Country = 'USA'",
                "template": "SELECT COUNT(#COLUMN#) AS count_#COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "d52dc7f7e9aaafdeae1b126e8015d61065ab8ade",
                "query": "SELECT COUNT(T1.id) FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Viewers_m BETWEEN 1 AND 1000",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "be981ff9930b772bf2e87b05fc98e60b39b8ca0e",
                "query": "SELECT MIN(T1.`Share`) FROM (SELECT T1.`Share` FROM `TV_series` AS T1 INNER JOIN `TV_Channel` AS T2 ON T1.`Channel` = T2.`id` WHERE T1.`Air_Date` = 'S2022' AND T1.`Rating` = 'TV-Y7' AND T2.`Country` NOT IN ( SELECT T3.`Country` FROM `TV_Channel` AS T3 WHERE T3.`Language` = 'French' )) AS T ORDER BY T1.`Share` ASC",
                "template": "SELECT MIN(#COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )) AS T ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT T1.id FROM TV_Channel AS T1 WHERE T1.id > '100'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "86e31b4125a51cfe97b4a9b445e9c0d6ad320c29",
                "query": "SELECT T1.series_name AS series_name, MAX(T1.Country) FROM TV_Channel AS T1 GROUP BY T1.series_name ORDER BY T1.series_name ASC LIMIT 5",
                "template": "SELECT #COLUMN# AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "595ee5e07e5cc2edcdbd1f3e13cd187704f0e751",
                "query": "SELECT MAX(T1.18_49_Rating_Share) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = 'A' OR T1.Episode BETWEEN 'B' AND 'C' OR T2.Language = 'D' LIMIT 5",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7704ff87db1beae2a714cd3cece6041987d598f0",
                "query": "SELECT T1.series_name, T1.Language FROM TV_Channel AS T1 WHERE T1.id = 'id' AND EXISTS (SELECT T2.Episode FROM TV_series AS T2 WHERE T2.Channel = T1.id AND T2.Rating = 'rating' AND T2.Share = 1) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = '#VALUE#' AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "bf699d76f618a93a642df3a466254b9720e28129",
                "query": "SELECT COUNT(DISTINCT T1.series_name), COUNT(T2.id), COUNT(T3.id) FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T1.id = T3.Channel",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c4b48b4e3b02f2e1133dca1ae64f77281ec4efbe",
                "query": "SELECT COUNT(T1.id), T2.Title FROM TV_Channel AS T1 INNER JOIN TV_series AS T2 ON T1.id = T2.Channel INNER JOIN Cartoon AS T3 ON T2.Channel = T3.Channel WHERE T1.series_name = 'Cartoon'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "82e1f7a2d3a5592778578dba2536a2c9fa6f2ba7",
                "query": "SELECT Title FROM Cartoon WHERE Channel = 'CN' OR Title = 'The Amazing World of Gumball'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "ebb170be31d5401aa584bcf4ecd5bd793cdf5bce",
                "query": "SELECT COUNT(Channel), COUNT(Viewers_m) FROM TV_series ORDER BY Channel DESC",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5eb5c1b9d72ca6db53812c88162282e843715193",
                "query": "SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM TV_series WHERE Episode = '2') ORDER BY id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7e38293931a3cc0c72f999af43a3a5512717bffd",
                "query": "SELECT AVG(T1.Viewers_m) FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T2.id = T1.Channel WHERE T1.Channel != 'BBC' GROUP BY T2.series_name",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "84c99066c8860df86459383616581d3fba1fd71d",
                "query": "SELECT T1.id, T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Content = 'TV' OR T1.Content BETWEEN 'TV' AND 'Movie' OR T1.Content NOT IN (SELECT Content FROM TV_Channel WHERE Country = 'USA')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9c69ff3c7c3cf886818f5a80249a8920640ab873",
                "query": "SELECT T1.series_name, T1.Language FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Air_Date BETWEEN '2000-01-01' AND '2020-12-31' AND T2.Viewers_m > 1000 ORDER BY T2.Viewers_m ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "06cb39d8cceba28ddce4a3c9872c25adc1f8b62a",
                "query": "SELECT T1.id, T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Viewers_m BETWEEN 1 AND 1000000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "62dd6f14827e288b62b33e9ba9e0324e14f92d8f",
                "query": "SELECT series_name, Country, Language FROM TV_Channel WHERE series_name >= 'A' AND Language >= 'A' AND Country >= 'A'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "2148a576c88eb8c556b1c77b9145948a579a8a49",
                "query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T2.Channel = T3.Channel WHERE T3.id IN (SELECT id FROM Cartoon WHERE Channel = 'Channel 1') ORDER BY T1.series_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1d53a566b329cd0a456323eccea5b8cc56d2bd84",
                "query": "SELECT T1.series_name, T2.Viewers_m FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T2.Channel = T3.Channel WHERE T2.Share < 10 ORDER BY T2.Viewers_m DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "637f42fd1d32c5d913501f77611005460750b0d1",
                "query": "SELECT COUNT(*) FROM TV_series WHERE Channel = 'TV1' AND Weekly_Rank BETWEEN 1 AND 5 AND EXISTS (SELECT 1 FROM Cartoon WHERE Cartoon.Channel = TV_series.Channel) LIMIT 10",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "151cd73bd05ec219b1312efc9de8858d22877d8d",
                "query": "SELECT COUNT(DISTINCT T1.series_name), COUNT(T2.id) FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel JOIN Cartoon AS T3 ON T3.Channel = T1.id WHERE T2.Share <= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "b4c5cd6bca302213acc84cca9d7a9d378269afab",
                "query": "SELECT T1.Content, AVG(T1.id) FROM TV_Channel AS T1 WHERE T1.id BETWEEN 1 AND 100 AND T1.series_name = 'Series_1'",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "8d52030e3a4ceeb1b031c91e6cdba0aa84b581dd",
                "query": "SELECT T1.series_name, T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Share <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE#"
            },
            {
                "hash": "be6741762a07f3bbb674660dcdba020a4b2142f7",
                "query": "SELECT COUNT(DISTINCT T1.id) FROM TV_Channel AS T1 WHERE T1.Language = 'English' AND T1.series_name = (SELECT T2.Title FROM Cartoon AS T2 WHERE T2.Channel = 'CN' AND T2.Title BETWEEN 'A' AND 'Z')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#')"
            }
        ],
        "customers_card_transactions": [
            {
                "hash": "5de4c9ed29dad99980760398dd4657180a776e66",
                "query": "SELECT COUNT(DISTINCT T2.card_number) FROM Accounts AS T1 JOIN Financial_Transactions AS T2 ON T1.account_id = T2.account_id WHERE T1.customer_id > 100 GROUP BY T1.account_name HAVING COUNT(T2.transaction_amount) > 100 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fd42580d77e0669b6ba586538e22c22cf7484061",
                "query": "SELECT COUNT(DISTINCT T1.transaction_id), T2.customer_first_name FROM Financial_Transactions AS T1 JOIN Customers_Cards AS T2 ON T1.card_id = T2.card_id JOIN Customers AS T3 ON T2.customer_id = T3.customer_id WHERE T1.transaction_date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.transaction_amount > 100 ORDER BY T1.transaction_id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "62d88ee4a5b66884fec7ef14701da3c83e947f69",
                "query": "SELECT COUNT(DISTINCT account_name), COUNT(DISTINCT customer_id), COUNT(*) FROM Accounts WHERE customer_id > 500",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "36684d0bb9292571e738d2b8bf06981d2909070a",
                "query": "SELECT transaction_amount FROM Financial_Transactions WHERE transaction_amount <= 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a309215d182941b59a2539118763251b05ab5a3c",
                "query": "SELECT T1.customer_first_name, SUM(T4.transaction_amount) FROM Customers AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id JOIN Financial_Transactions AS T3 ON T2.card_id = T3.card_id JOIN Accounts AS T4 ON T3.account_id = T4.account_id WHERE T4.account_name > 'test' GROUP BY T1.customer_first_name ORDER BY T1.customer_first_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c835a95e38b6be54831ce2e1b17d67dcc3f0f72a",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.card_id), T3.customer_first_name FROM Customers AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id JOIN Financial_Transactions AS T3 ON T2.card_id = T3.card_id WHERE T1.customer_id != 100 ORDER BY T3.customer_first_name DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "2503f3d7c57a05ec2ff6b85fb72fcc2172ac165d",
                "query": "SELECT COUNT(T1.transaction_id), T1.account_id FROM Financial_Transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T1.transaction_amount > 1000 AND T1.transaction_type = 'Debit'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1de4501c3c9f8486bf67b361f3cdfe891cacd29c",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.customer_id) FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_first_name = 'John' OR T2.customer_phone BETWEEN '123-456-7890' AND '987-654-3210' OR T1.customer_id NOT IN (SELECT customer_id FROM Customers_Cards)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "0c99f65ffcd7d3de457c8ec16cc5a615660c2597",
                "query": "SELECT T1.account_name, COUNT(T2.transaction_amount) FROM Accounts AS T1 JOIN Financial_Transactions AS T2 ON T1.account_id = T2.account_id WHERE T2.transaction_amount < 100 GROUP BY T1.account_name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "3343f627cbefa57a1828ad1b816a515cb9039d91",
                "query": "SELECT customer_first_name, customer_last_name FROM Customers AS T1 INNER JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_id >= 10 ORDER BY T1.customer_last_name DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fd58d9a658ea693bf8a168468cc030d15a831fa0",
                "query": "SELECT DISTINCT T1.customer_first_name FROM Customers AS T1 WHERE T1.customer_phone = '123456789' OR T1.customer_email = 'abc@example.com' OR NOT EXISTS (SELECT 1 FROM Financial_Transactions AS T2 WHERE T2.account_id = T1.customer_id)",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "eee66f672467e2b68c370c0f14f0bac337b84229",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id JOIN Financial_Transactions AS T3 ON T2.card_id = T3.card_id WHERE T1.customer_phone LIKE '123%' AND T3.transaction_amount BETWEEN 100 AND 1000 AND EXISTS (SELECT * FROM Accounts AS T4 WHERE T4.account_id = T3.account_id AND T4.account_name = 'Checking') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "0efb480aaf6303b8eed4a154238ddbc3d5375d13",
                "query": "SELECT T1.account_name, T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name != 'account_name_1' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "16874759a66f56f55c855a8d501624c632a413b9",
                "query": "SELECT T1.customer_first_name, T2.card_type_code FROM Customers AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id JOIN Financial_Transactions AS T3 ON T2.card_id = T3.card_id WHERE T1.customer_last_name = 'Smith' AND T3.transaction_date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.transaction_amount > 100 ORDER BY T1.customer_first_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8273750bde3f33ab83d79a75535a9cbc69994205",
                "query": "SELECT T1.account_name, COUNT(T2.card_id) FROM Accounts AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id WHERE T2.card_type_code = 'VISA' AND T1.account_id NOT IN (SELECT account_id FROM Financial_Transactions WHERE transaction_type = 'DEBIT') AND T2.card_number LIKE '1234%'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# LIKE '#VALUE#%'"
            },
            {
                "hash": "5d9640b4c90d112a8937e45b09edc2d2823a63ef",
                "query": "SELECT T1.customer_id FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE EXISTS (SELECT T3.card_id FROM Customers_Cards AS T3 WHERE T3.customer_id = T1.customer_id) GROUP BY T1.customer_id HAVING COUNT(T1.customer_id) > 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4ffac81e5455f78b93e348c14414953b058e5769",
                "query": "SELECT COUNT(transaction_id), COUNT(DISTINCT account_id), COUNT(DISTINCT card_id) FROM Financial_Transactions WHERE transaction_amount >= 100",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "183976ec0b5bf6dd79adb23e587f149c5f6f4e09",
                "query": "SELECT T1.account_id, COUNT(T2.transaction_id) FROM Financial_Transactions AS T1 JOIN Financial_Transactions AS T2 ON T1.transaction_id = T2.previous_transaction_id WHERE T2.transaction_amount BETWEEN 100 AND 1000 AND T1.transaction_amount = (SELECT AVG(transaction_amount) FROM Financial_Transactions) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "1d16e3b14094ae712fbb0fd347c8014f5c6953a6",
                "query": "SELECT COUNT(DISTINCT T1.account_id), COUNT(DISTINCT T2.customer_id), T1.account_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "584480e3038bd9b2199c0092932359d79f47eb88",
                "query": "SELECT T1.customer_first_name, COUNT(T1.customer_id) FROM Customers AS T1 WHERE T1.customer_last_name != 'Smith' ORDER BY T1.customer_first_name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c28678d2f0f22919fb7a8fb01bfdcf495ffc4b2f",
                "query": "SELECT COUNT(T2.account_name), T1.account_name FROM Accounts AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 5 AND T2.account_id = 3 AND EXISTS (SELECT 1 FROM Accounts AS T3 WHERE T3.account_id = T1.account_id)",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "9ef732448cb6f073be7734201d95b9910b95751a",
                "query": "SELECT customer_id, MAX(transaction_amount) FROM Financial_Transactions WHERE transaction_date < '2020-01-01' GROUP BY customer_id",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "e8d220f3805217085ab3f465ab7f071aeceaaefd",
                "query": "SELECT COUNT(DISTINCT T1.account_name), COUNT(T2.transaction_amount), T3.customer_first_name FROM Accounts AS T1 JOIN Financial_Transactions AS T2 ON T1.account_id = T2.account_id JOIN Customers AS T3 ON T3.customer_id = T1.customer_id JOIN Customers_Cards AS T4 ON T3.customer_id = T4.customer_id WHERE T2.transaction_amount > 1000 OR T1.account_id NOT IN (SELECT account_id FROM Financial_Transactions WHERE transaction_type = 'online') ORDER BY T1.account_name ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a84d730d1ea44eed210ff3a439b4bfcdb26ec0c4",
                "query": "SELECT customer_id, MAX(transaction_amount) FROM Financial_Transactions WHERE transaction_amount BETWEEN 100 AND 1000 AND card_id IN (SELECT card_id FROM Customers_Cards WHERE card_type_code = 'credit') GROUP BY customer_id HAVING MAX(transaction_amount) > 500 ORDER BY customer_id DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9d9d487f0c50e8e013dcda28cdb7ea796f7459b1",
                "query": "SELECT account_id FROM Accounts WHERE account_id != 1234",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "14d01312edde18647901640479a6550df334d86c",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 JOIN Customers_Cards AS T2 ON T1.customer_id = T2.customer_id WHERE T2.card_type_code = 'Visa'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "20a90748810f7b95d1e74097879e46ef0cae233c",
                "query": "SELECT T1.customer_first_name, COUNT(T2.transaction_id) FROM Customers AS T1 JOIN Financial_Transactions AS T2 ON T1.customer_id = T2.account_id WHERE T1.customer_id = 123 GROUP BY T1.customer_first_name ORDER BY COUNT(T2.transaction_id) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "e91bf0ccfae835657724f6d6b850bc50f33fe2c9",
                "query": "SELECT SUM(transaction_amount) FROM Financial_Transactions WHERE transaction_amount > 1000",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "b936be12bd8b434e49961556808573fe7d2813be",
                "query": "SELECT account_name FROM Accounts WHERE account_id BETWEEN 1000 AND 2000 ORDER BY account_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "local_govt_mdm": [
            {
                "hash": "0bfd8b377bbacdcc724c84a3f0429aade7ef4fd6",
                "query": "SELECT SUM(T1.cmi_details) FROM Customer_Master_Index AS T1 WHERE T1.master_customer_id > 1000 GROUP BY T1.master_customer_id LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ce48df0ea5115114998047eacd798f55f20f2074",
                "query": "SELECT COUNT(DISTINCT T2.master_customer_id) AS count_distinct_master_customer_id, SUM(T1.council_tax_id) AS sum_council_tax_id FROM Council_Tax AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T1.council_tax_id != 0 GROUP BY T2.master_customer_id ORDER BY T2.master_customer_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS count_distinct_#COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6102cbf3c88976486bd7385619a69f28c94bd878",
                "query": "SELECT T1.master_customer_id FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id WHERE NOT EXISTS (SELECT T4.council_tax_id FROM Benefits_Overpayments AS T4 JOIN CMI_Cross_References AS T5 ON T4.cmi_cross_ref_id = T5.cmi_cross_ref_id WHERE T5.master_customer_id = T1.master_customer_id) ORDER BY T1.master_customer_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9bcdbba11c0cf2f44ff680b4e094cc68a4bbc4b8",
                "query": "SELECT COUNT(DISTINCT T1.master_customer_id), AVG(T2.council_tax_id) FROM Customer_Master_Index AS T1 JOIN Council_Tax AS T2 ON T1.master_customer_id = T2.cmi_cross_ref_id WHERE T1.master_customer_id BETWEEN 10000 AND 20000 GROUP BY T1.master_customer_id ORDER BY COUNT(DISTINCT T1.master_customer_id) ASC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "02018a4539a996719a74f294e2a55a97a5afba81",
                "query": "SELECT source_system_code FROM CMI_Cross_References WHERE master_customer_id <= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4609729566d59471d142ffdb9010fafb6dc2101c",
                "query": "SELECT T1.master_customer_id FROM Customer_Master_Index AS T1 WHERE T1.master_customer_id IN (SELECT T2.master_customer_id FROM CMI_Cross_References AS T2 WHERE T2.source_system_code = 'A' OR T2.master_customer_id = 1 OR T2.source_system_code = 'B') ORDER BY T1.master_customer_id ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "91931e2ce7df5e89b54066e6f83d53ecf0eea51c",
                "query": "SELECT COUNT(T1.master_customer_id), T2.cmi_details FROM CMI_Cross_References AS T1 JOIN Customer_Master_Index AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.cmi_details >= 'some_text'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "3d62ad7ee6cb9af1ba6ef2de815a494aa090a9e7",
                "query": "SELECT COUNT(T1.master_customer_id) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id JOIN Benefits_Overpayments AS T4 ON T2.cmi_cross_ref_id = T4.cmi_cross_ref_id JOIN Rent_Arrears AS T5 ON T2.cmi_cross_ref_id = T5.cmi_cross_ref_id WHERE T2.source_system_code = 'ABC' AND T3.council_tax_id BETWEEN 1000 AND 2000 AND T4.council_tax_id > 500",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "9bb05d8a5cb77ae09fd15f110bea62042db8d752",
                "query": "SELECT T2.master_customer_id, T3.cmi_cross_ref_id FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id WHERE T1.cmi_details BETWEEN 'abc' AND 'def' OR T3.council_tax_id IN (SELECT council_tax_id FROM Benefits_Overpayments)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "d072277e2e5edb49ce05a4abe54255b69fd00586",
                "query": "SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id >= 1000 ORDER BY master_customer_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f7d4a960d1e88bc2dfd4533c24012fceeb578e3b",
                "query": "SELECT COUNT(cmi_cross_ref_id), COUNT(master_customer_id), AVG(cmi_details) FROM CMI_Cross_References WHERE source_system_code > 'ABC'",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "649f77b907f2e23efb5b285c509f49f05d291289",
                "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id WHERE T2.master_customer_id NOT IN (SELECT master_customer_id FROM CMI_Cross_References) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "0b92faa7e73727b459e0f2833fa66e04865c7a49",
                "query": "SELECT T2.source_system_code FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE NOT EXISTS (SELECT 1 FROM Council_Tax AS T3 WHERE T3.cmi_cross_ref_id = T2.cmi_cross_ref_id) ORDER BY T2.source_system_code DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "41b50c2d2b2a851ffced70a3a2d91d98fb853a4f",
                "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.master_customer_id = 100 OR T2.cmi_cross_ref_id BETWEEN 100 AND 200 OR T2.source_system_code > 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "29bd24ab184fb287c1c520a1c281da59d77318d8",
                "query": "SELECT COUNT(cmi_details) FROM Customer_Master_Index WHERE master_customer_id IN (SELECT master_customer_id FROM CMI_Cross_References WHERE cmi_cross_ref_id = 123)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "ace5e5b9ae337f3895dab7385d21e1705a22bca3",
                "query": "SELECT COUNT(DISTINCT T1.master_customer_id), COUNT(DISTINCT T2.council_tax_id) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id WHERE T2.source_system_code = 'System1' OR T3.council_tax_id BETWEEN 100 AND 200 OR T2.master_customer_id IN (SELECT master_customer_id FROM Benefits_Overpayments)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "47e239d1174acfdf997442ecd7143d46f72cb252",
                "query": "SELECT MIN(T1.master_customer_id), T1.cmi_details FROM Customer_Master_Index AS T1 WHERE NOT EXISTS ( SELECT T2.master_customer_id FROM CMI_Cross_References AS T2 WHERE T2.master_customer_id = T1.master_customer_id AND T2.source_system_code = 'system_code' ) LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "7597ea240ac2a1393b189bcb3cf71ad6e7fe5268",
                "query": "SELECT COUNT(DISTINCT T4.cmi_cross_ref_id) FROM Customer_Master_Index AS T1 INNER JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id INNER JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id INNER JOIN Benefits_Overpayments AS T4 ON T3.cmi_cross_ref_id = T4.cmi_cross_ref_id WHERE T2.source_system_code = 'system_code' AND T2.master_customer_id BETWEEN 100 AND 200 AND T3.council_tax_id > 100 ORDER BY T1.master_customer_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8e2709a97adb8dad6586bb9b97041a661bffb75f",
                "query": "SELECT T1.master_customer_id, T2.source_system_code FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'ABC' OR T1.master_customer_id NOT IN (SELECT cmi_cross_ref_id FROM Council_Tax)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "6760d01616ddcdd2b575933a285e45a4943f7462",
                "query": "SELECT MAX(cmi_details), MIN(cmi_details), AVG(cmi_details) FROM Customer_Master_Index WHERE master_customer_id = 1 ORDER BY master_customer_id DESC",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fbb49c481e81fe01b9082a789eefd5537db9bbdd",
                "query": "SELECT COUNT(council_tax_id) FROM Council_Tax AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.master_customer_id <= 100 GROUP BY T2.master_customer_id ORDER BY COUNT(council_tax_id) DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# <= #VALUE# GROUP BY T2.#COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "29eed50516ce75f6560b3d620169b5637214c119",
                "query": "SELECT COUNT(DISTINCT T1.master_customer_id) FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id JOIN Council_Tax AS T3 ON T2.cmi_cross_ref_id = T3.cmi_cross_ref_id WHERE T3.council_tax_id IN (SELECT council_tax_id FROM Council_Tax) LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "ba77e8fda5466af85cc7a9964b2bf83260cd819f",
                "query": "SELECT cmi_details FROM Customer_Master_Index WHERE master_customer_id BETWEEN 100 AND 200 AND cmi_details = 'active' ORDER BY master_customer_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ff7173e9406f3d161a4797252df66c2163e29006",
                "query": "SELECT T1.cmi_details, SUM(T2.council_tax_id) FROM Customer_Master_Index AS T1 LEFT JOIN Council_Tax AS T2 ON T1.master_customer_id = T2.cmi_cross_ref_id WHERE EXISTS (SELECT 1 FROM Benefits_Overpayments AS T3 WHERE T3.cmi_cross_ref_id = T2.cmi_cross_ref_id) AND T1.master_customer_id = 100 GROUP BY T1.cmi_details",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "8100034aed6c4b817661fba59c9298af2eb124c1",
                "query": "SELECT COUNT(DISTINCT T1.master_customer_id), SUM(T2.council_tax_id) FROM Customer_Master_Index AS T1 JOIN Council_Tax AS T2 ON T1.master_customer_id = T2.cmi_cross_ref_id WHERE T1.cmi_details BETWEEN 'value1' AND 'value2' OR T1.master_customer_id IN (SELECT master_customer_id FROM CMI_Cross_References) OR T2.council_tax_id = 10000 GROUP BY COUNT(DISTINCT T1.master_customer_id) HAVING SUM(T2.council_tax_id) > 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# = #VALUE# GROUP BY COUNT(DISTINCT #COLUMN#) HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "38eaa4b32d314d9504f1e7f69734a27b2dcd4721",
                "query": "SELECT COUNT(DISTINCT T2.master_customer_id) FROM CMI_Cross_References AS T1 JOIN Customer_Master_Index AS T2 ON T1.master_customer_id = T2.master_customer_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "bfbd6c3146680bbb6d4a9c3ed6bd3a5c21b351ba",
                "query": "SELECT COUNT(T1.cmi_cross_ref_id) FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.council_tax_id BETWEEN 100 AND 200 OR T1.master_customer_id IN (SELECT master_customer_id FROM Customer_Master_Index WHERE cmi_details = 'abc')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "city_record": [
            {
                "hash": "a7fe69b24ca93e0aa4e2dfd021828bc2ec2d467c",
                "query": "SELECT T1.City FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City JOIN match AS T3 ON T2.Match_ID = T3.Match_ID JOIN temperature AS T4 ON T1.City_ID = T4.City_ID WHERE T3.Score = '1-0' AND T4.Jan > 10 AND EXISTS (SELECT * FROM match AS T5 WHERE T5.Result = 'win')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "882826186379570158acebef2450e29f3aeae496",
                "query": "SELECT T1.City_ID FROM city AS T1 WHERE T1.City_ID = 100 OR T1.City_ID = 200 OR NOT EXISTS (SELECT 1 FROM hosting_city AS T2 WHERE T2.Host_City = T1.City_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)"
            },
            {
                "hash": "f531fc99726cdba06f066777bc3037fd7b96968c",
                "query": "SELECT AVG(T1.Regional_Population) FROM city AS T1 WHERE T1.City != 'Beijing' ORDER BY T1.GDP DESC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1c9b19ad4b6a585c3b349d7d9831351aee7276ea",
                "query": "SELECT T1.City, T2.Date, T3.Jan FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City JOIN temperature AS T3 ON T2.Host_City = T3.City_ID JOIN match AS T4 ON T2.Match_ID = T4.Match_ID WHERE T4.Date BETWEEN '2000-01-01' AND '2020-12-31' AND T4.Score > 2 ORDER BY T3.Jan DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c36a25b47a6ee29753bc8fce9975cd94aae8ebf1",
                "query": "SELECT T1.City FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ae0c7ebbb2dce5e238530b55008a3209e02f3642",
                "query": "SELECT T1.City FROM city AS T1 WHERE T1.Regional_Population > 10000 ORDER BY T1.GDP DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# > #VALUE# ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "52db3226bb2af3ad9d2246089bc4f38e7de55a27",
                "query": "SELECT T1.City, T2.Score FROM city AS T1 INNER JOIN match AS T2 ON T1.City_ID = T2.Match_ID WHERE T2.Venue = 'Shanghai' OR T2.Score BETWEEN 2 AND 5 OR T2.Result = 'Lose'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "78b21c407afeece17d0ffa436549670ddf287f26",
                "query": "SELECT T1.City, T2.Score, T3.Jan FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City JOIN temperature AS T3 ON T2.Host_City = T3.City_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "d0015d7986e3e8b2a7da09db61f870e1d5763650",
                "query": "SELECT COUNT(DISTINCT T1.City_ID), COUNT(T1.City_ID) FROM city AS T1 WHERE T1.Regional_Population BETWEEN 10000 AND 50000 ORDER BY T1.City_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a7b6481581b849c10cef2220e6107c57b2a2321d",
                "query": "SELECT T2.City FROM hosting_city AS T1 JOIN city AS T2 ON T1.Host_City = T2.City_ID WHERE T2.GDP >= 1000000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "4a4b5d857d5253bc0c4e8e8c736a469d959d4134",
                "query": "SELECT City FROM city WHERE Regional_Population >= 1000 ORDER BY Regional_Population DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "47a1717066d952238e160c3d05ec7ba7139165ab",
                "query": "SELECT T2.City, SUM(T3.Jan + T3.Jul) FROM hosting_city AS T1 JOIN city AS T2 ON T1.Host_City = T2.City_ID JOIN temperature AS T3 ON T2.City_ID = T3.City_ID WHERE T1.Year <= 2000 GROUP BY T2.City HAVING SUM(T3.Jan + T3.Jul) > 10 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN# + #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN# + #COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0075fb9354f0e44ae2985d25cb20dd5e280f40fa",
                "query": "SELECT City, Hanzi FROM city AS hosting_city ORDER BY City ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f726c6e6f68fba939da2efc1741094f653d55522",
                "query": "SELECT T1.City, T1.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.City_ID = T2.City_ID WHERE T1.Regional_Population > 1000 AND T2.Jan BETWEEN 10 AND 20 AND T1.GDP < 10000 ORDER BY T2.Jan DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fb03791bbc29ec796a3067e62e75e1ffaf6d45ce",
                "query": "SELECT COUNT(DISTINCT T1.City), SUM(T1.GDP), AVG(T1.Regional_Population) FROM city AS T1 WHERE T1.City_ID = 1 ORDER BY T1.City_ID ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a7ff99ce9c84234bf0303eaf90c05ed93ef4a343",
                "query": "SELECT COUNT(DISTINCT T1.City) FROM city AS T1 WHERE T1.City_ID IN ( SELECT T2.Host_City FROM hosting_city AS T2 WHERE EXISTS ( SELECT 1 FROM match AS T3 WHERE T3.Match_ID = T2.Match_ID ) ) OR AVG(T1.Regional_Population) > 1000000 OR COUNT(T1.GDP) < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) ) OR AVG(#COLUMN#) > #VALUE# OR COUNT(#COLUMN#) < #VALUE#"
            },
            {
                "hash": "ad4e705fe5f2cd9ac1d8bd39418454f0a0614e22",
                "query": "SELECT City_ID FROM city WHERE City = 'Shanghai' OR City = 'Beijing' OR EXISTS ( SELECT 1 FROM hosting_city WHERE city.City_ID = hosting_city.Host_City)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "053bd6faf54ebb646be400dab491af97613597ce",
                "query": "SELECT T1.City_ID, T1.City, T2.Jan FROM city AS T1 INNER JOIN temperature AS T2 ON T1.City_ID = T2.City_ID ORDER BY T2.Jan ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b75ab50e2780b986119c0597babb53b1f232bd5d",
                "query": "SELECT City FROM city WHERE City_ID != 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5f544acc0fc477f33ddb5dd73fd7156b7f8418d4",
                "query": "SELECT T1.City, AVG(T3.Jan) FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City JOIN temperature AS T3 ON T1.City_ID = T3.City_ID WHERE T1.City_ID IN (SELECT Host_City FROM hosting_city WHERE Year = 2000) GROUP BY T1.City",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "4bcd53fb9ea1b7e422fab6c7624e375e71ca2906",
                "query": "SELECT COUNT(DISTINCT City), COUNT(DISTINCT Regional_Population), COUNT(DISTINCT GDP) FROM city ORDER BY City_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c760d1e0ae21774aac1c0d61c4daaeca2d853118",
                "query": "SELECT T1.City, MIN(T1.GDP) FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City WHERE NOT EXISTS (SELECT 1 FROM match AS T3 WHERE T2.Match_ID = T3.Match_ID) GROUP BY T1.City",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "26dce4d7f1f1cbd318f2869ecb47361f81223983",
                "query": "SELECT T1.City, COUNT(T1.City_ID) FROM city AS T1 WHERE T1.City != 'Beijing' GROUP BY T1.City HAVING COUNT(T1.City_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "45a3cfd2c0a2e288b5e57a2c9d881df184607738",
                "query": "SELECT MIN(T1.Regional_Population), T2.City FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City WHERE T2.Year > 2000 AND T1.GDP > (SELECT AVG(GDP) FROM city) GROUP BY T2.City ORDER BY MIN(T1.Regional_Population) DESC",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC"
            },
            {
                "hash": "a7f2de25e0f8c9a8f29adf833855d8e60f225814",
                "query": "SELECT SUM(T1.Regional_Population), COUNT(DISTINCT T2.Year) FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City WHERE T2.Year <= 2000 GROUP BY T1.City ORDER BY T1.City_ID ASC LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "cre_Docs_and_Epenses": [
            {
                "hash": "85b2a8ce50093de31c10568810f2329cbc8802f4",
                "query": "SELECT T1.Document_Type_Name, COUNT(T2.Document_ID), SUM(T3.Document_Details) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Documents_with_Expenses AS T3 ON T2.Document_ID = T3.Document_ID WHERE T2.Document_Date >= '2020-01-01' GROUP BY T1.Document_Type_Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "b98d091ba0e7827ecffe133f102e1b6845eb96d1",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Name >= 'A' AND Document_Type_Description >='A'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#'"
            },
            {
                "hash": "a67b89eb1c631eb6de1db06c4764e3a8949f1a44",
                "query": "SELECT T1.Document_Type_Name FROM Ref_Document_Types AS T1 WHERE T1.Document_Type_Code IN (SELECT T2.Document_Type_Code FROM Documents AS T2 WHERE T2.Project_ID = 1) AND T1.Document_Type_Code = 'code1'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "9cd3e832de1cdc7835c0cebb38640dee92f9b080",
                "query": "SELECT T1.Document_ID, T2.Document_Type_Name FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE EXISTS (SELECT 1 FROM Documents_with_Expenses AS T3 WHERE T3.Document_ID = T1.Document_ID AND T3.Budget_Type_Code = 'Type1')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8305927b04f9b7061a9e5980e3733b95d023a27b",
                "query": "SELECT MAX(Document_ID) FROM Documents WHERE Document_Type_Code >= 'A'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "a6c2e298ff43940bb11050d16aaa160afdebc81c",
                "query": "SELECT SUM(Document_ID), COUNT(Document_Type_Code) FROM Documents WHERE Document_Date BETWEEN '2000-01-01' AND '2020-12-31' LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e4ffb14416d076573429e536af5d447978088364",
                "query": "SELECT COUNT(Document_ID) FROM Documents WHERE Document_Type_Code = 'Type1' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "920c535199146d6e6a3b7d4c3eae2349e7b8436e",
                "query": "SELECT T1.Document_Type_Name FROM Ref_Document_Types AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T1.Document_Type_Name BETWEEN 'A' AND 'Z' OR T2.Document_Type_Name NOT IN (SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Description = 'Test') OR T1.Document_Type_Name NOT IN (SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Description = 'Test')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "d511a3ff7c2910df69551dcbd212c3419c162ba9",
                "query": "SELECT T1.Document_Type_Name, MIN(T4.Document_Date) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Documents_with_Expenses AS T3 ON T2.Document_ID = T3.Document_ID JOIN Ref_Budget_Codes AS T4 ON T3.Budget_Type_Code = T4.Budget_Type_Code GROUP BY T1.Document_Type_Name ORDER BY T1.Document_Type_Name DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4170acbac603cc2985c194fc22403960911d26ad",
                "query": "SELECT T1.Document_Type_Name, MIN(T4.Document_Date) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Documents_with_Expenses AS T3 ON T2.Document_ID = T3.Document_ID JOIN Ref_Budget_Codes AS T4 ON T3.Budget_Type_Code = T4.Budget_Type_Code WHERE T4.Budget_Type_Description <= 'Description' GROUP BY T1.Document_Type_Name ORDER BY T1.Document_Type_Name DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "76d6fd0577aaade14cfc94464a475fcb0acce311",
                "query": "SELECT T1.Document_Type_Name FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Document_ID IN (SELECT Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'B1001') GROUP BY T1.Document_Type_Name HAVING MIN(T2.Document_Date) ORDER BY T2.Document_Date ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4083c69f83b9bde3beb30c6b0116dd00a950d922",
                "query": "SELECT Document_Type_Code FROM Ref_Document_Types WHERE NOT EXISTS (SELECT 1 FROM Documents_with_Expenses WHERE Documents_with_Expenses.Document_ID = 1) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "79cd959e83b4014809aefaaafb9b9fd08f13db4b",
                "query": "SELECT T1.Document_Type_Name FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Document_Date BETWEEN '2020-01-01' AND '2020-12-31' AND EXISTS (SELECT 1 FROM Documents_with_Expenses AS T3 WHERE T3.Document_ID = T2.Document_ID AND T3.Budget_Type_Code = 'Budget_Code_1')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "852affc2c9d22c59bf4254fc8b72fc2dc342e7aa",
                "query": "SELECT COUNT(T1.Document_ID), SUM(T1.Document_ID), COUNT(T2.Project_ID) FROM Documents AS T1 JOIN Projects AS T2 ON T1.Project_ID = T2.Project_ID JOIN Ref_Document_Types AS T3 ON T1.Document_Type_Code = T3.Document_Type_Code ORDER BY T1.Document_ID ASC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "aaf337b6126fbb1cf6344c6c2ef319e9980bec3b",
                "query": "SELECT COUNT(DISTINCT T1.Document_Type_Name) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Project_ID = 10 AND T2.Document_Date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Document_Type_Description = 'Type A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1817c58dd7e3b02d0a219ba447626ecc39506e91",
                "query": "SELECT T1.Document_Type_Name, MIN(T2.Document_Date) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE NOT EXISTS (SELECT 1 FROM Projects AS T3 WHERE T3.Project_ID = T2.Project_ID AND T3.Project_Details = ' cancelled') GROUP BY T1.Document_Type_Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "0d60e565d592b8b4173d8a2bd3fdb64709f7790d",
                "query": "SELECT T1.Document_Type_Name, T2.Project_Details, T3.Document_Date FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Projects AS T3 ON T2.Project_ID = T3.Project_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "747bb2101d694215957b1dc68535cd34816fc39c",
                "query": "SELECT COUNT(DISTINCT Document_Type_Name), Document_Type_Description FROM Ref_Document_Types",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "30c871c38c4a53ea431652b64316710290423420",
                "query": "SELECT COUNT(T1.Document_ID), SUM(T2.Document_Type_Description) FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T1.Project_ID = 123 AND T1.Document_Date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Document_Name = 'Example' ORDER BY T1.Document_Date ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e2f9bf75afb3197a781041feb697c7e1ffa10e4e",
                "query": "SELECT Document_Type_Name, MAX(Document_Type_Description) FROM Ref_Document_Types WHERE Document_Type_Code BETWEEN 'X' AND 'Y' GROUP BY Document_Type_Name LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "cc52878cc6e88282680f0a00738ec7f8aadc0bae",
                "query": "SELECT T1.Document_ID, T2.Document_Type_Name FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Document_Type_Name = 'Report' OR T2.Document_Type_Name = 'Letter' AND T2.Document_Type_Code NOT IN (SELECT T3.Document_Type_Code FROM Ref_Document_Types AS T3 WHERE T3.Document_Type_Name = 'Invoice') ORDER BY T1.Document_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8a91d294b0415f8c80e7a8ac92373be382239485",
                "query": "SELECT COUNT(DISTINCT Document_Type_Code) FROM Documents WHERE Document_Date BETWEEN '2020-01-01' AND '2020-12-31' AND Project_ID = 1 ORDER BY Document_ID DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "298052a65663789391977cb9cbe148fffb9f5d60",
                "query": "SELECT T1.Document_ID, T2.Document_Type_Name FROM Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Documents_with_Expenses AS T3 ON T1.Document_ID = T3.Document_ID WHERE T1.Document_ID NOT IN (SELECT T4.Document_ID FROM Documents AS T4 JOIN Ref_Budget_Codes AS T5 ON T4.Budget_Type_Code = T5.Budget_Type_Code) ORDER BY T1.Document_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8748f06697874305a11b39d329909c2e8c557caa",
                "query": "SELECT T1.Document_Type_Name, COUNT(T2.Document_ID) FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Document_ID NOT IN (SELECT T3.Document_ID FROM Documents_with_Expenses AS T3 WHERE T3.Budget_Type_Code = 'type1') ORDER BY T1.Document_Type_Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3752eba913aa6063208557b5907ffdd7724e4a6b",
                "query": "SELECT T1.Document_Type_Name, T2.Document_Name, T3.Project_Details FROM Ref_Document_Types AS T1 JOIN Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Projects AS T3 ON T2.Project_ID = T3.Project_ID WHERE T2.Document_Date <= '2020-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "7230149c40e4ad8690dd62c2230117526c9bebb1",
                "query": "SELECT MAX(Document_ID) , MIN(Project_ID) FROM Documents WHERE Document_Type_Code <= ' Code '",
                "template": "SELECT MAX(#COLUMN#) , MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= '#VALUE#'"
            },
            {
                "hash": "864ec6ffb2bb972eab87491f8ecc0fb60969e1ad",
                "query": "SELECT * FROM Documents WHERE Project_ID BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a2520e203d7c27bc41702a8ade0d2ddebfe43197",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Code = 'D001' AND Document_Type_Description != 'Type 1' AND Document_Type_Description NOT IN (SELECT Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Code = 'D002') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# != '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            }
        ],
        "local_govt_in_alabama": [
            {
                "hash": "74e28c434b0e6c7bd254d256765920469007ff66",
                "query": "SELECT T1.Event_ID, T2.Participant_ID, T1.Event_Details FROM Events AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T2.Participant_ID = 25 ORDER BY T2.Participant_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "834a001eed865cf7cb98ea9104054e4f2acbadf3",
                "query": "SELECT Participant_ID FROM Participants WHERE Participant_Type_Code != 'Student' ORDER BY Participant_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6d36cb6972dad9bd530dc98a4343aa0a54d99f3e",
                "query": "SELECT T1.Service_Type_Code FROM Services AS T1 INNER JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID INNER JOIN Participants_in_Events AS T3 ON T2.Event_ID = T3.Event_ID INNER JOIN Participants AS T4 ON T3.Participant_ID = T4.Participant_ID WHERE T4.Participant_Type_Code BETWEEN 'A' AND 'Z' ORDER BY T1.Service_Type_Code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c216b513c38d0d1bf27f5a8a7a8d9565cdef0366",
                "query": "SELECT T.Service_Type_Code, MAX(T.Participant_Type_Code) FROM ( SELECT S.Service_Type_Code, P.Participant_Type_Code FROM Services AS S JOIN Events AS E ON S.Service_ID = E.Service_ID JOIN Participants_in_Events AS PE ON E.Event_ID = PE.Event_ID JOIN Participants AS P ON PE.Participant_ID = P.Participant_ID WHERE S.Service_ID = 1 ) AS T GROUP BY T.Service_Type_Code",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) AS #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "59964e3b70290e5b6918810f0ec1954909d0ca3b",
                "query": "SELECT COUNT(DISTINCT T1.Service_Type_Code), SUM(T3.Participant_ID) FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID JOIN Participants_in_Events AS T3 ON T2.Event_ID = T3.Event_ID WHERE T1.Service_Type_Code = 'A' AND T2.Event_ID BETWEEN 10 AND 20 AND T3.Participant_ID > 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "a80d42b9d589d721bd9d61d8950318bb3e9546f7",
                "query": "SELECT COUNT(T3.Participant_ID), T2.Service_Type_Code FROM Participants_in_Events AS T1 JOIN Events AS T2 ON T1.Event_ID = T2.Event_ID JOIN Participants AS T3 ON T1.Participant_ID = T3.Participant_ID WHERE T2.Service_ID > 100 OR T2.Event_ID IN (SELECT T1.Event_ID FROM Events AS T1 WHERE T1.Service_ID > 100) ORDER BY T3.Participant_ID ASC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7a81c8cb75675a4b9b2dafb94ad858531ae22d69",
                "query": "SELECT T1.Service_Type_Code, COUNT(DISTINCT T2.Participant_ID) FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Event_Details > '2020-01-01' ORDER BY T1.Service_Type_Code ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1060734240a97174d62fc2a0923b106fed3693e6",
                "query": "SELECT E.Service_ID, COUNT(DISTINCT P.Participant_ID) FROM Events E JOIN Participants_in_Events P ON E.Event_ID = P.Event_ID GROUP BY E.Service_ID HAVING COUNT(E.Event_ID) >= 1 ORDER BY COUNT(E.Event_ID) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "eedf915224e3f50530bac4b14a53a4a9575fbe4d",
                "query": "SELECT COUNT(Service_ID) FROM Events WHERE Service_ID BETWEEN 1 AND 10 ORDER BY Event_ID DESC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "341a09456962794dc70c8df4847586c086bbce92",
                "query": "SELECT T1.Event_ID FROM Events AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T2.Participant_ID NOT IN (SELECT Participant_ID FROM Participants WHERE Participant_Type_Code = 'Type1') OR T1.Service_ID = 100 ORDER BY T1.Event_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d0bf1734488613766f29ceaeb6856753a6b317cc",
                "query": "SELECT COUNT(DISTINCT T1.Participant_ID), COUNT(T2.Event_ID) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.Participant_Type_Code != 'type1'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d8132dbc60276ed08014688b66a29ae499369e35",
                "query": "SELECT T1.Participant_Type_Code FROM Participants AS T1 JOIN Participants AS T2 ON T1.Participant_Type_Code = T2.Participant_Type_Code WHERE T1.Participant_Type_Code >= 'A' ORDER BY T1.Participant_Type_Code DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "ba83ff4801bf5e17caa2820b4dad2d0c551fa079",
                "query": "SELECT COUNT(DISTINCT T1.Participant_ID), COUNT(DISTINCT T2.Participant_ID) FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID ORDER BY T1.Event_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "33a9ec7ba4656a274d2278d6eb294c8ec79b6c6a",
                "query": "SELECT COUNT(DISTINCT T1.Participant_ID), T2.Participant_Type_Code FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID JOIN Events AS T3 ON T2.Event_ID = T3.Event_ID JOIN Services AS T4 ON T3.Service_ID = T4.Service_ID WHERE T1.Participant_Type_Code IN (SELECT Participant_Type_Code FROM Participants WHERE Participant_ID > 100) GROUP BY T2.Participant_Type_Code ORDER BY COUNT(DISTINCT T1.Participant_ID) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "1dd1ad7817557e9a9c70e74234dd8ca336b1a4d9",
                "query": "SELECT T1.Service_Type_Code, COUNT(DISTINCT T3.Participant_ID) FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID JOIN Participants_in_Events AS T3 ON T2.Event_ID = T3.Event_ID JOIN Participants AS T4 ON T3.Participant_ID = T4.Participant_ID WHERE T1.Service_Type_Code = 'Type1' AND T4.Participant_Type_Code = 'Type2' AND T4.Participant_ID BETWEEN 1 AND 10 GROUP BY T1.Service_Type_Code HAVING AVG(T2.Service_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "385d916dcee314eb69f977739908cc23e72903ce",
                "query": "SELECT T1.Service_Type_Code FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Event_Details = 'Outdoor' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2d99f780b08d38fbd57643d9ea30e2adfd8c3fd8",
                "query": "SELECT COUNT(Service_ID), Service_Type_Code FROM Services WHERE Service_Type_Code != 'Service1' LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "61c4021dbfdf0eae12c814953ffbc4339dab9578",
                "query": "SELECT T1.Event_ID, COUNT(T2.Participant_ID) FROM Events AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Service_ID <= 5 GROUP BY T1.Event_ID ORDER BY COUNT(T2.Participant_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "b53d714b400ae58c103a4b8645cb4e49f796db60",
                "query": "SELECT DISTINCT T1.Service_Type_Code, T3.Participant_Type_Code FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID JOIN Participants_in_Events AS T3 ON T2.Event_ID = T3.Event_ID JOIN Participants AS T4 ON T3.Participant_ID = T4.Participant_ID WHERE T1.Service_Type_Code = 'NUR' AND T3.Participant_Type_Code = 'JUR' AND T4.Participant_Type_Code NOT IN ( SELECT Participant_Type_Code FROM Participants WHERE Participant_Type_Code = 'OTH' ) LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) LIMIT #VALUE#"
            },
            {
                "hash": "1363e7911e70ea841129efd2aa3ca75a138388e0",
                "query": "SELECT T1.Service_ID FROM (SELECT T2.Service_ID FROM Services AS T2 WHERE T2.Service_Type_Code = 'Type1' OR T2.Service_ID IN (SELECT T3.Service_ID FROM Services AS T3 WHERE T3.Service_ID > 100)) AS T1 ORDER BY T1.Service_ID DESC",
                "template": "SELECT #COLUMN# FROM (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)) AS  ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "622557e34020f730e9b77c8fe94e59e0bc8fe3f8",
                "query": "SELECT COUNT(T2.Event_ID) FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID WHERE T1.Service_Type_Code IN (SELECT T3.Participant_Type_Code FROM Participants AS T3)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3)"
            },
            {
                "hash": "9b1ec42309b808562c7ee14db4dcbe8b4fd34848",
                "query": "SELECT T2.Participant_ID FROM Services AS T1 JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID JOIN Participants_in_Events AS T3 ON T2.Event_ID = T3.Event_ID JOIN Participants AS T4 ON T3.Participant_ID = T4.Participant_ID WHERE T1.Service_Type_Code = 'Type1' OR T4.Participant_Type_Code = 'Type2' OR NOT EXISTS (SELECT 1 FROM Participants_in_Events WHERE Participant_ID = T3.Participant_ID) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "314e3ce97b9667a01c8caa7bbe5ddf860ad8f4af",
                "query": "SELECT T1.Participant_ID FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID JOIN Events AS T3 ON T3.Event_ID = T2.Event_ID WHERE T3.Service_ID NOT IN (SELECT T4.Service_ID FROM Services AS T4 JOIN Events AS T5 ON T4.Service_ID = T5.Service_ID WHERE T4.Service_Type_Code = 'code1')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "ee1216e35ab407595b70b1b17b7b10ce7a5a8e71",
                "query": "SELECT Participant_Type_Code, AVG(Participant_ID) FROM Participants GROUP BY Participant_Type_Code HAVING AVG(Participant_ID) < 100 ORDER BY Participant_Type_Code DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) < #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "car_1": [
            {
                "hash": "d8f22c0a67b786794416a63fb6022bb93cbf9641",
                "query": "SELECT COUNT(DISTINCT T1.CountryName), COUNT(T1.CountryName) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T1.CountryId = 1 AND T2.Id = T1.CountryId AND NOT EXISTS ( SELECT 1 FROM car_names AS T3 WHERE T3.Model = 'Toyota' ) ORDER BY T1.CountryName ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "22d133894e9a1feda095d42217f827501d6672c9",
                "query": "SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country WHERE T2.Id IN (SELECT T3.Maker FROM model_list AS T3 GROUP BY T3.Maker HAVING COUNT(T3.ModelId) = (SELECT COUNT(T4.ModelId) FROM model_list AS T4 GROUP BY T4.Maker ORDER BY COUNT(T4.ModelId) DESC LIMIT 1))",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT 1))"
            },
            {
                "hash": "e5893853866016721b3355cc33cc43344af69b30",
                "query": "SELECT COUNT(T1.ModelId) FROM model_list AS T1 INNER JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T2.MakeId = 1 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "375b5ee6c761c72014672977be183b7344c6138f",
                "query": "SELECT Maker FROM car_makers WHERE Maker = 'Toyota' OR Maker = 'Honda' OR Maker IN (SELECT Maker FROM model_list WHERE Model = 'Civic') ORDER BY Maker DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "001b687b4f688b4fd1654141b19f5bfc94736a97",
                "query": "SELECT AVG(T1.MPG), AVG(T1.Horsepower) FROM cars_data AS T1 WHERE T1.Year BETWEEN 2000 AND 2020 ORDER BY T1.Id DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7d5e561c0b2b31550d77b0f8218d5558a4f6d4c5",
                "query": "SELECT COUNT(T1.Model), COUNT(T1.ModelId) FROM model_list AS T1 JOIN car_names AS T2 ON T1.Model = T2.Model WHERE T1.ModelId > 10 AND T2.MakeId BETWEEN 5 AND 10 AND T1.Maker = 3",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1de77e8b8a7b88c10329651a1c4702749d2aa692",
                "query": "SELECT COUNT(DISTINCT T1.Maker), COUNT(DISTINCT T1.FullName), COUNT(T1.Country) FROM car_makers AS T1 WHERE T1.Id = 10 OR T1.Id BETWEEN 5 AND 15 OR T1.Id NOT IN (SELECT T2.Maker FROM model_list AS T2) ORDER BY T1.Id ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ff48b80d9f5f35d040327bbfd3942a4f55821bb9",
                "query": "SELECT T2.FullName, AVG(T1.MPG) FROM cars_data AS T1 INNER JOIN car_makers AS T2 ON T1.Id = T2.Id WHERE T1.Cylinders = 4 GROUP BY T2.FullName HAVING AVG(T1.MPG) > 15",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "59deb7d7be13bca796410a4024c5d914bd0eb33d",
                "query": "SELECT Maker, COUNT(Id) FROM car_makers WHERE Country = 'USA' OR Country = 'UK' AND Id BETWEEN 10 AND 20 GROUP BY Maker HAVING COUNT(Id) > 5 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "82847fa90b82b3159adfa5c261f03240e1462321",
                "query": "SELECT T1.Maker, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE T1.Country = 'USA' AND T2.Model = 'Camry' ORDER BY T1.Maker ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a1644701dbfae19d1caa1606b5bd6838bdfa44a9",
                "query": "SELECT T1.Id, COUNT(DISTINCT T1.Id), SUM(T2.MPG) FROM cars_data AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id WHERE T1.Id <= 100 GROUP BY T1.Id ORDER BY COUNT(DISTINCT T1.Id) DESC LIMIT 100",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "75002829df666f32350359a5cfdec8f9a6c9ef3f",
                "query": "SELECT MAX(T1.Cylinders) FROM cars_data AS T1 GROUP BY T1.Cylinders HAVING T1.Cylinders >= 4 ORDER BY T1.Cylinders DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b1f936fc6d37b24367a5586a1aa3ad62ee6e8e15",
                "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId = T2.Model",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "b02bdce2e30e3804c473714de52970623cbd740c",
                "query": "SELECT T1.Maker, T2.Model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker ORDER BY T1.Maker DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e76f8d08540f43118bd6d77254445c5cba6803ff",
                "query": "SELECT T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker WHERE EXISTS (SELECT T3.Model FROM model_list AS T3 WHERE T3.Maker = T1.Id AND T3.ModelId = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "4624186af1ece8c27c2118603e3221ba7a876c6a",
                "query": "SELECT Id FROM cars_data WHERE Year > 2000 ORDER BY Weight ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1871cf8d132c87c2351a017cf5b2a028b414ebc1",
                "query": "SELECT Maker, FullName FROM car_makers LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "c1f9813c38a92504425b0ee146976c809ea3339c",
                "query": "SELECT T1.FullName, COUNT(DISTINCT T2.Model) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker JOIN car_names AS T3 ON T2.Model = T3.Model JOIN cars_data AS T4 ON T3.MakeId = T4.Id WHERE T4.Horsepower >= 200 GROUP BY T1.FullName ORDER BY COUNT(DISTINCT T2.Model) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "a4f3e32417957a13ba34344a6170e5ec88af8d45",
                "query": "SELECT Maker FROM car_makers WHERE Maker <= 'Toyota'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= '#VALUE#'"
            },
            {
                "hash": "8291fd7887f932d5241559941f6755f5dc36b6fd",
                "query": "SELECT T1.Continent, T2.CountryName FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent WHERE T1.ContId = 1 AND T2.CountryName BETWEEN 'A' AND 'Z' AND T2.CountryName = 'USA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "151179b251b0603ecc4f71aee83665a4bd606e1e",
                "query": "SELECT T1.FullName FROM car_makers T1 JOIN model_list T2 ON T1.Id = T2.Maker WHERE NOT EXISTS ( SELECT 1 FROM cars_data T3 WHERE T3.Id = T2.ModelId )",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "5d505da78a76bfa73ec27fb167f497adc765fb19",
                "query": "SELECT COUNT(T1.Cylinders), COUNT(T1.Horsepower) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.MPG > 20 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "314defa136ff71a2cc5e05ab3f605b0a2b80a09a",
                "query": "SELECT T1.CountryName, SUM(T2.Horsepower) FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN cars_data AS T3 ON T2.Id = T3.Id WHERE T3.Horsepower > 100 GROUP BY T1.CountryName ORDER BY T1.CountryName ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0afaecf198be927074f150f50d769eaadfb61515",
                "query": "SELECT T1.Model FROM model_list AS T1 JOIN car_names AS T2 ON T1.ModelId = T2.Model WHERE EXISTS (SELECT 1 FROM cars_data AS T3 WHERE T3.Id = T2.MakeId AND T3.MPG > 20 AND T3.Year < 2010) ORDER BY T1.Model ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e71280e2628a2d3d0762905c688203f33444b914",
                "query": "SELECT T4.Country, MAX(T5.Horsepower) FROM car_makers AS T4 JOIN model_list AS T5 ON T4.Id = T5.Maker JOIN car_names AS T6 ON T5.Model = T6.Model JOIN cars_data AS T7 ON T6.MakeId = T7.Id WHERE T7.Year >= 2000 GROUP BY T4.Country",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "7fdbfc4b6682810eb3cac18abff1358237e3c46c",
                "query": "SELECT Maker, MIN(Id) FROM car_makers ORDER BY Maker ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0fe488b2893e6cde36b8c766de459e2ec830a19b",
                "query": "SELECT T1.Model FROM model_list AS T1 INNER JOIN car_makers AS T2 ON T1.Maker = T2.Id WHERE T2.Maker >= 'Toyota' ORDER BY T1.Model ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "595c3206bd606253857d628d24b945464a7c979f",
                "query": "SELECT Id, Horsepower FROM cars_data WHERE Cylinders > 3 OR Edispl BETWEEN 2 AND 5 OR Weight < 3000 ORDER BY Id DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "student_1": [
            {
                "hash": "7071df64e62cf68712b75079a8c9bbc26a7ab9bf",
                "query": "SELECT FirstName FROM list WHERE Classroom BETWEEN 5 AND 10 AND LastName NOT IN (SELECT LastName FROM teachers WHERE Classroom = 3) AND FirstName = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "98f439d8aa75152edaedef2e123be84e8596eea7",
                "query": "SELECT T1.FirstName, T1.Classroom FROM teachers AS T1 JOIN list AS T2 ON T1.LastName = T2.LastName WHERE T1.Classroom BETWEEN 1 AND 10 AND T1.FirstName = 'John' AND EXISTS (SELECT 1 FROM list AS T3 WHERE T3.Classroom = T2.Classroom)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "8ba62b6052e5ca9636fbd7206410afb05e4cb367",
                "query": "SELECT COUNT(DISTINCT T1.Classroom), T2.FirstName FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade = 5 LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2a11ab7e083975a188fffda17e5ac634d157d861",
                "query": "SELECT T.LastName, COUNT(DISTINCT T.Classroom) FROM ( SELECT T1.LastName, T2.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.LastName = T2.LastName ) AS T WHERE T.Grade >= 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) AS #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "3f207ca984038947ada03eb80535baa8a92e21fe",
                "query": "SELECT COUNT(DISTINCT Classroom), COUNT(LastName), SUM(Grade) FROM list AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1"
            },
            {
                "hash": "3345ffeee798f02219ca8c109b6f7badc28c8043",
                "query": "SELECT FirstName FROM list WHERE Classroom = (SELECT Classroom FROM teachers WHERE FirstName = 'John') OR Grade BETWEEN 9 AND 12 ORDER BY FirstName ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0860058d28fbadc3b9a1b0888957b997be2c7aa8",
                "query": "SELECT COUNT(DISTINCT T1.Classroom) FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom JOIN list AS T3 ON T2.Classroom = T3.Classroom WHERE T3.Grade <= 12 ORDER BY T3.Classroom DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ad61a4529f5adef0d27bc7aa24ab7caf99cd2af6",
                "query": "SELECT FirstName FROM list WHERE Classroom = 10 OR Grade BETWEEN 9 AND 12 OR FirstName = 'John' ORDER BY Grade DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a7b1a039a9c93f4258c2bf1627e4b26607f7677b",
                "query": "SELECT FirstName FROM list WHERE Classroom <= 1 AND Grade <= 6",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f9993e8dbf75ea9fb20f52ca85f0100f3efb4453",
                "query": "SELECT Classroom, AVG(Grade) FROM list WHERE LastName = 'Smith' AND EXISTS (SELECT 1 FROM teachers WHERE teachers.Classroom = list.Classroom AND teachers.LastName = 'Johnson') GROUP BY Classroom LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "c3020465049973a85cdb5da9ca89f9c39d381e35",
                "query": "SELECT T1.FirstName, T1.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade = 10 AND T1.FirstName IN (SELECT FirstName FROM teachers WHERE Classroom = 5) ORDER BY T1.FirstName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "42f65cf1abc4256239f3d07efc1049404ce9bd10",
                "query": "SELECT T1.Classroom FROM teachers AS T1 JOIN list AS T2 ON T1.Classroom = T2.Classroom WHERE T1.LastName != 'Smith' GROUP BY T1.Classroom ORDER BY COUNT(DISTINCT T2.FirstName) ASC",
                "template": "SELECT #COLUMN#. FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "fe3adcf1715cff5bf5da47cfe2bd8c261d900db6",
                "query": "SELECT Classroom, COUNT(*) FROM list WHERE Grade = 10 GROUP BY Classroom LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "33c972959c0bdf4039f217a11d49ac74c800fdeb",
                "query": "SELECT T1.Classroom, AVG(T2.Grade) FROM teachers AS T1 JOIN list AS T2 ON T1.Classroom = T2.Classroom WHERE T2.Grade > (SELECT AVG(Grade) FROM list) AND T1.LastName = 'Smith' LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1fe047070d65f8a6f94886db1e13d9d8cc934aba",
                "query": "SELECT T1.FirstName, T2.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade <= T2.Classroom ORDER BY T1.FirstName DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4b9ca6b6dde1c4308bf53c75c5aa56e841893b6b",
                "query": "SELECT COUNT(DISTINCT T1.LastName) FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom WHERE T1.Grade < 10 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ecb158ee5de1349491ed59d93bdba5b4b51df6d3",
                "query": "SELECT T1.Classroom, COUNT(DISTINCT T1.Grade), COUNT(T1.FirstName) FROM list AS T1 WHERE NOT EXISTS (SELECT T2.Classroom FROM teachers AS T2 WHERE T2.Classroom = T1.Classroom) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "03fb3f205a55b13bde353d86976e8d3d051f010d",
                "query": "SELECT COUNT(DISTINCT T1.Grade), COUNT(T1.Classroom), SUM(T2.Classroom) FROM list AS T1 JOIN teachers AS T2 ON T1.LastName = T2.LastName LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b10c25fc3ce535f14925a196438722a0522bd1a0",
                "query": "SELECT T1.Classroom, MAX(T1.Grade) FROM list AS T1 WHERE EXISTS (SELECT T2.Classroom FROM teachers AS T2 WHERE T1.Classroom = T2.Classroom) GROUP BY T1.Classroom ORDER BY T1.Classroom DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "04baf65cfadbecc3335346daa78a97d1d106fc8a",
                "query": "SELECT T1.Classroom, COUNT(DISTINCT T2.FirstName) FROM list AS T1 JOIN teachers AS T2 ON T1.Classroom = T2.Classroom JOIN teachers AS T3 ON T2.Classroom = T3.Classroom WHERE T1.Grade > (SELECT COUNT(Grade) FROM list) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT COUNT(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "736cd041849ccf0696e29d40e00e4fc2f3366aa2",
                "query": "SELECT Classroom FROM list WHERE Grade = 10 AND Classroom NOT IN (SELECT Classroom FROM teachers WHERE FirstName = 'John')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "imdb": [
            {
                "hash": "3bc036c619c2210a233837ad191b04943bb88ab9",
                "query": "SELECT T1.title FROM movie AS T1 WHERE T1.mid NOT IN ( SELECT T2.msid FROM written_by AS T2 WHERE T2.wid = 10 ) ORDER BY T1.title ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE# ) ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "a8e4e4c5212ae55ba9f541525e033806c0e423cf",
                "query": "SELECT T1.title, SUM(T2.release_year) FROM movie AS T1 JOIN tv_series AS T2 ON T1.mid = T2.sid WHERE T1.title NOT IN (SELECT T3.title_aka FROM movie AS T3) GROUP BY T1.title HAVING SUM(T2.release_year) > 1000 ORDER BY T1.title ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8551a3d0efc3e3a2fe2a107d138057b006b345d2",
                "query": "SELECT T1.title FROM movie AS T1 JOIN directed_by AS T2 ON T1.mid = T2.msid JOIN director AS T3 ON T3.did = T2.did WHERE T3.birth_year > (SELECT AVG(birth_year) FROM director) ORDER BY T1.release_year DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "5699051f5f2a8f31014fa88114415bd20f30dfba",
                "query": "SELECT T1.title FROM movie AS T1 JOIN directed_by AS T2 ON T1.mid = T2.msid JOIN director AS T3 ON T2.did = T3.did WHERE T1.budget > 10000000 AND T1.release_year BETWEEN 1990 AND 2000 AND T3.gender = 'male' ORDER BY T1.title ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c62c091fb0f8a91ee936a0fef0475271dd759281",
                "query": "SELECT name AS movie_name FROM movie WHERE MAX(release_year) > 2000 ORDER BY release_year DESC",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f08bc7ce150dab1aa1edbbdbdc2c7df6e0a1e93c",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T2.name), T3.title FROM director AS T1 JOIN written_by AS T2 ON T1.did = T2.wid JOIN movie AS T3 ON T2.msid = T3.mid WHERE EXISTS (SELECT 1 FROM tags WHERE msid = T3.mid AND kid = 10) ORDER BY T3.title ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "431928e399686dd8a659bd59a054db576e7e3ce2",
                "query": "SELECT T1.title, T2.role FROM movie AS T1 JOIN cast AS T2 ON T1.mid = T2.msid JOIN actor AS T3 ON T3.aid = T2.aid WHERE T3.birth_year <= 1990",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f498f4cccf10d7798fff0c90ddedf451befd0a52",
                "query": "SELECT COUNT(DISTINCT T1.title), T1.release_year, T2.genre FROM movie AS T1 JOIN classification AS T3 ON T1.mid = T3.msid JOIN genre AS T2 ON T3.gid = T2.gid ORDER BY T1.release_year DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c8daae6df27a4afb42952580540b1c6533b4e712",
                "query": "SELECT COUNT(T1.mid), COUNT(T1.title), COUNT(T1.budget) FROM movie AS T1 WHERE T1.release_year BETWEEN 2000 AND 2010 OR T1.budget > 1000000 OR T1.title_aka = 'New Title' ORDER BY T1.title ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# > #VALUE# OR T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "aac050d1b3121f4ca903cacec2f9d4068fb18cdd",
                "query": "SELECT T1.title FROM movie AS T1 JOIN directed_by AS T2 ON T1.mid = T2.msid JOIN director AS T3 ON T2.did = T3.did WHERE T1.release_year > 2000 OR T3.gender = 'M' OR T3.did NOT IN (SELECT T4.did FROM director AS T4 JOIN producer AS T5 ON T4.did = T5.pid WHERE T5.gender = 'F') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "033540916a1f0f788a7770baa6f663553e71334f",
                "query": "SELECT T1.title FROM movie AS T1 JOIN written_by AS T2 ON T1.mid = T2.msid WHERE T1.release_year >= 2000 AND T2.wid >= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "3613c6656d35c2f52e6488f0fba45785c7e4dda8",
                "query": "SELECT SUM(T1.title_aka), COUNT(T1.release_year) FROM movie AS T1",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "44afb9772827bf4c047fca03f7e9d11af202dc91",
                "query": "SELECT T1.name, AVG(T1.birth_year) FROM director AS T1 JOIN directed_by AS T2 ON T1.did = T2.did WHERE T2.msid != 10 GROUP BY T1.name LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b27380daae57e76c5cbacae966b32e28f17c5e79",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T1.gender), SUM(T2.release_year) FROM actor AS T1 JOIN cast AS T2 ON T1.aid = T2.aid WHERE T1.nationality = 'American' AND T1.birth_year BETWEEN 1950 AND 1960 AND T2.release_year > 2000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "003bb697f3fdf9d7d89849ac0b793d0b787f13d6",
                "query": "SELECT T1.name FROM actor AS T1 JOIN actor AS T2 ON T1.aid = T2.aid WHERE EXISTS (SELECT 1 FROM cast AS T3 WHERE T3.aid = T1.aid AND T3.role = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "a7b1c5927168441e85360d5778dfc08b7e6ad6c1",
                "query": "SELECT T1.name, SUM(T2.release_year) FROM director AS T1 JOIN directed_by AS T2 ON T1.did = T2.did GROUP BY T1.name HAVING SUM(T2.release_year) > 1990 ORDER BY SUM(T2.release_year) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "b27bcbc7b603303807b138fbb7b292d3fa999fc0",
                "query": "SELECT COUNT(DISTINCT T1.title), SUM(T2.budget) FROM movie AS T1 JOIN tv_series AS T2 ON T1.mid = T2.sid JOIN company AS T3 ON T3.id = T2.sid WHERE T1.release_year BETWEEN 1990 AND 2000 AND T2.release_year < 2010 GROUP BY T2.title_aka",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "48d53ca14e2b266ca3c058ffcfb20d4b9fc8e37e",
                "query": "SELECT COUNT(DISTINCT T1.name), MAX(T1.birth_year) FROM director AS T1 WHERE T1.gender = 'M' OR T1.birth_year BETWEEN 1950 AND 1960 OR T1.nationality = 'USA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "37874fd39372541188afab2ec95c71b6beb5db32",
                "query": "SELECT T1.name FROM movie AS T1 JOIN written_by AS T2 ON T1.mid = T2.msid WHERE T2.wid = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "2e62173dbbdf910c02cc8f421e1ff222dcd9559e",
                "query": "SELECT COUNT(DISTINCT T2.role), T1.aid FROM actor AS T1 JOIN cast AS T2 ON T1.aid = T2.aid WHERE T1.birth_year >= 1980 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4f22b6366709063984259997104ae829baea9ece",
                "query": "SELECT COUNT(wid) FROM writer WHERE birth_year > 1970 OR nationality = 'American' OR EXISTS (SELECT 1 FROM written_by WHERE msid = 100)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "2ed1e3506dd0c90f104c3e01de0ff859682e8f4c",
                "query": "SELECT T1.release_year FROM movie AS T1 JOIN directed_by AS T2 ON T1.mid = T2.msid WHERE T2.did IN (SELECT did FROM director WHERE birth_year > 1900) ORDER BY T1.release_year ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d99a5f0bbb200068934ec88a607845453ff2bd56",
                "query": "SELECT T1.name, T2.keyword FROM actor AS T1 JOIN written_by AS T3 ON T1.aid = T3.wid JOIN keyword AS T2 ON T2.id = T3.id GROUP BY T2.keyword HAVING MAX(T1.birth_year) < 1960 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "54728950f9c5c8410ccee0ae4b21db93853f450c",
                "query": "SELECT COUNT(mid), SUM(release_year) FROM movie WHERE release_year BETWEEN 1900 AND 2000 ORDER BY COUNT(mid) ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "9b1eb6b26022a9c772fdfb7f47c8fc1ebc2c83cc",
                "query": "SELECT COUNT(DISTINCT T1.title), SUM(T2.budget), COUNT(T3.title) FROM movie AS T1 JOIN classification AS T2 ON T1.mid = T2.msid JOIN genre AS T3 ON T2.gid = T3.gid WHERE T2.gid = 10 GROUP BY T1.title ORDER BY COUNT(DISTINCT T1.title) DESC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            }
        ],
        "tracking_share_transactions": [
            {
                "hash": "f2291169d486004facfc05210f596594dc0157fc",
                "query": "SELECT T1.investor_id, T1.Investor_details FROM Investors AS T1 WHERE EXISTS (SELECT 1 FROM Transactions AS T2 WHERE T2.investor_id = T1.investor_id AND T2.transaction_type_code = 'BUY' LIMIT 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#.#COLUMN# AND #COLUMN# = #VALUE# LIMIT 1)"
            },
            {
                "hash": "d9446516695641a270efed14881ad06dca0b48f8",
                "query": "SELECT investor_id, Investor_details FROM Investors AS T1 WHERE investor_id = 1 AND Investor_details = 'Details' ORDER BY investor_id DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cc004e04bcf831bdd36193b56229fbe3076e4bf7",
                "query": "SELECT COUNT(transaction_id) FROM Transactions WHERE date_of_transaction > '2020-01-01' OR investor_id IN (SELECT investor_id FROM Investors WHERE Investor_details LIKE '%abc%')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '#VALUE#')"
            },
            {
                "hash": "c207ad9ab049585d88defd79a340d063e93de2cf",
                "query": "SELECT AVG(T1.amount_of_transaction), MAX(T1.amount_of_transaction) FROM Transactions AS T1 INNER JOIN Investors AS T2 ON T1.investor_id = T2.investor_id WHERE T1.investor_id < 100 ORDER BY T1.amount_of_transaction DESC",
                "template": "SELECT AVG(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4cb04b52d9ecc7b3379afe6da96fd7b6af5ab73d",
                "query": "SELECT MIN(date_of_transaction) FROM Transactions WHERE amount_of_transaction >= 1000 ORDER BY date_of_transaction ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6275a53668531456f4e999e2ca753652804b963b",
                "query": "SELECT COUNT(investor_id), SUM(amount_of_transaction), COUNT(date_of_transaction) FROM Transactions WHERE transaction_type_code = \"Purchase\" ORDER BY investor_id ASC",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8eec3710e8d83bd5559dfd6c394c321ed4338455",
                "query": "SELECT COUNT(T1.transaction_id), SUM(T1.amount_of_transaction), T1.transaction_type_code FROM Transactions AS T1 JOIN Ref_Transaction_Types AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T1.amount_of_transaction > 1000 AND T1.transaction_type_code = 'SELL' AND T1.transaction_id IN (SELECT transaction_id FROM Transactions)",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "c11522a47a2254f409639c199da07ec5455aa843",
                "query": "SELECT T1.investor_id, SUM(T2.amount_of_transaction) FROM Transactions AS T1 JOIN Transactions AS T2 ON T1.transaction_id = T2.transaction_id WHERE T2.date_of_transaction <= '2020-01-01' GROUP BY T1.investor_id ORDER BY SUM(T2.amount_of_transaction) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "fce38219b8410ca2fe0c5955794038fa81b02eb9",
                "query": "SELECT T1.investor_id FROM Transactions AS T1 JOIN Investors AS T2 ON T1.investor_id = T2.investor_id WHERE T1.amount_of_transaction < 10000 ORDER BY T1.transaction_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "87c4527cd7a251f4270da7200a62c65d4635d20a",
                "query": "SELECT * FROM Transactions WHERE transaction_id = 100 ORDER BY transaction_id DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "cee7841a291eedac1976fabf15d3f0984b708f6e",
                "query": "SELECT T1.Investor_details, T2.lot_details FROM Investors AS T1 JOIN Lots AS T2 ON T1.investor_id = T2.investor_id JOIN Transactions AS T3 ON T3.investor_id = T2.investor_id WHERE T3.transaction_type_code = 'Buy' AND T3.amount_of_transaction > 1000 AND T3.transaction_id IN (SELECT T4.transaction_id FROM Transactions_Lots AS T4 JOIN Lots AS T5 ON T4.lot_id = T5.lot_id WHERE T5.lot_details LIKE '%large%')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE #VALUE#)"
            },
            {
                "hash": "7ce52d59e820c25f2e8a051390ea07aa285127bc",
                "query": "SELECT share_count, COUNT(transaction_id), SUM(amount_of_transaction) FROM Transactions WHERE transaction_type_code != 'S' GROUP BY share_count ORDER BY COUNT(transaction_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "f98c3414eed169b94f5eac24db866c9705dd48e2",
                "query": "SELECT T1.Investor_details, T2.lot_details FROM Investors AS T1 JOIN Lots AS T2 ON T1.investor_id = T2.investor_id JOIN Transactions AS T3 ON T2.lot_id = T3.transaction_id WHERE T3.amount_of_transaction >= 1000 AND T3.share_count >= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "7d3fbfd243de456df70f8f5e212c7b3c29f44d1d",
                "query": "SELECT COUNT(DISTINCT T1.investor_id), COUNT(T2.transaction_id), SUM(T1.investor_id) FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code < 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "49ad21e7e0621c33ed557e2f3c24dbe4dda420d8",
                "query": "SELECT T1.investor_id, T3.lot_id FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id JOIN Transactions_Lots AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.lot_id > 1000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c02bce5c2990dfdf22daaf75584fd0aec62b6bd3",
                "query": "SELECT T1.investor_id, T2.lot_id FROM Investors AS T1 JOIN Lots AS T2 ON T1.investor_id = T2.investor_id JOIN Transactions AS T3 ON T3.investor_id = T1.investor_id WHERE T3.transaction_type_code = 'BUY' OR EXISTS (SELECT 1 FROM Ref_Transaction_Types WHERE transaction_type_code = 'SELL') AND T3.amount_of_transaction > 10000 ORDER BY T1.investor_id DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "196d87e7c5f22935a7112e7e78a84072b0d50631",
                "query": "SELECT T1.investor_id, COUNT(DISTINCT T2.lot_id) FROM Investors AS T1 JOIN Lots AS T2 ON T1.investor_id = T2.investor_id WHERE T1.investor_id = 1 GROUP BY T1.investor_id HAVING COUNT(T2.lot_id) > 2 ORDER BY T1.investor_id DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ef2111933032aa554dc47bd112bf8cef2a0ba1fa",
                "query": "SELECT T1.investor_id FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id WHERE T2.amount_of_transaction < 10000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d476fba77091036974477f46a46b926f0d68b6b8",
                "query": "SELECT investor_id FROM Investors WHERE investor_id <= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "bc09664588762dbf54d735ba848fb467962fde57",
                "query": "SELECT Investor_details FROM Investors WHERE investor_id <= 500 ORDER BY investor_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "aee1bcb7cd4ab3c0afd5a3a6f6331c25a556722c",
                "query": "SELECT T1.investor_id, T2.lot_details FROM Investors AS T1 JOIN Lots AS T2 ON T1.investor_id = T2.investor_id WHERE T2.lot_id <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "a44896a9e28517e9d30672577dc1212368e5b91f",
                "query": "SELECT T1.investor_id, SUM(T2.amount_of_transaction) FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id GROUP BY T1.investor_id LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "83646327c36896e9393b715d98ed8c73d3b03f96",
                "query": "SELECT SUM(T1.share_count), SUM(T2.share_count) FROM Transactions AS T1 JOIN Transactions AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T1.amount_of_transaction >= 10000 ORDER BY T1.transaction_id ASC LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d072277e2e5edb49ce05a4abe54255b69fd00586",
                "query": "SELECT investor_id, Investor_details FROM Investors WHERE investor_id >= 100 ORDER BY investor_id ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8ffe8d3043294e22275952cc363d4fd411174d15",
                "query": "SELECT T1.investor_id, COUNT(T3.transaction_id) FROM Investors AS T1 JOIN Transactions AS T2 ON T1.investor_id = T2.investor_id JOIN Transactions_Lots AS T3 ON T2.transaction_id = T3.transaction_id",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            }
        ],
        "student_assessment": [
            {
                "hash": "0e595f4f7b40d250ca62796be9658b19e782207c",
                "query": "SELECT T1.first_name, T2.course_name FROM People AS T1 JOIN People_Addresses AS T3 ON T1.person_id = T3.person_id JOIN Student_Course_Registrations AS T4 ON T3.person_id = T4.student_id JOIN Courses AS T2 ON T4.course_id = T2.course_id WHERE T3.date_from > T4.registration_date ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "23d57fb0c2c1b714667737246e093f628e6167c0",
                "query": "SELECT T1.first_name FROM People AS T1 WHERE EXISTS (SELECT T2.student_id FROM Students AS T2 WHERE T1.person_id = T2.student_id) ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e19384e01254afe16b67a5bb5e927f1a8bb775ef",
                "query": "SELECT SUM(course_id) , COUNT(course_id), MAX(course_id) FROM Student_Course_Registrations WHERE course_id < 10 LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "19cdbc330d269e3a4fb2f1df33f926f6c41dd82a",
                "query": "SELECT COUNT(DISTINCT T2.student_id), COUNT(DISTINCT T3.course_id), COUNT(DISTINCT T1.address_id) FROM Addresses AS T1 JOIN People_Addresses AS T2 ON T1.address_id = T2.address_id JOIN People AS T3 ON T2.person_id = T3.person_id WHERE T1.zip_postcode > '12345' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e359f3aa2ddccdf653b568ac9e50e08a2be4afc7",
                "query": "SELECT COUNT(DISTINCT T1.course_name) FROM Courses AS T1 JOIN Student_Course_Registrations AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 1 ORDER BY T1.course_name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8bf6c8d02a048f489c5a7d5189605f31ca2987bf",
                "query": "SELECT T1.person_id, COUNT(T2.student_id) FROM People AS T1 JOIN Students AS T2 ON T1.person_id = T2.student_id WHERE T1.person_id < 100",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "e0f7c209d3136f744c85f059045cb03b2199cc77",
                "query": "SELECT T1.first_name, MAX(T3.date_of_attendance) FROM People AS T1 JOIN Students AS T2 ON T1.person_id = T2.student_id JOIN Student_Course_Attendance AS T3 ON T2.student_id = T3.student_id WHERE T3.date_of_attendance <= '2020-01-01' GROUP BY T1.first_name ORDER BY MAX(T3.date_of_attendance) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "a2b033a5f211c2e77f640a64c518ca28e427ac23",
                "query": "SELECT T1.person_id, COUNT(T2.candidate_id) FROM People AS T1 JOIN Candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.first_name = 'John' GROUP BY T1.person_id HAVING COUNT(T2.candidate_id) > 1 ORDER BY T1.person_id ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2f6800896c7608a18df3c483f02b775c0a1376a6",
                "query": "SELECT T1.first_name, AVG(T2.student_details) FROM People AS T1 JOIN Students AS T2 ON T1.person_id = T2.student_id WHERE T1.person_id > 100 GROUP BY T1.first_name HAVING AVG(T2.student_details) > 0",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "539a40eb2f10884b6f6441a257e51bac1d80ff73",
                "query": "SELECT COUNT(DISTINCT T1.student_id) FROM Student_Course_Registrations AS T1 WHERE T1.course_id NOT IN (SELECT T2.course_id FROM Student_Course_Attendance AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "3543eaefa8843919b50804c3a9b32b39475ab0ba",
                "query": "SELECT COUNT(DISTINCT T1.course_id), COUNT(DISTINCT T2.student_id), T3.login_name FROM Student_Course_Registrations AS T1 JOIN Student_Course_Attendance AS T2 ON T1.student_id = T2.student_id JOIN People AS T3 ON T3.person_id = T2.student_id WHERE T1.registration_date = T2.date_of_attendance LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "19d46eea7b90d3310e87f9e027a67498cd0be6e6",
                "query": "SELECT COUNT(course_id), SUM(course_id) FROM Student_Course_Registrations AS T1",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1"
            },
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(*) AS count FROM People",
                "template": "SELECT COUNT(*) AS count FROM #TABLE#"
            },
            {
                "hash": "e159b548628556b80e31e730d43353deaae390f3",
                "query": "SELECT T1.first_name, T2.course_name FROM People AS T1 JOIN Student_Course_Registrations AS T3 ON T1.person_id = T3.student_id JOIN Courses AS T2 ON T3.course_id = T2.course_id WHERE T1.first_name BETWEEN 'A' AND 'Z' AND EXISTS ( SELECT T4.student_id FROM Student_Course_Attendance AS T4 WHERE T3.student_id = T4.student_id )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "60713f8b100fcfe59f411c3b515851add33c36d2",
                "query": "SELECT T1.first_name, SUM(T2.student_details) FROM People AS T1 JOIN Students AS T2 ON T1.person_id = T2.student_id WHERE T1.first_name != 'John' GROUP BY T1.first_name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "6c9d5ac0804c58d33b3a8d7ae5f74869fff29611",
                "query": "SELECT COUNT(candidate_id) FROM Candidates AS T1 WHERE candidate_id < 100 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "22eed7185210e9c653dce6bc2f7f4a579ba3fa40",
                "query": "SELECT last_name FROM People WHERE person_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "959a7ebf37f99eda0e0e207ef6871c6c046e34f3",
                "query": "SELECT T1.first_name, T2.line_1, MAX(T3.registration_date) FROM People AS T1 JOIN People_Addresses AS T2 ON T1.person_id = T2.person_id JOIN Student_Course_Registrations AS T3 ON T1.person_id = T3.student_id GROUP BY T2.line_1 ORDER BY T3.registration_date DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "368ed7b0a6f6ac596392dc541f4b7e0a6fc2202c",
                "query": "SELECT COUNT(DISTINCT T1.first_name), COUNT(DISTINCT T1.middle_name), COUNT(DISTINCT T1.last_name) FROM People AS T1 WHERE T1.person_id < 10 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS  WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "517e822b3d48f1eda3561f83bcf0265b2a90e0ea",
                "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Registrations AS T2 ON T1.course_id = T2.course_id",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "d4df2b26ac9047c4ef4951e342a03fa5e55f444d",
                "query": "SELECT COUNT(person_id) FROM People WHERE person_id < 10 ORDER BY person_id DESC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "c486b8a39427a1e5bce7e3ae08a554577a3a2747",
                "query": "SELECT T1.first_name, T2.course_name FROM People AS T1 JOIN Students AS T3 ON T1.person_id = T3.student_id JOIN Student_Course_Registrations AS T4 ON T3.student_id = T4.student_id JOIN Courses AS T2 ON T4.course_id = T2.course_id WHERE T1.email_address IN (SELECT T1.email_address FROM People AS T1 JOIN Students AS T2 ON T1.person_id = T2.student_id JOIN Student_Course_Registrations AS T3 ON T2.student_id = T3.student_id JOIN Courses AS T4 ON T3.course_id = T4.course_id WHERE T4.course_name = 'Mathematics')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "0140c646f9a011394fcba1e3815121ecbd61f9e2",
                "query": "SELECT T1.person_id, T2.person_id FROM People AS T1 JOIN People AS T2 ON T1.person_id = T2.person_id WHERE T1.person_id BETWEEN (SELECT MIN(person_id) FROM People) AND (SELECT MAX(person_id) FROM People) AND T1.first_name = 'John' ORDER BY T1.person_id DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "protein_institute": [
            {
                "hash": "d8d868881b00451874bba095fc21b1fed55445af",
                "query": "SELECT Height_feet FROM building WHERE Floors = 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "2246c4b0f0e5c4c9fb9bd681fd67d85fa54d07ca",
                "query": "SELECT T1.Institution, T2.Name FROM Institution AS T1 JOIN building AS T2 ON T1.building_id = T2.building_id WHERE T1.Enrollment > 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "b0bc685f090a92e7c272ef5ce51059c35cd099f3",
                "query": "SELECT T1.Name, MIN(T1.Height_feet) FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id WHERE NOT EXISTS ( SELECT 1 FROM protein AS T3 WHERE T3.Institution_id = T2.Institution_id ) GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "512434fdc456f496270dff92b32205999c71462a",
                "query": "SELECT Name FROM building WHERE Height_feet <= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "c7f32ece8194a957f04fd9524e7ad4efeac28380",
                "query": "SELECT MAX(T1.Height_feet), MIN(T1.Floors) FROM building AS T1 WHERE T1.Name != 'Building'",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# != #VALUE#"
            },
            {
                "hash": "6f494df2dad632a8597a236a91d4daa7733d0996",
                "query": "SELECT COUNT(DISTINCT T1.Institution_id) FROM Institution AS T1 WHERE T1.Institution_id NOT IN ( SELECT T2.Institution_id FROM protein AS T2 ) ORDER BY T1.Enrollment DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d7efa3fc2e2a9e85958f8f5977ddcbf6c3cc8110",
                "query": "SELECT COUNT(DISTINCT building_id), COUNT(*) FROM Institution WHERE building_id = 'B001' AND Enrollment BETWEEN 1000 AND 2000 AND Founded > 1800",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(*) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "fc0eb039a17b38c1b3438c4ee42d0398dedd2376",
                "query": "SELECT Name FROM building WHERE Height_feet BETWEEN 500 AND 1000 AND Floors NOT IN (SELECT Floors FROM building WHERE Street_address = 'Main St') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "14767aa43aef85ff18e6256918977b5e338692d1",
                "query": "SELECT T1.Height_feet FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id ORDER BY T1.Height_feet ASC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f2447cb44a0ea89a1f5e5df5a091d9365f801b63",
                "query": "SELECT MAX Floors FROM building WHERE Height_feet < 500 ORDER BY Floors DESC LIMIT 10",
                "template": "SELECT MAX #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0696b9cbdbee2876dbc5b2aab20d48d4539838ee",
                "query": "SELECT COUNT(DISTINCT building_id), COUNT(Height_feet) FROM building WHERE building_id NOT IN (SELECT building_id FROM Institution WHERE Enrollment > 10000) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "46dcb84ccf10a847cde992d18e686fedca289424",
                "query": "SELECT T1.Street_address, COUNT(DISTINCT T2.Team) FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id WHERE T1.Height_feet <= 100 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1175212379c09c845042f58950cc3c22858ee419",
                "query": "SELECT T3.Institution, AVG(T1.Height_feet) FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id JOIN protein AS T3 ON T2.Institution_id = T3.Institution_id WHERE T2.Enrollment = 10000 GROUP BY T3.Institution ORDER BY AVG(T1.Height_feet) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
            },
            {
                "hash": "85d49ae29e93fc32e3935e51a93fc1234b9316f5",
                "query": "SELECT T1.Institution, AVG(T2.Enrollment) FROM Institution AS T1 JOIN protein AS T2 ON T1.Institution_id = T2.Institution_id JOIN building AS T3 ON T1.building_id = T3.building_id WHERE T3.Height_feet = 100 LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "75f075fe4a028ad847d5c99faa1f7d5a85b0bbfc",
                "query": "SELECT T1.Street_address FROM building AS T1 WHERE T1.Floors > 50 OR T1.Height_feet > 500 OR EXISTS ( SELECT 1 FROM Institution AS T2 WHERE T1.building_id = T2.building_id ) GROUP BY T1.Street_address HAVING SUM(T1.Height_feet) > 1000 ORDER BY T1.Height_feet ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b029fe2a3b8fd78817b9f31593a82a8a361c5b77",
                "query": "SELECT Name FROM building WHERE Height_feet > 1000 ORDER BY Height_feet DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e8748ce01285e6b79f2a80645d04836090b02141",
                "query": "SELECT MIN(Height_feet), MIN(Floors) FROM building WHERE Height_feet <= 1000 ORDER BY Height_feet ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "56fee2efd195f4915a2d220bde7f82c15a1ab336",
                "query": "SELECT building_id FROM building WHERE EXISTS (SELECT 1 FROM Institution WHERE Institution.building_id = building.building_id AND Institution.Enrollment > 10000 AND Institution.Founded > 1900)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #TABLE#.#COLUMN# > #VALUE# AND #TABLE#.#COLUMN# > #VALUE#)"
            },
            {
                "hash": "bd281a8f8434e55d8a0eaf15e391446a62449042",
                "query": "SELECT Name, Street_address FROM building WHERE Height_feet >= 500 AND Floors >= 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ff02b204b5045e1862bbc377ecfdbe2562d4e3bb",
                "query": "SELECT Name, Height_feet, COUNT(DISTINCT Institution) FROM building WHERE Floors = 20 AND Height_feet > 600 AND building_id NOT IN ( SELECT building_id FROM Institution WHERE Founded > 1500 ) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "07605a6e66db84e2fb4599739ebd0e0b9c0c2c77",
                "query": "SELECT Height_feet FROM building WHERE Height_feet < 1000 ORDER BY Height_feet DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9a58e310f97beea362edd62a7e698a13d5ed9ef9",
                "query": "SELECT COUNT(DISTINCT T1.building_id) , COUNT(T1.building_id), T1.Height_feet FROM building AS T1 WHERE T1.Height_feet < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3eb59477312c6e2fceeb99fef29de0544a9b3890",
                "query": "SELECT MAX(Height_feet) FROM building WHERE Height_feet > 500 ORDER BY Height_feet DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "007ee490ef9404286d0b50ba77660f8237633797",
                "query": "SELECT T1.Height_feet, T2.Height_feet FROM building AS T1 JOIN building AS T2 ON T1.building_id = T2.building_id WHERE T1.Height_feet < T2.Height_feet GROUP BY T2.Height_feet ORDER BY T2.Height_feet DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3c6f70378db2dbee80eee7908f867451dba1796b",
                "query": "SELECT Name FROM building WHERE Years_as_tallest BETWEEN 10 AND 20 OR EXISTS (SELECT 1 FROM Institution AS T1 WHERE T1.building_id = building.building_id AND T1.Team = 'team_name') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "fc2f04cb7f07f6fc5ae43e82acbfd3eade5503f4",
                "query": "SELECT SUM(Height_feet), SUM(Floors) FROM building AS T WHERE Height_feet > 100",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "fa4bf7b1b1f1cb1ec714cbaf5e449ee5e35db959",
                "query": "SELECT T2.Institution, T1.Height_feet FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id JOIN protein AS T3 ON T2.Institution_id = T3.Institution_id WHERE T3.divergence_from_human_lineage > 0.5 ORDER BY T1.Height_feet DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1125ae22e9193161331a0910fd150ce8668655f6",
                "query": "SELECT T1.Name FROM building AS T1 JOIN Institution AS T2 ON T1.building_id = T2.building_id WHERE T1.Height_feet > 10 AND T2.Enrollment > 10000 AND EXISTS (SELECT T3.sequence_length FROM protein AS T3 WHERE T3.Institution_id = T2.Institution_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "f17246fe3ec1cbb1dc2ea27f9ff74caa280fc746",
                "query": "SELECT Name, COUNT(DISTINCT Street_address), Institution FROM Institution AS T1 JOIN building AS T2 ON T1.building_id = T2.building_id WHERE Height_feet <= 100 ORDER BY Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "school_finance": [
            {
                "hash": "6e7d449681b87bc61f324f7f58c25aa8823d5e19",
                "query": "SELECT s.School_name, SUM(b.Invested) FROM School s JOIN budget b ON s.School_id = b.School_id ORDER BY SUM(b.Invested) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "bd9f63a4d97a26609a8a7c82392fc2abfa2e15bb",
                "query": "SELECT T1.School_name, COUNT(DISTINCT T1.Location) FROM School AS T1 WHERE NOT EXISTS (SELECT T2.Year FROM budget AS T2 WHERE T2.School_id = T1.School_id AND T2.total_budget_percent_invested > 50)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "eca132f43df027f000a7b7a07e4804a89ece49ee",
                "query": "SELECT SUM(Enrollment) FROM School WHERE Location = 'City'",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "bb33c7dc01c57d25d88e8c1a26f252ed1baae7f4",
                "query": "SELECT COUNT(DISTINCT School_name), COUNT(DISTINCT Enrollment), COUNT(DISTINCT Location) FROM School WHERE Enrollment >= 1000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b44efb5ca08319f150905ac686dff8a7f1bea353",
                "query": "SELECT COUNT(DISTINCT T1.Location) FROM School AS T1 WHERE T1.Enrollment < 1000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3a4a3c1e8c9cc2de76cf88080d6760df319f158d",
                "query": "SELECT T3.donator_name FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id JOIN endowment AS T3 ON T1.School_id = T3.School_id WHERE T2.Year BETWEEN 2010 AND 2020 AND T3.amount BETWEEN 1000 AND 10000 AND T1.Location NOT IN (SELECT Location FROM School WHERE IHSAA_Class = '3A')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "67704ddc56518271f28f7eab33680657c64b16aa",
                "query": "SELECT T1.School_name, COUNT(DISTINCT T2.School_name), T2.Location FROM School AS T1 JOIN School AS T2 ON T1.School_id = T2.School_id WHERE T1.Enrollment > 500 OR T2.Enrollment BETWEEN 1000 AND 1500 AND T2.Mascot = 'Lions' ORDER BY T1.School_name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0873673c7a6c35793ba1d621baf0997fea6d6074",
                "query": "SELECT S.School_name FROM School AS S WHERE Enrollment BETWEEN 1500 AND 2000 OR S.Location = 'Indianapolis' AND NOT EXISTS (SELECT 1 FROM budget AS B WHERE S.School_id = B.School_id AND B.Year = 2020 LIMIT 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #VALUE# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# LIMIT #VALUE#)"
            },
            {
                "hash": "7089591eb36c316b21c2fbfc8bdb5af5ce0563bf",
                "query": "SELECT T1.School_name, T2.Budgeted FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id WHERE T2.Year BETWEEN 2010 AND 2020 ORDER BY T1.School_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5892351aa76ac6e0edfce91791927a17f8de2610",
                "query": "SELECT T1.School_name, T2.Budgeted FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id WHERE T2.Year BETWEEN 2010 AND 2020 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5c6a66615314e0f182252302fdf59bb7781e08ea",
                "query": "SELECT COUNT(T1.Location) AS count_location, T1.Location FROM School AS T1 WHERE T1.County IN (SELECT T2.County FROM School AS T2 WHERE T2.Enrollment BETWEEN 1000 AND 2000) AND T1.Enrollment > 500 GROUP BY T1.Location",
                "template": "SELECT COUNT(#COLUMN#) AS count_#COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "2d944964c6b9a747d59e4f8f92c34bce27444d67",
                "query": "SELECT MAX(T1.Enrollment), MIN(T1.Enrollment), T1.Location FROM School AS T1 WHERE T1.Enrollment BETWEEN 100 AND 200 AND T1.School_id IN (SELECT T2.School_id FROM budget AS T2 WHERE T2.Year > 2010) ORDER BY T1.Enrollment ASC LIMIT 5",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e437b9b087d3e561992e9e978d92d7fc44c20625",
                "query": "SELECT School_name FROM School WHERE Enrollment BETWEEN 1000 AND 2000 OR Enrollment > 3000 ORDER BY Enrollment DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5bb3051e8819ea4e747daa73eb009f1b9fec7839",
                "query": "SELECT T1.School_id FROM School AS T1 JOIN endowment AS T2 ON T1.School_id = T2.School_id WHERE T2.amount > (SELECT AVG(amount) FROM endowment)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "7bb541472d7fc15a5869e35350e9685576b9f50d",
                "query": "SELECT School_name FROM School WHERE NOT EXISTS (SELECT 1 FROM endowment WHERE endowment.School_id = School.School_id) GROUP BY School_name HAVING MAX(Enrollment) = 3000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "392bbc73ebaeaaafcddf9bf4ba4c5299f7ffc791",
                "query": "SELECT MAX(Enrollment), School_name FROM School LIMIT 10",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "a85dddfcf3613b1c5a21919dbc9fe1ed23e888fc",
                "query": "SELECT COUNT(DISTINCT T1.School_name) FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id JOIN endowment AS T3 ON T1.School_id = T3.School_id WHERE T1.Enrollment BETWEEN 1000 AND 2000 AND T3.amount > (SELECT AVG(amount) FROM endowment) ORDER BY T2.Budgeted DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "105c7d7ac2288464ece3b9f79ef1aa8bcc3c4724",
                "query": "SELECT School_name FROM School WHERE School_id NOT IN (SELECT School_id FROM budget WHERE Year = 2015 AND Budgeted > 1000000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "8575c5af2bfe5bd0de65bcd1780b05e68b6cdfd8",
                "query": "SELECT School_name, AVG(Budgeted) FROM School AS S INNER JOIN budget AS B ON S.School_id = B.School_id WHERE S.Enrollment > 2000 AND B.Year < 2020 AND B.Invested > (SELECT AVG(Invested) FROM budget) GROUP BY School_name ORDER BY School_name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a49f123d8116276a41a8986cd4c1564c77c5af06",
                "query": "SELECT School_name FROM School WHERE Location = 'Indiana' AND Mascot = 'Wildcats'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "73bd1a9c96d5e61adc6d7f59891ccc5c5eca801c",
                "query": "SELECT COUNT(DISTINCT T2.donator_name), COUNT(DISTINCT T1.Location), COUNT(T1.School_name) FROM School AS T1 JOIN endowment AS T2 ON T1.School_id = T2.School_id WHERE T1.Enrollment > 1000 AND T2.amount BETWEEN 10000 AND 100000 AND T1.IHSAA_Class = '3A' ORDER BY T2.amount DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "afc87ccdd5f46a92346dcf70169363fd4b7b17de",
                "query": "SELECT AVG(T1.Enrollment), T2.Budgeted FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id WHERE T2.Year BETWEEN 2015 AND 2020",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "467161c38ea268fd92b98c54b1eab7eb32da2b36",
                "query": "SELECT COUNT(DISTINCT T3.endowment_id), T1.School_name FROM School AS T1 JOIN budget AS T2 ON T1.School_id = T2.School_id JOIN endowment AS T3 ON T2.School_id = T3.School_id GROUP BY T1.School_name LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "c90db72f917b03945a72ed034b7b4062a8a0f9ba",
                "query": "SELECT School_name FROM School WHERE School_id IN (SELECT School_id FROM budget WHERE Budgeted > 10000 AND total_budget_percent_budgeted > 0.5 AND Budget_invested_percent = 'High') ORDER BY Enrollment DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "46108471bf03685c90c040b1786dae7ac53efc5f",
                "query": "SELECT T1.Enrollment, T1.Location FROM School AS T1 WHERE T1.Enrollment BETWEEN 1000 AND 2000 AND T1.Mascot = 'Wildcats'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "176322a7d1a4378e1aae5c66266f1a151eb9bbf3",
                "query": "SELECT Enrollment FROM School WHERE School_id IN (SELECT School_id FROM budget WHERE Budgeted > 500000) ORDER BY Enrollment DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "driving_school": [
            {
                "hash": "c7b33184dd66028678978b6f2c99d22b9d6ad833",
                "query": "SELECT staff_address_id, MIN(date_of_birth) FROM Staff WHERE staff_id > 10 ORDER BY staff_address_id ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "37abf6bdbe16cb0d6b16838622586cb0c93636c5",
                "query": "SELECT last_name FROM Customers WHERE last_name != 'Smith' ORDER BY last_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "19b8a8dabf0961436336c43a4f0aba10ad996ddc",
                "query": "SELECT staff_id FROM Staff WHERE staff_id BETWEEN 1 AND 5 OR staff_id NOT IN (SELECT staff_id FROM Lessons) ORDER BY staff_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5c8b328a3c9dab419db4aaf98a6c773f87d8e8b5",
                "query": "SELECT COUNT(customer_id) FROM Customers WHERE customer_status_code = 'active' AND date_of_birth BETWEEN '1990-01-01' AND '1999-12-31' AND amount_outstanding < 1000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f16cadd63f1259141f25c55c8232b024f5f67a5b",
                "query": "SELECT T1.first_name, T2.first_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_address_id = T2.customer_address_id WHERE T1.amount_outstanding >= 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "0f19f27edb52a7cbbd51d1dd9d6aefd564ef32ae",
                "query": "SELECT T1.first_name, T2.price FROM Customers AS T1 JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id WHERE T2.price < 100 ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "093b5989b08c8f152ce24d3c155f07b226b175f0",
                "query": "SELECT * FROM Customers WHERE EXISTS (SELECT * FROM Customer_Payments WHERE Customer_Payments.customer_id = Customers.customer_id AND Customer_Payments.amount_payment > 1000 AND Customer_Payments.amount_payment < 5000) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "787488ea8318b40c792073bd78f9a820d0d450e2",
                "query": "SELECT T1.first_name, T2.first_name FROM Customers AS T1 JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "f6a6cff1bc8eb41718a122f15b9af97af251cc8f",
                "query": "SELECT T1.nickname, T2.vehicle_details FROM Staff AS T1 JOIN Vehicles AS T2 ON T1.staff_id = T2.vehicle_id JOIN Customers AS T3 ON T3.customer_id = T2.vehicle_id WHERE T1.first_name = 'John' OR T1.middle_name BETWEEN 'A' AND 'Z' OR T1.last_name = 'Doe'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "867504cd0e61022863b59d903f2ba95ea695db3a",
                "query": "SELECT T1.first_name FROM Customers AS T1 JOIN Customer_Payments AS T2 ON T1.customer_id = T2.customer_id WHERE T2.amount_payment < 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d15e1d3d148aecaede01b245401084b5612d03a4",
                "query": "SELECT T1.first_name, T2.nickname, T3.vehicle_details FROM Customers AS T1 JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id JOIN Vehicles AS T3 ON T2.vehicle_id = T3.vehicle_id WHERE T2.price > 100",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "24c7c77d9bbf52291fb41fa4cdc8be7b221dc986",
                "query": "SELECT MAX(T1.amount_outstanding), T1.first_name FROM Customers AS T1 WHERE T1.amount_outstanding BETWEEN 100 AND 1000 GROUP BY T1.first_name",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "e753c1b3ab6c578d80e83922e649d06c9b9afe19",
                "query": "SELECT T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.amount_outstanding < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "79a41b1b53b1a415a26b45346ad119755c8f7a57",
                "query": "SELECT T1.first_name, T2.line_1_number_building FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name != 'John' ORDER BY T2.line_1_number_building DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "da2c80b5839e114e0b1f74b89d6684fa8feb0f01",
                "query": "SELECT * FROM Customers WHERE customer_id IN (SELECT customer_id FROM Customer_Payments GROUP BY customer_id ORDER BY SUM(amount_payment) ASC)",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC)"
            },
            {
                "hash": "903308e3489b0f4792c9eb9597ef725b6a29dbdb",
                "query": "SELECT T1.first_name, COUNT(T1.first_name) FROM Customers AS T1 WHERE T1.customer_status_code = 'Active' OR T1.amount_outstanding > 1000 OR T1.customer_id IN (SELECT T2.customer_id FROM Lessons AS T2 WHERE T2.lesson_status_code = 'Completed') GROUP BY T1.first_name HAVING MIN(T1.amount_outstanding) > 500",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "fcd615a952a6037e2a3be59c74fe2f6c77b0830b",
                "query": "SELECT T1.first_name FROM Customers AS T1 WHERE T1.amount_outstanding > 100 OR T1.date_of_birth BETWEEN '1990-01-01' AND '2000-12-31' OR T1.last_name = 'Smith' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "eee94a0f2925be75ca80cf70576742fbd8137fc8",
                "query": "SELECT COUNT(DISTINCT T1.staff_id), COUNT(DISTINCT T2.customer_id), COUNT(T1.staff_id) FROM Staff AS T1 JOIN Customers AS T2 ON T1.staff_address_id = T2.customer_address_id WHERE T2.customer_status_code = 'active' AND T1.date_joined_staff BETWEEN '2020-01-01' AND '2020-12-31' AND EXISTS ( SELECT 1 FROM Lessons AS T3 WHERE T3.staff_id = T1.staff_id AND T3.lesson_status_code = 'completed' ) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' ) LIMIT #VALUE#"
            },
            {
                "hash": "6de41f121ce110c7cfa81a05eaff4f89bf499327",
                "query": "SELECT T2.staff_id FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.staff_id NOT IN (SELECT staff_id FROM Staff WHERE staff_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "88825949892c193913f6c6e09c239efb0971009c",
                "query": "SELECT COUNT(last_name), MAX(amount_outstanding) FROM Customers",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "4dd97603f827e05a3ef3d8f47dc3457aad420947",
                "query": "SELECT COUNT(DISTINCT T1.first_name) FROM Customers AS T1 INNER JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.zip_postcode != '11111'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "2faadde54e6564caa265ef9b8652e41ecc7094fa",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 WHERE T1.amount_outstanding > 100 AND T1.amount_outstanding < 500",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "2c6bb59b523eeba68fcbb52a8cabc44040a89673",
                "query": "SELECT COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Addresses AS T2 ON T1.staff_address_id = T2.address_id WHERE T1.staff_id != 1 ORDER BY T1.staff_id ASC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "27cde652400d91f08789a165c45b22168ba64d4d",
                "query": "SELECT COUNT(T1.staff_id), COUNT(T3.customer_id) FROM Staff AS T1 JOIN Addresses AS T2 ON T1.staff_address_id = T2.address_id JOIN Customers AS T3 ON T3.customer_address_id = T2.address_id ORDER BY T1.staff_id ASC",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7674a3d5df5cbaefc7cbda2a99d8b0b6ae86c34a",
                "query": "SELECT country FROM Addresses",
                "template": "SELECT #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "21f18ce76fb86f348dd920c6f164459c422a57e2",
                "query": "SELECT amount_outstanding FROM Customers WHERE amount_outstanding BETWEEN 0 AND 1000 ORDER BY amount_outstanding ASC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e92736a003496a5dc0be344d3f1e6d1b3fac8625",
                "query": "SELECT T1.first_name, T2.first_name FROM Customers AS T1 JOIN Staff AS T2 ON T1.first_name != T2.first_name",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN#"
            },
            {
                "hash": "72ed48f742732f8642b2760dbd5d521ae76375e1",
                "query": "SELECT COUNT(DISTINCT T4.staff_id) FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id JOIN Lessons AS T3 ON T1.customer_id = T3.customer_id JOIN Staff AS T4 ON T3.staff_id = T4.staff_id WHERE T1.amount_outstanding < 1000 OR T3.lesson_status_code = 'PLANNED' OR NOT EXISTS ( SELECT 1 FROM Customer_Payments AS T5 WHERE T5.customer_id = T1.customer_id )",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            }
        ],
        "body_builder": [
            {
                "hash": "cd22d8f989660a0089d7b81b4ecc53d61364dd10",
                "query": "SELECT Name FROM people AS T1 WHERE NOT EXISTS ( SELECT 1 FROM body_builder AS T2 WHERE T2.People_ID = T1.People_ID AND T2.Total > 500 )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# )"
            },
            {
                "hash": "caf2339d2f75ee159e655fd408a8356edacdda36",
                "query": "SELECT Name FROM people WHERE EXISTS (SELECT 1 FROM body_builder WHERE people.People_ID = body_builder.People_ID AND body_builder.Snatch > (SELECT AVG(Snatch) FROM body_builder) AND body_builder.Clean_Jerk > (SELECT AVG(Clean_Jerk) FROM body_builder))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.People_ID = #TABLE#.People_ID AND #TABLE#.Snatch > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #TABLE#.Clean_Jerk > (SELECT AVG(#COLUMN#) FROM #TABLE#))"
            },
            {
                "hash": "1f931c79c598d187203e18dc9cd7651a2d51ed65",
                "query": "SELECT T1.Name, T2.Total FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Snatch > 100 AND T2.Clean_Jerk BETWEEN 150 AND (SELECT MAX(Clean_Jerk) FROM body_builder) ORDER BY T2.Total DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND (SELECT MAX(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "33d72640e9a145785c79d8bacbc522b1fbd7e784",
                "query": "SELECT p.Name, COUNT(b.Body_Builder_ID) FROM people p JOIN body_builder b ON p.People_ID = b.People_ID WHERE b.Total BETWEEN 200 AND 300 AND EXISTS (SELECT 1 FROM body_builder WHERE Snatch > 100 AND Clean_Jerk > 150) GROUP BY p.Name LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "cd57b2f80843034c04ac88ee2f278b7bd7b288b5",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), T1.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN body_builder AS T3 ON T2.People_ID = T3.People_ID WHERE T1.Snatch > 200 ORDER BY T1.Height DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4a792be7b772aa0d6065fdd6c5ef6d88582c5a75",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Snatch >= 200 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ccb00260d29f2156a5038632e3ebaebeaa0325bd",
                "query": "SELECT T1.Name, MAX(T2.Total) FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height = 170 AND T2.Snatch > 80 AND NOT EXISTS (SELECT 1 FROM body_builder WHERE People_ID = T2.People_ID AND Snatch < 90) GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1c5ca3f5294ca90591f24b0aa355919c61111394",
                "query": "SELECT Name FROM people WHERE Birth_Place != 'China' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "8776087185429531e5a72070a8f45d7b13d97469",
                "query": "SELECT T1.Name, T2.Snatch FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Clean_Jerk > 100 AND T2.Total BETWEEN 200 AND 300 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1ef4993f81c2c583bbf9d44b6c7e7db13013e7f4",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN people AS T3 ON T2.People_ID = T3.People_ID WHERE T1.Snatch = 200 ORDER BY T3.Weight DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "71220e41b5361a027d823a2e66197b7367893b27",
                "query": "SELECT COUNT(DISTINCT T1.People_ID), T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total = 1000 ORDER BY T1.Total DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "16508b5c17c93fee772ff1e2cc442e3ea2586932",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Snatch), COUNT(DISTINCT T2.Clean_Jerk) FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T1.People_ID NOT IN (SELECT People_ID FROM body_builder WHERE Total > 500) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "ca0b7b0a1cdbfbded110f9132936b0ab1878ddc3",
                "query": "SELECT AVG(T1.Snatch) FROM body_builder AS T1 WHERE T1.People_ID = 1 OR T1.Snatch BETWEEN 100 AND 200 OR T1.Total NOT IN (SELECT AVG(T2.Total) FROM body_builder AS T2 GROUP BY T2.People_ID)",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# NOT IN (SELECT AVG(#COLUMN#) FROM #TABLE# AS T2 GROUP BY T2.#COLUMN#)"
            },
            {
                "hash": "80b3d19cc4c1a2f14cca20b83ee2355a82404c00",
                "query": "SELECT COUNT(DISTINCT T1.People_ID) FROM body_builder AS T1, body_builder AS T2 WHERE T1.Body_Builder_ID < T2.Body_Builder_ID AND T1.Snatch <= T2.Snatch LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# < T2.#COLUMN# AND T1.#COLUMN# <= T2.#COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "61a64fa81dea485fb3e9c379e685b3e8d3f92542",
                "query": "SELECT MAX(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Weight = 70 ORDER BY T1.Total DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "416d6d0ed1cb21d11a4fecc345a82998f46b4bbc",
                "query": "SELECT People_ID FROM body_builder WHERE Snatch > (SELECT AVG(Snatch) FROM body_builder) ORDER BY People_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ccfffaa0104c9af16887a9d9f5f0e31627a18cf1",
                "query": "SELECT T1.Name FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID JOIN body_builder AS T3 ON T2.People_ID = T3.People_ID WHERE T2.Snatch < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d6b28a40b00fddcc7481f620234837efe661c05d",
                "query": "SELECT T1.Name FROM people AS T1 INNER JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Snatch < AVG(T2.Snatch) AND T2.Clean_Jerk BETWEEN 100 AND 150 AND NOT EXISTS (SELECT 1 FROM body_builder AS T3 WHERE T3.People_ID = T1.People_ID AND T3.Total > 200)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < AVG(#COLUMN#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE T3.#COLUMN# = T1.#COLUMN# AND T3.#COLUMN# > #VALUE#)"
            },
            {
                "hash": "2c5000ea1708644f1ea4ddd3895546f9f110d715",
                "query": "SELECT Name, Birth_Place FROM people AS T1 INNER JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "818bd7c94049901483bc82d6a3748a5b62845f67",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Snatch) FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Total > (SELECT AVG(Total) FROM body_builder) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "620d4bd22380c095c7936b30a8181cb3234aa64c",
                "query": "SELECT AVG(T1.Snatch), AVG(T1.Clean_Jerk) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Weight BETWEEN 60 AND 80",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "67e462c641991e687326faa2183c708652d0371b",
                "query": "SELECT T1.Name FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Total = T2.Clean_Jerk",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#"
            },
            {
                "hash": "d13c2608e952fb49f842688cd7d07961501361d5",
                "query": "SELECT T1.Name FROM people AS T1 JOIN body_builder AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "customers_and_invoices": [
            {
                "hash": "fd785229b01cbf11dc7792fe3ca5fa285dca8da2",
                "query": "SELECT COUNT(DISTINCT T1.product_id), T2.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.unit_price < 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "0186dee765680b84e1d18675673833f28a4faeb2",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id != T2.customer_id ORDER BY T1.customer_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6d897b2e5ec7312ca6aed14c86ddb8c1c3a0180c",
                "query": "SELECT T2.product_name FROM Products AS T1 JOIN Invoice_Line_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.unit_price <= 10 GROUP BY T2.product_name HAVING COUNT(T2.product_id) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "b03b8ecb0f1d32af07e22e32120140d53de0f80f",
                "query": "SELECT T1.customer_id FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Invoices AS T3 ON T2.order_id = T3.order_id",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "164a28ca3649aaa79ddb8ade635a4c2673963267",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T2.order_id WHERE T2.order_item_id IN (SELECT T1.order_item_id FROM Invoice_Line_Items AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number WHERE T2.invoice_date > '2020-01-01') ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "50a606b47c6c9d4fb380a208f0d356da53ca237d",
                "query": "SELECT COUNT(DISTINCT T1.product_id) FROM Products AS T1, Products AS T2 WHERE T1.parent_product_id = T2.product_id ORDER BY T1.product_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f567d23a9724d2128abbf69a03448d8f7ccb871a",
                "query": "SELECT COUNT(DISTINCT T2.account_name) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_account_opened BETWEEN '2020-01-01' AND '2020-12-31' AND T2.customer_id IN (SELECT customer_id FROM Orders)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "7855c3df4a29c3c03acdbefb8bc0def8240dc7ad",
                "query": "SELECT T1.product_name, COUNT(T2.order_id) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.product_quantity BETWEEN 10 AND 20 OR T1.unit_price > 50 OR NOT EXISTS ( SELECT * FROM Invoice_Line_Items WHERE product_id = T1.product_id AND product_price > T1.unit_price ) ORDER BY T1.product_name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "870dab51ef285346511b9e9f4ddc9b941383df82",
                "query": "SELECT T1.customer_first_name, COUNT(T2.order_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id <= 100 ORDER BY T1.customer_first_name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4fb1023178e6f293575b09f0d6020bbd8f661689",
                "query": "SELECT T1.product_id, COUNT(T2.order_item_id) FROM Products AS T1 LEFT JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE NOT EXISTS (SELECT 1 FROM Invoice_Line_Items AS T3 WHERE T3.product_id = T1.product_id AND T3.derived_total_cost > 100) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 WHERE T1.customer_id >= 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "fbda3f60fad2a90d4f1c47fa88992d53fab4017b",
                "query": "SELECT * FROM Customers WHERE customer_id IN (SELECT customer_id FROM Orders WHERE date_order_placed > '2020-01-01') AND customer_first_name = 'John' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "24a4421bcdaba35ae422f4ce2436f03d6ec9abcc",
                "query": "SELECT SUM(T1.order_id) FROM Orders AS T1 WHERE T1.customer_id = 101 OR T1.order_id BETWEEN 1000 AND 2000 OR EXISTS (SELECT T2.order_item_id FROM Order_Items AS T2 WHERE T2.order_id = T1.order_id)",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)"
            },
            {
                "hash": "c6b0a52b51c59a61f8eeeef859595b042884ee32",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 WHERE T1.customer_first_name = 'John' AND T1.customer_id BETWEEN 1 AND 10 AND T1.gender = 'Male' LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "28e417774f7e7d33e4f0aa4e0209f5aba821d680",
                "query": "SELECT T1.date_order_placed FROM Orders AS T1 WHERE T1.order_id = 102 OR T1.order_id BETWEEN 100 AND 105 OR T1.customer_id > 500",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "55d89dd382576ce208d2e8b510aff909bba22f8f",
                "query": "SELECT T1.customer_id FROM Customers AS T1 WHERE T1.customer_id > 100 AND T1.customer_id IN (SELECT T2.customer_id FROM Accounts AS T2 WHERE T2.account_id < 50) ORDER BY T1.customer_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3d3ee1e0cccab8eec1590cb35e5d7f7e996a884e",
                "query": "SELECT AVG(T1.unit_price) FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.parent_product_id WHERE T1.unit_price < 100",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "699f217aed5830753589f6757f3a14f4d6d87c47",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 WHERE T1.customer_id IN ( SELECT T2.customer_id FROM Orders AS T2 WHERE T2.date_order_placed > '2020-01-01')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )"
            },
            {
                "hash": "31d974db564b1641c360d28be9362f2d66087ffa",
                "query": "SELECT COUNT(DISTINCT T1.customer_first_name), COUNT(DISTINCT T1.customer_last_name) FROM Customers AS T1 WHERE T1.customer_id = 100 AND T1.gender = 'Male' ORDER BY T1.customer_id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "6ac7d64c91f324bd39a8d2acc17989e00aeb773a",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 UNION SELECT T2.product_name FROM Products AS T2 WHERE T2.unit_price BETWEEN 10 AND 20 OR T2.product_color = 'Red' OR T2.product_size > 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 UNION SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "eeb62e361fcaf4bf3720e9cce735612886b5dc8e",
                "query": "SELECT T1.customer_id, T1.customer_first_name FROM Customers AS T1 WHERE T1.customer_id > 1000 OR T1.customer_id BETWEEN 2000 AND 3000 OR T1.customer_middle_initial = 'A' ORDER BY T1.customer_id ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f2291169d486004facfc05210f596594dc0157fc",
                "query": "SELECT T1.customer_first_name FROM Customers AS T1 WHERE EXISTS (SELECT T2.order_id FROM Orders AS T2 WHERE T1.customer_id = T2.customer_id AND T2.date_order_placed = '2020-01-01') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "1b6b547cc12bf0cb159921ec0f8a349ef63bf0d6",
                "query": "SELECT T1.product_name, AVG(T2.product_quantity) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b47605e25778853812b0fc1e3b75a1c5929607c4",
                "query": "SELECT * FROM Products WHERE product_id BETWEEN 100 AND 200 AND unit_price < 50 AND EXISTS (SELECT * FROM Order_Items WHERE product_id = Products.product_id) ORDER BY product_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "62bcc848c7ca562932cf1bbf3b90478488f0acd3",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.parent_product_id WHERE T1.unit_price < 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3cc8bcdf53f8795053308399a9229be3bc59e633",
                "query": "SELECT T1.product_name, T2.product_quantity FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.unit_price BETWEEN 10 AND 20 AND T2.product_quantity IN (SELECT product_quantity FROM Order_Items WHERE product_quantity > 5) ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "afb2c4b74a462262389e7b39c361687e4b0d39d8",
                "query": "SELECT T1.login_name, COUNT(T2.order_id), COUNT(DISTINCT T2.order_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            }
        ],
        "formula_1": [
            {
                "hash": "23d25fda277234147c20aa4538bcad7e191d3eb1",
                "query": "SELECT T1.forename, T1.surname FROM drivers AS T1 WHERE T1.driverId NOT IN ( SELECT T2.driverId FROM results AS T2 WHERE T2.position = 1 ) AND T1.driverId = 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "b0143d1f0ee1ef1d893a213b681a61d5dfae4d9d",
                "query": "SELECT T1.number FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T2.position != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "9e3b4b75aca1e2d74568dfa97dd37155f862bf01",
                "query": "SELECT T1.raceId, T1.circuitId FROM races AS T1 WHERE T1.round = 1 OR T1.year BETWEEN 2010 AND 2015 ORDER BY T1.raceId ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8a545d056d2e75f52f26b63439ae4708c16ef180",
                "query": "SELECT COUNT(DISTINCT T1.raceId), COUNT(DISTINCT T1.constructorId), SUM(T2.points) FROM constructorStandings AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "dce96e5801da23f5e170836ac32a6240b966b069",
                "query": "SELECT COUNT(T1.circuitId), T1.name, T1.location FROM circuits AS T1 WHERE T1.circuitId BETWEEN 1 AND 10 AND T1.lat > 10 AND T1.url LIKE '%url%'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# LIKE '%#VALUE#%'"
            },
            {
                "hash": "1182c3e78efeadfbe3078d2eaa00daa8dd39df1b",
                "query": "SELECT T1.name, MAX(T2.position) FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.positionText = '1' GROUP BY T1.name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "e3dfac651f89642480edf57c1d1db057a323f1d4",
                "query": "SELECT T1.name, T2.fastestLap FROM constructors AS T1 JOIN results AS T2 ON T1.constructorId = T2.constructorId",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "f8c192aa2dee958091f2b0240fce97b23effd0f6",
                "query": "SELECT COUNT(DISTINCT T1.statusId), T2.status FROM status AS T1 JOIN results AS T2 ON T1.statusId = T2.statusId WHERE T1.statusId = 1 OR T2.position BETWEEN 1 AND 3 OR T2.position < 4 ORDER BY T2.position DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "75c74be2a33ce7eb55f308ace884893230f5d738",
                "query": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position > 5 OR T1.points > 100 OR T1.constructorId NOT IN (SELECT constructorId FROM constructorResults)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "79d046df28ea262ba19fa241c65c5f62b1f3a75d",
                "query": "SELECT T1.name, T2.constructorRef FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "a87c27008d7ff237bfb787ed519afa7a0deb1722",
                "query": "SELECT T1.name, T2.points FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points > 100 ORDER BY T2.points ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "fa575524b239486e0b5bbd4a6d5039e435779da6",
                "query": "SELECT COUNT(T1.raceId), T2.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year > 2000 AND T1.year < 2010 AND EXISTS (SELECT T3.raceId FROM results AS T3 WHERE T3.raceId = T1.raceId AND T3.position = 1)",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "674498ad794e3c4680910db43aa48244160b59ab",
                "query": "SELECT T1.circuitRef, COUNT(T1.circuitRef) FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 1950 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "721c278299348ddb7767f5ca48d0c214b72eaaac",
                "query": "SELECT T1.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE EXISTS (SELECT 1 FROM results AS T3 WHERE T3.raceId = T2.raceId AND T3.position = 1) ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e1f8b41a861b5dbb5e92c538b830df957d57e56e",
                "query": "SELECT T1.name FROM circuits AS T1 WHERE T1.circuitId NOT IN (SELECT T2.circuitId FROM races AS T2 WHERE T2.year = 2020) ORDER BY T1.circuitId DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "9fbc59f557d68c70045c9dbf659d23ceec77013f",
                "query": "SELECT T1.name, SUM(T2.points) FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.position = 1 OR T2.points BETWEEN 100 AND 200 OR T2.constructorId IN (SELECT constructorId FROM constructorResults WHERE points > 50) GROUP BY T1.name LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = 1 OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "9630785bc394a851080cd383ca255a09afb9b0b1",
                "query": "SELECT T1.name, MIN(T2.position) FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId GROUP BY T1.name ORDER BY MIN(T2.position) DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC"
            },
            {
                "hash": "29859f040cddeb48d1e839490028d36f4ef2a0f2",
                "query": "SELECT T1.name, T2.position FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points >= 50 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9099b1091a90ff5ffbf128d44e4999d060d2bc57",
                "query": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.constructorRef <= 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "1983b5d4c40c5c79bf70df2f017b75d0c5d64bb3",
                "query": "SELECT T1.name, T2.position, T3.points FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId JOIN constructorStandings AS T3 ON T2.raceId = T3.raceId WHERE T2.round BETWEEN 10 AND 15 OR T3.position > 5 ORDER BY T2.round ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "02aaddb6666cb42c72a481163d5d5e0b9f1bb213",
                "query": "SELECT T1.forename FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T3.raceId = T2.raceId JOIN circuits AS T4 ON T4.circuitId = T3.circuitId",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "16322bcc0677e7e60a75ba5bb404ce9f253527a8",
                "query": "SELECT T1.name, T2.position FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points > 100 AND T2.position < 5 OR T2.position BETWEEN 1 AND 3 GROUP BY T1.name HAVING SUM(T2.points) > 500 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1dd9cf6533ff5bb1d42e6602c5a83a69bee0b4a6",
                "query": "SELECT T1.name, T2.circuitRef FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.round >= 10 ORDER BY T2.points DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "896a66708437b9ca001c8dcf63437fc171b86aa8",
                "query": "SELECT * FROM drivers WHERE driverId = ( SELECT driverId FROM pitStops WHERE stop > 1 ) OR driverId = ( SELECT driverId FROM lapTimes WHERE position = 1 )",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "b44efb5ca08319f150905ac686dff8a7f1bea353",
                "query": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            }
        ],
        "university_rank": [
            {
                "hash": "5ca5d7d5ed8981d041ca8248d35b2b3e532b5d05",
                "query": "SELECT T1.University_Name, COUNT(T2.Major_ID) FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major AS T3 ON T2.Major_ID = T3.Major_ID WHERE T1.Home_Conference IN (SELECT T4.Home_Conference FROM university AS T4 WHERE T4.Enrollment < 10000) GROUP BY T1.University_Name HAVING COUNT(T2.Major_ID) > 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "9d9d487f0c50e8e013dcda28cdb7ea796f7459b1",
                "query": "SELECT Enrollment FROM university WHERE City != 'New York'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "7c6e396b00a36a9d2fed4a1700e45d5331c8b62a",
                "query": "SELECT COUNT(DISTINCT ur.University_ID), AVG(oar.Reputation_point) FROM university ur JOIN overall_ranking oar ON ur.University_ID = oar.University_ID WHERE (ur.Home_Conference = 'SEC' OR ur.Enrollment BETWEEN 10000 AND 20000) AND oar.Reputation_point > 50 GROUP BY ur.University_Name HAVING SUM(oar.Reputation_point) > 100 ORDER BY ur.University_Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2704ad751ed24a6536387ea933917786ce02ae48",
                "query": "SELECT COUNT(University_ID) FROM university AS U1 WHERE U1.University_Name != 'ABC University' GROUP BY U1.University_Name LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "87da7aedeb137bb6c82f7caec9cc232d67a09c03",
                "query": "SELECT University_Name, COUNT(University_ID) FROM university WHERE City != 'New York' GROUP BY University_Name HAVING COUNT(University_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "d6e92afda6873da5f233029d223c020b7bca79dd",
                "query": "SELECT MAX(Home_Conference) AS Home_Conference, MIN(Home_Conference) AS Home_Conference FROM university ORDER BY University_ID DESC LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) AS #COLUMN#, MIN(#COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "15332d0ff199f6ddd464313b38d3cbf58dcd1e79",
                "query": "SELECT Enrollment FROM university WHERE Enrollment != 10000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2f3619399cf0dadebe5cc29cb522c1c7aa5cfeba",
                "query": "SELECT T1.University_Name, SUM(T2.Total) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T1.Enrollment BETWEEN 10000 AND 20000 AND EXISTS (SELECT T3.Rank FROM major_ranking AS T3 WHERE T3.University_ID = T1.University_ID AND T3.Rank = 1) ORDER BY T1.University_Name DESC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "50027864eb6b0d2e11611e9c1989cddb8aa40e1d",
                "query": "SELECT University_Name, MAX(Enrollment) FROM university WHERE University_ID IN ( SELECT University_ID FROM major_ranking WHERE Rank = 1 ) GROUP BY University_Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "d54ced82f328fec53f0b7bf3d1734dcb82de104c",
                "query": "SELECT T1.University_Name, T2.Enrollment FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T1.University_ID = T3.University_ID JOIN major AS T4 ON T3.Major_ID = T4.Major_ID WHERE T2.Total >= 90 AND T3.Rank >= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "540be55f880efba6c7f9f63a5928a590d03b84b1",
                "query": "SELECT University_Name FROM university WHERE University_Name NOT IN (SELECT University_Name FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Rank > 10)) ORDER BY University_Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d64b9678beabac673e95332ac3cc7a2c09195c68",
                "query": "SELECT University_Name FROM university WHERE Enrollment > (SELECT AVG(Enrollment) FROM university) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "4181514c32a47a1cd0b7fe824895d33610d6fe5c",
                "query": "SELECT Enrollment FROM university WHERE University_ID = 1 ORDER BY Enrollment DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "678b15d182a947e410570c53cab31cb8d3087c37",
                "query": "SELECT COUNT(DISTINCT University_ID) , COUNT(DISTINCT University_Name) , COUNT(DISTINCT City) FROM university WHERE University_Name = 'University of California' ORDER BY University_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3efc215933866a8cae25f6ef93e26ce2c36ca927",
                "query": "SELECT T1.University_Name FROM university AS T1 INNER JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE T1.University_Name NOT IN (SELECT University_Name FROM university WHERE City = 'New York')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "7e85eb0ab8779649bee16213521c0e1b41fa66f2",
                "query": "SELECT T1.University_Name, T1.Home_Conference FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T1.Enrollment <= 10000 AND T2.Reputation_point <= 80",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE#"
            },
            {
                "hash": "a91a8a9b477695e76a623547f864b864e9f726a4",
                "query": "SELECT T1.University_Name, COUNT(T3.Rank) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.University_ID = T3.University_ID WHERE T1.Enrollment > (SELECT AVG(Enrollment) FROM university) GROUP BY T1.University_Name ORDER BY COUNT(T3.Rank) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "041cb9b4905fdcc15f45d0304dd44eff3f3f216e",
                "query": "SELECT University_Name FROM university WHERE Affiliation = 'State' AND State = 'CA' AND University_ID NOT IN (SELECT University_ID FROM overall_ranking WHERE Reputation_point > 1000) ORDER BY University_Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b03b9a0ac879a22edb6130c90eac18fa3bb3dc82",
                "query": "SELECT T1.University_Name, T3.Major_Name, SUM(T2.Reputation_point) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T3.University_ID = T2.University_ID JOIN major AS T4 ON T4.Major_ID = T3.Major_ID WHERE T1.City = 'New York' OR T3.Rank < 10 OR NOT EXISTS (SELECT 1 FROM major_ranking AS T5 WHERE T5.University_ID = T3.University_ID AND T5.Rank > 5) GROUP BY T1.University_Name, T3.Major_Name HAVING SUM(T2.Reputation_point) > 100",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#, #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "cef3dca054a206e44bb0c7143d8b8a2c4d177a02",
                "query": "SELECT T1.University_Name, SUM(T1.Enrollment) FROM university AS T1 WHERE T1.Enrollment > 10000 ORDER BY T1.Enrollment ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "22f69a468cd9ce0ae53cd3cfd4a594332fbd2900",
                "query": "SELECT T1.University_Name FROM university AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE EXISTS (SELECT 1 FROM overall_ranking AS T3 WHERE T3.University_ID = T1.University_ID) ORDER BY COUNT(DISTINCT T1.University_ID) ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "1f895373e9f0978128dfb0ad0b2cdd06e0501228",
                "query": "SELECT University_ID, University_Name, City, State, Team_Name, Affiliation, Enrollment, Home_Conference FROM university WHERE Enrollment <= 2000 ORDER BY Enrollment ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a22ac04f4a5b14a0ce1a6afe5f92d069878f7f8f",
                "query": "SELECT DISTINCT University_Name AS university_name FROM university WHERE City BETWEEN 'A' AND 'Z' ORDER BY University_ID DESC LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9775cff2e20d8841b7e016ea10b71dc2f016ab5c",
                "query": "SELECT COUNT(DISTINCT University_Name), COUNT(DISTINCT Team_Name) FROM university WHERE Enrollment BETWEEN 1000 AND 20000 ORDER BY Enrollment DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "28b7807fbf701caa433ea75d00661a4b76281a1b",
                "query": "SELECT University_Name, Enrollment FROM university WHERE University_ID = 1 OR University_Name = 'University of California' OR NOT EXISTS (SELECT 1 FROM major_ranking WHERE major_ranking.University_ID = university.University_ID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#)"
            },
            {
                "hash": "4d3ec917c40c080d4f88e82fcb48f1222d127996",
                "query": "SELECT T1.University_ID, T2.Major_ID FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T1.State = 'CA' OR (T2.Rank BETWEEN 1 AND 10) OR T1.Enrollment > 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# > #VALUE#"
            }
        ],
        "student_transcripts_tracking": [
            {
                "hash": "f48e2afd706bcc9e4115b0f28a6678739edb4fdc",
                "query": "SELECT T1.first_name FROM Students AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id = 1 AND T1.date_first_registered BETWEEN '2020-01-01' AND '2021-01-01' AND NOT EXISTS (SELECT 1 FROM Students AS T3 WHERE T3.student_id = T1.student_id AND T3.date_left IS NOT NULL) ORDER BY T1.first_name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ad9ba2b16644b7f00ef7945db4b2932d9e7a3a04",
                "query": "SELECT COUNT(DISTINCT T1.degree_program_id), T2.department_name FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name HAVING SUM(T1.degree_program_id) >= 1 ORDER BY T2.department_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5868e6f216eda0703dceda84128e2816c708a3ae",
                "query": "SELECT T1.first_name, T2.course_name FROM Students AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_id = T2.student_enrolment_id WHERE EXISTS (SELECT T3.student_course_id FROM Transcripts AS T3 WHERE T3.transcript_id = T2.transcript_id) GROUP BY T1.first_name HAVING AVG(T2.course_id) = 1 ORDER BY T1.first_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "56b5ce50b3ed40e4453b74aa56f714e2c8fac34b",
                "query": "SELECT T1.degree_summary_name, COUNT(T2.student_enrolment_id) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.semester_id BETWEEN 1 AND 10 GROUP BY T1.degree_summary_name ORDER BY COUNT(T2.student_enrolment_id) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "206562bce30bdc6e6fb4d064ad68f9c0600384b7",
                "query": "SELECT T1.first_name FROM Students AS T1 WHERE T1.current_address_id BETWEEN 100 AND 200 AND T1.date_first_registered > '2000-01-01' AND T1.student_id NOT IN (SELECT T2.student_id FROM Student_Enrolment AS T2) ORDER BY T1.student_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0bcbb1985ca95d36161fe606b4de8eec54ef741c",
                "query": "SELECT COUNT(DISTINCT T1.degree_program_id) FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id WHERE T1.degree_program_id BETWEEN 1 AND 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "aac56bca093531f0ddcdc5693f5b512d82dc755c",
                "query": "SELECT student_id FROM Students WHERE date_first_registered >= '2020-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "04f088561790c10c9645f3cade23c648b8d48b25",
                "query": "SELECT AVG(T1.degree_summary_name) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T2.semester_id = 1 AND T1.degree_summary_name BETWEEN 'A' AND 'C' GROUP BY T1.degree_summary_name HAVING AVG(T1.degree_summary_name) > 50",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "e2bfd61d95f5425f9c5b2f96aca4739dfeb67f69",
                "query": "SELECT T1.degree_program_id, MAX(T2.semester_id) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T1.degree_summary_name <= 'Bachelor' ORDER BY MAX(T2.semester_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "d5f419071658c8d39898e4bb5002d0039a8a3274",
                "query": "SELECT COUNT(department_id) FROM Degree_Programs WHERE department_id <= 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "6b8568583cbc796906c23222f9b2c79f3efcae56",
                "query": "SELECT COUNT(DISTINCT T1.first_name) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Student_Enrolment_Courses AS T3 ON T2.student_enrolment_id = T3.student_enrolment_id JOIN Courses AS T4 ON T3.course_id = T4.course_id WHERE NOT EXISTS (SELECT 1 FROM Degree_Programs AS T5 JOIN Departments AS T6 ON T5.department_id = T6.department_id WHERE T6.department_name = 'Mathematics') GROUP BY T1.first_name ORDER BY COUNT(DISTINCT T1.first_name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "1277f8b7e822336dd0b6ef16ffd8629e41e10ef9",
                "query": "SELECT T1.first_name, T2.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T2 ON T3.degree_program_id = T2.degree_program_id JOIN Student_Enrolment_Courses AS T4 ON T3.student_enrolment_id = T4.student_enrolment_id JOIN Courses AS T5 ON T4.course_id = T5.course_id WHERE T5.course_id > 10 ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1194501902b763b45289f9c9676a4ce045c424ea",
                "query": "SELECT AVG(T1.degree_program_id), T2.department_name FROM Degree_Programs AS T1 INNER JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name HAVING AVG(T1.degree_program_id) BETWEEN 10 AND 20",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "837f643dfa14bb526f3efff966dc0f671e6d60e6",
                "query": "SELECT T1.student_id, COUNT(DISTINCT T2.course_id) FROM Students AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_id = T2.student_enrolment_id JOIN Student_Enrolment AS T3 ON T3.student_enrolment_id = T2.student_enrolment_id WHERE T1.student_id != T3.student_id LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "7306a04f80d94d7601ed701d17d269b79edbfc06",
                "query": "SELECT email_address FROM Students WHERE date_first_registered > '2020-01-01' ORDER BY date_first_registered DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0e15ef40759f221c5ae80f58bffc57198fc34a12",
                "query": "SELECT department_name FROM Departments WHERE department_id BETWEEN 10 AND 20 GROUP BY department_name HAVING AVG(department_id) > 100 ORDER BY department_id DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "19d1f8c356b3f8add3dd2cf2a3e3cc32d191e006",
                "query": "SELECT COUNT(DISTINCT T1.degree_program_id), COUNT(DISTINCT T2.degree_summary_name), T3.first_name FROM Student_Enrolment AS T1 JOIN Degree_Programs AS T2 ON T1.degree_program_id = T2.degree_program_id JOIN Students AS T3 ON T1.student_id = T3.student_id WHERE T1.student_enrolment_id = (SELECT MAX(student_enrolment_id) FROM Student_Enrolment) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "1d3a7011be0941952dde981aa0aefd107912af42",
                "query": "SELECT T1.first_name, T2.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T3 ON T1.student_id = T3.student_id JOIN Degree_Programs AS T2 ON T3.degree_program_id = T2.degree_program_id JOIN Student_Enrolment_Courses AS T5 ON T3.student_enrolment_id = T5.student_enrolment_id WHERE T1.student_id NOT IN (SELECT student_id FROM Student_Enrolment WHERE semester_id = 1) AND T5.student_course_id BETWEEN 100 AND 200 ORDER BY T1.first_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c2fc111f8cc568ab652df2b06fb3dbfa662cafed",
                "query": "SELECT T1.first_name, T2.transcript_date FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id WHERE T1.cell_mobile_number = '1234567890' OR T2.transcript_date IS NULL OR NOT EXISTS (SELECT 1 FROM Student_Enrolment_Courses AS T3 WHERE T3.student_course_id = T1.student_id)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IS NULL OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "69317f4f8101af2094eecf6ed531d282ae7524ea",
                "query": "SELECT department_name FROM Departments WHERE department_id > 5 GROUP BY department_name HAVING COUNT(department_id) > 1 ORDER BY department_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3bef42d97cb922244b01f39be66b8d21962e07c6",
                "query": "SELECT S.last_name, S.first_name, C.course_name FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id JOIN Student_Enrolment_Courses AS SEC ON SE.student_enrolment_id = SEC.student_enrolment_id JOIN Courses AS C ON SEC.course_id = C.course_id WHERE C.course_description < 'Introduction to Computer Science' ORDER BY S.last_name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9a08a62a1d8f0b661227ab458e106d0e59288ea6",
                "query": "SELECT T1.first_name FROM Students AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.first_name = 'John' AND T2.first_name = 'Alice' AND T1.student_id BETWEEN 1 AND 10 AND EXISTS (SELECT 1 FROM Students AS T3 WHERE T3.student_id = T1.student_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "1cba190ae674328580e37798d166e5e64b9954e9",
                "query": "SELECT T2.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE T1.department_id <= 5 ORDER BY T2.degree_summary_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a35b92f673f8bbf4da55b8836f15b411863b8d17",
                "query": "SELECT department_id, MAX(degree_program_id) FROM Degree_Programs WHERE department_id <= 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "139ee5c4e01fb36df825e56c29f001cf2ef31c14",
                "query": "SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered BETWEEN '2000-01-01' AND '2020-01-01' ORDER BY first_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "46f1048cca1eeb4c2b1e625ef35a1b0b1649833d",
                "query": "SELECT COUNT(degree_program_id) FROM Degree_Programs WHERE department_id = 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "e208d9aec8a9fa1533156cc9adde15568e50113e",
                "query": "SELECT MIN(T1.degree_summary_name) , T2.course_name FROM Degree_Programs AS T1 JOIN Courses AS T2 ON T1.department_id = T2.course_id WHERE T1.degree_program_id > 10 LIMIT 5",
                "template": "SELECT MIN(#COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9deaddc28338770291198570192d80b2df4efcaa",
                "query": "SELECT student_id FROM Students WHERE date_first_registered < '1990-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#'"
            },
            {
                "hash": "6e196225d3b7f6e22a0df1ad863bac14d99dd805",
                "query": "SELECT AVG(T3.semester_id) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Semesters AS T3 ON T2.semester_id = T3.semester_id WHERE T1.first_name != 'John' GROUP BY T2.semester_id ORDER BY AVG(T3.semester_id) DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
            }
        ],
        "online_exams": [
            {
                "hash": "a21ef7332096ff8cc65727489565a384f7e37589",
                "query": "SELECT Student_Answer_ID FROM Student_Answers WHERE Student_ID BETWEEN 1 AND 10 OR Student_ID IN (SELECT Student_ID FROM Students WHERE Student_ID = 5) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "d801d23a093ab5b3864577ee2e1f9dea18bd907b",
                "query": "SELECT T1.First_Name, COUNT(T1.Student_ID) FROM Students AS T1 GROUP BY T1.First_Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 GROUP BY #COLUMN#"
            },
            {
                "hash": "3246e16955f9cb05784b9c1d5cefa0932f342dfd",
                "query": "SELECT T1.First_Name FROM Students AS T1 WHERE T1.Middle_Name < 'a' ORDER BY Student_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e3dfac651f89642480edf57c1d1db057a323f1d4",
                "query": "SELECT First_Name, Middle_Name FROM Students",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "56af0b3ed9f4678fcc4f3a4f6ed909af5dfdf53c",
                "query": "SELECT T1.Student_ID, T1.First_Name FROM Students AS T1 WHERE EXISTS (SELECT 1 FROM Student_Answers AS T2 WHERE T1.Student_ID = T2.Student_ID GROUP BY T2.Exam_ID HAVING COUNT(T2.Question_ID) > 1) ORDER BY T1.Student_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c145b93fb40fa58a9e33ad5fb3d9538ccc87d2b6",
                "query": "SELECT COUNT(DISTINCT Student_ID) FROM Students AS Students1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "28acbdee883f51d35e7a85b499142fc052e77d48",
                "query": "SELECT COUNT(DISTINCT T1.Student_ID), AVG(T2.Student_Answer_ID) FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Date_of_Answer BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "712a76df06e31e9249b0f89b60cfbea1d3afd594",
                "query": "SELECT Student_ID FROM Students WHERE Student_ID != 100 ORDER BY Student_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "525c3e0ab29731f4c799eac5e3d73072474f6d5e",
                "query": "SELECT COUNT(T1.Question_ID), COUNT(T2.Question_ID), COUNT(T3.Question_ID) FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID JOIN Student_Answers AS T3 ON T2.Question_ID = T3.Question_ID WHERE T2.Exam_ID != T3.Exam_ID",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "42ab3534b00e57f474e6dcdc7d781dd1be880648",
                "query": "SELECT Student_ID FROM Students WHERE Student_ID != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "5773f90bbdf0a3d4ee0eb1a37cad64a77cff331b",
                "query": "SELECT COUNT(T2.Question_ID), SUM(T1.Exam_ID) FROM Exams AS T1 JOIN Questions_in_Exams AS T2 ON T1.Exam_ID = T2.Exam_ID WHERE T1.Subject_Code != 'Math'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "8748f06697874305a11b39d329909c2e8c557caa",
                "query": "SELECT T1.First_Name, T2.Question_Text FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Question_ID NOT IN (SELECT Question_ID FROM Valid_Answers WHERE Valid_Answer_Text = 'N/A') ORDER BY T1.First_Name DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "67556d063fb8d8f48d3cbbd1c72d7254fa978d0e",
                "query": "SELECT COUNT(DISTINCT T1.Student_Answer_Text) FROM Student_Answers AS T1 JOIN Student_Answers AS T2 ON T1.Exam_ID = T2.Exam_ID WHERE T1.Date_of_Answer BETWEEN T2.Date_of_Answer AND T1.Comments = 'Good' AND T1.Student_Answer_ID NOT IN (SELECT Student_Answer_ID FROM Student_Assessments WHERE Assessment = 'Bad') ORDER BY T1.Student_Answer_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3e81a80d3655036067115625619eb15b27fc6298",
                "query": "SELECT T1.First_Name, T2.First_Name FROM Students AS T1 JOIN Students AS T2 ON T1.Student_ID != T2.Student_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "9d7e060b85556f55a9a8ee26d1c0b000e3b4b4ff",
                "query": "SELECT T1.First_Name FROM Students AS T1 INNER JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID INNER JOIN Questions_in_Exams AS T3 ON T2.Exam_ID = T3.Exam_ID INNER JOIN Exams AS T4 ON T3.Exam_ID = T4.Exam_ID WHERE T1.Gender_MFU = 'Male' OR T4.Exam_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Satisfactory_YN NOT IN ( SELECT T5.Satisfactory_YN FROM Student_Assessments AS T5 ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "2dafcd699431f443365b5d9b9d07a5352e1a1175",
                "query": "SELECT T1.First_Name, SUM(T2.Satisfactory_YN = 'Y') FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID GROUP BY T1.First_Name HAVING SUM(T2.Satisfactory_YN = 'Y') = 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN# = '#VALUE#') FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN# = '#VALUE#') = #VALUE#"
            },
            {
                "hash": "4ae1437b45843b9d7535f41f94e572ba06d98825",
                "query": "SELECT COUNT(T1.Student_ID), T2.Exam_Name FROM Students AS T1 JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID JOIN Exams AS T3 ON T3.Exam_ID = T2.Exam_ID WHERE T3.Exam_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Comments = 'Good' OR T2.Satisfactory_YN = 'Y'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "2b2f3be32d8083f8cd66a9bae5ff6d1d3ca5067c",
                "query": "SELECT Student_Answer_Text FROM Student_Answers WHERE Student_Answer_ID NOT IN (SELECT Student_Answer_ID FROM Student_Assessments WHERE Valid_Answer_ID = 1) AND Student_Answer_Text = 'Text'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "355c811010014b8684c64ced9876742ce10ef958",
                "query": "SELECT Student_Answer_ID FROM Student_Answers WHERE Exam_ID = 1 AND Student_ID = 1 AND NOT EXISTS (SELECT 1 FROM Student_Assessments AS T1 WHERE T1.Student_Answer_ID = Student_Answers.Student_Answer_ID AND T1.Valid_Answer_ID BETWEEN 10 AND 20)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "7452d39a00a2620cf871eaed47ede45c8229123a",
                "query": "SELECT Student_ID FROM Students WHERE Student_ID BETWEEN 10 AND 50 AND Student_ID NOT IN (SELECT Student_ID FROM Student_Answers WHERE Student_Answer_ID < 100) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "19c18a2d13df7537b890165d5e5b2b30a1655634",
                "query": "SELECT Valid_Answer_ID FROM Valid_Answers WHERE Question_ID = 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c3baafa490589118e726358100848403a582d54b",
                "query": "SELECT COUNT(DISTINCT T1.First_Name), COUNT(DISTINCT T1.Last_Name) FROM Students AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1"
            }
        ],
        "book_1": [
            {
                "hash": "cb2da4e6bae1b51dbd592d8ebfb321b827897cc5",
                "query": "SELECT COUNT(DISTINCT T1.ISBN), SUM(T2.amount) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T1.PurchasePrice >= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "22c71331b778c012ef5888144961e0caa0a6afa3",
                "query": "SELECT SUM(SalePrice) FROM Book WHERE PurchasePrice >= 10 LIMIT 1",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT 1"
            },
            {
                "hash": "745227b70c01451a0b93f9a490831d14d7ff3406",
                "query": "SELECT T1.Title, COUNT(T3.IdOrder) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN JOIN Orders AS T3 ON T2.IdOrder = T3.IdOrder WHERE T3.IdClient IN (SELECT IdClient FROM Client) GROUP BY T1.Title ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5300f4e186049f4feb89c6b1bdf7faa0ed7498ed",
                "query": "SELECT T1.Title, T2.Amount FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.Amount > 10 AND T1.PurchasePrice BETWEEN 10 AND 100 AND T1.SalePrice > (SELECT AVG(SalePrice) FROM Book)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "87e57f727c7c81ff67188c9b0622720c83807570",
                "query": "SELECT COUNT(DISTINCT T1.ISBN) FROM Book AS T1 WHERE EXISTS ( SELECT 1 FROM Books_Order AS T2 WHERE T2.ISBN = T1.ISBN ) ORDER BY T1.PurchasePrice DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "75a0e0701df33cc02a90db4085052cca4f406475",
                "query": "SELECT Name FROM Client ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "bf24c79f52eb98d3a44f29ea3cee94bdb26c5d22",
                "query": "SELECT DISTINCT COUNT(T1.IdClient), T2.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient JOIN Books_Order AS T3 ON T2.IdOrder = T3.IdOrder WHERE T1.Address BETWEEN 'Address1' AND 'Address2' AND T2.IdClient NOT IN (SELECT IdClient FROM Client WHERE Name = 'Client1') AND T3.amount > 10 LIMIT 10",
                "template": "SELECT DISTINCT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2d07f4a9a0a06860f33fe67284cfd231aea08a95",
                "query": "SELECT T5.Name, AVG(T4.PurchasePrice) FROM Client AS T1 INNER JOIN Orders AS T2 ON T1.IdClient = T2.IdClient INNER JOIN Books_Order AS T3 ON T2.IdOrder = T3.IdOrder INNER JOIN Book AS T4 ON T3.ISBN = T4.ISBN INNER JOIN Author AS T5 ON T4.Author = T5.idAuthor WHERE T3.amount > 10 AND T4.PurchasePrice BETWEEN 100 AND 200 AND T4.Title = 'Book1' GROUP BY T5.Name LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e053affb0c529e3526c8ee33ec39eb9ea574ee74",
                "query": "SELECT Name, MAX(SalePrice) FROM Book WHERE SalePrice = 100 ORDER BY SalePrice DESC LIMIT 1",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "b14984fe383dca7778003ca45cf6d61f83c22e2c",
                "query": "SELECT IdClient FROM Client WHERE IdClient NOT IN (SELECT IdClient FROM Orders WHERE DateOrder > '2020-01-01')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "839c1a01c25dd7ea8c51b26cd1e4884c2ac363c3",
                "query": "SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T1.PurchasePrice > 10 OR T2.amount < 5 OR T1.SalePrice = (SELECT MIN(SalePrice) FROM Book) ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "afd8d96fab8169034cb55d8c01ab8c621eaef578",
                "query": "SELECT ISBN FROM Book WHERE EXISTS (SELECT 1 FROM Books_Order WHERE Books_Order.ISBN = Book.ISBN AND amount = 1) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c770044884d175d7315e566e9ab7fd3790b7360a",
                "query": "SELECT T1.IdClient FROM Client AS T1 JOIN Client AS T2 ON T1.IdClient = T2.IdClient WHERE T1.Name IN (SELECT Name FROM Client AS T3 WHERE T3.Address = 'Address')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "d6d34269bfacaee2318f0fd625368487e5cbf7c5",
                "query": "SELECT Title, Author FROM Book WHERE SalePrice = 500",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5c45d172c60e83a721adf66fd54cfb83caf1b681",
                "query": "SELECT T1.Title, SUM(T2.amount) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.amount = 10 GROUP BY T1.Title ORDER BY T1.Title ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8437c6aa8132ff5c49fba707be2bd0aecf17febe",
                "query": "SELECT T1.Name FROM Client AS T1 WHERE T1.IdClient NOT IN ( SELECT T2.IdClient FROM Orders AS T2 GROUP BY T2.IdClient HAVING COUNT(T2.IdClient) > 1 )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# )"
            },
            {
                "hash": "a0443e1980f86b653f7e2b60cf201c64df8ec781",
                "query": "SELECT COUNT(DISTINCT T1.IdClient), COUNT(T2.IdOrder), COUNT(T1.IdClient) FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient JOIN Books_Order AS T3 ON T2.IdOrder = T3.IdOrder WHERE T1.NumCC <= 10 LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e5ce74f7f7a25a11afe2cf63cd7d54bfbc00f0bc",
                "query": "SELECT COUNT(DISTINCT T1.Title), COUNT(DISTINCT T2.Name) FROM Book AS T1 JOIN Author_Book AS T2 ON T1.ISBN = T2.ISBN JOIN Books_Order AS T3 ON T2.ISBN = T3.ISBN JOIN Orders AS T4 ON T3.IdOrder = T4.IdOrder WHERE T4.DateExped <= T4.DateOrder ORDER BY T1.PurchasePrice DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4d63baec991d55c07230076e1c9b47be3618eac3",
                "query": "SELECT COUNT(DISTINCT T1.idAuthor) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor = T2.Author JOIN Book AS T3 ON T2.ISBN = T3.ISBN JOIN Books_Order AS T4 ON T3.ISBN = T4.ISBN JOIN Orders AS T5 ON T4.IdOrder = T5.IdOrder WHERE T5.DateOrder < T5.DateExped",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#"
            },
            {
                "hash": "8d95006cc0f48ea83d271d1f954473071ad3358d",
                "query": "SELECT COUNT(DISTINCT T1.NumCC), T1.Name, T2.Title FROM Client AS T1 JOIN Books_Order AS T3 ON T1.IdClient = T3.IdOrder JOIN Book AS T2 ON T3.ISBN = T2.ISBN WHERE T1.IdClient IN (SELECT T4.IdClient FROM Orders AS T4 WHERE T4.DateExped > T4.DateOrder) ORDER BY COUNT(DISTINCT T1.NumCC) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #COLUMN#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "a8131ebe07126deb537769680cc6a0a355502d9a",
                "query": "SELECT IdClient FROM Client WHERE IdClient BETWEEN 1 AND 10 OR Name = 'John' OR Address = 'New York' ORDER BY IdClient DESC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8b01b61c77ed7e1d20fa7d249f459919d570d172",
                "query": "SELECT T1.ISBN, COUNT(T2.amount) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN JOIN Orders AS T3 ON T3.IdOrder = T2.IdOrder JOIN Client AS T4 ON T4.IdClient = T3.IdClient WHERE T4.Name != 'John' GROUP BY T1.ISBN ORDER BY COUNT(T2.amount) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "e3ffef68e474672678e342e1d252dcb52695d245",
                "query": "SELECT T1.Title, T2.Title FROM Book AS T1 JOIN Book AS T2 ON T1.PurchasePrice <= T2.PurchasePrice ORDER BY T1.PurchasePrice DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# <= #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "376e918dc50821a370f87edcd63f1eb9be8f24c2",
                "query": "SELECT MAX(SalePrice) FROM Book WHERE PurchasePrice > 50",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "0aac451f337ac8b41952691cd140e957f35aad2c",
                "query": "SELECT T1.IdClient, COUNT(DISTINCT T2.IdOrder) FROM Client AS T1 JOIN Client AS T2 ON T1.IdClient = T2.IdClient WHERE T1.IdClient > 100 AND NOT EXISTS ( SELECT * FROM Orders WHERE IdClient = T1.IdClient ) GROUP BY T1.IdClient HAVING AVG(T1.NumCC) > 1000 ORDER BY T1.IdClient ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5dbc95cc979af9cfb3815cfa57f7929bfefd6b5f",
                "query": "SELECT Title FROM Book WHERE Author = 'Author1' ORDER BY PurchasePrice ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cadb65405b8b356aadb8a4591317476b57eaa07f",
                "query": "SELECT COUNT(DISTINCT ISBN) FROM Book WHERE Title = 'BookTitle'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "186c7aa0204d6bdd597d369328bd39d513b54a3f",
                "query": "SELECT T1.Title, SUM(T2.amount * T1.PurchasePrice) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN GROUP BY T1.Title ORDER BY SUM(T2.amount * T1.PurchasePrice) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN# * #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN# * #COLUMN#) DESC"
            }
        ],
        "aircraft": [
            {
                "hash": "938bc8d0f3fc71e637b40d42aff91a4487476e15",
                "query": "SELECT Name FROM pilot WHERE Age < 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "32ed9d76c951451fb9f007e6ecec27f7584e48c7",
                "query": "SELECT COUNT(DISTINCT T1.Pilot_Id), COUNT(DISTINCT T1.Name) FROM pilot AS T1 JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot JOIN aircraft AS T3 ON T3.Aircraft_ID = T2.Winning_Aircraft JOIN airport_aircraft AS T4 ON T4.Aircraft_ID = T3.Aircraft_ID JOIN airport AS T5 ON T5.Airport_ID = T4.Airport_ID WHERE T1.Age > 30 OR T1.Name = 'John' OR NOT EXISTS (SELECT 1 FROM match AS T6 WHERE T6.Winning_Pilot = T1.Pilot_Id LIMIT 1)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)"
            },
            {
                "hash": "572cfdb9c0c2c95c2692be56b71e080dc3ca6236",
                "query": "SELECT T1.Name FROM pilot AS T1 JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot WHERE T2.Round BETWEEN 1 AND 10 OR T2.Fastest_Qualifying = 'T1' OR T2.Country = 'USA' GROUP BY T1.Name HAVING MAX(T2.Round) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0fe488b2893e6cde36b8c766de459e2ec830a19b",
                "query": "SELECT T1.Aircraft, T1.Aircraft_ID FROM aircraft AS T1 JOIN match AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft WHERE T1.Max_Gross_Weight >= '1000' ORDER BY T1.Aircraft ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "161183f6084f3fac62bb19dbbb732cca3878cc35",
                "query": "SELECT COUNT(DISTINCT T1.Name), T3.Aircraft FROM pilot AS T1 JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot JOIN aircraft AS T3 ON T2.Winning_Aircraft = T3.Aircraft_ID WHERE T1.Age > 30 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e72b05208958d8602730ac61216fc5e76f6375ea",
                "query": "SELECT Name FROM pilot WHERE Age BETWEEN 20 AND 40 OR Age > (SELECT AVG(Age) FROM pilot) OR Pilot_Id IN (SELECT Winning_Pilot FROM match)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "0577363be9e05fd9043bd42fcf3a405bff1fff9f",
                "query": "SELECT COUNT(T1.Pilot_Id), COUNT(DISTINCT T2.Aircraft_ID) FROM pilot AS T1 JOIN aircraft AS T2 ON T1.Pilot_Id = T2.Aircraft_ID JOIN match AS T3 ON T2.Aircraft_ID = T3.Winning_Aircraft WHERE T3.Round >= 3",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "d58c6e4a3953c5fc611ceb394235c3b1d94f0ac6",
                "query": "SELECT COUNT(T2.Aircraft) FROM pilot AS T1 JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot WHERE T1.Age BETWEEN 30 AND 40 OR T2.Round = (SELECT MIN(Round) FROM match)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "632278b6af8956c823f5b0764b5edb5d557b6089",
                "query": "SELECT MIN(Salary) FROM pilot WHERE Age <= 30",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9717875a59437d86c1e3503d270ff29c9ce69c09",
                "query": "SELECT MIN(T1.Age) FROM pilot AS T1 WHERE T1.Pilot_Id = 1 GROUP BY T1.Pilot_Id",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "22eed7185210e9c653dce6bc2f7f4a579ba3fa40",
                "query": "SELECT Name FROM pilot WHERE Pilot_Id = 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "c6a32f1473bfef1e6ae746e399697911d46d815c",
                "query": "SELECT Winning_Pilot FROM match WHERE Winning_Pilot != 'Name' LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "e84644898d8049b16887bdce52884f703bee02b4",
                "query": "SELECT T1.Name, MAX(T1.Age), MAX(T2.Age) FROM pilot AS T1 JOIN pilot AS T2 ON T1.Age >= T2.Age GROUP BY T1.Name HAVING MAX(T1.Age) > MAX(T2.Age)",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# >= #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > MAX(#COLUMN#)"
            },
            {
                "hash": "a320e674dbb9b6d46a4b50c77cd36193e1de4d68",
                "query": "SELECT DISTINCT COUNT(DISTINCT T1.Aircraft_ID), COUNT(T1.Aircraft_ID) FROM aircraft AS T1 WHERE T1.Aircraft_ID NOT IN ( SELECT T2.Aircraft_ID FROM airport_aircraft AS T2 ) OR T1.Max_Gross_Weight = '1000' ORDER BY T1.Aircraft_ID DESC LIMIT 10",
                "template": "SELECT DISTINCT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "75a0e0701df33cc02a90db4085052cca4f406475",
                "query": "SELECT Name FROM pilot ORDER BY Age ASC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1cdadef55a25601edb1f0c969b54fd8c4c21ced8",
                "query": "SELECT T1.Aircraft, COUNT(DISTINCT T3.Round) AS count , MIN(T1.Max_Gross_Weight) FROM aircraft AS T1 JOIN match AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft JOIN airport_aircraft AS T3 ON T1.Aircraft_ID = T3.Aircraft_ID GROUP BY T1.Aircraft ORDER BY T1.Aircraft ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) AS count , MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e3464bf3b3abbd4862566a5be6f96217e0bd888f",
                "query": "SELECT T1.Aircraft, T2.Airport_Name FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Total_Passengers BETWEEN 1000 AND 2000 ORDER BY T3.Total_Passengers DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "81d3d0354bd2faa2a6412052c5b742af83145c9c",
                "query": "SELECT MAX(Total_Passengers), MIN(International_Passengers) FROM airport ORDER BY Total_Passengers DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9af44504cead654ed9071a25b9a31ca37c17b417",
                "query": "SELECT T1.Name, COUNT(T2.Aircraft_ID), SUM(T3.Total_Passengers) FROM pilot AS T1 JOIN match AS T2 ON T1.Pilot_Id = T2.Winning_Pilot JOIN airport_aircraft AS T3 ON T2.Winning_Aircraft = T3.Aircraft_ID WHERE T3.Total_Passengers < 100000 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "96d46048d8a50c32535f6b608f28868d1ba8d685",
                "query": "SELECT Name, COUNT(*) FROM pilot WHERE Name != 'John' GROUP BY Name ORDER BY Age DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT * FROM pilot AS pl WHERE pl.Age > 40",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "bdf39a6e8ed3c427b0babedb5c8c894917b9b08c",
                "query": "SELECT * FROM match WHERE Country = 'France' AND Winning_Pilot = 'John Smith' AND Round BETWEEN 1 AND 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "eed1f31ad65df57fc9d815c36b8d398a60f823e8",
                "query": "SELECT COUNT(DISTINCT T1.Aircraft_ID) FROM aircraft AS T1 WHERE T1.Max_Gross_Weight >= 1000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            }
        ],
        "warehouse_1": [
            {
                "hash": "296558e853df6a93e3ae62666b77d163c71b6ec9",
                "query": "SELECT Location FROM Warehouses WHERE Capacity <= 3000 ORDER BY Location ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f002f98005cd986cc74b7bd7551d003388df88eb",
                "query": "SELECT COUNT(DISTINCT T1.Code) , T2.Contents FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value > 1000 OR T1.Location = 'New York' OR T1.Code IN ( SELECT T2.Warehouse FROM Boxes AS T2 GROUP BY T2.Warehouse HAVING COUNT(T2.Code) > 10) ORDER BY T2.Value DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "014ce796cac127d61d885d54bdcffeffe4bd836d",
                "query": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse JOIN Boxes AS T3 ON T2.Code = T3.Code WHERE T2.Value > 100 OR T2.Contents = 'Toys' OR EXISTS (SELECT 1 FROM Warehouses AS T4 WHERE T4.Code = T3.Warehouse AND T4.Capacity BETWEEN 100 AND 500)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "1639732e2cfa95c58d38e8efca4db6ad8f06556d",
                "query": "SELECT T2.Contents FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value BETWEEN 100 AND 500 AND T1.Location = 'New York' AND EXISTS (SELECT * FROM Boxes AS T3 WHERE T3.Warehouse = T1.Code AND T3.Contents = 'Bikes') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "305cb4fecfa4cbe0462709e9a3e5c01041caa1ef",
                "query": "SELECT SUM(T1.Capacity) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value BETWEEN 200 AND 500 GROUP BY T1.Capacity",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "b03b8ecb0f1d32af07e22e32120140d53de0f80f",
                "query": "SELECT SUM(W.Capacity), B.Value FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "0ded12d83e7b58514eec8e906f37cf9c2bb1facf",
                "query": "SELECT COUNT(DISTINCT T1.Code), SUM(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Location = 'New York' OR T1.Capacity BETWEEN 1000 AND 2000 OR T1.Code IN (SELECT Warehouse FROM Boxes GROUP BY Warehouse HAVING COUNT(Code) > 10)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "2786a60c2c387eefc217fdf860db7a5bdbf3c321",
                "query": "SELECT T1.Location FROM Warehouses AS T1, Boxes AS T2 WHERE T1.Code = T2.Warehouse AND T2.Contents = 'Toys'",
                "template": "SELECT #COLUMN# FROM #TABLE#, #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1b64f0ab8338647deed53ba1083a25276e756365",
                "query": "SELECT W1.Location, B1.Contents, SUM(B1.Value) FROM Warehouses W1 JOIN Boxes B1 ON W1.Code = B1.Warehouse JOIN Boxes B2 ON B1.Warehouse = B2.Warehouse WHERE W1.Capacity >= 3000 GROUP BY W1.Location, B1.Contents",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#, #COLUMN#"
            },
            {
                "hash": "0b9c2549d9a978a6b001a12f0e4e1e78c52ac753",
                "query": "SELECT T1.Code, T1.Location, T2.Contents FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Capacity BETWEEN 100 AND 1000 GROUP BY T1.Code",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "084b854b46ae5ac8fa2c33d42712e8403adc2791",
                "query": "SELECT W1.Location FROM Warehouses AS W1 JOIN Boxes AS T2 ON W1.Code = T2.Warehouse WHERE W1.Capacity > 3000 AND T2.Value > 1000 AND EXISTS (SELECT 1 FROM Boxes AS T3 WHERE T3.Warehouse = W1.Code AND T3.Contents = 'Toys')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "71d1a3735c0adf48f84a46da269227dd367e2293",
                "query": "SELECT T1.Location, AVG(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value BETWEEN 100 AND 200 OR T1.Capacity > (SELECT AVG(Capacity) FROM Warehouses) GROUP BY T1.Location ORDER BY T1.Location ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3d35917a0dba4b7908cde9ba607030a01347b1bb",
                "query": "SELECT Location FROM Warehouses WHERE Capacity < 2000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "aaf4334e6163687b1bcbeec0cce585a997bdb4b2",
                "query": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Capacity = 3000 AND T1.Code IN (SELECT T2.Warehouse FROM Boxes AS T2 GROUP BY T2.Warehouse HAVING COUNT(DISTINCT T2.Contents) > 5) GROUP BY T1.Location HAVING MAX(T1.Capacity) = 3000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "39112c36ca0de07d5bd3982ca93126ac7a7e9502",
                "query": "SELECT T1.Location, T2.Contents FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value BETWEEN 100 AND 200 AND T1.Capacity > 1000 GROUP BY T1.Location ORDER BY T1.Location ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fb7403af738575e5fa842088276caeda4ce1e260",
                "query": "SELECT * FROM Warehouses WHERE Location = 'New York' AND Capacity > 1000 AND EXISTS (SELECT 1 FROM Boxes WHERE Warehouse = Warehouses.Code)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "6a44a0a977f4e95a91e399ac070073abc528545b",
                "query": "SELECT T2.Contents FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Capacity > 100 OR T2.Value BETWEEN 100 AND 200 OR T1.Code NOT IN (SELECT T2.Warehouse FROM Boxes AS T2 WHERE T2.Contents = 'Toys') ORDER BY T2.Contents ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "566cb6c9374953dbce9f08c7c83c5ebffe3be61f",
                "query": "SELECT Warehouse FROM Boxes WHERE Value > 100 AND Contents = 'Toys' AND Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Capacity < 1000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "b80dd9ead643775d01a01bf6ae311ef7a1ff8084",
                "query": "SELECT Code, Location FROM Warehouses WHERE Capacity < 2000 ORDER BY Code ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "070c8acbb95dca2890b3feb2cb129751a35a5bdf",
                "query": "SELECT AVG(Capacity) FROM Warehouses WHERE Capacity > 3000 AND Location = 'New York' AND Capacity BETWEEN 2000 AND 5000",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8e5f8510a4a6123baf6b37a09b4c52fbc14a1f2f",
                "query": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse JOIN Warehouses AS T3 ON T3.Code != T2.Warehouse WHERE T2.Value > 1 AND T1.Location != 'New York'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# != #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "71f8b1be9a425ca629c09212be4bc670288dca10",
                "query": "SELECT T1.Location, SUM(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Code < 100 GROUP BY T1.Location HAVING T1.Code NOT IN (SELECT T3.Code FROM Warehouses AS T3 JOIN Boxes AS T4 ON T3.Code = T4.Warehouse WHERE T3.Capacity > 1000) LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "91865de458147f554f1957e8674c59b7e84e60f4",
                "query": "SELECT SUM(T1.Capacity), SUM(T2.Value) FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value > 100 ORDER BY T2.Value DESC",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            }
        ],
        "music_2": [
            {
                "hash": "9c4f1b7845b2dc288d6bc8e00a4f15da41698125",
                "query": "SELECT Title, MAX(Year) FROM Albums WHERE Title > 'Title' GROUP BY Title ORDER BY Title DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a2871ef057fa44b7c0c5f20fee31c7fe2eef80c9",
                "query": "SELECT T1.Title FROM Songs AS T1 WHERE NOT EXISTS ( SELECT 1 FROM Albums AS T2 WHERE T1.SongId = T2.AId AND T2.Title = 'Album1' GROUP BY T2.Title HAVING MAX(T2.Year) = 2020 ) GROUP BY T1.Title HAVING MAX(T1.SongId) = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = '#VALUE#' GROUP BY T2.#COLUMN# HAVING MAX(T2.#COLUMN#) = #VALUE# ) GROUP BY T1.#COLUMN# HAVING MAX(T1.#COLUMN#) = #VALUE#"
            },
            {
                "hash": "4d3032fef9f40e2c91579b3ca3d78d6faf2d6af7",
                "query": "SELECT T1.Title, COUNT(T2.SongId) FROM Songs AS T1 JOIN Tracklists AS T2 ON T1.SongId = T2.SongId WHERE T2.Position < 10 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "01ea7f5e508cbd04cdb3e2ba6b6d4b701a01e314",
                "query": "SELECT Title, SUM(Year) FROM Albums WHERE Year BETWEEN 2000 AND 2010 GROUP BY Title HAVING SUM(Year) > 2005 ORDER BY Title DESC LIMIT 1",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "4cbfeed2d95c81064650027ca328550b244b978d",
                "query": "SELECT T1.Title FROM Songs AS T1 JOIN Tracklists AS T2 ON T1.SongId = T2.SongId JOIN Albums AS T3 ON T2.AlbumId = T3.AId JOIN Performance AS T4 ON T1.SongId = T4.SongId JOIN Band AS T5 ON T4.Bandmate = T5.Id WHERE T3.Year > 2000 GROUP BY T1.Title HAVING MAX(T5.Id) = 10 ORDER BY T1.Title DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "2dc554e87d77ac84f39d787d7b991baa7935fca2",
                "query": "SELECT COUNT(T1.Title), AVG(T2.Year) FROM Songs AS T1 JOIN Tracklists AS T3 ON T1.SongId = T3.SongId JOIN Albums AS T2 ON T3.AlbumId = T2.AId JOIN Band AS T4 ON T4.Id = T3.Position JOIN Performance AS T5 ON T5.SongId = T1.SongId WHERE T2.Label = 'BMG' AND T2.Year BETWEEN 1990 AND 1995 AND T4.Firstname = 'John'",
                "template": "SELECT COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "e37c0b78b14d0cfdc02857d6cf315cf4afefa07d",
                "query": "SELECT * FROM Songs WHERE SongId NOT IN (SELECT SongId FROM Vocals WHERE Type = 'lead') LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "10cdaf977c44ec7459284c859e0ccd8576f70b8c",
                "query": "SELECT AId FROM Albums WHERE Label IN (SELECT Label FROM Albums WHERE Type = 'LP') AND Year BETWEEN 2000 AND 2010 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d20028cfb5d8b5df4b837a570fec9a930ad35782",
                "query": "SELECT MAX(T1.Title) FROM Songs AS T1 ORDER BY T1.Title DESC LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "bcdbe2893a53cec967b3e41795193ef4a01f9188",
                "query": "SELECT T1.Title, MAX(T2.Year) FROM Songs AS T1 JOIN Albums AS T2 ON T1.SongId = T2.AId WHERE T2.Year BETWEEN 1990 AND 2000 OR T1.Title = 'song title' OR T2.Label = 'label' ORDER BY T2.Year DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "105c8cb3d9be69f0fa3981a1592deadbdf8261e5",
                "query": "SELECT COUNT(T1.SongId) FROM Tracklists AS T1 JOIN Albums AS T2 ON T1.AlbumId = T2.AId WHERE T2.Title = 'Album Title' ORDER BY T1.Position DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8130e1186ce0626eddb37cd32f501cb82858f4fb",
                "query": "SELECT COUNT(DISTINCT T5.Title), T1.Title FROM Songs AS T1 JOIN Tracklists AS T2 ON T1.SongId = T2.SongId JOIN Albums AS T3 ON T2.AlbumId = T3.AId JOIN Performance AS T4 ON T3.AId = T4.SongId JOIN Songs AS T5 ON T4.SongId = T5.SongId WHERE T3.Type = 'Compilation' OR T3.Label = 'Universal' OR T1.SongId IN (SELECT SongId FROM Instruments WHERE Instrument = 'Guitar') LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "4981ab5c1f8f55ed25aa89d8e02279d7113a4a78",
                "query": "SELECT MAX(T1.Title) FROM Songs AS T1 JOIN Vocals AS T2 ON T1.SongId = T2.SongId WHERE T2.Type != 'lead'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "65dae7d0ba896580b37d6fdc6a09d9cb243454bd",
                "query": "SELECT MIN(T1.Year) FROM Albums AS T1 WHERE T1.Year >= 2010 ORDER BY T1.Year ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ac61d74ccaaad22edd76f427b25e9a5b98a5b511",
                "query": "SELECT COUNT(SongId) FROM Songs WHERE Title = 'Song Title'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "be22f33340ddf9027fcdf8f0901afa24fbf08337",
                "query": "SELECT AVG(T1.Title), T2.Title FROM Songs AS T1 JOIN Tracklists AS T2 ON T1.SongId = T2.SongId JOIN Albums AS T3 ON T3.AId = T2.AlbumId WHERE T3.Year BETWEEN 2000 AND 2010 AND T3.Label = 'Sony' ORDER BY T1.Title DESC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "459c9af8d6b4768bda6d4ceb6525550207058abb",
                "query": "SELECT T1.Title FROM Songs AS T1 WHERE EXISTS ( SELECT T2.Title FROM Albums AS T2 WHERE T2.Title = T1.Title ) ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0c50fdcf104bdcf8666177678707e158602e43e8",
                "query": "SELECT DISTINCT T1.Title, COUNT(T1.Title) FROM ( SELECT T1.Title FROM Songs AS T1 UNION ALL SELECT T2.Title FROM Albums AS T2 ) AS T1 WHERE T1.Title BETWEEN 'A' AND 'E' OR T1.Title IN ( SELECT T3.Title FROM Albums AS T3 WHERE T3.Year > 2000 ) ORDER BY T1.Title DESC",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# UNION ALL SELECT #COLUMN# FROM #TABLE# ) AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "83b2d074f842ee06c118f80263ae33c08f9e0a47",
                "query": "SELECT SongId, Title FROM Songs WHERE SongId BETWEEN 1 AND 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e25f24ea3a9ff3b1a11490a6f8939d1269c7a64e",
                "query": "SELECT Title FROM Songs WHERE SongId BETWEEN 1 AND 10 AND SongId > 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "aa3d1ff544076288a0dae5f33db648bfbabb3e53",
                "query": "SELECT T1.Title FROM Songs AS T1 JOIN Vocals AS T2 ON T1.SongId = T2.SongId WHERE T2.Type = (SELECT Type FROM Vocals WHERE SongId = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "d1f65964c3919ab0037fb0b8a976cda5e28d7f22",
                "query": "SELECT COUNT(DISTINCT SongId) FROM Songs WHERE SongId >= 1 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d9e2adcdf0f7890a6123fc3993a4714190517925",
                "query": "SELECT Title, SongId FROM Songs ORDER BY SongId ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "00f9c8ac739884c11cc4e3fdda1aafe5121ce4e1",
                "query": "SELECT T1.Title FROM Songs AS T1 JOIN Vocals AS T2 ON T1.SongId = T2.SongId WHERE NOT EXISTS (SELECT 1 FROM Band AS T3 WHERE T3.Id = T2.Bandmate)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "09a4e9ee0ef6f1766bd183bbc1ad0b68e77dae5b",
                "query": "SELECT Title FROM Songs WHERE Title = 'Lose Yourself' OR Title = 'Hotel California' AND SongId > 100 ORDER BY Title DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dd5571b3acb0411bbe88ade178552fa0ff1992fa",
                "query": "SELECT T1.Title FROM Songs AS T1 JOIN Vocals AS T2 ON T1.SongId = T2.SongId WHERE T2.Type = 'Lead' AND T2.Bandmate = 1 AND T1.Title IN (SELECT Title FROM Songs WHERE SongId > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "0b8cb50bbb2dbd30b66ba429cefbca96a7d4c64b",
                "query": "SELECT COUNT(DISTINCT Title), MAX(Year) FROM Albums WHERE Type > 'Rock' ORDER BY Year ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "employee_hire_evaluation": [
            {
                "hash": "3c48334912813e601bc49ffaef3b410b59f4c1c0",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Employee_ID), COUNT(DISTINCT T3.Employee_ID) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN evaluation AS T3 ON T2.Employee_ID = T3.Employee_ID WHERE T3.Year_awarded = '2020' GROUP BY T1.Name HAVING MAX(T3.Bonus) > 10000 ORDER BY COUNT(DISTINCT T2.Employee_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "095bdffc1190a0e3b701e6d3787e15f613ede520",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Shop_ID) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Age BETWEEN 25 AND 35 OR EXISTS (SELECT 1 FROM evaluation AS T3 WHERE T3.Employee_ID = T1.Employee_ID AND T3.Bonus > 1000) GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "107bd9796a9d418aac7b8dff3dc351e28fa9161f",
                "query": "SELECT T1.Name, T3.Name, T2.Number_products FROM employee AS T1 INNER JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID INNER JOIN shop AS T3 ON T3.Shop_ID = T2.Shop_ID WHERE T2.Start_from >= '2000-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "4cc061b0519666cc259464c6edb286ceac04edc9",
                "query": "SELECT T1.Name, MAX(T2.Bonus) FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T1.Age < 30 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "b232cd567b05cc75364b72990dd11a55a766991f",
                "query": "SELECT Name FROM employee WHERE Age BETWEEN 20 AND 30 OR City IN (SELECT Location FROM shop WHERE District = 'North') OR Name = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "c5cce50f118d641f3976a4385d88588efba65456",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T2.Is_full_time = 'yes'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "882409431f2208121871a0fc3065f7d928195aa3",
                "query": "SELECT * FROM employee WHERE EXISTS (SELECT 1 FROM evaluation WHERE evaluation.Employee_ID = employee.Employee_ID AND evaluation.Bonus > (SELECT AVG(Bonus) FROM evaluation)) ORDER BY employee.Employee_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c5a82b82fdfebf9f71e129710940be360ae89340",
                "query": "SELECT Name FROM employee WHERE Employee_ID = (SELECT Employee_ID FROM evaluation WHERE Bonus > 5000) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "1cbb269628f176a677feed51e6f459165437aadf",
                "query": "SELECT Name FROM employee WHERE Age <= 30 ORDER BY Age DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8d36ba46fce7b4c0b043a30458dc1008d3fd4a4f",
                "query": "SELECT T1.Name, COUNT(T2.Employee_ID) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Start_from < '2020-01-01'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "818c0a1bc95e8fa7df3148a26f2ef3efe34327be",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Shop_ID) FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Shop_ID) > 1 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1dbb106e64972e9220e716ee498522f838cc8461",
                "query": "SELECT T2.Name, SUM(T1.Age) FROM employee AS T1 JOIN shop AS T2 ON T1.City = T2.Location GROUP BY T2.Name HAVING SUM(T1.Age) > 50 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "37c5d0bec425b5b669f1aa22e57553d5d647f5e3",
                "query": "SELECT T1.Employee_ID, T2.Shop_ID, T3.Start_from FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T1.Age = 25 AND T2.Is_full_time = 'Yes' ORDER BY T1.Employee_ID DESC LIMIT 100",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9481204902d3b1a406fd2209911903064be362d7",
                "query": "SELECT COUNT(DISTINCT T1.Employee_ID), SUM(T2.Bonus) FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID WHERE T2.Year_awarded = '2020' AND T1.Age BETWEEN 25 AND 35 AND T1.City = 'New York'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "8da85ce1a480fda81e2c2dd11005833b90ea3114",
                "query": "SELECT COUNT(T1.Employee_ID), SUM(T3.Number_products) FROM employee AS T1 INNER JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID INNER JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T1.Age BETWEEN 20 AND 30",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e8c2d390a6d161be39b724b51c42f748641e618c",
                "query": "SELECT T1.Name, T2.Number_products FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T1.Age >= 30 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "42ab3534b00e57f474e6dcdc7d781dd1be880648",
                "query": "SELECT COUNT(T1.Age) FROM employee AS T1 WHERE T1.City != 'New York'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "c2d58c6aa4c31a35a92f51368e16b3609218771b",
                "query": "SELECT Employee_ID, SUM(Bonus) FROM evaluation GROUP BY Employee_ID HAVING SUM(Bonus) > 10000 OR Employee_ID BETWEEN 1 AND 10 OR Employee_ID = 5 ORDER BY Employee_ID ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "86f514368eaa7a19701952e20da0a2b0d849a2ac",
                "query": "SELECT T1.Name, T2.Number_products FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN shop AS T3 ON T2.Shop_ID = T3.Shop_ID WHERE T2.Number_products <= 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2f2549f2f6fa7320f217b8fdef366e8786ca002f",
                "query": "SELECT Name FROM employee WHERE Age != 25 ORDER BY Age ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1bf3cd7fe27084c38eb578a565ade6fb2768fc56",
                "query": "SELECT T1.Name, T1.Age FROM Employee AS T1 WHERE T1.Age BETWEEN 20 AND 30 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d476fba77091036974477f46a46b926f0d68b6b8",
                "query": "SELECT Name FROM employee WHERE Age <= 25",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4956ebb6b89320c30a6ef517e3afdad0f998e382",
                "query": "SELECT T1.Name, SUM(T2.Number_products) FROM employee AS T1 JOIN hiring AS T3 ON T1.Employee_ID = T3.Employee_ID JOIN shop AS T2 ON T3.Shop_ID = T2.Shop_ID WHERE T1.Age < 30 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "cre_Doc_and_collections": [
            {
                "hash": "07a9956e7246c663d3cf49cb811f5011e1065a10",
                "query": "SELECT Document_Subset_Name AS Document_Name, Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_ID < 50 ORDER BY Document_Subset_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "efbfa3f6752033dbc8d520826cc53103f79e9b5d",
                "query": "SELECT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T1.Document_Subset_ID IN (SELECT T3.Document_Subset_ID FROM Document_Subsets AS T3)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "86e4650f0ca68cca2cbf133776e7b9ddb38d4031",
                "query": "SELECT T1.Document_Subset_Name, T1.Document_Subset_Details FROM Document_Subsets AS T1 WHERE T1.Document_Subset_ID < 100 ORDER BY T1.Document_Subset_Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "04d8720b0c1b92dfa7dc2c92157313e2bf3dd188",
                "query": "SELECT T1.Document_Subset_Name FROM Document_Subsets AS T1 WHERE T1.Document_Subset_ID BETWEEN 100 AND 200 AND T1.Document_Subset_Name IN (SELECT T2.Document_Subset_Name FROM Document_Subsets AS T2 WHERE T2.Document_Subset_Name = 'Subset_Name') ORDER BY T1.Document_Subset_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "00e7d2bbac12a18b90c92ff2c6e2432afa916c2c",
                "query": "SELECT Document_Subset_ID, Document_Subset_Name, Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name != 'test' AND Document_Subset_Name != 'dev' AND Document_Subset_Name != 'prod'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' AND #COLUMN# != '#VALUE#' AND #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "7110bc4d2780b1e477db6f98178237528c199d97",
                "query": "SELECT T1.Document_Subset_Name, COUNT(T2.Document_Object_ID) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T1.Document_Subset_ID > 10 GROUP BY T1.Document_Subset_Name ORDER BY COUNT(T2.Document_Object_ID) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "b5c8445ef4d49cbf25fe0a6be3172f79e4596e13",
                "query": "SELECT COUNT(T1.Document_Subset_ID), T2.Document_Subset_Name FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T2.Document_Subset_Name <= 'abc'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9f7bfaff6eecef321628056f903b168164615527",
                "query": "SELECT T.Document_Subset_Name, AVG(T.Document_Subset_ID), COUNT(DISTINCT T.Document_Subset_Details), COUNT(DISTINCT T.Document_Subset_Name) FROM Document_Subsets AS T GROUP BY T.Document_Subset_Name HAVING AVG(T.Document_Subset_ID) > 0 ORDER BY T.Document_Subset_Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "ac5bb57c06c1fe746c4e47293c8ba3ea7a53cf7e",
                "query": "SELECT COUNT(DISTINCT Document_Subset_Name) FROM Document_Subsets WHERE Document_Subset_ID BETWEEN 10 AND 50 AND Document_Subset_ID > 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "dd4d3161ea6afaf845db22bb3ecf6546da876e92",
                "query": "SELECT COUNT(T1.Document_Subset_ID), COUNT(T2.Document_Subset_ID), COUNT(T3.Document_Subset_ID) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T3.Document_Object_ID = T2.Document_Object_ID WHERE T1.Document_Subset_ID = 10",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "54651e9864525bf026f1ab138c31c452c5007f3a",
                "query": "SELECT T1.Document_Subset_Name, T2.Document_Object_ID, T3.Collection_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID JOIN Collection_Subsets AS T3 ON T2.Document_Subset_ID = T3.Collection_Subset_ID WHERE T1.Document_Subset_ID > 10 AND T2.Document_Object_ID BETWEEN 20 AND 30 AND T3.Collection_Subset_Name = 'subset_name'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "efe578c1b125ab067a2aaaa89394be33efccfe60",
                "query": "SELECT Document_Subset_Name FROM Document_Subsets WHERE Document_Subset_ID NOT IN (SELECT Document_Subset_ID FROM Document_Subset_Members)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "28a589c3db62482d9928eb44ee729bfcbb10ad38",
                "query": "SELECT Document_Subset_Name, Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_ID > 1 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bc4f73e53f5a68f2cf3bf09da7822fc61e906ac5",
                "query": "SELECT T1.Document_Subset_Name, MAX(T2.Description) FROM Document_Subsets AS T1 JOIN Document_Objects AS T2 ON T1.Document_Subset_ID = T2.Document_Object_ID WHERE T2.Parent_Document_Object_ID <= 100 GROUP BY T1.Document_Subset_Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "2e3329b199962b78ad83cd98ef16dc27552bf20c",
                "query": "SELECT SUM(T1.Document_Subset_ID), COUNT(T2.Collection_Subset_ID) FROM Document_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Collection_Subset_ID JOIN Collection_Subsets AS T3 ON T2.Collection_Subset_ID = T3.Collection_Subset_ID WHERE T1.Document_Subset_Name != T3.Collection_Subset_Name",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "1dbb827996c915c782bdf57e79e01991bcc174fd",
                "query": "SELECT AVG(D.Parent_Document_Object_ID), D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections C ON D.Document_Object_ID = C.Document_Object_ID WHERE (D.Parent_Document_Object_ID = 100 OR D.Parent_Document_Object_ID BETWEEN 1 AND 100) AND NOT EXISTS (SELECT 1 FROM Collection_Subsets WHERE Collection_Subset_ID = C.Collection_ID) ORDER BY D.Parent_Document_Object_ID DESC",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bb563800af9573d89392bc0ebba833f90b972385",
                "query": "SELECT COUNT(DISTINCT T2.Document_Subset_Name) , SUM(T1.Document_Subset_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T1.Document_Object_ID > 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8800b13c5f10b82aca34867cbfc915fecef71f56",
                "query": "SELECT T1.Document_Subset_Name FROM Document_Subsets AS T1 INNER JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T1.Document_Subset_ID != 1 ORDER BY T1.Document_Subset_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b0aa58438b9a78cf799b4647a110ae9cbdbb35ec",
                "query": "SELECT * FROM Document_Subsets WHERE EXISTS (SELECT 1 FROM Document_Subset_Members WHERE Document_Subset_ID = Document_Subsets.Document_Subset_ID AND COUNT(DISTINCT Document_Object_ID) > 1 AND COUNT(DISTINCT Related_Document_Object_ID) > 1 LIMIT 10)",
                "template": "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.Document_Subset_ID AND COUNT(DISTINCT #COLUMN#) > #VALUE# AND COUNT(DISTINCT #COLUMN#) > #VALUE# LIMIT #VALUE#)"
            },
            {
                "hash": "8103166e05e021dac1d91b3aa0a1eaf7d2c142b1",
                "query": "SELECT COUNT(DISTINCT Document_Subset_ID) , COUNT(DISTINCT Document_Subset_Name) FROM Document_Subsets HAVING COUNT(DISTINCT Document_Subset_ID) > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) FROM #TABLE# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#"
            },
            {
                "hash": "9e18df430c4068624977299dd49f7872d002cf3f",
                "query": "SELECT AVG(Document_Subset_ID) FROM Document_Subset_Members AS T1 JOIN Documents_in_Collections AS T2 ON T1.Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Collection_ID",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "5735837f2d3f1997750059d7cd965f68c526d051",
                "query": "SELECT T1.Document_Subset_Name FROM Document_Subsets AS T1 WHERE T1.Document_Subset_ID = 100 AND EXISTS ( SELECT 1 FROM Document_Subset_Members AS T2 WHERE T2.Document_Subset_ID = T1.Document_Subset_ID ) ORDER BY T1.Document_Subset_Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# AND EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# ) ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "509749e61ef8cd7bb7aec8d1f78b031fa35c3f56",
                "query": "SELECT T1.Document_Subset_Name, SUM(T2.Document_Object_ID) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T3.Document_Object_ID = T2.Document_Object_ID WHERE T3.Document_Object_ID BETWEEN 100 AND 200",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "cc2186c32423150a9ac9a5e77f5390238340a9f4",
                "query": "SELECT COUNT(DISTINCT T2.Document_Object_ID) FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID = T2.Document_Subset_ID WHERE T2.Document_Object_ID <= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "79b53f1a34f29fe0fe17aad3b0021392abfd75b1",
                "query": "SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_ID > 10 ORDER BY Document_Subset_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "match_season": [
            {
                "hash": "645c52ead5d435e8e6dad981c0327ca13947894c",
                "query": "SELECT COUNT(DISTINCT Player) FROM match_season WHERE Season <= 2010 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "828c8caeef37b7eb221f295fb8de3ed53a33073c",
                "query": "SELECT Player, COUNT(Team) FROM match_season WHERE Country = 1 OR Player = 'John' OR Draft_Pick_Number NOT IN (SELECT Draft_Pick_Number FROM match_season WHERE Season = 2020) GROUP BY Player HAVING COUNT(Team) > 5 ORDER BY Player DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "81735e7ff92a052a3672dd612e7371dd28f7193d",
                "query": "SELECT T1.Country_name, COUNT(T1.Official_native_language) FROM country AS T1 WHERE T1.Capital = 'Madrid' GROUP BY T1.Country_name ORDER BY COUNT(T1.Official_native_language) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "ae14924dc64ee5fc9052c1553617d5f96aa1c027",
                "query": "SELECT SUM(Total_WL) FROM player WHERE Years_Played > 10 LIMIT 5",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a96d0462f4523ffb789536fc5a55ca241c83daf2",
                "query": "SELECT COUNT(Country_id) FROM country WHERE Country_name > 'USA'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "d6d34269bfacaee2318f0fd625368487e5cbf7c5",
                "query": "SELECT Country_name, Official_native_language FROM country WHERE Capital = 'Madrid'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "152877c6484ae47dd6207d1ca3f1ba50db453354",
                "query": "SELECT MAX(Capital) FROM country GROUP BY Country_name ORDER BY Capital ASC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c26c07aa11f111735cb8d59a4ed38cd049e1abcc",
                "query": "SELECT T3.Name, T1.Season FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id JOIN player AS T3 ON T2.Team_id = T3.Team WHERE T1.Country != T2.Team_id LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "274d704065c984421e8c1c1ab68be3f6835a0d64",
                "query": "SELECT T1.Country_name FROM country AS T1 WHERE NOT EXISTS (SELECT T2.Country FROM match_season AS T2 WHERE T1.Country_id = T2.Country AND T2.Season = 2020)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "69bb1bda6e78ff00a21839f628fabe16deecf975",
                "query": "SELECT T1.Name, COUNT(T2.Season) FROM team AS T1 JOIN match_season AS T2 ON T1.Team_id = T2.Team WHERE T2.Position != 'Point guard' ORDER BY COUNT(T2.Season) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "5362979cfb3504bb2f42cb80726a83cc8ba808a9",
                "query": "SELECT Country_name FROM country AS T1 WHERE Country_id < 10 ORDER BY Country_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4c422b5aaaa8cf57d9ea2d63e0452721e7804fdc",
                "query": "SELECT T1.Country_name, COUNT(DISTINCT T2.Player) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country JOIN team AS T3 ON T2.Team = T3.Team_id JOIN player AS T4 ON T3.Team_id = T4.Team WHERE T2.Season >= 2000 GROUP BY T1.Country_name HAVING AVG(T2.Draft_Pick_Number) > 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "1cbf1a7e29da87f1bde6b9ec977ee653205a670c",
                "query": "SELECT T1.Country_name, T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Season BETWEEN 2010 AND 2020 ORDER BY T2.Season DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1e9b1d9607da0d176acde70be71aac533df239b2",
                "query": "SELECT COUNT(DISTINCT Country_name) FROM country WHERE Country_name != 'USA' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "db1b6c635cd33ea4a2703988d1915db807ae4628",
                "query": "SELECT COUNT(DISTINCT T1.Player_ID), T2.Official_native_language FROM player AS T1 JOIN match_season AS T2 ON T1.Player_ID = T2.Player JOIN country AS T3 ON T2.Country = T3.Country_id JOIN team AS T4 ON T3.Country_id = T4.Team_id WHERE T2.Team = 20 AND T3.Country_id BETWEEN 1 AND 10 AND EXISTS (SELECT 1 FROM match_season AS T5 WHERE T5.Player = T2.Player)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "3d3ee1e0cccab8eec1590cb35e5d7f7e996a884e",
                "query": "SELECT T1.Player, SUM(T2.Season) FROM match_season AS T1 JOIN match_season AS T2 ON T1.Player = T2.Player WHERE T1.Season < T2.Season",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN#"
            },
            {
                "hash": "47d9908c6fce173207e7423d4b38bcaf7ce58301",
                "query": "SELECT COUNT(DISTINCT T1.Player) FROM match_season AS T1 JOIN match_season AS T2 ON T1.Player = T2.Player WHERE T2.Draft_Pick_Number > 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE#"
            },
            {
                "hash": "81a31853280ab1633a769c0079def7245a2681c2",
                "query": "SELECT * FROM country WHERE Country_id BETWEEN 10 AND 50 LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "39e642df0a24fbdbaeef0b66f51b1234f5dd2b6d",
                "query": "SELECT T1.Country_name, COUNT(DISTINCT T4.Player) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country JOIN team AS T3 ON T2.Team = T3.Team_id JOIN player AS T4 ON T3.Team_id = T4.Team WHERE T1.Official_native_language != 'English' GROUP BY T1.Country_name HAVING MAX(T2.Season) = 2022 LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "78b21c407afeece17d0ffa436549670ddf287f26",
                "query": "SELECT T1.Name, T2.Country_name FROM team AS T1 JOIN match_season AS T2 ON T1.Team_id = T2.Team LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "80aa04c6bba06a0aeff97264ef559efbabdcd0cd",
                "query": "SELECT Country_name FROM country WHERE Country_id = 10 AND Capital = 'London' AND Country_name NOT IN (SELECT Country_name FROM country WHERE Country_id < 5) ORDER BY Country_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b02bdce2e30e3804c473714de52970623cbd740c",
                "query": "SELECT T1.Player, T3.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id JOIN player AS T3 ON T2.Team_id = T3.Team ORDER BY T1.Season DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b440b87b4ba5b3729514a6f6c0cac0daaba0364b",
                "query": "SELECT T1.Country_name, T2.Name, COUNT(T3.Player) FROM country AS T1 JOIN match_season AS T3 ON T1.Country_id = T3.Country JOIN team AS T2 ON T2.Team_id = T3.Team WHERE T3.Season > 2010 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f713d53f6ec312d84b161fa542cb4646f7d9d857",
                "query": "SELECT MAX(T1.Country_id) FROM country AS T1 WHERE T1.Country_id BETWEEN 10 AND 20 AND EXISTS (SELECT T2.Team FROM team AS T2 WHERE T2.Team_id = T1.Country_id)",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN#)"
            },
            {
                "hash": "55d35bd18960a528c07e067d52920e4c869fa12e",
                "query": "SELECT MAX(T1.Draft_Pick_Number) FROM match_season AS T1 WHERE T1.Season >= 2010 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT 1"
            }
        ],
        "real_estate_rentals": [
            {
                "hash": "7ddee8f0c1928db043644d57112256433eff34f8",
                "query": "SELECT T1.property_type_description, MIN(T3.room_size) FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code = T2.property_type_code JOIN Rooms AS T3 ON T2.property_id = T3.property_id WHERE T1.property_type_code = 'residential' GROUP BY T1.property_type_description",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "9fe01a433f8849910ff1952a14c95b5ae66df66a",
                "query": "SELECT T1.property_name FROM Properties AS T1, Properties AS T2 WHERE T1.property_id = T2.property_id AND T2.price_min IN (SELECT price_min FROM Properties WHERE vendor_requested_price > 100000)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "194a5f118e0ebdd23fcf5319f08be4074275e213",
                "query": "SELECT COUNT(DISTINCT T1.property_type_code), COUNT(DISTINCT T1.property_type_code), COUNT(DISTINCT T1.property_type_code) FROM Properties AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "5b052f7af1f08c7b778497250e6928e67d8d4925",
                "query": "SELECT T1.property_name, T2.feature_name FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T1.price_min = 100 AND T2.feature_value BETWEEN 10 AND 20 OR T1.vendor_requested_price > 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "ec1f4d1e5a4fc630da9a559d2196de39a9c72720",
                "query": "SELECT COUNT(T1.feature_id), COUNT(T2.property_address_id), COUNT(T3.property_type_code) FROM Features AS T1 JOIN Properties AS T2 ON T1.feature_id = T2.property_id JOIN Ref_Property_Types AS T3 ON T2.property_type_code = T3.property_type_code WHERE T1.feature_name = 'pool' AND T2.property_name BETWEEN 'A' AND 'Z' AND T3.property_type_description = ( SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = 'residential' )",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "d70e3d2c7fbad5b6e5e62248329a92a439114de1",
                "query": "SELECT COUNT(DISTINCT T1.property_id) FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code = 'residential' AND T2.feature_value BETWEEN 100 AND 200 AND T1.vendor_requested_price > 500000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6a69a2d0e8a6a2f35ab76ddc00023eeeb06fb299",
                "query": "SELECT MAX(T1.vendor_requested_price) FROM Properties AS T1 WHERE T1.property_type_code = 'residential'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "7e85eb0ab8779649bee16213521c0e1b41fa66f2",
                "query": "SELECT T1.property_name FROM Properties AS T1 JOIN User_Property_History AS T2 ON T1.property_id = T2.property_id WHERE T2.datestamp <= '2022-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8f7daf2b42fdfb26f1300a69f20a9137c5d674ee",
                "query": "SELECT T1.property_name FROM Properties AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T1.vendor_requested_price > 100000 ORDER BY T1.property_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b1e65b6a0db8bd89e71bcbe328973f7a43a002d2",
                "query": "SELECT T1.property_name, T2.feature_name, T3.room_type_description FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Rooms AS T3 ON T1.property_id = T3.property_id",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "99d45d68429578336f7f4745423a8962c85c9c4b",
                "query": "SELECT T1.user_id, T2.property_id FROM Users AS T1 JOIN Properties AS T2 ON T1.user_id = T2.owner_user_id LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "4eb8c7182fa9a66d50438a9c42b5bf6926304c02",
                "query": "SELECT COUNT(DISTINCT T1.property_id), COUNT(T1.property_id) FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code != 'RES'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d1ef82fe37ef9a6d956e53ca65d31d102f178c96",
                "query": "SELECT COUNT(DISTINCT T3.feature_id), T1.property_name FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Features AS T3 ON T2.feature_id = T3.feature_id WHERE T3.feature_name = 'Garden' AND T2.feature_value = 'Yes' AND T1.property_type_code NOT IN (SELECT T4.property_type_code FROM Properties AS T4 WHERE T4.vendor_requested_price > 100000) ORDER BY T1.property_name DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0ecaa637243b1b4feaab4a3738e2e3a2f8912bbf",
                "query": "SELECT T1.property_name FROM Properties AS T1 WHERE T1.vendor_requested_price <= 1000 ORDER BY T1.vendor_requested_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# <= #VALUE# ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "90da292d3fe4750aff0b73a907b046bab20c2333",
                "query": "SELECT COUNT(DISTINCT T1.property_id), COUNT(T1.property_id) FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T2.feature_value > 'average'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "df0105ec064863c40de9726e3f0209d1c81f4db8",
                "query": "SELECT COUNT(room_number) FROM Rooms WHERE room_size BETWEEN 10 AND 20",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "1127a5bc04bdc0f4475916d76d1a6306324956ef",
                "query": "SELECT T2.property_name FROM Properties AS T1 JOIN Properties AS T2 ON T1.owner_user_id = T2.owner_user_id WHERE EXISTS (SELECT T3.user_id FROM Users AS T3 WHERE T3.user_id = T1.owner_user_id AND T3.is_buyer = 'Y')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE T3.#COLUMN# = T1.#COLUMN# AND T3.#COLUMN# = #VALUE#)"
            },
            {
                "hash": "d6122d752ac7c685c0833055c8c12d369ac321c5",
                "query": "SELECT * FROM Users WHERE user_id >= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "291b56598a635a62c218c51c75f3560b3cd71138",
                "query": "SELECT T1.room_size FROM Rooms AS T1 WHERE T1.room_type_code = 'Bedroom' AND T1.property_id = (SELECT T2.property_id FROM Properties AS T2 WHERE T2.property_type_code = 'Flat')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "1395cca0383ce08c70439005cbd62b7a3b902957",
                "query": "SELECT T1.property_name, COUNT(T2.property_id) FROM Properties AS T1 JOIN User_Property_History AS T2 ON T1.property_id = T2.property_id WHERE T1.price_min > 100000 OR T1.price_max BETWEEN 500000 AND 1000000 OR T1.vendor_requested_price < 2000000 ORDER BY T1.property_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d6d34269bfacaee2318f0fd625368487e5cbf7c5",
                "query": "SELECT * FROM Users WHERE user_id = 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a58f93d301d8f3de677bf9118fbd76ef7ac63b8f",
                "query": "SELECT COUNT(property_id) FROM Properties WHERE vendor_requested_price > 100000 AND price_min > 50000 AND price_max > 75000 AND property_id NOT IN (SELECT property_id FROM Property_Features)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "3be99b857f2b07505cf4d7686ac6db708cb68af7",
                "query": "SELECT T1.property_name FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Property_Photos AS T3 ON T1.property_id = T3.property_id WHERE T2.feature_value IN (SELECT feature_value FROM Property_Features WHERE feature_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "planet_1": [
            {
                "hash": "a1cb58e309fca45fe519c3b8cd42250563ad1454",
                "query": "SELECT COUNT(T1.EmployeeID), SUM(T2.Weight) FROM Employee AS T1 JOIN Package AS T2 ON T1.EmployeeID = T2.Sender LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "07682b9427059acf0333495d69466c464a073022",
                "query": "SELECT T1.Name, COUNT(T2.Level) FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Level > 1 AND T2.Planet IN (SELECT PlanetID FROM Planet WHERE Coordinates > 0.5) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "333146664cd3bee1a4c7e21a262aa44434f8bc23",
                "query": "SELECT Name FROM Employee AS MyTable WHERE Position = 'Manager' OR Salary BETWEEN 50000 AND 100000 OR NOT EXISTS (SELECT 1 FROM Package WHERE Sender = EmployeeID) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "4fc5f19f26c609b95362b18581d365553c2cec0b",
                "query": "SELECT T1.Name, SUM(T2.Weight) FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Recipient WHERE T1.AccountNumber = 100 AND T2.Weight BETWEEN 10 AND 20 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4cbad99c54a13c94f1dc2c924d0d781253537a64",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM Employee AS T1 WHERE T1.Position = 'Manager' AND T1.EmployeeID IN (SELECT Manager FROM Shipment WHERE Date = '2020-01-01')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "6a9f6b3b318565472fc35cb8e6db23e59a9d9a3e",
                "query": "SELECT COUNT(T1.PackageNumber), SUM(T1.Weight) FROM Package AS T1 WHERE T1.Sender = 123 OR T1.Recipient = 456 OR NOT EXISTS ( SELECT 1 FROM Client AS T2 WHERE T2.AccountNumber = T1.Sender ) GROUP BY T1.Sender HAVING SUM(T1.Weight) > 10000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fed1a83aa7470ea0b8738b1816fa2a84077a91cf",
                "query": "SELECT T1.Name FROM Employee AS T1 JOIN Employee AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Salary > 10000 OR T1.Salary BETWEEN 5000 AND 10000 OR T1.Salary > (SELECT AVG(Salary) FROM Employee) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "73941619ab513fb33433a4976fce0ae3f66ddf43",
                "query": "SELECT T1.Name, T2.Manager FROM Employee AS T1 JOIN Shipment AS T2 ON T1.EmployeeID = T2.Manager WHERE T1.Salary BETWEEN 50000 AND 100000 OR T1.Position = 'Manager' OR NOT EXISTS (SELECT 1 FROM Has_Clearance AS T3 WHERE T3.Employee = T1.EmployeeID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "00e65a78aff9b37a24273fb54a591a736123b9e4",
                "query": "SELECT T1.Name, T2.Salary FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Level <= 2",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "ed60cd6df6b722211b401b31fad8a043041d6dc7",
                "query": "SELECT COUNT(DISTINCT Name) FROM Employee WHERE EmployeeID = 1 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3205bc6cbbff90d098bdc0e6b945ed79ee62f08e",
                "query": "SELECT COUNT(DISTINCT T3.Name) FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Coordinates = 100 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f80b23f6c636ba1faedf4ecc47a38fd4db5a8c38",
                "query": "SELECT AVG(Salary) AS average_salary, SUM(Salary) AS total_salary FROM Employee AS New_Employee WHERE EmployeeID BETWEEN 1 AND 10 AND Salary > 1000 GROUP BY Name ORDER BY average_salary DESC",
                "template": "SELECT AVG(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "97cc4596fa582f2cc664f905680cdc870931e6b4",
                "query": "SELECT AVG(Salary) FROM Employee WHERE Salary > 50000",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "5b28ea3303a95dacb2aabe31b22284dcf45719ad",
                "query": "SELECT T1.Name, MAX(T1.Salary) FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Level >= 3 GROUP BY T1.Name HAVING MAX(T1.Salary) > 20000",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "80882d5f1b91cbfc8deb5a1c93b065d2aa0f04c3",
                "query": "SELECT Salary, EmployeeID FROM Employee",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "f0dac452c0ccfcc2744d748d5c2a6565b5d1aa62",
                "query": "SELECT Weight FROM Package GROUP BY Weight HAVING MAX(Weight) = ( SELECT MAX(Weight) FROM Package ) ORDER BY Weight ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b02c2183e47601ff1d76e1a70dfee0d2f7e47d87",
                "query": "SELECT EmployeeID, Salary FROM Employee WHERE Salary >= 50000 ORDER BY Salary ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "884af3e2df1e7f08b895e0536b972c6db184c306",
                "query": "SELECT MAX(Salary) FROM Employee WHERE EmployeeID < 100",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d9b04659e3f1b6d2179f35d39d30d5d697d647ea",
                "query": "SELECT T1.Name, T3.PlanetID FROM Employee AS T1 JOIN Shipment AS T2 ON T1.EmployeeID = T2.Manager JOIN Planet AS T3 ON T3.PlanetID = T2.Planet WHERE T2.Date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.Coordinates > 100 OR T1.Salary < 50000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "592ab9d96ab9c45aea2384fe75de39cec27434d7",
                "query": "SELECT COUNT(DISTINCT T2.Employee) FROM Planet AS T1 JOIN Has_Clearance AS T2 ON T1.PlanetID = T2.Planet WHERE T2.Level BETWEEN 1 AND 5 OR T2.Level > 10 OR NOT EXISTS (SELECT * FROM Shipment AS T3 WHERE T3.Planet = T1.PlanetID) LIMIT 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "d92911cdfaa97358dbcbf5a8f103166d7bf8f52b",
                "query": "SELECT Name FROM Employee WHERE Salary BETWEEN 50000 AND 100000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "2b03b29f6c8bbc27fb11c7951089f28298b5dcff",
                "query": "SELECT T1.Name FROM Employee AS T1 WHERE T1.Position = 'Manager' OR T1.Salary > 50000 OR T1.EmployeeID NOT IN (SELECT T2.Manager FROM Shipment AS T2)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#)"
            },
            {
                "hash": "977b01b278741165e1b7558c2b7014f00d5608c5",
                "query": "SELECT Name FROM Employee WHERE EmployeeID > (SELECT Employee FROM Has_Clearance WHERE Level = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e1f38561083350189bba6720f6ce003bf790cb2a",
                "query": "SELECT T1.Name, T3.Name FROM Employee AS T1 JOIN Shipment AS T2 ON T1.EmployeeID = T2.Manager JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T2.Date < '2020-01-01' ORDER BY T3.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8b4d2e5e215bd75f6c068ec267ce840a52f5ab83",
                "query": "SELECT Name FROM Employee WHERE EXISTS (SELECT 1 FROM Has_Clearance WHERE Level = 3 AND Has_Clearance.Employee = Employee.EmployeeID) ORDER BY EmployeeID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #TABLE#.Employee = #TABLE#.EmployeeID) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "620a0a5a592317d9258b92e80b5b9b8b22a41037",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM Employee AS T1 WHERE T1.Position = 'Manager' OR EXISTS (SELECT 1 FROM Package AS T2 WHERE T2.Sender = T1.EmployeeID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            }
        ],
        "bbc_channels": [
            {
                "hash": "9e2c2660c7178da45eb520dd4d8fe5daa516c654",
                "query": "SELECT T1.Title, AVG(T2.Start_Year) FROM program AS T1 JOIN channel AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T1.Title IN (SELECT Title FROM program WHERE Start_Year > 2000) AND T2.Name NOT IN (SELECT Name FROM channel WHERE Channel_ID < 100) GROUP BY T1.Title HAVING AVG(T2.Start_Year) > 2000 ORDER BY AVG(T2.Start_Year) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "2d3991a63b3f45bfe389c87597ae1f557b3cfa59",
                "query": "SELECT T1.Name, MAX(T3.Start_Year) FROM channel AS T1 JOIN director_admin AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T3.Director_ID = T2.Director_ID GROUP BY T1.Name HAVING COUNT(DISTINCT T3.Title) <= 5 LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "37d27f5909b9d8333da76e1b16a8956e9a90a8f8",
                "query": "SELECT T1.Name FROM director AS T1 WHERE NOT EXISTS (SELECT 1 FROM program AS T2 WHERE T1.Director_ID = T2.Director_ID GROUP BY T2.Channel_ID HAVING SUM(T2.Start_Year) > 2000) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "03bcb616a06ae2cd4dcb4079ba955380f009fea1",
                "query": "SELECT T1.Title FROM program AS T1 JOIN director_admin AS T2 ON T1.Director_ID = T2.Director_ID JOIN channel AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE EXISTS (SELECT 1 FROM director AS T4 WHERE T1.Director_ID = T4.Director_ID LIMIT 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT 1)"
            },
            {
                "hash": "9b5ed4e2cb7faeb2f93b791b99cb73281d8adb84",
                "query": "SELECT COUNT(Channel_ID), Channel_ID FROM channel WHERE Name != 'Channel 1'",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "f1fb5b08cf17bd493bcd5f08fb3eabe221093f55",
                "query": "SELECT T2.Name, AVG(T1.Start_Year) FROM program AS T1 JOIN director AS T2 ON T1.Director_ID = T2.Director_ID WHERE T2.Age >= 50 GROUP BY T2.Name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "dc5e3c9bca49c352e051776b3892b24642aaedf6",
                "query": "SELECT T1.Title FROM program AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID WHERE T1.Start_Year BETWEEN 2000 AND 2010 OR T2.Start_Year > 2010 OR EXISTS (SELECT 1 FROM program AS T3 WHERE T3.Director_ID = T1.Director_ID AND T3.Start_Year = 2005)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "a8c41c95a0a1e531d81803a1d930269194e7e45e",
                "query": "SELECT Title FROM program AS T1 WHERE T1.Start_Year > 2000 OR EXISTS (SELECT 1 FROM director_admin AS T2 WHERE T2.Director_ID = T1.Director_ID AND T2.Is_first_director = 'Yes') OR T1.Program_ID = 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "9aad4cf76989618867512c8e3bcb22d979360f2b",
                "query": "SELECT Start_Year FROM program WHERE Channel_ID = 1 GROUP BY Start_Year HAVING MAX(Program_ID) = 10 ORDER BY Start_Year ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3e2b545142fe729978d0bd0bfffd56b96b8a02fb",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Title), COUNT(DISTINCT T3.Title) FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T2.Director_ID = T3.Director_ID WHERE T2.Start_Year BETWEEN 2000 AND 2010 GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Title) = COUNT(DISTINCT T3.Title) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = COUNT(DISTINCT #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "693ac42577ad7b8a1952eeb087624e6a461ee310",
                "query": "SELECT T1.Name, T1.Title FROM program AS T1 WHERE T1.Channel_ID = 1 AND EXISTS ( SELECT * FROM director_admin AS T2 WHERE T2.Director_ID = T1.Director_ID )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "c7cecf40285666c1c70299e4d688202350fb55b4",
                "query": "SELECT Name, Analogue_terrestrial_channel FROM channel WHERE Internet = 'yes' AND Digital_terrestrial_channel = 'no' ORDER BY Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "000519d7e97223e1cc86df12b6319314bdff7095",
                "query": "SELECT COUNT(DISTINCT Name), Name, Name FROM channel WHERE Name > 'ABC' ORDER BY Name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9bb42673d90da775c83010463fb9c79d986a267b",
                "query": "SELECT Title FROM program WHERE Director_ID > 10 OR Channel_ID = 5 ORDER BY Title ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "5544588a95f0ff6dec492cc29d2e14c270a8769a",
                "query": "SELECT T1.Program_ID, T2.Program_ID FROM program AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID ORDER BY T1.Program_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fc32caabf583ee4f659d80b3795b142d78a2c4f5",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Title) FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T1.Channel_ID > 10 GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Title) ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC"
            },
            {
                "hash": "5220a9a7da2031cb05c3f23791cbf0ae611a33d7",
                "query": "SELECT T1.Name, COUNT(T2.Program_ID) FROM director AS T1 JOIN program AS T2 ON T1.Director_ID = T2.Director_ID WHERE T2.Start_Year BETWEEN 2000 AND 2010 AND T1.Age > 20 GROUP BY T1.Name HAVING COUNT(T2.Program_ID) > 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "019e5f7684366976e48dcaa7037523f93ce63fa3",
                "query": "SELECT SUM(Start_Year) FROM program WHERE Program_ID < 200",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "c112295c810d18682f713500e6b5dce0b86f51fe",
                "query": "SELECT Name FROM channel WHERE Channel_ID BETWEEN 1 AND 50 ORDER BY Channel_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3ef7b2321a839798659114d096762b9504071f23",
                "query": "SELECT T1.Title, T2.Age FROM program AS T1 JOIN director AS T2 ON T1.Director_ID = T2.Director_ID JOIN channel AS T3 ON T1.Channel_ID = T3.Channel_ID WHERE T1.Start_Year < 2000 AND T2.Age < 50 ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0031242dc02c09eb9a314debe536de9b21c5db82",
                "query": "SELECT COUNT(Program_ID), Title FROM program WHERE Channel_ID >= 10 GROUP BY Title ORDER BY COUNT(Program_ID) DESC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "b6a3fe06f4b514059f3d7ef1a3356a8d9ee61c7b",
                "query": "SELECT COUNT(T1.Program_ID), MAX(T1.Start_Year), MIN(T3.Age) FROM program AS T1 JOIN director_admin AS T2 ON T1.Director_ID = T2.Director_ID JOIN director AS T3 ON T2.Director_ID = T3.Director_ID WHERE T1.Start_Year <= 2000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bc72f56d4e687ba612f4c6930936614fa2ea5ba2",
                "query": "SELECT T2.Title, T2.Start_Year FROM program AS T1 JOIN channel AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T2.Analogue_terrestrial_channel > '5' ORDER BY T2.Analogue_terrestrial_channel DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7fea259e5eef63aeaaa7d5ad0a96059cd5ccd163",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Analogue_terrestrial_channel), Internet FROM channel WHERE Channel_ID <= 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8ed283fddd9364eb24ca673d47f730c1c2cdadbe",
                "query": "SELECT T1.Director_ID FROM director AS T1 JOIN director AS T2 ON T1.Director_ID = T2.Director_ID WHERE T1.Name = 'Director1' AND T2.Name = 'Director2' AND T1.Age BETWEEN 30 AND 50 AND T1.Director_ID NOT IN (SELECT Director_ID FROM program WHERE Channel_ID = 1) GROUP BY T1.Director_ID HAVING COUNT(T1.Director_ID) > 2",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            }
        ],
        "school_player": [
            {
                "hash": "e07063d001b4768e1c2a1a9bef05834d13228da5",
                "query": "SELECT T1.School_ID FROM school AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment BETWEEN 500 AND 1000 AND T1.Founded > 1950 AND NOT EXISTS (SELECT * FROM school_performance AS T3 WHERE T3.School_Id = T1.School_ID AND T3.Class_AA = 'A')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c36a25b47a6ee29753bc8fce9975cd94aae8ebf1",
                "query": "SELECT T1.Location, T2.League FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "67134ae503a085948345b34de5d5910e250abbc7",
                "query": "SELECT T1.School, SUM(T2.Enrollment) FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID WHERE T2.Enrollment > 1000 ORDER BY SUM(T2.Enrollment) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "1fd0381c994f3cb4723a9a6a3d479ac5515fe855",
                "query": "SELECT Enrollment, School FROM school WHERE Enrollment <= 1000 ORDER BY Enrollment ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "298eaef022845013922732537337afb621ac39ea",
                "query": "SELECT T1.School, MAX(T3.Enrollment) FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID JOIN school AS T3 ON T2.School_ID = T3.School_ID WHERE T3.Founded >= 1850 GROUP BY T1.School HAVING MAX(T3.Enrollment) > 2000",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "9ae3ccf351c89fedf4bd218149dc32c7bc820706",
                "query": "SELECT School, Location FROM school WHERE School_ID IN (SELECT School_ID FROM school_details WHERE Nickname = 'Team A' AND Class = 'AAA') ORDER BY School ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#') ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4f16da4723b949b1a558a6f96066c0b072751225",
                "query": "SELECT Enrollment FROM school WHERE Founded != 2000 ORDER BY Enrollment DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "868d02717620aeda3f2363422fcf5a1b2de05a3d",
                "query": "SELECT School_ID, School, SUM(Enrollment) AS sum_enrollment FROM school WHERE Founded BETWEEN 1950 AND 1960 GROUP BY School_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "31d78f0e40ba3e740027961ee38cd5d9b450d915",
                "query": "SELECT School FROM school WHERE School != 'School1' ORDER BY School ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2613e955cbb72d0353398ae1b44cdc62498f2cd3",
                "query": "SELECT School, Founded FROM school",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "7a9c4956af10c21b232673f17ac64c7b1d33dd4d",
                "query": "SELECT Enrollment FROM school WHERE Enrollment BETWEEN 400 AND 800 OR Enrollment > 1200 OR NOT EXISTS (SELECT School_ID FROM school_details WHERE school.School_ID = school_details.School_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#)"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT School) FROM school WHERE Enrollment >= 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ede3b558b96bf4b4d0ffd660b80ee475168e022b",
                "query": "SELECT School FROM school WHERE Enrollment <= 5000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cc9b6040668a31fcf6d98867cbe2461615412376",
                "query": "SELECT T1.School_ID, T2.School_ID FROM school AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment > 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "7d4a50d522e90b6d768d7b075b14c913bd67e056",
                "query": "SELECT School_ID, COUNT(DISTINCT Enrollment) FROM school WHERE Founded = 1850 GROUP BY School_ID HAVING COUNT(DISTINCT Enrollment) = 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE#"
            },
            {
                "hash": "aed25656413a0184c65a27fc814b99c7e232f3f9",
                "query": "SELECT COUNT(DISTINCT School_ID), Enrollment FROM school WHERE Denomination != 'Public'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "eda51e85c6c5b938f8932ff6c2a7b63c3ded6b09",
                "query": "SELECT T1.School, T2.School FROM school AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Enrollment BETWEEN 500 AND 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "670180118448ada519544bfc7afd742661c0ace5",
                "query": "SELECT MAX(Enrollment), MIN(Enrollment), COUNT(School_ID) FROM school WHERE Enrollment <= 1000",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "3b6ebb281a1eb976b9ad2c9a258ec90408e799a7",
                "query": "SELECT s.School, COUNT(p.Player_ID) FROM school s JOIN player p ON s.School_ID = p.School_ID WHERE s.Enrollment > 1000 AND s.Location = 'NYC' AND EXISTS (SELECT 1 FROM school_performance sp WHERE sp.School_Id = s.School_ID AND sp.Class_A = 'A') ORDER BY s.School ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6e5cda40981333f580fb9439c9ccdc2b3ae373e9",
                "query": "SELECT T1.School_ID FROM school AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID WHERE EXISTS (SELECT 1 FROM school_performance WHERE School_Id = T1.School_ID) GROUP BY T1.School_ID HAVING MIN(T1.Enrollment) = 500",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "db406b081cb52d73cf1aebc7baea177ad49d50e9",
                "query": "SELECT School_ID, MAX(Enrollment) FROM school WHERE Enrollment > 1000 GROUP BY School_ID ORDER BY School_ID ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "63fc3232853010560cf39e6e8313ac8e9eaf464f",
                "query": "SELECT School_ID, School FROM school AS T1 WHERE Enrollment > 1000 AND EXISTS (SELECT 1 FROM school_details AS T2 WHERE T1.School_ID = T2.School_ID AND T2.League = 'League1') AND Location = 'Location1'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "8ba62b6052e5ca9636fbd7206410afb05e4cb367",
                "query": "SELECT COUNT(DISTINCT School_Colors), School FROM school AS S WHERE Location = 'USA' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "7a6afba8a00733cf68724c91477db90d78ca50db",
                "query": "SELECT Enrollment, SUM(Enrollment) FROM school GROUP BY Enrollment HAVING SUM(Enrollment) > 500",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "0f6689228d1b4ee0194f29ba3025db83c283773b",
                "query": "SELECT T1.School, T2.Nickname, T3.School_Year FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID = T2.School_ID JOIN school_performance AS T3 ON T1.School_ID = T3.School_Id WHERE T1.Enrollment BETWEEN 100 AND 500 ORDER BY T1.Enrollment DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "pilot_record": [
            {
                "hash": "37c5d0bec425b5b669f1aa22e57553d5d647f5e3",
                "query": "SELECT T1.Aircraft_ID, T2.Pilot_ID, T3.Record_ID FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T1.Order_Year = 2010 AND T3.Age = 30 ORDER BY T1.Aircraft_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "859bd133a7c8ff2a3e12b57109a0e2476e99be0a",
                "query": "SELECT T1.Manufacturer, SUM(T1.Order_Year) AS Order_Year, SUM(T2.Age) AS Age FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID GROUP BY T1.Manufacturer ORDER BY T1.Manufacturer ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) AS #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8b4d2e5e215bd75f6c068ec267ce840a52f5ab83",
                "query": "SELECT Model, Manufacturer FROM aircraft AS T1 WHERE EXISTS (SELECT T2.Aircraft_ID FROM pilot_record AS T2 WHERE T2.Aircraft_ID = T1.Aircraft_ID AND T2.Aircraft_ID > 100 AND T2.Aircraft_ID < 500) ORDER BY T1.Model ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# > #VALUE# AND T2.#COLUMN# < #VALUE#) ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "b1b964e035c7a14d40756337f8f3676172bcf17c",
                "query": "SELECT COUNT(T1.Aircraft_ID) FROM aircraft AS T1 WHERE T1.Manufacturer = 'Boeing' AND T1.Order_Year BETWEEN 2010 AND 2020 AND T1.Model NOT IN (SELECT Model FROM aircraft AS T2)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2)"
            },
            {
                "hash": "2280eb484b6e7d24a6a3e43e695afb04ba1f2a56",
                "query": "SELECT T1.Aircraft_ID, T2.Pilot_name FROM aircraft AS T1 JOIN pilot AS T2 ON T1.Aircraft_ID = T2.Pilot_ID WHERE T1.Manufacturer = 'Boeing'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "523a1bdeb8e26f94066bfe5847521e2975cd3ef5",
                "query": "SELECT Pilot_name FROM pilot WHERE Rank = 1 LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2c9fac99c72a8ae35af7997c87760e6b55e09215",
                "query": "SELECT T2.Pilot_name, MIN(T1.Order_Year) FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T3.Age <= 40 GROUP BY T2.Pilot_name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "97909d82aadc7ab1701f12bea880a9144c9b2604",
                "query": "SELECT T1.Model, COUNT(DISTINCT T2.Pilot_ID), COUNT(DISTINCT T1.Fuel_Propulsion), MIN(T3.Date) FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE (T1.Manufacturer = 'Boeing' OR T3.Rank > 5 OR NOT EXISTS (SELECT T4.Record_ID FROM pilot_record AS T4 WHERE T4.Aircraft_ID = T1.Aircraft_ID AND T4.Pilot_ID = T2.Pilot_ID AND T4.Date < '2020-01-01')) GROUP BY T1.Model ORDER BY T1.Model ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "da866b139e7e4a426e34218581371a4230d01227",
                "query": "SELECT T1.Pilot_name, T2.Model FROM pilot AS T1 JOIN pilot_record AS T2 ON T1.Pilot_ID = T2.Pilot_ID JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID WHERE T1.Age BETWEEN 25 AND 35 OR T3.Manufacturer = 'Boeing' ORDER BY T1.Join_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "24f506ffb9eafa2749a85a16b372dad7e6abc80b",
                "query": "SELECT COUNT(DISTINCT Pilot_ID) FROM pilot_record AS T1 WHERE T1.Pilot_ID NOT IN ( SELECT T2.Pilot_ID FROM pilot AS T2 WHERE T2.Rank = 1 ) AND T1.Aircraft_ID = 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "81f31938d9ac061a717a1eeb5a5cd8aff7db3a46",
                "query": "SELECT Manufacturer FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Aircraft_ID FROM pilot_record WHERE Pilot_ID IN (SELECT Pilot_ID FROM pilot WHERE Rank = 1 AND Age = (SELECT MIN(Age) FROM pilot WHERE Rank = 1) AND Nationality = (SELECT Nationality FROM pilot WHERE Rank = 1 LIMIT 1)))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = 1 AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = 1) AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = 1 LIMIT 1)))"
            },
            {
                "hash": "f2bfc6b7bead14088d6eb61a2fcc8dcfe8d99beb",
                "query": "SELECT COUNT(DISTINCT T1.Aircraft_ID), COUNT(DISTINCT T2.Pilot_ID), COUNT(DISTINCT T1.Aircraft_ID) FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T3.Age = (SELECT MAX(Age) FROM pilot)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "2e2856755c188e93f2ae5b67758a332239cbed92",
                "query": "SELECT COUNT(DISTINCT T3.Manufacturer), T1.Pilot_name FROM pilot AS T1 JOIN pilot_record AS T2 ON T1.Pilot_ID = T2.Pilot_ID JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID WHERE T1.Age BETWEEN 20 AND 40 AND T1.Nationality NOT IN (SELECT T1.Nationality FROM pilot AS T1 WHERE T1.Team = 'Team A') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "3a9c5932f30ded2f8aaa255d9fe1efc179d94ab4",
                "query": "SELECT T1.Manufacturer, T2.Pilot_name FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T3.Pilot_ID = T2.Pilot_ID WHERE T3.Age BETWEEN 20 AND 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "de6be19e20bec3aef43bbac3e4cd757df78a4180",
                "query": "SELECT T1.Aircraft_ID, T2.Record_ID FROM aircraft AS T1 JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T2.Pilot_ID = T3.Pilot_ID WHERE T3.Rank != 1 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d169396a86437ead8791e691a1a9d77e5b75b622",
                "query": "SELECT Pilot_name FROM pilot WHERE Rank = 1 ORDER BY Pilot_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "deb47edca56d3803beee2cb608bf3dfe9c393c5c",
                "query": "SELECT COUNT(DISTINCT T3.Aircraft_ID), T1.Pilot_name FROM pilot AS T1 JOIN pilot_record AS T2 ON T1.Pilot_ID = T2.Pilot_ID JOIN aircraft AS T3 ON T2.Aircraft_ID = T3.Aircraft_ID WHERE T3.Order_Year >= 2010",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "d5f460e3d2a75e505f24c937f21e7c92259acae4",
                "query": "SELECT DISTINCT T1.Aircraft_ID, COUNT(T2.Pilot_ID) FROM aircraft AS T1 LEFT JOIN pilot_record AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID WHERE NOT EXISTS (SELECT 1 FROM pilot_record AS T3 WHERE T3.Aircraft_ID = T1.Aircraft_ID AND T3.Date > '2010') AND T2.Pilot_ID IS NULL",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# IS NULL"
            },
            {
                "hash": "5bf2bdbb0999ee4abb03e10a594fe12b83b3edc5",
                "query": "SELECT T1.Manufacturer FROM aircraft AS T1 WHERE T1.Order_Year BETWEEN (SELECT MIN(Order_Year) FROM aircraft) AND (SELECT MAX(Order_Year) FROM aircraft) AND T1.Order_Year = (SELECT MIN(Order_Year) FROM aircraft)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) AND #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "8e26a23040e069714bad0450b7d3f4b39cdd4cc2",
                "query": "SELECT T1.Aircraft_ID, T2.Aircraft_ID FROM aircraft AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID != T2.Aircraft_ID ORDER BY T1.Aircraft_ID DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "99699cdb159544d85c40243da5a875807e002a03",
                "query": "SELECT Manufacturer, COUNT(Aircraft_ID) FROM aircraft WHERE Order_Year > (SELECT MIN(Order_Year) FROM aircraft) OR Manufacturer = 'Boeing'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "b2e43d74d037d6d4038fedc1f090ec75a500d0ba",
                "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record WHERE Aircraft_ID = (SELECT Aircraft_ID FROM aircraft ORDER BY Order_Year DESC LIMIT 1)) ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT 1)) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "38eaa4b32d314d9504f1e7f69734a27b2dcd4721",
                "query": "SELECT COUNT(DISTINCT T1.Manufacturer) AS Manufacturer FROM aircraft AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "0e1dffb49ea2c851e9011508aa6ac36bb6ac4d28",
                "query": "SELECT COUNT(DISTINCT T1.Aircraft_ID) FROM aircraft AS T1 WHERE T1.Order_Year BETWEEN 2010 AND 2020 OR T1.Manufacturer = 'Boeing'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "e5c782105ccdab248ef6522dd7e8fa86a868cb75",
                "query": "SELECT T1.Aircraft_ID, T2.Aircraft_ID FROM aircraft AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID WHERE T1.Order_Year BETWEEN 2000 AND 2010 OR T2.Manufacturer = 'Boeing' OR T1.Model = 'A320-200'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            }
        ],
        "news_report": [
            {
                "hash": "a449453b3f738ef5fb557a4e42771045112f484c",
                "query": "SELECT COUNT(Event_ID) , COUNT(Date), COUNT(Venue) FROM event WHERE Event_Attendance <= 10000",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "d111c105d0174c401d53bdff18ba9ae114b42a4e",
                "query": "SELECT T1.Name AS News, T1.Event_Attendance AS Attendance FROM event AS T1 ORDER BY T1.Event_Attendance DESC",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a091345ad43f2d3f30715fcbffb7061f86c00199",
                "query": "SELECT T1.Name, SUM(T1.Event_Attendance), COUNT(T2.journalist_ID) FROM event AS T1 JOIN news_report AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Event_Attendance < 10000 ORDER BY SUM(T1.Event_Attendance) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "2e047236efa00c8fd09aa9f8702c03288ac88ae0",
                "query": "SELECT T1.Event_ID, T1.Name FROM event AS T1 WHERE T1.Event_Attendance > (SELECT AVG(Event_Attendance) FROM event)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "64fd8b737f05e22d025c731a22bd4eedc0e7836c",
                "query": "SELECT COUNT(DISTINCT Venue) FROM event WHERE Date != '2020-01-01' ORDER BY Event_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "84413cc8d034cab1ec60020ff93f1bd166f5130a",
                "query": "SELECT T1.Name, T2.Name, T3.Venue FROM journalist AS T1 JOIN news_report AS T2 ON T1.journalist_ID = T2.journalist_ID JOIN event AS T3 ON T2.Event_ID = T3.Event_ID WHERE T1.Age BETWEEN 25 AND 50 AND T3.Date = '2020-01-01' AND T2.Work_Type IN (SELECT Work_Type FROM news_report WHERE journalist_ID = 1) ORDER BY T3.Event_Attendance DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b58634f33c67a3474eb0bed5db9c64ebb5c63853",
                "query": "SELECT T1.Venue, MIN(T1.Event_Attendance) FROM event AS T1 JOIN news_report AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T2.journalist_ID = T3.journalist_ID WHERE T3.Age <= 30 GROUP BY T1.Venue ORDER BY T1.Venue ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "053e814ad71f955ecfb35772ea69340b38204ccc",
                "query": "SELECT COUNT(DISTINCT T1.journalist_ID), COUNT(T1.Event_ID) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Work_Type != 'Photographer' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bc077a7581b5354aa4ac435b891cfc278b980e31",
                "query": "SELECT COUNT(T1.Date), T1.Name FROM event AS T1 WHERE T1.Venue = 'London' OR T1.Event_Attendance > 5000 OR EXISTS (SELECT * FROM news_report WHERE T1.Event_ID = news_report.Event_ID)",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #TABLE#.Event_ID)"
            },
            {
                "hash": "a29d13332a85bd5c3d5215d610c774446afef299",
                "query": "SELECT T1.Name, T1.Venue FROM event AS T1 WHERE T1.Event_Attendance != 10000 ORDER BY T1.Date ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS  WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "395a1153072de6a38992025c7d813cf516f2531b",
                "query": "SELECT T3.Name, COUNT(DISTINCT T1.journalist_ID) FROM news_report AS T1 JOIN journalist AS T2 ON T1.journalist_ID = T2.journalist_ID JOIN event AS T3 ON T1.Event_ID = T3.Event_ID WHERE EXISTS (SELECT 1 FROM news_report AS T4 WHERE T4.Event_ID = T1.Event_ID AND T4.Work_Type = 'TV') GROUP BY T3.Name HAVING AVG(T3.Event_Attendance) > 10000",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "c62c091fb0f8a91ee936a0fef0475271dd759281",
                "query": "SELECT T1.Name FROM event AS T1 GROUP BY T1.Name HAVING MAX(T1.Event_Attendance) ORDER BY T1.Event_Attendance DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "27189384558b31b9391fdf99154d38d3bee1c057",
                "query": "SELECT T1.Name, COUNT(T2.Event_ID) FROM journalist AS T1 JOIN news_report AS T2 ON T1.journalist_ID = T2.journalist_ID WHERE T1.Nationality != 'American' LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "47d6414f596e1ecec39f6633c5b04801d7bd60a7",
                "query": "SELECT T1.Name, T2.Name FROM event AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Event_Attendance = 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "aa0247d37562fbefb2353744ae27b9d8bdd2f3db",
                "query": "SELECT Name, Event_Attendance FROM event WHERE Event_Attendance >= 5000 ORDER BY Event_Attendance DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5b8fef18bd8792f325c22aa8be5c0a8d01b4f0a7",
                "query": "SELECT T1.Name, MAX(T1.Event_Attendance) FROM event AS T1 WHERE T1.Date BETWEEN '2000-01-01' AND '2020-12-31' OR T1.Venue = 'New York' OR T1.Event_Attendance > 1000 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "7acbc53551429ae0ec4fa00fda2e2d9d71ca8a8e",
                "query": "SELECT SUM(T3.Event_Attendance) , COUNT(T1.journalist_ID) , COUNT(T3.Event_ID) FROM news_report AS T1 JOIN journalist AS T2 ON T1.journalist_ID = T2.journalist_ID JOIN event AS T3 ON T1.Event_ID = T3.Event_ID WHERE T2.Age >='40'",
                "template": "SELECT SUM(#COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "bf0ae4f167e94f7a3c2e44c159dde6d25fda8198",
                "query": "SELECT COUNT(DISTINCT T1.Event_ID), COUNT(T1.Event_Attendance), T1.Event_Attendance FROM event AS T1 WHERE T1.Event_Attendance > 500 AND T1.Event_Attendance BETWEEN 100 AND 500 OR T1.Event_Attendance < 500",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "37f20c80a574b0e646c04589b6fb8b9667383db3",
                "query": "SELECT Name, MAX(Event_Attendance) FROM event WHERE Date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1d16e3b14094ae712fbb0fd347c8014f5c6953a6",
                "query": "SELECT COUNT(T1.Event_ID), COUNT(T2.journalist_ID), AVG(T1.Event_Attendance) FROM event AS T1 JOIN news_report AS T2 ON T1.Event_ID = T2.Event_ID",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "d3b950e1a5b9ab66aecdc55b19a914abae4ef39d",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.journalist_ID), COUNT(DISTINCT T3.journalist_ID) FROM event AS T1 JOIN news_report AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T2.journalist_ID = T3.journalist_ID WHERE T3.Age NOT IN (SELECT Age FROM journalist WHERE Years_working < 5) AND T2.Work_Type = 'Reporter' GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.journalist_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "64b9174c2834121f72ebd7cc08216416954fc00f",
                "query": "SELECT COUNT(Name) FROM event AS event_name WHERE Event_Attendance >= 50000 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9bbc977d3a78a280087bfa727ae5e9ba8a4bf3b3",
                "query": "SELECT T1.Name, MIN(T2.Event_Attendance) FROM journalist AS T1 JOIN news_report AS T3 ON T1.journalist_ID = T3.journalist_ID JOIN event AS T2 ON T3.Event_ID = T2.Event_ID GROUP BY T1.Name HAVING T2.Event_Attendance > 10000",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE#"
            },
            {
                "hash": "de75bc528cd14dbed423daa54fac63981939ae95",
                "query": "SELECT Name FROM event WHERE Date BETWEEN '2020-01-01' AND '2020-12-31' OR Venue = 'New York' OR Name = 'Sports'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "4f0e18ccfdfb1603a9bdb709feba9560f792efd1",
                "query": "SELECT T1.Venue, SUM(T3.Event_Attendance) FROM journalist AS T1 INNER JOIN news_report AS T2 ON T1.journalist_ID = T2.journalist_ID INNER JOIN event AS T3 ON T3.Event_ID = T2.Event_ID WHERE T2.Work_Type = 'Reporter' AND T3.Date > '2020-01-01' AND EXISTS (SELECT 1 FROM journalist WHERE journalist_ID = T1.journalist_ID AND Years_working > 5) GROUP BY T1.Venue ORDER BY T1.Venue ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0075fb9354f0e44ae2985d25cb20dd5e280f40fa",
                "query": "SELECT T1.Name AS EventName, T2.Name AS JournalistName FROM event AS T1 JOIN news_report AS T3 ON T1.Event_ID = T3.Event_ID JOIN journalist AS T2 ON T3.journalist_ID = T2.journalist_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "department_management": [
            {
                "hash": "740c6adfa248d67404a1c9d47c6e3307c213a0d9",
                "query": "SELECT T1.Name, COUNT(T2.head_ID) FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID WHERE T1.Budget_in_Billions < 5 ORDER BY COUNT(T2.head_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "a34a573be4c4471fa3cf55ce00f9e6eda05af2e9",
                "query": "SELECT COUNT(DISTINCT T1.Name), T3.name FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T2.head_ID = T3.head_ID WHERE T1.Ranking != 0",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "abca62daf0b29405ebedd2cefc52862445a8e7a5",
                "query": "SELECT * FROM department WHERE Department_ID IN (SELECT department_ID FROM management WHERE head_ID IN (SELECT head_ID FROM head WHERE age > 40))",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#))"
            },
            {
                "hash": "e1969444a16e84b17f6e78276244692d594c368d",
                "query": "SELECT MIN(Creation), COUNT(DISTINCT Name) FROM department WHERE Department_ID NOT IN (SELECT department_ID FROM management WHERE temporary_acting = 'no') OR Budget_in_Billions > 10 OR Ranking < 5 GROUP BY Creation HAVING MIN(Creation) < '2020-01-01'",
                "template": "SELECT MIN(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < '#VALUE#'"
            },
            {
                "hash": "a4e7e2ea9c89ebd7af5f4f176d11874c8f7dd9c7",
                "query": "SELECT T1.Departmnet_ID, COUNT(DISTINCT T2.head_ID) FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID WHERE EXISTS (SELECT 1 FROM head AS T3 WHERE T3.head_ID = T2.head_ID AND T3.age > 50) AND T1.Budget_in_Billions > 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "cc6f4376c21bf37d9527947e39efb9f5416569ea",
                "query": "SELECT COUNT(DISTINCT T1.Department_ID), T2.age FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T3.head_ID = T2.head_ID WHERE T1.Budget_in_Billions > 10 OR T2.age < (SELECT AVG(age) FROM head) OR T2.age < 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "12fbe05ba573fcc2644484be70b6e641f0473b82",
                "query": "SELECT COUNT(Department_ID), Name FROM department WHERE EXISTS (SELECT 1 FROM management AS T1 WHERE T1.department_ID = department.Department_ID AND T1.head_ID = ( SELECT head_ID FROM head WHERE age > 50 ) ) AND Ranking > 5 ORDER BY COUNT(Department_ID) DESC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ) AND #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "8971f7e7e4d0da39acda4e022d6d76418d30afa8",
                "query": "SELECT T1.Name, T2.Department_ID FROM department AS T1 JOIN (SELECT department_ID, COUNT(head_ID) FROM management GROUP BY department_ID) AS T2 ON T1.Department_ID = T2.department_ID WHERE T2.Department_ID IN (SELECT department_ID FROM management WHERE head_ID = 1) ORDER BY T1.Department_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN (SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#) AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0a1ee8dcd6e4301e70ce5d92a047e6c6922a1c59",
                "query": "SELECT T1.Name, T2.name, T3.temporary_acting FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T2.head_ID = T3.head_ID WHERE T1.Ranking > 5 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5c8b328a3c9dab419db4aaf98a6c773f87d8e8b5",
                "query": "SELECT DISTINCT head_ID FROM management WHERE department_ID = 1 AND temporary_acting = 'Yes' LIMIT 5",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c45dae775a52d6dd932f02fb7f0923dba6898166",
                "query": "SELECT T1.Name, T2.name FROM department AS T1 JOIN head AS T2 ON T1.Department_ID = T2.head_ID WHERE T1.Ranking <= 5 AND T2.age < 60 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fee2665253965018375a5cf26a5c4ef0aec046e2",
                "query": "SELECT COUNT(DISTINCT T1.head_ID), SUM(T2.Budget_in_Billions) FROM head AS T1 JOIN management AS T2 ON T1.head_ID = T2.head_ID JOIN department AS T3 ON T2.department_ID = T3.Department_ID WHERE T1.age = 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT * FROM department WHERE Budget_in_Billions >= 10",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "544bc62f748beed506ae407fd3dccbe831fa77db",
                "query": "SELECT T3.name, SUM(T1.Budget_in_Billions), AVG(T1.Num_Employees) FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T2.head_ID = T3.head_ID WHERE T1.Ranking > 10 OR T2.temporary_acting BETWEEN '2010-01-01' AND '2020-01-01' OR T3.age = 50",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "c3e3a365e219227a5b0c79bfbda1496fc5c6f849",
                "query": "SELECT COUNT(DISTINCT Name), MAX(Budget_in_Billions), COUNT(Name) FROM department AS d",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "4480083afeef72a85f419a28c239d0d205639f88",
                "query": "SELECT T1.Name FROM department AS T1 WHERE T1.Department_ID > 10 AND T1.Num_Employees BETWEEN 100 AND 500 AND T1.Ranking < 5 GROUP BY T1.Name HAVING MAX(T1.Budget_in_Billions) ORDER BY T1.Budget_in_Billions ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "d22ba590f9616d25306c41d5e28d51d2c2a280f2",
                "query": "SELECT COUNT(*) FROM department WHERE (Budget_in_Billions BETWEEN 1 AND 2 OR Ranking > 3) OR Budget_in_Billions > (SELECT AVG(Budget_in_Billions) FROM department) LIMIT 5",
                "template": "SELECT COUNT(*) FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#) OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "dcc6e125301c5b7fa954d27f029db34ea109f956",
                "query": "SELECT COUNT(DISTINCT T1.Department_ID), COUNT(DISTINCT T2.head_ID) FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T2.head_ID = T3.head_ID WHERE T1.Department_ID NOT IN (SELECT T4.Department_ID FROM department AS T4 JOIN management AS T5 ON T4.Department_ID = T5.department_ID WHERE T4.Ranking = 1) ORDER BY T2.head_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bd117528d57856e56d15c1d58926798908d8d787",
                "query": "SELECT * FROM department WHERE Creation BETWEEN '1960-01-01' AND '1980-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "a5d22f04def8ab21bb87971eca925b3b5d5cd912",
                "query": "SELECT COUNT(DISTINCT T1.head_ID) FROM management AS T1 JOIN management AS T2 ON T1.head_ID = T2.head_ID WHERE T1.department_ID = T2.department_ID ORDER BY COUNT(DISTINCT T1.head_ID) DESC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "146c027b1366d4e6e8cc4a822ee0a3f95028c92e",
                "query": "SELECT Name FROM department WHERE Budget_in_Billions != 5 ORDER BY Budget_in_Billions DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7e9f95717033f06151d1efdb77fb300472103b5a",
                "query": "SELECT COUNT(T3.head_ID), T1.Name, T3.head_ID FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID JOIN head AS T3 ON T3.head_ID = T2.head_ID WHERE T3.age > 30 AND T1.Name = 'Sales' AND T3.head_ID IN (SELECT head_ID FROM head WHERE born_state = 'California') LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "7bbd14fc8b6a52e368a947eff89c3890cf401428",
                "query": "SELECT T3.name, COUNT(DISTINCT T2.Department_ID), T1.Name FROM head AS T1 JOIN management AS T2 ON T1.head_ID = T2.head_ID JOIN department AS T3 ON T2.department_ID = T3.Department_ID WHERE T3.Department_ID NOT IN (SELECT T2.department_ID FROM head AS T1 JOIN management AS T2 ON T1.head_ID = T2.head_ID WHERE T2.temporary_acting = 'Y') GROUP BY T3.name ORDER BY COUNT(DISTINCT T2.Department_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "86f9f97b73a5179be17d77aee72e933bc725b2af",
                "query": "SELECT name FROM department WHERE Creation BETWEEN '2010' AND '2015' OR Ranking NOT IN (SELECT Ranking FROM department WHERE Budget_in_Billions > 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "c810b74e60873344c7a92f23d97abd94b20cfc9f",
                "query": "SELECT Name, Creation, Ranking FROM department WHERE Budget_in_Billions > 1",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "5ff13de207b02c79ffc32a2222d6d890bd01f6ac",
                "query": "SELECT T1.Name, T2.name FROM department AS T1 JOIN department AS T2 ON T1.Department_ID = T2.Department_ID WHERE T1.Name BETWEEN 'A' AND 'Z' AND T1.Department_ID NOT IN (SELECT department_ID FROM management) LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            }
        ],
        "gymnast": [
            {
                "hash": "a32f39b5bd32a9d39111a321499e60440fa8ed94",
                "query": "SELECT COUNT(DISTINCT T1.Name), T3.Floor_Exercise_Points FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID JOIN gymnast AS T3 ON T2.Floor_Exercise_Points = T3.Floor_Exercise_Points WHERE T1.Age BETWEEN 18 AND 25 OR T1.Height > 170 OR T2.Total_Points > 80 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5f718b423e89cfad76becb87d5a50488347d59e1",
                "query": "SELECT COUNT(DISTINCT Gymnast_ID) FROM gymnast WHERE Floor_Exercise_Points > 10 OR Rings_Points BETWEEN 5 AND 10 OR Pommel_Horse_Points < 8 ORDER BY Floor_Exercise_Points ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "cfb472e1e782777ff940c4eec6c3e34d6c3bb0fc",
                "query": "SELECT MIN(T1.Floor_Exercise_Points), T2.Name, T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Name, T2.Name HAVING T1.Floor_Exercise_Points >= 10",
                "template": "SELECT MIN(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING #COLUMN# >= #VALUE#"
            },
            {
                "hash": "6835ad68952bd1c55fb695d2e2dca6a0858f6ce5",
                "query": "SELECT T1.Floor_Exercise_Points, T2.Floor_Exercise_Points FROM gymnast AS T1 JOIN gymnast AS T2 ON T1.Floor_Exercise_Points > T2.Floor_Exercise_Points ORDER BY T1.Floor_Exercise_Points ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# > #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9622bfd1c9a41e9c80813633f67a309253cfb93b",
                "query": "SELECT T1.Name, SUM(T2.Floor_Exercise_Points) FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T1.Name NOT IN (SELECT T3.Name FROM people AS T3 JOIN gymnast AS T4 ON T3.People_ID = T4.Gymnast_ID ORDER BY T4.Floor_Exercise_Points DESC) ORDER BY SUM(T2.Floor_Exercise_Points) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC) ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "5c6325094178eb0d0e9df4b71efdb0511eaedd4c",
                "query": "SELECT T1.Name, SUM(T2.Floor_Exercise_Points), SUM(T2.Pommel_Horse_Points) FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T2.Total_Points >= 80 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b2732f50628b7008e99c6912bd3dda7126a66121",
                "query": "SELECT DISTINCT Name FROM people AS T1 INNER JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE (T2.Floor_Exercise_Points BETWEEN 12 AND 15 OR T2.Pommel_Horse_Points < 13) AND T2.Rings_Points > 14 LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE#) AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "478f321c37efc77070b06260fb2fbbcc9ea4243e",
                "query": "SELECT Gymnast_ID, Horizontal_Bar_Points FROM gymnast GROUP BY Horizontal_Bar_Points ORDER BY Horizontal_Bar_Points DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9bcbfb6d1c9f228894ff6cc04af4d204ee8e8ad9",
                "query": "SELECT T1.Name FROM people AS T1 INNER JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE EXISTS (SELECT 1 FROM gymnast WHERE Rings_Points = T2.Rings_Points AND Horizontal_Bar_Points = T2.Horizontal_Bar_Points) ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1b914cc4f3e65591560d59228cfbec8bc63ce36b",
                "query": "SELECT T2.Name, SUM(T1.Floor_Exercise_Points), SUM(T1.Pommel_Horse_Points) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T2.People_ID NOT IN (SELECT Gymnast_ID FROM gymnast WHERE Rings_Points < 7) ORDER BY T2.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "663945806f0a06a6be6e8f2375ef7cede1686b37",
                "query": "SELECT people.Name, gymnast.Floor_Exercise_Points FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID WHERE gymnast.Floor_Exercise_Points BETWEEN 12 AND 15 OR gymnast.Pommel_Horse_Points > 10 ORDER BY gymnast.Floor_Exercise_Points ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4083c69f83b9bde3beb30c6b0116dd00a950d922",
                "query": "SELECT Gymnast_ID FROM gymnast WHERE NOT EXISTS (SELECT 1 FROM people WHERE gymnast.Gymnast_ID = people.People_ID) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#. #COLUMN# = #TABLE#. #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "b0c0bc0c15edf28f305257763d821464029c6ac1",
                "query": "SELECT AVG(g.Floor_Exercise_Points), AVG(g.Rings_Points), AVG(g.Horizontal_Bar_Points) FROM gymnast AS g JOIN people AS p ON g.Gymnast_ID = p.People_ID JOIN people AS p2 ON p.People_ID = p2.People_ID ORDER BY g.Floor_Exercise_Points DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "75f3cea8a53a4102dbfb69856641c1f101b381bf",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Floor_Exercise_Points FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T1.Name != 'John' ORDER BY T2.Floor_Exercise_Points DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9efa238da2d0ece0d251e055bb6449ac7bea3827",
                "query": "SELECT Gymnast_ID FROM gymnast WHERE Floor_Exercise_Points BETWEEN 10 AND 20 AND Rings_Points > (SELECT AVG(Rings_Points) FROM gymnast) ORDER BY Total_Points DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "777cc5b13f4c87e2a092e68e20d988c45205c8f2",
                "query": "SELECT Name FROM people WHERE Age > 20 AND People_ID IN (SELECT Gymnast_ID FROM gymnast WHERE Floor_Exercise_Points > Rings_Points) ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #COLUMN#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b4d872337f3cb2bfa49483f76429e3023025bd9a",
                "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Floor_Exercise_Points BETWEEN 10 AND 15 AND T2.Age > 20",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "b9cb674ffa614fdf86e085606963735474730490",
                "query": "SELECT Name FROM people WHERE Age > 20 OR Height < 170 OR NOT EXISTS (SELECT 1 FROM gymnast AS T1 WHERE T1.Gymnast_ID = people.People_ID AND T1.Total_Points > 40) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#. #COLUMN# AND T1.#COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "71f8833d880f9ce7f50779eb7d48a90bc3f017e6",
                "query": "SELECT COUNT(DISTINCT Rings_Points) FROM gymnast WHERE Total_Points = 80 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bef83b1526cb7966f5294a1fbffa97bbfd70e154",
                "query": "SELECT COUNT(DISTINCT T1.Gymnast_ID) FROM gymnast AS T1 WHERE EXISTS (SELECT T2.People_ID FROM people AS T2 WHERE T1.Gymnast_ID = T2.People_ID) GROUP BY T1.Total_Points HAVING MIN(T1.Total_Points) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT Name FROM ( SELECT T1.Name, T2.Floor_Exercise_Points FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID ) WHERE Floor_Exercise_Points <= 12.5",
                "template": "SELECT #COLUMN# FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "81974c64d5324818d2ddfe45c58410796f5ead8d",
                "query": "SELECT T1.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Floor_Exercise_Points >= 10 AND T2.Age >= 20",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "c0c7b3cb5085534bbc496e8671395ff82943d741",
                "query": "SELECT COUNT(DISTINCT T1.Name), T2.Floor_Exercise_Points FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T2.Floor_Exercise_Points >= 10 ORDER BY T2.Floor_Exercise_Points ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f8745fc68dacedc3dc83cb06abca036973539e41",
                "query": "SELECT T1.Name, SUM(T2.Floor_Exercise_Points) FROM people AS T1 JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T2.Floor_Exercise_Points < 15 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a89a840d89c70d0c5bb18ced5931ceda06bc4e4a",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT Gymnast_ID FROM gymnast WHERE Floor_Exercise_Points > 14) ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7f088f0205cd77eac78d04b67aa8313302c32678",
                "query": "SELECT * FROM gymnast WHERE Rings_Points != 0 ORDER BY Rings_Points ASC",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3039d2cdf8201bb33c2175dad624e9400349c345",
                "query": "SELECT T1.Name FROM people AS T1 INNER JOIN gymnast AS T2 ON T1.People_ID = T2.Gymnast_ID WHERE T2.Floor_Exercise_Points < (SELECT MIN(Floor_Exercise_Points) FROM gymnast) GROUP BY T1.Name HAVING MIN(T2.Floor_Exercise_Points) ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MIN(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "42ae71d0a6d7f1f89302201c4182d95aec024a6d",
                "query": "SELECT Name FROM people WHERE People_ID IN (SELECT Gymnast_ID FROM gymnast WHERE Total_Points > (SELECT AVG(Total_Points) FROM gymnast)) ORDER BY Name ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "soccer_1": [
            {
                "hash": "355c811010014b8684c64ced9876742ce10ef958",
                "query": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id NOT IN (SELECT player_api_id FROM Player WHERE id = 1) AND (date BETWEEN '2010-01-01' AND '2015-12-31')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "24eec904554640d7c7ee234a9f29b5b0eea55be9",
                "query": "SELECT player_api_id FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id HAVING COUNT(player_api_id) > 1 ) ORDER BY player_api_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8958d1fba13f87990c7e627c4825d86ffb6e8cb7",
                "query": "SELECT player_name FROM Player WHERE player_api_id = (SELECT MAX(player_api_id) FROM Player_Attributes)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "aee42b972fa4cc1e0c29a0ece48d45c5675b8c6b",
                "query": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date BETWEEN '2015-01-01' AND '2015-12-31' AND EXISTS (SELECT T3.date FROM Player_Attributes AS T3 WHERE T3.player_api_id = T1.player_api_id AND T3.date BETWEEN '2014-01-01' AND '2014-12-31') ORDER BY T1.player_name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "0031242dc02c09eb9a314debe536de9b21c5db82",
                "query": "SELECT player_name FROM Player WHERE player_api_id >= 100 ORDER BY player_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fa7c59bc543fad097e8a68882ec7269a84d86ff9",
                "query": "SELECT player_name FROM Player WHERE player_api_id = 2 OR player_api_id = 3 OR player_api_id = ( SELECT player_api_id FROM Player_Attributes WHERE date = '2009-01-01' ) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "eb38c0c4f813ff3a7d793956db383c58bdb0e5b3",
                "query": "SELECT player_api_id, AVG(crossing) FROM Player_Attributes WHERE player_api_id = 1 AND EXISTS (SELECT player_api_id FROM Player_Attributes WHERE player_api_id = 1) GROUP BY player_api_id ORDER BY AVG(crossing) DESC LIMIT 1",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "ccface99a2a56bcac1b3ae66fa65120b43a05f5c",
                "query": "SELECT player_name, MAX(overall_rating), MAX(potential), MIN(jumping) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_api_id IN (SELECT player_api_id FROM Player_Attributes WHERE date = '2016-01-01') ORDER BY MAX(overall_rating) DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "ae40cf1283cb82079726dd9590e7a6c5ec41a5ad",
                "query": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE NOT EXISTS (SELECT 1 FROM Player_Attributes AS T3 WHERE T3.overall_rating > 80 AND T3.player_api_id = T2.player_api_id) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "25aff85e27cb5f084387b16b03551626aa3545b5",
                "query": "SELECT player_name FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 80 OR (EXISTS (SELECT 1 FROM Player_Attributes AS T1 WHERE T1.player_api_id = Player_Attributes.player_api_id AND T1.potential > 80))) ORDER BY player_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR (EXISTS (SELECT 1 FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #TABLE#.#COLUMN# AND T1.#COLUMN# > #VALUE#))) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "50810b7f028f119aa16ff8620f6be279d9e6e4d2",
                "query": "SELECT T1.player_name FROM Player AS T1 WHERE EXISTS (SELECT T2.player_api_id FROM Player_Attributes AS T2 WHERE T2.player_api_id = T1.player_api_id AND T2.overall_rating > 80)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "e4826ce61fc13b52bfcc41bac12534d7c56b01fc",
                "query": "SELECT COUNT(T1.player_fifa_api_id) FROM Player_Attributes AS T1 WHERE T1.overall_rating < 60 AND T1.potential < 60 AND T1.shot_power < 60 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bb3eb2958f5a35b6cc462914cb6cc7ba1106d02a",
                "query": "SELECT COUNT(DISTINCT T3.name), COUNT(DISTINCT T1.team_long_name), COUNT(T1.team_api_id) FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id JOIN League AS T3 ON T1.team_api_id = T3.id WHERE NOT EXISTS (SELECT 1 FROM Country AS T4 WHERE T4.name = 'Spain') ORDER BY T1.team_api_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "984173c3637f386387ccc906c4102a7b3aeb906c",
                "query": "SELECT COUNT(DISTINCT player_api_id), MAX(overall_rating) FROM Player_Attributes WHERE overall_rating < 80",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "88825949892c193913f6c6e09c239efb0971009c",
                "query": "SELECT T1.player_name, T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "1832ed47f40e8e31702b25697fa2727feb98d25a",
                "query": "SELECT COUNT(DISTINCT player_fifa_api_id) FROM Player_Attributes WHERE player_api_id = 1 OR player_api_id NOT IN (SELECT player_api_id FROM Player WHERE player_name = 'Lionel Messi')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "b029fe2a3b8fd78817b9f31593a82a8a361c5b77",
                "query": "SELECT player_name FROM Player WHERE id > 300 ORDER BY player_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6f72e25923c825f2e05d732b64ae28ff98cb5a3e",
                "query": "SELECT T1.player_name, MIN(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential <= 90 GROUP BY T1.player_name ORDER BY T1.player_name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d69158001c5912a6f1d83e0c6c47a7678a0ffeb1",
                "query": "SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "f3b9ad137925bd829f52499276b106ef81060837",
                "query": "SELECT player_name FROM Player WHERE player_api_id IN (SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id HAVING AVG(overall_rating) > 80) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "94d55958770f4b89224d097c1d2d57818bf471cf",
                "query": "SELECT MAX(T1.strength) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.aggression > 60 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "98318b8cedc16d0c355ff6a164de775f0a91b4fe",
                "query": "SELECT player_name, MAX(overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2016-06-01' AND T1.player_fifa_api_id BETWEEN 1 AND 100 AND EXISTS (SELECT player_api_id FROM Player_Attributes WHERE player_api_id = T2.player_api_id AND overall_rating > 80) ORDER BY MAX(overall_rating) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY MAX(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "492d62e1811b716c886111b5f64af6e5fcd15e5d",
                "query": "SELECT T1.player_name, AVG(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Lionel Messi' GROUP BY T1.player_name ORDER BY AVG(T2.overall_rating) DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC"
            }
        ],
        "course_teach": [
            {
                "hash": "94cc2af5427cd252d9154a80d5ef8668c63d7364",
                "query": "SELECT COUNT(DISTINCT T2.Teacher_ID) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T1.Staring_Date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY T1.Staring_Date DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4c1fd92cd8d5cc0fc36a3cf9d808d102c5e73dd9",
                "query": "SELECT T1.Course_ID, T2.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade = 80 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cd5d4e29fa6bd157eb6b67dfc0b91bf38c793155",
                "query": "SELECT T1.Name, T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID WHERE T3.Course_ID >= 100 AND T1.Hometown = 'New York'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "e9eaf5813a50e4e7d2b4b8312ec39f02cb60f5f3",
                "query": "SELECT T1.Course FROM course AS T1 WHERE EXISTS (SELECT 1 FROM course_arrange AS T2 WHERE T1.Course_ID = T2.Course_ID AND T2.Grade > 90) ORDER BY T1.Staring_Date DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "23cd6a5ad3e74e915f66c46036075d60d6d8f401",
                "query": "SELECT T1.Course, AVG(T3.Grade) AS avg_grade, COUNT(T2.Teacher_ID) AS count_teacher FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID JOIN teacher AS T2 ON T2.Teacher_ID = T3.Teacher_ID WHERE T1.Staring_Date BETWEEN '2020-01-01' AND '2021-01-01' GROUP BY T1.Course ORDER BY avg_grade DESC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7a1dfca879af248d2b02e6cd3430e6b59b0448ca",
                "query": "SELECT T1.Teacher_ID, COUNT(T2.Course_ID) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Age > 40 AND T2.Grade > (SELECT AVG(Grade) FROM course_arrange)",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "b80dd9ead643775d01a01bf6ae311ef7a1ff8084",
                "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade < 60 ORDER BY T1.Course ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "43606616f83e323bd269b28b5b8b98a56c249c76",
                "query": "SELECT T1.Course, T2.Name FROM course AS T1 JOIN teacher AS T2 ON T1.Course_ID = T2.Teacher_ID WHERE T1.Course != T2.Name",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "cdd5923b4767d187cc6fe14f152d3d42e065240f",
                "query": "SELECT COUNT(DISTINCT T1.Teacher_ID), COUNT(T1.Course_ID) FROM course_arrange AS T1 WHERE T1.Teacher_ID != 1 ORDER BY T1.Course_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5b892901b4f0d7b0a43199e827395cec7a973ce5",
                "query": "SELECT T1.Course_ID, T2.Name, T3.Grade FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE EXISTS (SELECT 1 FROM course_arrange WHERE Grade > 80)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "4e244daaeb73cc0181252a268f7b09b89a9d0b95",
                "query": "SELECT T1.Course, T2.Name, T3.Grade FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID JOIN teacher AS T2 ON T2.Teacher_ID = T3.Teacher_ID WHERE T3.Teacher_ID != 2 ORDER BY T3.Grade DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "94564a9963ad9468973a54b2fff45797210868d5",
                "query": "SELECT T1.Course, SUM(T2.Grade) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T1.Course_ID NOT IN (SELECT Course_ID FROM course_arrange) OR T2.Grade > 80 GROUP BY T1.Course HAVING SUM(T2.Grade) > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "064e7171e9bd239c45672978aa7db8e68c400692",
                "query": "SELECT T1.Course, T2.Name FROM course AS T1 JOIN teacher AS T2 ON T1.Course_ID = T2.Teacher_ID WHERE T1.Staring_Date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.Age > 30 OR T1.Course = 'Math'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "9b68f21e089cd7ba5c0645b19a11ee6f0ca3757c",
                "query": "SELECT T1.Teacher_ID, T2.Teacher_ID FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Course_ID = 1 ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Teacher_ID != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "3bcb89b9f190663f390c0e2a0308e10bdf69e09d",
                "query": "SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID = T3.Course_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "649fec1b27987a872453158af9b8b50809346390",
                "query": "SELECT T1.Course, COUNT(DISTINCT T2.Teacher_ID) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID WHERE T2.Grade <= 80 GROUP BY T1.Course HAVING AVG(T2.Grade) > 75",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "90499a69fed4d6419aff3843afc6805009ddb60d",
                "query": "SELECT COUNT(DISTINCT T1.Course_ID), T2.Name, T2.Hometown FROM course AS T1 JOIN course_arrange AS T3 ON T1.Course_ID = T3.Course_ID JOIN teacher AS T2 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Age > 35 AND T2.Hometown = 'New York' AND T1.Course_ID NOT IN (SELECT Course_ID FROM course_arrange WHERE Grade < 80)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "c8b2ea25e94cbd8a57da3022a216b638667c0f59",
                "query": "SELECT T1.Name, SUM(T3.Grade) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T3.Course_ID = T2.Course_ID WHERE T1.Age < 40 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "517e822b3d48f1eda3561f83bcf0265b2a90e0ea",
                "query": "SELECT T1.Course_ID FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "cea111aeb4dfc7694a9882ecd0512334b25438fe",
                "query": "SELECT T1.Course, COUNT(DISTINCT T3.Teacher_ID) FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T3.Teacher_ID = T2.Teacher_ID WHERE T2.Grade > 3 AND T2.Course_ID BETWEEN 1 AND 10 AND T3.Age > 25 ORDER BY T1.Course DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "38136a2f5fb42cb6aabc85a404d84316f6bb8e30",
                "query": "SELECT T1.Course FROM course AS T1 JOIN course_arrange AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T3.Teacher_ID = T2.Teacher_ID WHERE T1.Course_ID NOT IN (SELECT Course_ID FROM course_arrange WHERE Grade < 60) AND T2.Grade = 90 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d2e6e91882c6402a643f81e9adc25427f16af176",
                "query": "SELECT T1.Name, SUM(T2.Grade) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Teacher_ID != 1 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "30800199643ca1e35e285baf7b37c63e3c01d739",
                "query": "SELECT T1.Name, COUNT(T2.Course) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Hometown = 'New York' OR T1.Age > 30 GROUP BY T1.Name ORDER BY COUNT(T2.Course) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            }
        ],
        "flight_2": [
            {
                "hash": "72c3e44da460e9d4f750597a9b277aeff18f07da",
                "query": "SELECT T1.Airline, COUNT(DISTINCT T2.FlightNo) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline ORDER BY T1.Airline ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "da02bd0698970837a15957e3ab767b59fa6504e2",
                "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T3.AirportCode = T2.DestAirport WHERE NOT EXISTS (SELECT 1 FROM airports AS T4 WHERE T4.AirportCode = T3.AirportCode AND T4.Country = T1.Country)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #VALUE# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "7370d1528b2c9212cdf5b607cd685c3eaec552b6",
                "query": "SELECT T1.Airline, T2.AirportName FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T1.FlightNo <= 100 ORDER BY T1.Airline DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "bfb48ecc5af75b03f7f2ff6b0100b3296f34c3f3",
                "query": "SELECT AVG(Airline) FROM airlines WHERE uid < 100 LIMIT 5",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "70d54e4b7cea66921c1fa925d29b78abb1724608",
                "query": "SELECT COUNT(DISTINCT Airline), COUNT(DISTINCT Abbreviation) FROM airlines WHERE Country = 'USA' OR Country NOT IN (SELECT Country FROM airports) GROUP BY Airline HAVING MIN(uid)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            },
            {
                "hash": "8480f825890f9b00a4a7ee70af916bf80005acc8",
                "query": "SELECT FlightNo FROM flights WHERE SourceAirport = 'JFK' OR DestAirport = 'LAX' OR FlightNo BETWEEN 1 AND 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "cd829d80c1396a975539f76e81b5a2ffa42549b2",
                "query": "SELECT Airline, AVG(FlightNo) FROM flights GROUP BY Airline",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "896a66708437b9ca001c8dcf63437fc171b86aa8",
                "query": "SELECT Airline FROM airlines WHERE Country = 'USA' OR Abbreviation LIKE 'A%' OR uid IN (SELECT Airline FROM flights WHERE SourceAirport = 'JFK')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "19c18a2d13df7537b890165d5e5b2b30a1655634",
                "query": "SELECT COUNT(DestAirport) FROM flights WHERE Airline = 101",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "ace67a8a91010febd193ee78d950f18ec14982bf",
                "query": "SELECT AirportName FROM airports AS T1 WHERE City BETWEEN 'New York' AND 'Los Angeles' ORDER BY AirportName ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "5af8f759c2277c5a218117d81250b8f4ae485b35",
                "query": "SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Country = 'USA' AND T2.DestAirport = 'JFK'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "b759cd27aa287938172dcec50db9bb0a1d1b929f",
                "query": "SELECT T1.AirportCode, T1.AirportName FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport ORDER BY T1.AirportCode ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "80a2795b16cf862d931af304497c706e359a4325",
                "query": "SELECT T1.Airline, T2.AirportName FROM airlines AS T1 JOIN flights AS T3 ON T1.uid = T3.Airline JOIN airports AS T2 ON T3.SourceAirport = T2.AirportCode WHERE T1.uid >= 2 ORDER BY T1.Airline DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6d605d98bfd93b0038101fc127a3374fa9a8718a",
                "query": "SELECT SourceAirport, SUM(DestAirport) FROM flights WHERE FlightNo < 100 GROUP BY SourceAirport HAVING SUM(DestAirport) > 500 ORDER BY SUM(DestAirport) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "bd117528d57856e56d15c1d58926798908d8d787",
                "query": "SELECT AirportName FROM airports WHERE CountryAbbrev BETWEEN 'A' AND 'M'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "62bcc848c7ca562932cf1bbf3b90478488f0acd3",
                "query": "SELECT T1.Airline, T2.Airline FROM flights AS T1 JOIN flights AS T2 ON T1.FlightNo = T2.FlightNo WHERE T1.FlightNo < 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "2334bfec5f080991dc7004e48a14a7b2eb94f82c",
                "query": "SELECT T1.Country, COUNT(T1.uid) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T1.Airline != 'Delta' GROUP BY T1.Country ORDER BY COUNT(T1.uid) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "8fe26c6bac2a16207cc5ac490fc4348d04ffb16e",
                "query": "SELECT COUNT(DISTINCT T1.SourceAirport), MIN(T1.FlightNo) FROM flights AS T1 WHERE T1.Airline = 101 OR T1.FlightNo BETWEEN 100 AND 200 OR EXISTS (SELECT 1 FROM airports AS T2 WHERE T2.AirportCode = T1.DestAirport) GROUP BY T1.DestAirport",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "cdfc9eb560e26b40c08a5ac5f087c7fe318f8a24",
                "query": "SELECT T1.AirportName, COUNT(T2.DestAirport) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport WHERE T1.Country = 'USA' OR T2.SourceAirport IN (SELECT AirportCode FROM airports WHERE Country = 'Canada') GROUP BY T1.AirportName HAVING COUNT(T2.DestAirport) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c6580a8529abe17ac82662dc251152180aa472c7",
                "query": "SELECT T1.Airline, T2.AirportName, T3.FlightNo FROM airlines AS T1 JOIN airports AS T2 ON T1.uid = T2.uid JOIN flights AS T3 ON T1.Airline = T3.Airline WHERE T2.AirportName <= 'AirportName'",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "a5d9f2fed529c71ce2f8bd825b1a69cb40ddc6fe",
                "query": "SELECT T1.AirportName, COUNT(DISTINCT T2.DestAirport) FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode = T2.DestAirport JOIN airlines AS T3 ON T3.uid = T2.Airline WHERE T3.uid < 100 ORDER BY T1.AirportName ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f6d1dce90b2a547fd4c6866b7f40aff4e12168f9",
                "query": "SELECT COUNT(DISTINCT Airline) FROM airlines AS T1 ORDER BY COUNT(DISTINCT Airline) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "b3800ca1968d284022620af2cedd3c7faf43b9eb",
                "query": "SELECT T1.Airline, T2.City FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline JOIN airports AS T3 ON T2.SourceAirport = T3.AirportCode WHERE T2.DestAirport = 'JFK' AND T3.City = 'New York' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b3902678a78b5bdde24414665b9ecf826091d3f1",
                "query": "SELECT * FROM airlines AS T1 WHERE T1.Airline != 'American Airlines' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "7d105f86f9e37611d94bf42de09638a1479eeda7",
                "query": "SELECT * FROM flights AS T1, airports AS T2 WHERE T1.DestAirport = T2.AirportCode AND T2.CountryAbbrev > 'A' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "438b4958d733ff7e882b07ad09bc35631c97a0ed",
                "query": "SELECT COUNT(DISTINCT Airline) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "45602307dd87a2db946dc19b62d84798780ab6f8",
                "query": "SELECT COUNT(DISTINCT T1.Abbreviation), COUNT(DISTINCT T1.Country), COUNT(T2.FlightNo) FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport > 'ABC' ORDER BY T2.FlightNo ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "singer": [
            {
                "hash": "8e5f8510a4a6123baf6b37a09b4c52fbc14a1f2f",
                "query": "SELECT T1.Name, T2.Title, T3.Title FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN song AS T3 ON T2.Song_ID = T3.Song_ID WHERE T2.Title != 'song1' AND T3.Title != 'song2'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "54a5e910c149484d492df1f3f0c46d1033467d2f",
                "query": "SELECT T1.Name, COUNT(T2.Song_ID) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position BETWEEN 1 AND 10 AND T1.Net_Worth_Millions > 10 GROUP BY T1.Name HAVING COUNT(T2.Song_ID) > 5 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "524efd88ad89c8336280685ffa8e54af5efaddc2",
                "query": "SELECT COUNT(Singer_ID) FROM singer",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "5abc660ecbd2dc6fc9acbebed4c401a845696b5f",
                "query": "SELECT COUNT(DISTINCT T2.Song_ID), COUNT(DISTINCT T1.Name), SUM(T1.Net_Worth_Millions) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions > 10 OR T2.Sales BETWEEN 1 AND 10 OR T1.Birth_Year = 1990 GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Song_ID) > 1 ORDER BY COUNT(DISTINCT T1.Name) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# > #VALUE# OR T2.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "f8ed950d2aaa0c92c7a01898ad2b7756bf15cb54",
                "query": "SELECT s1.Name, AVG(s2.Sales) FROM singer s1 JOIN song s2 ON s1.Singer_ID = s2.Singer_ID WHERE s2.Sales > 10000 OR s1.Citizenship = 'USA' OR NOT EXISTS (SELECT 1 FROM singer s3 WHERE s3.Singer_ID = s1.Singer_ID AND s3.Net_Worth_Millions < 10) ORDER BY s1.Name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3b5ffc743447a4caae66eeba5cb04c823456e8c2",
                "query": "SELECT Singer_ID FROM singer WHERE Birth_Year BETWEEN 1980 AND 1990 AND Citizenship = 'USA' AND Net_Worth_Millions > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "d630502309246b8b3f8206e2e8c451be6f40ef17",
                "query": "SELECT Singer_ID FROM singer ORDER BY Singer_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "798c1046eb4d00fa503a1b4770aabc9cb3e3c953",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Title), SUM(T3.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN song AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T1.Net_Worth_Millions > 50 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "131dd25b17e9676f41791e9e26e21781fba8e31a",
                "query": "SELECT COUNT(DISTINCT T1.Title), T1.Sales FROM song AS T1 WHERE T1.Highest_Position BETWEEN 1 AND 10 AND T1.Sales > 1000000 AND NOT EXISTS (SELECT 1 FROM singer AS T2 WHERE T2.Singer_ID = T1.Singer_ID AND T2.Net_Worth_Millions < 10) ORDER BY T1.Sales ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d7b0e5691180e23404a482db77564bbd187ac596",
                "query": "SELECT Singer_ID FROM singer WHERE Citizenship = 'USA' OR Birth_Year > 1980 OR Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 1000000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "2f2bce111284edb198fe104d69319de5e80932f6",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Song_ID) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Highest_Position = 1 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ee8d9059f9b12c398b567166c0769b0252fe9fd8",
                "query": "SELECT T1.Name, MAX(COUNT(DISTINCT T2.Title)), COUNT(DISTINCT T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING MAX(COUNT(DISTINCT T2.Title))",
                "template": "SELECT #COLUMN#, MAX(COUNT(DISTINCT #COLUMN#)), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(COUNT(DISTINCT #COLUMN#))"
            },
            {
                "hash": "8daf934488aa8107c202c61620657a220d2cf0df",
                "query": "SELECT AVG(T1.Net_Worth_Millions), AVG(T2.Sales), AVG(T3.Highest_Position) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID JOIN singer AS T3 ON T3.Singer_ID = T2.Singer_ID WHERE T1.Birth_Year BETWEEN 1950 AND 1990",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8ceaa9699f855d8884fbf64ff2d80b749636ea41",
                "query": "SELECT COUNT(DISTINCT Singer_ID), COUNT(Singer_ID) FROM singer WHERE Net_Worth_Millions > 100 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4653a63136b0c23ab9341f20e4ce1aae57df92fe",
                "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Citizenship = 'USA' AND EXISTS (SELECT 1 FROM song AS T2 WHERE T2.Title = 'Hello' AND T2.Singer_ID = T1.Singer_ID) ORDER BY T1.Net_Worth_Millions DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# AND #COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f599f23dfb3e5055c2bb18a79cb17823fad93af1",
                "query": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions <= 50 ORDER BY SUM(T2.Sales) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "5bca0d223377bf1376441997ac69935eb6462cc7",
                "query": "SELECT Singer_ID FROM singer ORDER BY Singer_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0bde194733cf1f9abbf6b1890eb1aef4ae9272ec",
                "query": "SELECT Singer_ID FROM singer WHERE Net_Worth_Millions > 10 OR EXISTS (SELECT Singer_ID FROM song WHERE singer.Singer_ID = song.Singer_ID AND Sales > 1000000)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "6c311ae50c5a54a14d3ba4698ec237336924c3ce",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Singer_ID), COUNT(DISTINCT T2.Song_ID), COUNT(DISTINCT T2.Title) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Song_ID IN (SELECT Song_ID FROM song WHERE Sales > 1000000) GROUP BY T1.Name HAVING MAX(T2.Sales) > 10000000 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "445e757053400cd720926bafa381091323590e5e",
                "query": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions >= 10 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "434733593814f938c1461c9dda00110523ce9642",
                "query": "SELECT s.Name, so.Title FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE s.Net_Worth_Millions > 50 AND so.Sales BETWEEN 100000 AND 200000 AND so.Highest_Position < 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE#"
            },
            {
                "hash": "7c0b7cfcf1f9482c916fbdbfddd3bd179ae5da93",
                "query": "SELECT AVG(T1.Net_Worth_Millions), SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Citizenship = 'USA' AND T2.Sales > 100000 AND T2.Title NOT IN ( SELECT Title FROM song WHERE Highest_Position < 10 ) GROUP BY T1.Net_Worth_Millions",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "290954537f6e12d8240038772ab729cd0ea06e36",
                "query": "SELECT T1.Name FROM singer AS T1 WHERE T1.Name != 'Adele' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cda143f118d46b300f048549ef6224e6008a6385",
                "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Net_Worth_Millions > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "0265a704375d3894b47979e186911025c661ad6f",
                "query": "SELECT T1.Title FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Net_Worth_Millions > 50 AND T2.Citizenship = 'USA' ORDER BY T1.Title ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "87e20589fad6d0b2462c7ab802fd9e9406737274",
                "query": "SELECT COUNT(Song_ID) FROM song WHERE Sales >= 100 GROUP BY Singer_ID",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "f958b86a11fef5b1ba51d0c0ca8effb705015961",
                "query": "SELECT Singer_ID, Name FROM singer WHERE Birth_Year <= 1970 ORDER BY Singer_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "train_station": [
            {
                "hash": "23f4b3b6cfde610d563b020f308dd64ac9589e3b",
                "query": "SELECT AVG(Annual_entry_exit) FROM station WHERE Total_Passengers < 1000000",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "851d6cc32e8d493638e592b8aa59606e7a2bcbc8",
                "query": "SELECT T1.Name, T2.Annual_entry_exit FROM train AS T1 JOIN train_station AS T3 ON T1.Train_ID = T3.Train_ID JOIN station AS T2 ON T3.Station_ID = T2.Station_ID WHERE T2.Annual_entry_exit < 10000 ORDER BY T2.Annual_entry_exit DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "aba2a0baf55f759d6154c6d970bb92bafdf8b14c",
                "query": "SELECT T1.Name AS Station_Name FROM station AS T1 WHERE T1.Location = 'London' OR T1.Annual_entry_exit IN ( SELECT MAX(T2.Annual_entry_exit) FROM station AS T2 ) ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT MAX(#COLUMN#) FROM #TABLE# AS #TABLE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c593a8d6b417f04061754b97a7ab8ac907a2bab3",
                "query": "SELECT T1.Name, COUNT(T2.Train_ID) FROM station AS T1 JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Number_of_Platforms BETWEEN 10 AND 20 AND EXISTS (SELECT 1 FROM train AS T3 WHERE T3.Time >= '08:00' AND T3.Train_ID = T2.Train_ID) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "46108471bf03685c90c040b1786dae7ac53efc5f",
                "query": "SELECT T1.Name AS Station_Name, T2.Number_of_Platforms FROM station AS T1 JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Annual_entry_exit BETWEEN 10000 AND 20000 AND T2.Number_of_Platforms > 5",
                "template": "SELECT #COLUMN# AS #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "1c3919bc057df1987cae0e5de265148261986793",
                "query": "SELECT T1.Name FROM station AS T1 JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID JOIN train AS T3 ON T2.Train_ID = T3.Train_ID WHERE EXISTS (SELECT 1 FROM train AS T4 WHERE T4.Name = 'Suburban') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "9ec708f3b210d3de3d916f8382bf8e435ce9e2cc",
                "query": "SELECT COUNT(Station_ID), COUNT(Annual_entry_exit) FROM station AS T1",
                "template": "SELECT COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "afef594e89cd8cac8cdb5e8c2519fb5a47932ad7",
                "query": "SELECT COUNT(DISTINCT Station_ID), COUNT(DISTINCT Train_ID) FROM train_station WHERE Train_ID > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "1e41e6dbbdfaa190eaa112fd6bf5578e8810362d",
                "query": "SELECT T1.Name FROM station AS T1 WHERE T1.Total_Passengers BETWEEN 10000 AND 20000 AND NOT EXISTS ( SELECT 1 FROM train_station AS T2 WHERE T2.Station_ID = T1.Station_ID AND T2.Train_ID IN ( SELECT Train_ID FROM train WHERE Name = 'express' ) ) ORDER BY T1.Total_Passengers DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1b92d50377cf3e254fb5eaf7db9c0b9fc9e48f73",
                "query": "SELECT T1.Name, SUM(T1.Total_Passengers) FROM station AS T1 JOIN station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Total_Passengers < (SELECT MAX(T3.Total_Passengers) FROM station AS T3) GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT MAX(#COLUMN#) FROM #TABLE# AS T3) GROUP BY #COLUMN#"
            },
            {
                "hash": "3de336dee5b897c70c5708edfd36368af6dab6a9",
                "query": "SELECT Name, COUNT(DISTINCT Station_ID), SUM(Annual_entry_exit) FROM station GROUP BY Name HAVING SUM(Annual_entry_exit) <= 100000 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0faeff414a698e14976ce63d85310ecd47da0e7b",
                "query": "SELECT T1.Name, COUNT(T2.Station_ID) FROM train AS T1 JOIN train_station AS T2 ON T1.Train_ID = T2.Train_ID JOIN station AS T3 ON T2.Station_ID = T3.Station_ID WHERE T3.Total_Passengers = 1000 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ceee9595aa90238e46da7115217d27f0fba3d16b",
                "query": "SELECT Name, COUNT(Annual_entry_exit), COUNT(Annual_interchanges) FROM station WHERE Annual_entry_exit < 10000 ORDER BY Annual_entry_exit DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b3b8ffc66d2717068cb69cece657419411fe132c",
                "query": "SELECT T1.Name FROM station AS T1 INNER JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID INNER JOIN train AS T3 ON T2.Train_ID = T3.Train_ID WHERE T1.Name NOT IN (SELECT T4.Name FROM station AS T4 INNER JOIN train_station AS T5 ON T4.Station_ID = T5.Station_ID INNER JOIN train AS T6 ON T5.Train_ID = T6.Train_ID WHERE T6.Service = 'Commuter') GROUP BY T1.Name",
                "template": "SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "6795d225f17b56237bcc181fe1e9a0d464a69354",
                "query": "SELECT COUNT(DISTINCT T2.Train_ID), COUNT(DISTINCT T1.Station_ID), COUNT(T1.Station_ID) FROM station AS T1 JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Main_Services != 'Station Closed'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "f2ee345f70475149c5c952c3d77c17e5b1391679",
                "query": "SELECT Name FROM station AS T1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "e176e74e238640630675ca1b31b362c025400e97",
                "query": "SELECT MIN(Total_Passengers), MAX(Annual_interchanges), COUNT(Location) FROM station WHERE Annual_entry_exit <= 1000 ORDER BY Annual_entry_exit ASC LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), MAX(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7fa78cd8c6709eeeecb7e7b51e1255b906fa1a5b",
                "query": "SELECT Name FROM station WHERE Annual_entry_exit <= 10000 ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "02cf683b280db2eb30007f0ca713f4ca88de4a26",
                "query": "SELECT T1.Name, T2.Train_ID FROM station AS T1 JOIN train_station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Annual_entry_exit BETWEEN 10000 AND 20000 AND T1.Name IN (SELECT Name FROM station WHERE Location = 'London')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "33dd2cf19a134d3765f6e795ff46a17a567a2e1e",
                "query": "SELECT Name, COUNT(Station_ID) FROM station GROUP BY Name HAVING COUNT(Station_ID) = 2 ORDER BY Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0187ca5a6877f40d4a6d87ffeef41ca8d1d6a728",
                "query": "SELECT T1.Name, T1.Location FROM station AS T1 WHERE T1.Annual_entry_exit > 100000 AND EXISTS (SELECT 1 FROM train_station AS T2 WHERE T2.Station_ID = T1.Station_ID) ORDER BY T1.Total_Passengers DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a4f3e32417957a13ba34344a6170e5ec88af8d45",
                "query": "SELECT Name FROM station WHERE Total_Passengers <= 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "175661592ec25e736a0f793006a912cff75371fc",
                "query": "SELECT COUNT(DISTINCT T1.Station_ID) FROM train_station AS T1 WHERE T1.Train_ID = (SELECT MAX(T2.Train_ID) FROM train AS T2)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "0e23cec5fcb11f98942e16b9f87ae1307b700edd",
                "query": "SELECT COUNT(DISTINCT Name), Station_ID FROM station WHERE Annual_entry_exit > 10000 OR Location = 'London' ORDER BY Station_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "eacb5b23c5f4dd83c658febe0c4fb6cc29053eb8",
                "query": "SELECT Name FROM station WHERE Annual_entry_exit BETWEEN 100000 AND 200000 GROUP BY Name",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            }
        ],
        "shop_membership": [
            {
                "hash": "66cee5beacd736bdec14408a5fae18e241fb4387",
                "query": "SELECT COUNT(DISTINCT T1.Name), T3.Name FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T3.Address_road != 'New York' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "fb138aa6e48d0189aeaa24057d9ce6cfd86eb70b",
                "query": "SELECT AVG(Level), SUM(Total_pounds) FROM member AS T1 INNER JOIN purchase AS T2 ON T1.Member_ID = T2.Member_ID AND T2.Year = '2015' WHERE T1.Level = 1 ORDER BY T2.Total_pounds ASC LIMIT 5",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#' WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0162f6cdc4a48f5aac3a20a22f5d3189cb25eb64",
                "query": "SELECT Name, COUNT(Level) FROM member WHERE Hometown = 'London' GROUP BY Name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "563c7be5e3f05a73575fcfe1e93d6234564731b1",
                "query": "SELECT COUNT(DISTINCT T1.Member_ID), COUNT(DISTINCT T2.Branch_ID), T1.Name FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Level < 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2630a12b586860ce64ebff4857af9c27e2261d0c",
                "query": "SELECT * FROM member AS T1 WHERE T1.Level BETWEEN 1 AND 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "c7b398a7eae6ec87176e152bb0971178c406ce90",
                "query": "SELECT T1.Name, SUM(T4.Total_pounds) FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID JOIN purchase AS T4 ON T3.Branch_ID = T4.Branch_ID WHERE T1.Level > 2 OR T4.Year = '2018' LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "83b9027db4d7266a85bda69a87b0f68997151575",
                "query": "SELECT T1.Branch_ID, COUNT(DISTINCT T2.Member_ID) FROM branch AS T1 JOIN purchase AS T2 ON T1.Branch_ID = T2.Branch_ID WHERE T1.Branch_ID IN (SELECT T3.Branch_ID FROM branch AS T3 JOIN membership_register_branch AS T4 ON T3.Branch_ID = T4.Branch_ID) ORDER BY T1.Branch_ID DESC LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8fad8d1979da193b90868eb0dc5715f7f675fd14",
                "query": "SELECT T1.Level, T2.Open_year FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID JOIN purchase AS T4 ON T3.Branch_ID = T4.Branch_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "732d52a9d8c6c0d2781b7d45153f7b62c9cf77d3",
                "query": "SELECT COUNT(DISTINCT Member_ID), COUNT(DISTINCT Card_Number), AVG(Level) FROM member WHERE Level >= 3 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9cd3e832de1cdc7835c0cebb38640dee92f9b080",
                "query": "SELECT T1.Member_ID, T2.Branch_ID FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE EXISTS (SELECT 1 FROM purchase AS T3 WHERE T3.Member_ID = T1.Member_ID AND T3.Branch_ID = T2.Branch_ID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "b7e0c5a2657cc3c2c92b12063a4524affc3b813b",
                "query": "SELECT T1.Name, T1.Level FROM member AS T1 WHERE T1.Level BETWEEN 1 AND 2",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "489d701f9cf049078b644df0f5d415082fdaffa9",
                "query": "SELECT T1.Name, T2.Name FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T3.membership_amount = 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "10f48479f05fde1bdb703840768908cc724a831d",
                "query": "SELECT T1.Name, T2.Name, SUM(T3.Total_pounds) FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN purchase AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Level > 1 AND T3.Year BETWEEN 2010 AND 2015 AND EXISTS (SELECT 1 FROM branch AS T4 WHERE T4.Branch_ID = T3.Branch_ID AND T4.Open_year > 2000)",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "027717dd7dd5ba2936276a6d4e9b34be263563bb",
                "query": "SELECT T1.Member_ID, COUNT(DISTINCT T2.Branch_ID) FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Level > 1 AND T1.Card_Number = 'silver' AND T2.Register_Year BETWEEN '2000' AND '2010' GROUP BY T1.Member_ID HAVING COUNT(T2.Branch_ID) > 2 ORDER BY T1.Member_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "19ca0d892b39671147d8c0c55d638ac5b97740fa",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM membership_register_branch AS T1 INNER JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Register_Year BETWEEN 2010 AND 2015 AND T2.Level > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "070c8acbb95dca2890b3feb2cb129751a35a5bdf",
                "query": "SELECT AVG(T1.Level) FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Level > 1 AND T2.Register_Year BETWEEN '2010' AND '2015'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "eb0006c586db31a91378b0aad6b2ea6ffa12dbee",
                "query": "SELECT T1.Name, COUNT(T2.Member_ID) FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Register_Year BETWEEN 2000 AND 2010 AND T1.Level > 1 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "0fe488b2893e6cde36b8c766de459e2ec830a19b",
                "query": "SELECT T1.Name, T1.Level FROM member AS T1 WHERE T1.Level >= 3 ORDER BY T1.Level ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "645c29d0c8f68564ec80e27592ac4e0d5a66b756",
                "query": "SELECT T1.Name FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Level > 5 OR T3.membership_amount = 'High' OR T1.Hometown IN (SELECT City FROM branch) ORDER BY T1.Member_ID DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "40bc3fb53f67aae2ddfd1836b09589ccaef8fe93",
                "query": "SELECT Name, Level FROM member LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "999008ff56b4e17a86685e89cdb016c3085348e8",
                "query": "SELECT COUNT(DISTINCT T1.Member_ID) , T1.Name FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Register_Year >= '2010'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "62578daadfd7285d7726ae8e95f678e2e910a9b2",
                "query": "SELECT T1.Name, T2.Name, T3.Address_road FROM member AS T1 JOIN membership_register_branch AS T2 ON T1.Member_ID = T2.Member_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Level >= 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "9f552754cbd2be715f285726492c059f3c39d51c",
                "query": "SELECT T1.Name, SUM(T2.Total_pounds) FROM member AS T1 JOIN purchase AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Level = 2 AND T2.Total_pounds > 100 AND T1.Member_ID IN (SELECT Member_ID FROM membership_register_branch) GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            }
        ],
        "college_2": [
            {
                "hash": "0c99f07df2b7902ffcf87942253b954b52ed8986",
                "query": "SELECT T1.dept_name FROM department AS T1 WHERE T1.dept_name IN ( SELECT T2.dept_name FROM course AS T2 GROUP BY T2.dept_name ) ORDER BY T1.dept_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f46f96ffb6ff98d896b01040fbf3e0354ef1776c",
                "query": "SELECT T1.dept_name FROM department AS T1 WHERE T1.budget > 100000",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "829bb4bd26e8598d3fe8abf35dac34a67b2a0a91",
                "query": "SELECT COUNT(DISTINCT T1.dept_name), T2.building FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name = T2.dept_name JOIN teaches AS T3 ON T2.ID = T3.ID JOIN section AS T4 ON T3.course_id = T4.course_id WHERE T1.budget > 75000 AND T2.salary BETWEEN 90000 AND 100000 AND T3.year IN (SELECT year FROM teaches WHERE course_id = 'CS-101') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "26c4d9460135a6a74cafaabaaddcf06486cf3a63",
                "query": "SELECT T1.building, T2.name FROM classroom AS T1 JOIN department AS T2 ON T1.building = T2.building WHERE T2.budget > 10000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "14454100bfd347df52a458402ecb693543689b51",
                "query": "SELECT T1.building, T1.room_number, T2.time_slot_id FROM classroom AS T1 JOIN section AS T2 ON T1.building = T2.building WHERE T1.capacity BETWEEN 50 AND 100 OR T2.semester = 'Fall' OR T2.year > 2010 ORDER BY T1.capacity DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "554665e45ee74f71fd939dccf138f1e8944c822f",
                "query": "SELECT T1.building, T2.sec_id FROM classroom AS T1 JOIN section AS T2 ON T1.building = T2.building WHERE T2.semester = 'Fall' ORDER BY T1.capacity DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "729aacd84d496f99aec9f97ef3a78cc0a9b1bee3",
                "query": "SELECT T1.building FROM department AS T1 WHERE T1.budget > 50000 AND T1.dept_name NOT IN ( SELECT T2.dept_name FROM instructor AS T2 WHERE T2.salary < 100000 )",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# < #VALUE# )"
            },
            {
                "hash": "d220a1aebc11260bbabc575578127baf338220a5",
                "query": "SELECT T1.dept_name, MIN(T2.credits) FROM department AS T1 JOIN course AS T2 ON T1.dept_name = T2.dept_name WHERE NOT EXISTS (SELECT 1 FROM teaches AS T3 WHERE T3.dept_name = T1.dept_name) GROUP BY T1.dept_name ORDER BY MIN(T2.credits) DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) DESC"
            },
            {
                "hash": "dc18696ae14147c39ad96ccd0aceda2f80fba1bc",
                "query": "SELECT s_ID FROM advisor WHERE i_ID < (SELECT ID FROM instructor WHERE salary = (SELECT MIN(salary) FROM instructor)) LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MIN(#COLUMN#) FROM #TABLE#)) LIMIT #VALUE#"
            },
            {
                "hash": "1b797ae7eb748f54a58a687743893e9e07456211",
                "query": "SELECT MAX(T.credits) FROM course AS T WHERE T.credits >= 3 ORDER BY T.credits DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T WHERE T.#COLUMN# >= #VALUE# ORDER BY T.#COLUMN# DESC"
            },
            {
                "hash": "a5c6a0a512044b64de07e490855689d41cf6419f",
                "query": "SELECT course_id FROM course WHERE credits > (SELECT AVG(credits) FROM course)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "05646caa26362cb46b95419570c1886da548139e",
                "query": "SELECT T1.title, COUNT(*) FROM course AS T1 JOIN section AS T2 ON T1.course_id = T2.course_id WHERE T1.credits >= 3",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "ab83313b1945555ddbc0c210ddd0ac5ca78baf9a",
                "query": "SELECT T1.dept_name, SUM(T1.budget) FROM department AS T1 WHERE T1.building NOT IN (SELECT T2.building FROM classroom AS T2) GROUP BY T1.dept_name ORDER BY SUM(T1.budget) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS ) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "b0010bf67f5b582e168eb82158b3b514d2cb5da9",
                "query": "SELECT COUNT(DISTINCT course_id) FROM course WHERE credits BETWEEN 3 AND 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "767b03d1c2c4a57a22fb787856a06283da588850",
                "query": "SELECT T1.dept_name, T2.building FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name ORDER BY T1.dept_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "358d17f89e894a5c1e99767ec701470b3531e839",
                "query": "SELECT T1.building FROM classroom AS T1 WHERE T1.capacity BETWEEN 50 AND 100 ORDER BY T1.building ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "eb7d5d089d7b692de27a4e5229343a1293b69623",
                "query": "SELECT s.dept_name, COUNT(T1.course_id) FROM student AS s JOIN takes AS T1 ON s.ID = T1.ID WHERE T1.grade > 'B' GROUP BY s.dept_name ORDER BY COUNT(T1.course_id) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "bd281a8f8434e55d8a0eaf15e391446a62449042",
                "query": "SELECT T1.building, T2.building FROM classroom AS T1 JOIN department AS T2 ON T1.building = T2.building WHERE T1.capacity >= 50",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5ea4d7db4ac8ddbcd3cae9379089b6f5f49518c4",
                "query": "SELECT T1.building FROM classroom AS T1 JOIN section AS T2 ON T1.building = T2.building JOIN teaches AS T3 ON T2.course_id = T3.course_id JOIN instructor AS T4 ON T3.ID = T4.ID",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "c74998e5c1dd075578aca5b5c25ca7826cee73ab",
                "query": "SELECT COUNT(dept_name), SUM(budget) FROM department WHERE budget < 1000000",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "7ae2e904fbbfaa24c8b14a52c46372ec89032337",
                "query": "SELECT T1.building, COUNT(T2.course_id) FROM classroom AS T1 JOIN section AS T2 ON T1.building = T2.building WHERE T1.capacity BETWEEN 50 AND 100 AND T2.semester IN (SELECT semester FROM takes WHERE ID = '00128') ORDER BY T1.building DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e00f7416f15d42721c7eb42a671e66c1b666703b",
                "query": "SELECT * FROM classroom WHERE building = 'building_name' OR room_number BETWEEN 1 AND 100 OR EXISTS ( SELECT * FROM section WHERE classroom.building = section.building )",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# )"
            },
            {
                "hash": "f14e4ed15b2eb1560b6664187d1ae93fbc1fd36f",
                "query": "SELECT T1.building, MIN(T2.credits) FROM classroom AS T1 JOIN course AS T2 ON T1.building != T2.dept_name GROUP BY T1.building",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "a2e5f5e1e55f284370bb7526991c3c6e3fdb2a00",
                "query": "SELECT building, COUNT(room_number) FROM classroom WHERE capacity <= 100 GROUP BY building LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "8240a89d63efbcc17246754117fd9ea97ac10da4",
                "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = (SELECT T3.dept_name FROM student AS T3 WHERE T3.tot_cred = 100) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ca509355faf4f23191b9e21109a016d24b1ada8d",
                "query": "SELECT COUNT(DISTINCT T1.dept_name), SUM(T2.budget) FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name = T2.dept_name WHERE T1.dept_name = 'Math' OR T2.salary BETWEEN 100000 AND 200000 OR T1.budget > 100000 GROUP BY T1.dept_name HAVING SUM(T2.budget) > 1000000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            }
        ],
        "cre_Doc_Tracking_DB": [
            {
                "hash": "75a0e0701df33cc02a90db4085052cca4f406475",
                "query": "SELECT Employee_Name FROM Employees ORDER BY Employee_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4d5b6e1e35bac9665ffe2cd64c924ddd12042e2d",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types AS T1 WHERE T1.Document_Type_Name != 'Confidential'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "218419f04bde802e5454e667176901e311b9b5eb",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Code IN (SELECT Document_Type_Code FROM All_Documents WHERE Document_Name = 'Report') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "ad021e1e7160a53185bdf232af1078ed669f2bf6",
                "query": "SELECT COUNT(T1.Employee_ID), T2.Role_Name FROM Employees AS T1 JOIN Roles AS T2 ON T1.Role_Code = T2.Role_Code WHERE T1.Gender_MFU = 'Male' OR T1.Date_of_Birth BETWEEN '1990-01-01' AND '2000-12-31' GROUP BY T2.Role_Name",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "c3fdb4931d40144347ef86975503c42abb6baf66",
                "query": "SELECT COUNT(DISTINCT T1.Document_Name), T2.Document_Type_Name FROM All_Documents AS T1 JOIN Ref_Document_Types AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T1.Document_ID IN (SELECT T3.Document_ID FROM Document_Locations AS T3 WHERE T3.Date_in_Location_From > '2020-01-01') ORDER BY COUNT(DISTINCT T1.Document_Name) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "03175b9ea4f95d80f2b7d313178d81ec362572b6",
                "query": "SELECT T1.Document_Name, T2.Document_Name FROM All_Documents AS T1 JOIN All_Documents AS T2 ON T1.Document_ID != T2.Document_ID ORDER BY T1.Document_Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3613c6656d35c2f52e6488f0fba45785c7e4dda8",
                "query": "SELECT AVG(Document_ID), COUNT(Document_ID) FROM All_Documents WHERE Document_ID > 100",
                "template": "SELECT AVG(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "1fe2d51fc4c5fdb6ad8aa56ab4fc9c16b4fd3625",
                "query": "SELECT T1.Document_Type_Name FROM Ref_Document_Types AS T1 JOIN All_Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T1.Document_Type_Name = 'Confidential' LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b64b0cb804ff180dea70975914b99e8908972195",
                "query": "SELECT COUNT(Document_ID) FROM All_Documents WHERE Document_Type_Code >= 'DT1' ORDER BY Document_ID ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "038fe30ad218d4cd06ad4fca605e632693ec08fc",
                "query": "SELECT T1.Document_Type_Name, MAX(T2.Date_Stored) FROM Ref_Document_Types AS T1 JOIN All_Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Document_ID NOT IN ( SELECT Document_ID FROM Documents_to_be_Destroyed ) AND T2.Date_Stored > '2020-01-01' GROUP BY T1.Document_Type_Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) AND #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "213b5b86a7cfdc20763d442a1af4e1e8f3b953ca",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Code >='X'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "14e4b11e4705a05677121b1d1ae1e11a6742d750",
                "query": "SELECT Document_Name, Location_Name FROM All_Documents JOIN Document_Locations ON All_Documents.Document_ID = Document_Locations.Document_ID JOIN Ref_Locations ON Document_Locations.Location_Code = Ref_Locations.Location_Code WHERE Document_Locations.Date_in_Location_From > '2020-01-01' ORDER BY Document_Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2fe815895899ef02598aed76144f93e28260d018",
                "query": "SELECT T3.Document_Name, COUNT(T3.Document_Type_Code) FROM Employees AS T1 JOIN Documents_to_be_Destroyed AS T2 ON T1.Employee_ID = T2.Destroyed_by_Employee_ID JOIN All_Documents AS T3 ON T2.Document_ID = T3.Document_ID WHERE T3.Document_ID NOT IN (SELECT T1.Document_ID FROM Document_Locations AS T1 WHERE T1.Date_in_Location_From < '2020-01-01') ORDER BY T3.Document_Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "053e0ccd97e5f4837872fd2dd85737c6c2cbbdde",
                "query": "SELECT T1.Document_Type_Name, COUNT(T2.Document_ID) FROM Ref_Document_Types AS T1 JOIN All_Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code JOIN Document_Locations AS T3 ON T2.Document_ID = T3.Document_ID JOIN Ref_Locations AS T4 ON T3.Location_Code = T4.Location_Code WHERE T2.Document_Name != 'Sample' GROUP BY T1.Document_Type_Name ORDER BY T1.Document_Type_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c0f474de2b855954743e91476afa7f601b54e236",
                "query": "SELECT Document_Name FROM All_Documents WHERE Date_Stored < '2020-01-01' ORDER BY Document_Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9f0d2bd2158353a79f00213ab1b64077d4313390",
                "query": "SELECT T1.Document_ID FROM All_Documents AS T1 JOIN Document_Locations AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Date_in_Location_From BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Document_Type_Code IN (SELECT Document_Type_Code FROM Ref_Document_Types WHERE Document_Type_Name = 'Type1')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "280d15258ba7f9004cf3895bbcaa55931fd2b50f",
                "query": "SELECT T1.Document_Type_Name, AVG(T1.Document_Type_Code) FROM Ref_Document_Types AS T1 JOIN All_Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Date_Stored BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Document_ID IN (SELECT Document_ID FROM Document_Locations WHERE Date_in_Location_From = '2020-01-01') GROUP BY T1.Document_Type_Name HAVING AVG(T1.Document_Type_Code) > 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "b4f57a5a43e1c1b95c41c48ca1c4fa5ef57d3a91",
                "query": "SELECT T1.Document_Name FROM All_Documents AS T1 JOIN Document_Locations AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Location_Code IN (SELECT T3.Location_Code FROM Ref_Locations AS T3 WHERE T3.Location_Name = 'Location1')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "523a1bdeb8e26f94066bfe5847521e2975cd3ef5",
                "query": "SELECT Document_Type_Name FROM Ref_Document_Types WHERE Document_Type_Code = 'type1' LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "956475c794b0425287d2c50177f954d2741c42ec",
                "query": "SELECT AVG(T1.Document_ID) FROM All_Documents AS T1 WHERE T1.Date_Stored BETWEEN '2020-01-01' AND '2020-12-31' OR T1.Document_Type_Code = 'type1'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# = #VALUE#"
            },
            {
                "hash": "4f4f9c06033d6e75f41c6cc8390d8117fda0714a",
                "query": "SELECT COUNT(Document_Type_Code), SUM(Document_Type_Code) FROM Ref_Document_Types WHERE Day_Number BETWEEN 1 AND 2 ORDER BY Document_Type_Code ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "751f74ae1e17e2e1703d12c6c6af05f26c102631",
                "query": "SELECT Document_Type_Name, Document_Type_Description FROM Ref_Document_Types WHERE Document_Type_Code = 'SEC' AND Document_Type_Name IN ('Confidential', 'Secret')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (#VALUE#)"
            },
            {
                "hash": "965ae9c2ca7d58ca73ee362b029062aa52793e90",
                "query": "SELECT AVG(Document_Type_Code) FROM Ref_Document_Types AS T1 WHERE Document_Type_Name = 'Type 1' AND Document_Type_Description BETWEEN 'Description 1' AND 'Description 2' AND Document_Type_Code > 1",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "819931bffc25aa8cb4afd23a86e2fc5e8df0a7a5",
                "query": "SELECT T1.Document_Name, T2.Document_Name FROM All_Documents AS T1 JOIN All_Documents AS T2 ON T1.Document_ID = T2.Document_ID ORDER BY T1.Document_Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7575044eb7d02b429ec846a2650602e69fffde06",
                "query": "SELECT T1.Document_Type_Name, MAX(T2.Date_Stored) FROM Ref_Document_Types AS T1 JOIN All_Documents AS T2 ON T1.Document_Type_Code = T2.Document_Type_Code WHERE T2.Date_Stored >= '2000-01-01' LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bf108619cac29bf5b12a12a2192f574bd4c6b0a4",
                "query": "SELECT AVG(ALL_T2.Document_ID) AS DOC_ID FROM All_Documents AS ALL_T1 INNER JOIN Document_Locations AS ALL_T2 ON ALL_T1.Document_ID = ALL_T2.Document_ID ORDER BY AVG(ALL_T2.Document_ID) ASC",
                "template": "SELECT AVG(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE# INNER JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "ad9642a5a745fb0572f2c4bf5d56e0bfc0406d4a",
                "query": "SELECT Document_Type_Name, AVG(Document_Type_Description) FROM Ref_Document_Types WHERE Document_Type_Code <= '123' GROUP BY Document_Type_Name ORDER BY Document_Type_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "customers_and_addresses": [
            {
                "hash": "dbf49e5503645eae2f249b0a3fc0db90493e72d1",
                "query": "SELECT COUNT(product_id), COUNT(DISTINCT order_id) FROM Order_Items",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "527b927c8c54be993b0fbc61b8fea787889fc24b",
                "query": "SELECT * FROM Products WHERE product_id <= 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "bdad62fbef41cdc1b43263de551190ac3036b901",
                "query": "SELECT customer_name, payment_method FROM Customers LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "bd079d70b5814572a0e89609082bf5e3debd0cac",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.order_id), COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T2.order_status = 'shipped' ORDER BY T1.customer_id ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c9b47690c5cc3582bc8ab7140cb9d4d39185830d",
                "query": "SELECT T1.customer_name, T5.product_details FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Products AS T4 ON T3.product_id = T4.product_id JOIN Customer_Addresses AS T5 ON T1.customer_id = T5.customer_id WHERE T2.order_status = 'Completed' AND T2.order_date > (SELECT MAX(order_date) FROM Customer_Orders) LIMIT 1000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "4f15cb19976bd1364d1214e09e0f0b32d14f6f8c",
                "query": "SELECT T1.customer_name, T2.order_date FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_became_customer >= '2020-01-01' ORDER BY T2.order_date ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "cc6f4376c21bf37d9527947e39efb9f5416569ea",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(T2.product_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T2.order_status = 'pending' OR T3.order_quantity > (SELECT AVG(order_quantity) FROM Order_Items) OR T3.product_id IN (SELECT product_id FROM Products WHERE product_details = 'Electronics')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "cf29f540aab5906cfdeef127f4e6a847f3823f0f",
                "query": "SELECT SUM(T1.order_quantity) FROM Order_Items AS T1 JOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id WHERE T2.order_status > 'pending'",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "8dda1434b38ae1a93a2d1396318160044a25094f",
                "query": "SELECT address_content FROM Addresses WHERE city = 'New York' OR zip_postcode BETWEEN '10001' AND '10010' OR address_id NOT IN (SELECT address_id FROM Customer_Addresses)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "53ac0d4caa95ebba05839f626a634c5fb9d8417d",
                "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_became_customer BETWEEN '2020-01-01' AND '2021-01-01' OR T2.customer_name = 'John Doe' OR EXISTS (SELECT * FROM Customer_Addresses WHERE customer_id = T1.customer_id) GROUP BY T1.customer_name HAVING COUNT(T1.customer_id) > 1 ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1f1d4b831225f1602ea4ff349ea6166679b4d156",
                "query": "SELECT T1.customer_name, T2.customer_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id = 100 OR T2.customer_id = 200 OR T1.customer_id IN (SELECT customer_id FROM Customer_Orders WHERE order_status = 'pending')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2626690cf8e6e379cb87c85216f0aa502b9fcd1b",
                "query": "SELECT T1.customer_name, SUM(T2.order_quantity) FROM Customers AS T1 JOIN Customer_Orders AS T3 ON T1.customer_id = T3.customer_id JOIN Order_Items AS T2 ON T2.order_id = T3.order_id WHERE T2.order_quantity > 5 AND T2.product_id IN (SELECT product_id FROM Products WHERE product_details LIKE '%Laptop%')",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '%#VALUE#%')"
            },
            {
                "hash": "981ad6fd31d144226dc76299f029a5d87b51958b",
                "query": "SELECT T1.customer_name, T2.product_details FROM Customers AS T1 JOIN Order_Items AS T3 ON T1.customer_id = T3.order_id JOIN Products AS T2 ON T3.product_id = T2.product_id ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9047bf44c08fcd909e00ebba189d605ea1ea32ef",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.customer_id), COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id < 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "3531f2613162f79bf37db7e7adfb56e55268cc9c",
                "query": "SELECT COUNT(order_id) FROM Customer_Orders WHERE order_status != 'cancelled' ORDER BY order_id DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ba0d0b1940981b46012f39777d2f13023aea7e4b",
                "query": "SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id = 10 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2645647a1effc77c5c8e80743d2c8269f9a167f2",
                "query": "SELECT * FROM Customers WHERE customer_name != 'John Doe' AND date_became_customer != '2020-01-01'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "6716c7e216cf30ab4ec27d48499bc7d277b6e3fb",
                "query": "SELECT T1.customer_name, T2.customer_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_became_customer < T2.date_became_customer GROUP BY T1.customer_name HAVING MIN(T1.date_became_customer) ORDER BY T1.date_became_customer DESC LIMIT 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d69158001c5912a6f1d83e0c6c47a7678a0ffeb1",
                "query": "SELECT COUNT(product_id) FROM Products LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "53ae4574c38e1a1432acacaa46f4f4cb8109a4f0",
                "query": "SELECT MIN(T1.product_id), T2.customer_name FROM Order_Items AS T1 JOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.customer_name HAVING MIN(T1.product_id) <= 100",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "493a43de7cd82e575db4239fb3b5435ca6dbcbd3",
                "query": "SELECT COUNT(DISTINCT T1.customer_name), T2.product_details FROM Customers AS T1 JOIN Order_Items AS T2 ON T1.customer_id = T2.order_id WHERE T1.payment_method = 'Cash'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e6c5c10fac13cd0ac71f86b4956405ea37d578b6",
                "query": "SELECT T1.customer_id, T2.customer_id FROM Customer_Addresses AS T1 JOIN Customer_Addresses AS T2 ON T1.customer_id = T2.customer_id WHERE T1.address_id = 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "b0fe64c9cf0c2c257ba07ef1cc761b11fa3d3ed3",
                "query": "SELECT COUNT(customer_id) FROM Customer_Addresses WHERE address_type = 'Billing' GROUP BY address_id HAVING COUNT(customer_id) >= 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "d58c0915295a2a1e0b89424ed5ee25bd5faf655c",
                "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Customer_Addresses AS T2 ON T1.customer_id = T2.customer_id JOIN Addresses AS T3 ON T3.address_id = T2.address_id WHERE T3.country = 'USA' AND T1.payment_method = 'Cash'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "525ea527d40c029f80fe2c7b25b8811e4f11cfad",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(DISTINCT T2.product_id), SUM(T3.order_quantity) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name != T2.order_status",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "e4ca4b62c5eb4f37b62c25babf4fbca827ca3a2e",
                "query": "SELECT customer_name FROM Customers WHERE customer_id IN (SELECT customer_id FROM Customer_Orders WHERE order_status = 'delivered')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c3190c23a83205c9958fdb9e42ad6eb7c96c7d6e",
                "query": "SELECT customer_name FROM Customers WHERE date_became_customer BETWEEN '2020-01-01' AND '2020-12-31' AND payment_method = 'cash' LIMIT 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d7569d21ac0089344d327b16b87f884405887c5d",
                "query": "SELECT T1.product_id FROM Products AS T1, Products AS T2 WHERE T1.product_id < T2.product_id LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ec6256fdf4c5c91b3a22298539739e76e483bdb1",
                "query": "SELECT T1.customer_name, T2.product_details FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Products AS T4 ON T3.product_id = T4.product_id WHERE T1.customer_name != 'John' ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "cinema": [
            {
                "hash": "6631a49eb649f3b6aa90e9c05f7851ed8ae01209",
                "query": "SELECT T1.Title, COUNT(DISTINCT T2.Cinema_ID), SUM(T3.Price) FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T2.Cinema_ID = T3.Cinema_ID WHERE T3.Location = 'New York' AND T2.Date BETWEEN '2022-01-01' AND '2022-12-31' AND T1.Rank_in_series > 5 ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1f6d08e6be0d90eacfba5bc3cc0c2c644383843a",
                "query": "SELECT COUNT(Film_ID), SUM(Rank_in_series) FROM film WHERE Title != 'Batman'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "27a7349be0c30d24ecd4a481e06f30a4aa5b9c7f",
                "query": "SELECT T1.Title, T2.Name, T2.Capacity FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID JOIN cinema AS T2 ON T3.Cinema_ID = T2.Cinema_ID WHERE T2.Openning_year < T1.Rank_in_series AND T1.Number_in_season < T2.Capacity LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# AND #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "73e44853bfd2c5bb7d250a9b9875e5cb44f51905",
                "query": "SELECT Title, Production_code FROM film WHERE Title NOT IN (SELECT Title FROM film WHERE Original_air_date = '2000')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c2e0fe14da3d07a41567c62151a788b11b35859b",
                "query": "SELECT T2.Title, T1.Openning_year FROM cinema AS T1 JOIN schedule AS T2 ON T1.Cinema_ID = T2.Cinema_ID JOIN film AS T3 ON T2.Film_ID = T3.Film_ID WHERE T2.Film_ID = 5 OR T3.Number_in_season BETWEEN 10 AND 15 OR EXISTS (SELECT 1 FROM schedule AS T4 WHERE T4.Show_times_per_day > 10)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "e013ae4f9d7bba395d4365cf55012269f7d23f4d",
                "query": "SELECT T1.Cinema_ID FROM cinema AS T1 JOIN schedule AS T2 ON T1.Cinema_ID = T2.Cinema_ID WHERE EXISTS ( SELECT 1 FROM film AS T3 WHERE T2.Film_ID = T3.Film_ID AND T3.Number_in_season = 5 ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "d57128deb690c46352be75af3c9e04a8f4670bcb",
                "query": "SELECT COUNT(DISTINCT Title) FROM film WHERE Rank_in_series = 1 ORDER BY Film_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5ce3165b1b293598fec8e20f1fd9d9498782504d",
                "query": "SELECT MIN(T1.Openning_year) , COUNT(T2.Cinema_ID) FROM cinema AS T1 JOIN schedule AS T2 ON T1.Cinema_ID = T2.Cinema_ID WHERE T1.Location != 'New York' ORDER BY T1.Openning_year ASC",
                "template": "SELECT MIN(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d32435d5c0a612d5e315e1f4cc880f15457ad188",
                "query": "SELECT T3.Title, SUM(T1.Show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID JOIN film AS T3 ON T1.Film_ID = T3.Film_ID WHERE T3.Title != 'Movie1'",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "01f4fc1c95b22dfae28b263f9f7697d309fb34f2",
                "query": "SELECT T1.Title FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID WHERE T1.Rank_in_series <= 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "44d2d3de91b918d4b1c88141641b03d9fe2896c4",
                "query": "SELECT T1.Title, T2.Name FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T2.Cinema_ID = T3.Cinema_ID WHERE T3.Capacity < 500",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "5b0a60cb9c26f28ad84db3589acd7204b22feae1",
                "query": "SELECT T1.Title, T2.Name, MIN(T3.Price) FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T2.Cinema_ID = T3.Cinema_ID GROUP BY T1.Title, T2.Name HAVING T2.Capacity > 500 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#, #COLUMN# HAVING #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4f878efd17bfeb8f9cf28b8a127090048c73631b",
                "query": "SELECT Title, Directed_by FROM film AS myTable ORDER BY Rank_in_series ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "525ebba59c423b3ca0b02b748c70a8290d114ecb",
                "query": "SELECT Title FROM film WHERE Film_ID IN (SELECT Film_ID FROM schedule WHERE Price BETWEEN 5 AND 10) OR Number_in_season NOT IN (SELECT Number_in_season FROM film WHERE Rank_in_series > 5) ORDER BY Film_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3bcf6c5453d3d6c2083276b653d7db54a100a154",
                "query": "SELECT * FROM film WHERE Rank_in_series = 1 OR Number_in_season = 3 OR Film_ID NOT IN (SELECT Film_ID FROM schedule WHERE Date = '2020-01-01')",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "63bbcb04b01d962dbfe3fcba1194e57e3532cec3",
                "query": "SELECT T1.Title, T2.Title FROM film AS T1 JOIN film AS T2 ON T1.Rank_in_series != T2.Rank_in_series GROUP BY T1.Title",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "de570ca825786882d1854ae3ecb7e008e05b6d93",
                "query": "SELECT T1.Title, AVG(T3.Price) FROM film AS T1 JOIN schedule AS T3 ON T1.Film_ID = T3.Film_ID WHERE T3.Show_times_per_day < 10 ORDER BY T3.Price ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7ed5d6928b6741f26b3e4669751dcace663d0871",
                "query": "SELECT MAX(Number_in_season), MIN(Rank_in_series), AVG(Production_code) FROM film ORDER BY Title ASC",
                "template": "SELECT MAX(#COLUMN#), MIN(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "29ea841cc72d43b24e683336d5a4b2ee8793c66e",
                "query": "SELECT DISTINCT T1.Title, COUNT(T2.Title) FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T2.Cinema_ID = T3.Cinema_ID WHERE T2.Price BETWEEN 5 AND 10 AND T2.Show_times_per_day IN (SELECT Show_times_per_day FROM schedule WHERE Price > 10) ORDER BY T2.Show_times_per_day DESC",
                "template": "SELECT DISTINCT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dbaf8e182408740bfb569a7efe55a75170d840cd",
                "query": "SELECT Title, COUNT(DISTINCT Film_ID) FROM film WHERE Rank_in_series BETWEEN 1 AND 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "8388aed7a758372b6c73e38fc00186e2ccf5112c",
                "query": "SELECT Title, COUNT(Film_ID) FROM film GROUP BY Title HAVING COUNT(Film_ID) > 1 ORDER BY Title DESC LIMIT 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d2911566f4a6770e63333c237452bc7ef40450ec",
                "query": "SELECT T1.Film_ID FROM film AS T1 JOIN film AS T2 ON T1.Directed_by = T2.Directed_by WHERE T1.Rank_in_series > 5 AND T1.Rank_in_series < 10 AND T1.Number_in_season = (SELECT MAX(Number_in_season) FROM film)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "120f9e111b3952a4bf78d0f3f6ff181ac622cb34",
                "query": "SELECT DISTINCT T1.Title, T2.Name, T3.Price FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID JOIN cinema AS T3 ON T2.Cinema_ID = T3.Cinema_ID WHERE T1.Rank_in_series BETWEEN 1 AND 10 OR T2.Show_times_per_day > 5 OR T3.Price < 15 LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "05e1f926a5c6362fd4c111bd82d365f6d33b3d08",
                "query": "SELECT AVG(T1.Price) FROM schedule AS T1 JOIN film AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Rank_in_series <= 5 LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "17cbf6d4fa0085bc3edb030af4c9b36a7e6db5d1",
                "query": "SELECT Title FROM film WHERE Original_air_date BETWEEN '2010-01-01' AND '2015-12-31' OR Rank_in_series > 2 OR Number_in_season = 1 ORDER BY Production_code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "77ce0ee6c6a9c0be651cf8411f9754e9be7b7139",
                "query": "SELECT Title, AVG(Number_in_season) FROM film WHERE Rank_in_series > 5 GROUP BY Title",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "7610b009216083737631198c281ce9d8ad2ce075",
                "query": "SELECT MAX(T1.Price) FROM schedule AS T1 JOIN cinema AS T2 ON T1.Cinema_ID = T2.Cinema_ID WHERE T2.Openning_year > 1990 OR T2.Capacity BETWEEN 100 AND 500 OR T1.Show_times_per_day > 5 LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e9027575d4bad593a8968dacc7fda37e3e663122",
                "query": "SELECT Film_ID FROM film WHERE Rank_in_series < 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "6a44a0a977f4e95a91e399ac070073abc528545b",
                "query": "SELECT T1.Title FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Show_times_per_day > 5 OR T1.Rank_in_series BETWEEN 1 AND 10 AND T1.Title NOT IN (SELECT T1.Title FROM film AS T1 JOIN schedule AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Show_times_per_day < 5) ORDER BY T2.Price ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "57ee2cf3a14bc543ad69005727154377aa399af4",
                "query": "SELECT T1.Title FROM film AS T1 WHERE T1.Title = 'Film Title' ORDER BY T1.Rank_in_series DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            }
        ],
        "cre_Students_Information_Systems": [
            {
                "hash": "e532e80dfbf44f22c9decf5c9e867c076772a6e0",
                "query": "SELECT T1.student_id FROM Students AS T1 WHERE T1.student_id IN ( SELECT T2.student_id FROM Student_Events AS T2 WHERE T2.event_type_code = 'A101' ) GROUP BY T1.student_id HAVING MAX(T1.student_id) > 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#' ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4d43f2b6e503fef133ac153bc49ef36762468de3",
                "query": "SELECT student_id FROM Students WHERE student_id = 12345 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "14c84fa4f19d203f33123bce6712d9d419076cbd",
                "query": "SELECT T1.student_id, AVG(T1.student_details) FROM Students T1 WHERE NOT EXISTS ( SELECT 1 FROM Student_Loans T2 WHERE T2.student_id = T1.student_id AND T2.amount_of_loan > 5000 ) GROUP BY T1.student_id",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "0d7ab465c5e003d046d5b729e47e747c2c1e9c9e",
                "query": "SELECT T1.student_id FROM Students AS T1 WHERE EXISTS (SELECT T2.student_id FROM Student_Loans AS T2 WHERE T1.student_id = T2.student_id AND T2.amount_of_loan > 10000) GROUP BY T1.student_id HAVING SUM(T2.amount_of_loan) > 10000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2ae4a05446f34141ab0ee7295d5e0d49d043f5f3",
                "query": "SELECT T1.student_id, T3.student_id, T4.student_id FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id = T2.student_id JOIN Students_Addresses AS T3 ON T2.student_id = T3.student_id JOIN Achievements AS T4 ON T3.student_id = T4.student_id WHERE T2.event_date > T4.date_achievement",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN#"
            },
            {
                "hash": "bac4eae6d995fbac2e3522dece0586d32f8c7506",
                "query": "SELECT T1.student_id, T2.teacher_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id WHERE T2.class_id > 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "80619121b26a740b010d09bd02cbf51d706816f7",
                "query": "SELECT COUNT(DISTINCT T1.student_id), COUNT(DISTINCT T2.transcript_id), COUNT(DISTINCT T3.class_id) FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T1.student_id = T3.student_id WHERE T1.student_id = 100 AND NOT EXISTS (SELECT 1 FROM Detention AS T4 WHERE T4.student_id = T1.student_id)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "ecadd2fbe5aa66a35a5a20bda8cd61a65b2c8795",
                "query": "SELECT COUNT(DISTINCT bio_data), COUNT(DISTINCT student_details), COUNT(DISTINCT student_id) FROM Students WHERE student_id <= 100 ORDER BY student_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e7b9ca8fca8e76885eb5c673b66911cfc19ec683",
                "query": "SELECT COUNT(DISTINCT student_id), COUNT(DISTINCT behaviour_monitoring_id), COUNT(DISTINCT date_of_transcript) FROM Behaviour_Monitoring JOIN Transcripts ON Behaviour_Monitoring.student_id = Transcripts.student_id WHERE Behaviour_Monitoring.behaviour_monitoring_id = 10 GROUP BY student_id HAVING MAX(behaviour_monitoring_id) = 10 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "5667742bdbd0bb0e088c6dc07ed0fb3bb8ce10c1",
                "query": "SELECT T1.student_id, T1.bio_data, COUNT(T2.detention_id) FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id = T2.student_id WHERE EXISTS (SELECT 1 FROM Student_Events AS T3 WHERE T3.student_id = T1.student_id AND T3.event_type_code = 'Expulsion')",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f3cd4fc771c9520bb6e21f30aecd5c2229662e74",
                "query": "SELECT COUNT(T1.student_id), SUM(T2.amount_of_loan) FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T1.student_id = T3.student_id WHERE T3.class_id <= 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "dd2186ece066edd0450df5026f4d3f8fbb6e0e33",
                "query": "SELECT T1.student_id, T2.transcript_id FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id < 100 GROUP BY T2.transcript_id ORDER BY T2.transcript_id ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1df59e079f3265705871f3c839966594364fe6cb",
                "query": "SELECT AVG(T1.student_id), T2.teacher_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id JOIN Teachers AS T3 ON T2.teacher_id = T3.teacher_id WHERE T1.student_id = 123 AND T3.teacher_id = 456 OR T1.student_id BETWEEN 1 AND 100 ORDER BY T1.student_id ASC",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3cf7862c7194633d84930dca5c0a6dac3228d1ce",
                "query": "SELECT T1.student_id, COUNT(DISTINCT T2.event_id) FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id IN (SELECT student_id FROM Achievements WHERE achievement_type_code = 'type_code') GROUP BY T1.student_id HAVING AVG(T2.event_id) > 10 ORDER BY COUNT(DISTINCT T2.event_id) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "e5c4a01eed2fb7607cc92fcbfdfd6b362d0a92ca",
                "query": "SELECT COUNT(T3.class_id), T2.student_id FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id = T2.address_id JOIN Classes AS T3 ON T2.student_id = T3.student_id WHERE T1.address_details >= 'ABC' GROUP BY T2.student_id",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "24c2472dfc398041445f2e39f5464c8c81788f55",
                "query": "SELECT T2.teacher_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id ORDER BY T2.teacher_details DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ef99edd2d130ad40af69693cba60e69cce426148",
                "query": "SELECT T1.student_id FROM Students AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "dba9a0aa7e50cb0437aaa8cf46d0c331360c72ee",
                "query": "SELECT COUNT(DISTINCT T1.student_id) FROM Student_Events AS T1 JOIN Student_Events AS T2 ON T1.student_id = T2.student_id WHERE T1.event_date < T2.event_date ORDER BY T1.student_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f78a3c65789422f9cb737e03aa7b584809dc3a5d",
                "query": "SELECT T2.address_type_code FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id WHERE T2.date_to < '2000-01-01' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "cd9ece0cc5d990e803c72fe75f3e2c0603091da6",
                "query": "SELECT COUNT(student_id) FROM Students WHERE student_id <= 100",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8bff77f0e511911b822061a3b7ca963e61cd9819",
                "query": "SELECT AVG(T1.student_id) FROM Students AS T1 JOIN Achievements AS T2 ON T1.student_id = T2.student_id WHERE T2.date_achievement > '2020-01-01' ORDER BY T1.student_id DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e76fb63138f5465977b44346d3004eca1ecdd483",
                "query": "SELECT T1.student_id, COUNT(T2.class_id) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(T2.class_id) <= 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "6382eaecda0c0e1df483b9a6059d473b53c95bde",
                "query": "SELECT T1.student_id, COUNT(DISTINCT T1.transcript_id) FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id = 10 GROUP BY T1.student_id ORDER BY COUNT(DISTINCT T1.transcript_id) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "61964e6f3e22d46631adfa884c0952860388b21f",
                "query": "SELECT T1.student_id, T2.teacher_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id WHERE T1.student_id IN (SELECT student_id FROM Achievements WHERE achievement_type_code = 'some_code') LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            }
        ],
        "decoration_competition": [
            {
                "hash": "fb7403af738575e5fa842088276caeda4ce1e260",
                "query": "SELECT Name FROM member WHERE College_ID = 1 AND EXISTS (SELECT 1 FROM college WHERE College_ID = member.College_ID AND Name = 'College Name')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0a7fb5d68e69950bba14a42b8203cae1dc3c01c8",
                "query": "SELECT Name FROM college WHERE College_ID >= 10 ORDER BY Leader_Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1c63f89d83e3c42b864d1b9e69a48cf1d11071c2",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T2.Name), AVG(T1.College_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T1.College_ID = 1 ORDER BY T1.College_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "04d12777d324697f963cb3bd2b7752d203165339",
                "query": "SELECT T1.Name, T2.Name, COUNT(T3.Round_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID WHERE T1.College_Location = 'New York' AND T2.Country = 'USA' AND T2.Member_ID IN (SELECT Member_ID FROM round WHERE Rank_in_Round > 5)",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "691ed5619844460922bf19dd214a3188763ee0ba",
                "query": "SELECT COUNT(DISTINCT T2.Name), COUNT(T2.Member_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Member_ID > 100 ORDER BY T2.Member_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2b1ae8e96c47146e2105e29fdea6d6856cb56b07",
                "query": "SELECT T1.Name, COUNT(T1.College_ID) FROM college AS T1 WHERE T1.College_ID > 10 GROUP BY T1.Name ORDER BY T1.Name ASC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6bef14d9e01089782fee0e606b9eed642d52f23d",
                "query": "SELECT Name, SUM(College_ID), Leader_Name FROM college WHERE College_ID != 1 GROUP BY Leader_Name HAVING SUM(College_ID) > 10 ORDER BY College_ID DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fe7bcdc41604894a31bb31043d213feafbfa7c1c",
                "query": "SELECT COUNT(DISTINCT T3.Round_ID), SUM(T1.College_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "a01a28f667ef7c865e3b7149cc705607f49c1c4b",
                "query": "SELECT T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Name NOT IN (SELECT Name FROM member AS T3 WHERE T3.College_ID = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9df99520e40161da324ea3ad798ff1413c05fd34",
                "query": "SELECT T1.Name, T2.Name, T3.Decoration_Theme FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID WHERE T1.College_ID = T2.College_ID AND T2.Member_ID = T3.Member_ID AND T3.Decoration_Theme = 'Theme1' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "30c4f352b106d8165b1c9c8a04c418d700342ae9",
                "query": "SELECT T1.Leader_Name, COUNT(DISTINCT T2.Country) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = 'USA' OR T1.College_Location = 'New York' AND NOT EXISTS (SELECT 1 FROM round AS T3 WHERE T3.Member_ID = T2.Member_ID AND T3.Rank_in_Round > 1) GROUP BY T1.Leader_Name HAVING COUNT(T2.Member_ID) > 10 LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d25ff2fa46395a9380b4ed849d5bcf7ea710737d",
                "query": "SELECT T1.College_Location, SUM(T2.Round_ID) FROM college AS T1 JOIN round AS T2 ON T1.College_ID = T2.Member_ID WHERE T2.Round_ID >= 1 GROUP BY T1.College_Location ORDER BY SUM(T2.Round_ID) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "02aaddb6666cb42c72a481163d5d5e0b9f1bb213",
                "query": "SELECT T1.Name, T2.Name, T3.Decoration_Theme FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "cd899e66832940662ecc47bd4549ecbf06bd4023",
                "query": "SELECT T1.Name, T2.Name, T2.Country FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "0dafb5ac0fa52dec4f72b7d289d1ce5ac88fd75d",
                "query": "SELECT Name, AVG(Rank_in_Round) FROM round JOIN member ON round.Member_ID = member.Member_ID WHERE Leader_Name BETWEEN 'A' AND 'Z' GROUP BY member.Name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5821d1efba407e1c2ede4f00c490e02c4ad64208",
                "query": "SELECT T1.Name, SUM(T1.College_ID) FROM college AS T1 GROUP BY T1.Name HAVING SUM(T1.College_ID) >= 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "8ef19a1e76a38d0106d8fb65381242691286f516",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T2.Name), COUNT(DISTINCT T3.Round_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID WHERE T3.Rank_in_Round <= 2 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "70b310f6101cfa7debcf836fd519bb82c18d8e64",
                "query": "SELECT COUNT(DISTINCT T1.Member_ID) FROM round AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Round_ID BETWEEN 1 AND 10 OR T2.Country = 'USA' OR NOT EXISTS (SELECT 1 FROM college AS T3 WHERE T2.College_ID = T3.College_ID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "512434fdc456f496270dff92b32205999c71462a",
                "query": "SELECT Name, College_Location FROM college WHERE College_ID <= 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "915e4dae497d61d0679c936a33030335fb372196",
                "query": "SELECT T1.College_ID, MIN(T2.Rank_in_Round), COUNT(T3.Round_ID) FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID GROUP BY T1.College_ID HAVING MIN(T2.Rank_in_Round) > 1",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "cd829d80c1396a975539f76e81b5a2ffa42549b2",
                "query": "SELECT Leader_Name, AVG(College_Location) FROM college GROUP BY Leader_Name HAVING AVG(College_Location) > 50",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "74f2229f479542110362dc4ac9a32d8b8d47f17c",
                "query": "SELECT T1.Name, T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID JOIN round AS T3 ON T2.Member_ID = T3.Member_ID WHERE T1.Leader_Name != T2.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c112295c810d18682f713500e6b5dce0b86f51fe",
                "query": "SELECT College_Location FROM college WHERE College_ID BETWEEN 1 AND 100 ORDER BY College_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c4478d97a3eb769a122e46cfa7aa6e3d3df06443",
                "query": "SELECT COUNT(Member_ID), College_ID FROM member WHERE College_ID != 10 GROUP BY College_ID ORDER BY College_ID ASC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ed6b2d45ea9a7f3647ecb999dcd3e82f95149dc7",
                "query": "SELECT T1.College_ID, T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T1.College_Location = 'New York' OR T2.Country = 'USA' OR NOT EXISTS (SELECT 1 FROM round AS T3 WHERE T3.Member_ID = T2.Member_ID AND T3.Rank_in_Round > 10) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "culture_company": [
            {
                "hash": "a65e0ef0b06bbe00832cb68d344aa1b2e895f37a",
                "query": "SELECT T1.Book_Title, AVG(T2.Budget_million) FROM book_club AS T1 JOIN culture_company AS T3 ON T1.book_club_id = T3.book_club_id JOIN movie AS T2 ON T3.movie_id = T2.movie_id GROUP BY T1.Book_Title HAVING T1.book_club_id NOT IN (SELECT book_club_id FROM book_club WHERE Result = 'Passed') LIMIT 1",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "245a2910b08f34c86a89570f6ced8794eae281de",
                "query": "SELECT T2.Company_name FROM book_club AS T1 JOIN culture_company AS T2 ON T1.book_club_id = T2.book_club_id WHERE T1.Year BETWEEN 2015 AND 2020 AND T1.Author_or_Editor = 'John Doe'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "a8930ce09c9e5fea39d0cbfb38c516bd7958a788",
                "query": "SELECT Title, SUM(Gross_worldwide) FROM movie WHERE Year = 2010 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9b609faa72daf36ad558ea6871e13c5b69f7c196",
                "query": "SELECT T1.Company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.Author_or_Editor = 'Author1' AND T2.Book_Title = 'Book1' AND T2.Publisher BETWEEN 'Publisher1' AND 'Publisher2'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0d994961bb54effcd103e02689073afcd505f4e1",
                "query": "SELECT Book_Title, AVG(Year) FROM book_club WHERE Result > 'Good' GROUP BY Book_Title HAVING AVG(Year) > 2010 ORDER BY Book_Title ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e27595cf69b9b9d49ac16a5ff6f009ef23ba7eb7",
                "query": "SELECT MAX(T2.Budget_million) FROM culture_company AS T1 JOIN movie AS T2 ON T1.movie_id = T2.movie_id WHERE T2.Director = 'Steven Spielberg' AND T1.Group_Equity_Shareholding BETWEEN 50 AND 100 AND T2.Gross_worldwide > 500 ORDER BY T2.Budget_million DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "cf2b7277c594e8f37dbcb81e5250b38c7b8a18c9",
                "query": "SELECT T2.Title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T2.book_club_id = T3.book_club_id WHERE T3.Year >= 2000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "716c85dd88ff1404430cd3d4c8095fca9283fdcb",
                "query": "SELECT T2.Title FROM book_club AS T1 JOIN movie AS T2 ON T1.book_club_id = T2.movie_id WHERE T2.Budget_million < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "f6783f54cb0301d2878e15e2000a818716f080b5",
                "query": "SELECT T1.Company_name, T3.Title FROM culture_company AS T1 JOIN movie AS T3 ON T1.movie_id = T3.movie_id JOIN book_club AS T2 ON T2.book_club_id = T1.book_club_id WHERE T2.Year = 2000 AND T2.Author_or_Editor = 'Author1' AND T3.movie_id IN (SELECT movie_id FROM movie WHERE Year > 2000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "0762138f9c5e4566586a4825f2be188bc28f6a3c",
                "query": "SELECT T1.Title AS new_name FROM movie AS T1 WHERE T1.Budget_million > 200 AND T1.Gross_worldwide BETWEEN 400 AND 600 OR T1.Director = 'James'",
                "template": "SELECT #COLUMN# AS new_name FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "51a852d4039ffbab2b88f834911a614e608e91eb",
                "query": "SELECT T1.Company_name, COUNT(T2.movie_id) FROM culture_company AS T1 JOIN movie AS T2 ON T1.movie_id = T2.movie_id WHERE T2.Budget_million != 0 GROUP BY T1.Company_name HAVING COUNT(T2.movie_id) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "b0050abbcb25b77e8edbccfb6f1f56fc8d3d1824",
                "query": "SELECT MAX(COUNT(DISTINCT Book_Title)) FROM book_club WHERE Year <= 2000",
                "template": "SELECT MAX(COUNT(DISTINCT #COLUMN#)) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "af18c7748516ba032ca9cf96623c8e7bd286ae05",
                "query": "SELECT T1.Book_Title, T2.Title FROM book_club AS T1 JOIN culture_company AS T3 ON T1.book_club_id = T3.book_club_id JOIN movie AS T2 ON T3.movie_id = T2.movie_id WHERE T1.Year <= 2000 AND T2.Budget_million <= 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9ab22be7bf6b51ee0c6213c4b891a41da218d1af",
                "query": "SELECT MIN(T1.Budget_million) FROM movie AS T1 WHERE T1.movie_id = 10 OR EXISTS (SELECT T2.movie_id FROM culture_company AS T2 WHERE T2.movie_id = T1.movie_id) GROUP BY T1.movie_id ORDER BY T1.movie_id DESC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE# OR EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b7aa599a2be9ebbaa455f029ba10d51bcad7737c",
                "query": "SELECT Author_or_Editor FROM book_club WHERE Book_Title >= 'Harry Potter' AND Publisher >= 'Penguin Books' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "b8e6075035cbbc682e3c62eabeaafd0b76e5a386",
                "query": "SELECT T1.Book_Title FROM book_club AS T1 JOIN culture_company AS T2 ON T1.book_club_id = T2.book_club_id JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.Year BETWEEN 1990 AND 2000 OR T1.Author_or_Editor = 'John' OR T3.Title NOT IN (SELECT Title FROM movie WHERE Budget_million > 50) GROUP BY T1.Book_Title HAVING COUNT(T3.movie_id) > 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "44819261258b8783c1d5974d172db33f81ae1628",
                "query": "SELECT T2.Company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id JOIN movie AS T3 ON T1.movie_id = T3.movie_id WHERE T2.Author_or_Editor != T3.Director LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e3899b5497ef6c5e67aaf4c0d2a91c5ece9b5068",
                "query": "SELECT T1.Author_or_Editor, T1.Book_Title FROM book_club AS T1 WHERE T1.Year >= 1980 AND T1.Category = 'Fiction'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "63c4056828f7ca2d6a8046cc557f4981bf05b9a2",
                "query": "SELECT DISTINCT COUNT(T2.book_club_id), COUNT(T1.book_club_id), COUNT(T1.Year) FROM book_club AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T1.Year = 1990 AND EXISTS (SELECT 1 FROM movie WHERE movie_id = T1.book_club_id) ORDER BY T1.book_club_id DESC",
                "template": "SELECT DISTINCT COUNT(#COLUMN#), COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4393db6b44c6951eb6b70f51f25ba9637f3b0c39",
                "query": "SELECT T1.Title, T2.Book_Title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T2.book_club_id = T3.book_club_id WHERE T3.Year <= 2010 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "422452178a700afe0c5b3b93d67fc413a5a400f1",
                "query": "SELECT COUNT(DISTINCT movie_id) FROM culture_company WHERE movie_id <= 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "dd135629ddd01cc6974115f0c92229861a7880b4",
                "query": "SELECT Company_name AS New_Table_Name FROM culture_company WHERE Company_name >= 'A' ORDER BY Company_name ASC",
                "template": "SELECT #COLUMN# AS #TABLE# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "fc33b611f43e3004675508f8590cc868293aa9cf",
                "query": "SELECT T1.Company_name, T2.Budget_million, T3.Book_Title FROM culture_company AS T1 JOIN movie AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T1.book_club_id = T3.book_club_id WHERE T2.Budget_million < 100 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "da6e83e7ff29137c31b078fcd67f01508b08d374",
                "query": "SELECT book_club_id FROM book_club WHERE Book_Title = 'book_title' OR Year BETWEEN 1900 AND 2000 OR EXISTS (SELECT 1 FROM culture_company WHERE book_club_id = book_club.book_club_id AND Type = 'type') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "1ad382c76b685fe1ace488f1db2bcd945f13bd02",
                "query": "SELECT Title FROM movie WHERE movie_id NOT IN (SELECT movie_id FROM culture_company WHERE book_club_id = 'book_club1') AND Budget_million BETWEEN 50 AND 100 AND movie_id IN (SELECT movie_id FROM culture_company WHERE Type = 'type1')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "3783778d94453e4a926d3ea3954fe8768b053d6f",
                "query": "SELECT COUNT(DISTINCT Category) FROM book_club WHERE Year BETWEEN 2010 AND 2020 OR Publisher IN (SELECT Publisher FROM book_club WHERE Result = 'Winner') OR Author_or_Editor IN (SELECT Author_or_Editor FROM book_club WHERE Book_Title = 'Book1') GROUP BY Category HAVING SUM(book_club_id) > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            }
        ],
        "program_share": [
            {
                "hash": "f5c3e6ee065e7c26846ebbc6b004d486ca04c4fd",
                "query": "SELECT T4.Name, T2.Time_of_day FROM program AS T4 JOIN broadcast AS T2 ON T4.Program_ID = T2.Program_ID JOIN channel AS T1 ON T1.Channel_ID = T2.Channel_ID JOIN broadcast_share AS T3 ON T2.Program_ID = T3.Program_ID WHERE T3.Share_in_percent < 50 ORDER BY T2.Time_of_day ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bcdd6cddca98cd518e26199427fc64d756758d08",
                "query": "SELECT T1.Name FROM program AS T1 LEFT JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID WHERE T2.Time_of_day = 'Morning' OR T2.Time_of_day = 'Afternoon' OR EXISTS (SELECT 1 FROM broadcast AS T3 WHERE T3.Program_ID = T1.Program_ID AND T3.Time_of_day = 'Night') ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "41da21ed5e86721e937ac2ca233b44d54296676d",
                "query": "SELECT Name FROM program WHERE Launch BETWEEN 2000 AND 2010 AND EXISTS (SELECT 1 FROM broadcast WHERE program.Program_ID = broadcast.Program_ID AND Time_of_day = 'Morning')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #TABLE#.Program_ID = #TABLE#.Program_ID AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "f96d095a6b7deee60910685752a23969b6fed009",
                "query": "SELECT T1.Program_ID, COUNT(T1.Program_ID) FROM program AS T1 JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID WHERE T1.Launch > 2000 GROUP BY T1.Program_ID HAVING COUNT(T1.Program_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "8bd8d048bdc3a1271bc8b60fcc6b4d6dcac892b4",
                "query": "SELECT Program_ID FROM program WHERE Launch < 2000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "0638afac1498febedd5c05733314298cf2ad8cd3",
                "query": "SELECT T1.Name FROM program AS T1 WHERE T1.Launch BETWEEN 2010 AND 2015 AND EXISTS (SELECT 1 FROM broadcast AS T2 WHERE T2.Program_ID = T1.Program_ID AND T2.Time_of_day = 'Morning') AND T1.Owner = 'ABC'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "a8867000c7df33c4d898bac1a3c3a44b2eb2b3c8",
                "query": "SELECT COUNT(DISTINCT T1.Program_ID), COUNT(T1.Program_ID) FROM program AS T1 JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID WHERE T1.Launch BETWEEN 1980 AND 1990 OR T1.Owner = 'ABC' OR T1.Program_ID = 123 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ef9b71123f39ef623f5be9c65a992507b3f8d2ef",
                "query": "SELECT COUNT(DISTINCT T1.Program_ID), SUM(T2.Share_in_percent) FROM program AS T1 JOIN broadcast_share AS T2 ON T1.Program_ID = T2.Program_ID WHERE T1.Program_ID NOT IN (SELECT Program_ID FROM broadcast WHERE Channel_ID = 1)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0a1768d74fe0a0c0c51c6d25329eecb51a731110",
                "query": "SELECT T1.Program_ID, MAX(T4.Share_in_percent) FROM program AS T1 JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID JOIN channel AS T3 ON T2.Channel_ID = T3.Channel_ID JOIN broadcast_share AS T4 ON T3.Channel_ID = T4.Channel_ID WHERE T1.Owner = 'ABC' AND T2.Time_of_day = 'Morning' AND T4.Share_in_percent BETWEEN 10 AND 20 AND T3.Share_in_percent > (SELECT AVG(Share_in_percent) FROM channel) GROUP BY T1.Program_ID ORDER BY T1.Program_ID ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0f11b498ae4834b486f699621e8650aafe62132a",
                "query": "SELECT T1.Name, SUM(T2.Share_in_percent) FROM program AS T1 JOIN broadcast_share AS T2 ON T1.Program_ID = T2.Program_ID WHERE T1.Launch <= 2000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "67803eab65cdfe9cd2205b31560b40445a30804d",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Program_ID) FROM program AS T1 JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID JOIN broadcast_share AS T3 ON T2.Program_ID = T3.Program_ID WHERE T1.Program_ID = (SELECT T4.Program_ID FROM program AS T4 JOIN broadcast AS T5 ON T4.Program_ID = T5.Program_ID JOIN broadcast_share AS T6 ON T5.Program_ID = T6.Program_ID GROUP BY T4.Program_ID HAVING COUNT(DISTINCT T6.Program_ID) > 1)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE#)"
            },
            {
                "hash": "bac7559b3b2702fc6c2b435dc6a65cf5538eaff8",
                "query": "SELECT T2.Name, T1.Name, T3.Share_in_percent FROM channel AS T1 JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN broadcast_share AS T3 ON T1.Channel_ID = T3.Channel_ID WHERE T1.Rating_in_percent <= 100",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "c0f474de2b855954743e91476afa7f601b54e236",
                "query": "SELECT Name FROM program WHERE Launch < 2000 ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "01462fdf46e9dcfcd805060e9d99b3c29f3285a0",
                "query": "SELECT SUM(T1.Share_in_percent) FROM channel AS T1 WHERE T1.Owner = 'ABC' AND T1.Share_in_percent BETWEEN 10 AND 20 AND T1.Channel_ID NOT IN (SELECT T2.Channel_ID FROM broadcast AS T2)",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "9304307c2b0b6f810e65566afd1a907cc3c11ee9",
                "query": "SELECT T1.Name FROM program AS T1 JOIN channel AS T2 ON T1.Program_ID = T2.Channel_ID WHERE NOT EXISTS (SELECT 1 FROM broadcast AS T3 WHERE T3.Program_ID = T1.Program_ID AND T2.Channel_ID = T3.Channel_ID)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "f257ce21268448344fdfcc882c603b805500845b",
                "query": "SELECT COUNT(Program_ID), SUM(Share_in_percent) FROM broadcast_share WHERE Channel_ID = 101",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "82847fa90b82b3159adfa5c261f03240e1462321",
                "query": "SELECT T1.Name, T2.Name FROM program AS T1 JOIN channel AS T2 ON T1.Program_ID = T2.Channel_ID WHERE T1.Name = 'News' AND T2.Name = 'ABC' AND T2.Rating_in_percent > 10 AND T2.Rating_in_percent < 20 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "89bd943e53c5c7292b3db141b40e4718683e791b",
                "query": "SELECT SUM(T1.Rating_in_percent), COUNT(DISTINCT T2.Time_of_day) FROM channel AS T1 JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T2.Program_ID = T3.Program_ID",
                "template": "SELECT SUM(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "fbf54d13ad602ac022349b1f39d5429a637f823a",
                "query": "SELECT Name FROM program WHERE Origin = 'USA' OR Launch > (SELECT MAX(Launch) FROM program WHERE Origin = 'USA')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "bcec0dfe342f97f394769281e38b7cd732d184a4",
                "query": "SELECT SUM(T1.Share_in_percent), T2.Owner FROM broadcast_share AS T1 INNER JOIN channel AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T1.Share_in_percent >= 1",
                "template": "SELECT SUM(#COLUMN#), #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "1d658ee7d287e71ac40dcf313f02e89f9f5509d3",
                "query": "SELECT COUNT(DISTINCT T1.Program_ID), AVG(T1.Rating_in_percent) FROM channel AS T1 JOIN broadcast AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T1.Rating_in_percent > 80 ORDER BY T1.Rating_in_percent ASC LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b65314a75e8a270374f958a138bc1760f34b2b9a",
                "query": "SELECT T4.Date, SUM(T4.Share_in_percent) FROM broadcast AS T1 JOIN channel AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T1.Program_ID = T3.Program_ID JOIN broadcast_share AS T4 ON T3.Program_ID = T4.Program_ID WHERE T3.Launch < 2000 GROUP BY T4.Date ORDER BY SUM(T4.Share_in_percent) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "e4c2ebea459ff0b46cbb328fdaea7f31ef1a9545",
                "query": "SELECT T1.Program_ID FROM program AS T1 JOIN broadcast AS T2 ON T1.Program_ID = T2.Program_ID WHERE T1.Name NOT IN ( SELECT T3.Name FROM program AS T3 JOIN broadcast_share AS T4 ON T3.Program_ID = T4.Program_ID ) ORDER BY T1.Program_ID DESC LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "dee2cdb4401ce649c3fe7fd35c1964eff498d1ba",
                "query": "SELECT COUNT(DISTINCT T2.Program_ID) , T1.Name FROM broadcast AS T1 JOIN program AS T2 ON T1.Program_ID = T2.Program_ID GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4c1a833713142b77eee630b188bb0fd9e2e41a9b",
                "query": "SELECT Name FROM program WHERE Origin = 'USA' OR Launch BETWEEN 2000 AND 2010 OR Owner = 'ABC' ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            }
        ],
        "conference": [
            {
                "hash": "004db920709ad2efec1fd200707345f4c48c279e",
                "query": "SELECT T1.name, T1.role FROM conference_participation AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T1.role = 'chair' OR T2.role = 'chair' AND T1.Conference_ID = 10 AND T2.Conference_ID BETWEEN 10 AND 20 ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "977b01b278741165e1b7558c2b7014f00d5608c5",
                "query": "SELECT T2.Institution_Name FROM conference AS T1 JOIN staff AS T2 ON T1.Conference_ID = T2.staff_ID WHERE T2.Institution_Name = (SELECT Institution_Name FROM institution WHERE Founded = 1950)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "156d8ef205854a416a5bcf4332de5e6713dc8868",
                "query": "SELECT T1.Institution_Name FROM institution AS T1 WHERE T1.Institution_ID BETWEEN 100 AND 200 AND NOT EXISTS (SELECT 1 FROM staff AS T2 WHERE T2.Institution_ID = T1.Institution_ID AND T2.Age > 50) ORDER BY T1.Institution_Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e4bf0f97679bea5994925fbeefbfe607eb6a28e4",
                "query": "SELECT T1.Conference_Name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID WHERE T1.Year <= 2015",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "102fa8461844dc2e37c76a2a0278980339cb6b6f",
                "query": "SELECT COUNT(DISTINCT T1.Conference_ID), T2.Role FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID WHERE T1.Year < 2010 GROUP BY T2.Role ORDER BY T1.Conference_ID ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1af45c3921a3ee6ecaa414be6e56e6d99cd15250",
                "query": "SELECT T1.Conference_Name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T3.staff_ID = T2.staff_ID WHERE T3.Age > (SELECT AVG(Age) FROM staff) OR T1.Year > 2000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "527b927c8c54be993b0fbc61b8fea787889fc24b",
                "query": "SELECT DISTINCT T1.staff_ID FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID WHERE T1.Age <= 30 AND T2.role = 'presenter'",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "70b7007d034bec61438d6ec90fa5611e895d4057",
                "query": "SELECT AVG(Conference_ID) FROM conference AS instit WHERE Year BETWEEN 2000 AND 2010",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "10afad40f7370e6dccaad9824c2b0fad635c3e8b",
                "query": "SELECT T1.name, T2.name FROM staff AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Age < T2.Age ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fb694d335a2ad4a4bd579a39ac63abd9d7677a18",
                "query": "SELECT name, Nationality FROM staff WHERE Age >= 40 ORDER BY Age DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a07d86b3d5a986befd637c967c0f1cbc1b61c441",
                "query": "SELECT T1.name FROM staff AS T1 WHERE T1.Institution_ID = 1 OR T1.Institution_ID = 2 ORDER BY T1.name ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "1871cf8d132c87c2351a017cf5b2a028b414ebc1",
                "query": "SELECT T1.Institution_Name, T2.Conference_Name FROM institution AS T1 JOIN conference AS T2 ON T1.Institution_ID = T2.Conference_ID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "f7416a835961f4fbb2c13975028077bacf54c769",
                "query": "SELECT T1.Institution_Name, SUM(T2.Age) FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_Name HAVING SUM(T2.Age) < 100 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d71f2e9c6842bbf3197e56a67de10cbb12f26438",
                "query": "SELECT T1.staff_ID, T2.Conference_Name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T1.Institution_ID = T3.Location AND T3.Conference_Name = 'Conference_Name'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "e931bb3d68e4111b21f34a0dcb017460e0b34ea3",
                "query": "SELECT T1.Conference_Name, T2.Institution_Name FROM conference AS T1 JOIN institution AS T2 ON T1.Location = T2.Location WHERE T1.Year BETWEEN 2000 AND 2010",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "69a16f940651bdcdcd7e042e951a91143fdab16d",
                "query": "SELECT T1.Institution_ID, SUM(T2.staff_ID) FROM staff AS T1 JOIN conference_participation AS T2 ON T1.Institution_ID = T2.Conference_ID WHERE T1.Institution_ID = 101 AND T2.staff_ID BETWEEN 1000 AND 1005 AND T2.role = 'chair' GROUP BY T1.Institution_ID HAVING SUM(T2.staff_ID) > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "04903add7be1c9c653e110e003359d7dea645736",
                "query": "SELECT T1.Institution_Name, COUNT(T2.staff_ID) FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN conference_participation AS T3 ON T2.staff_ID = T3.staff_ID WHERE T1.Founded < 1950 AND T3.role = 'chair' GROUP BY T1.Institution_Name ORDER BY COUNT(T2.staff_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "fb8f237382b9ca21dbd921aaf5859ad71b3ffcb8",
                "query": "SELECT T1.Institution_Name, MIN(T2.Year) FROM institution AS T1 JOIN conference AS T2 ON T1.Institution_ID = T2.Conference_ID WHERE T1.Institution_ID IN (SELECT T3.Institution_ID FROM staff AS T3 WHERE T3.Age > 30) GROUP BY T1.Institution_Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "dfa9ab4860a9370b03321bad22db3186b4d8fb24",
                "query": "SELECT T1.Institution_Name FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Age > 30 AND T2.Nationality = 'USA' AND T2.staff_ID NOT IN (SELECT staff_ID FROM conference_participation WHERE role = 'Speaker')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "a00ddd1053fe8efbc3557e275a1ea0f286d8dd64",
                "query": "SELECT COUNT(DISTINCT T1.staff_ID), COUNT(DISTINCT T1.Institution_ID), COUNT(T1.staff_ID) FROM staff AS T1 WHERE T1.Age <= 30 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a8b6274ff06721b3cb1fd15121b1388c323d7c4c",
                "query": "SELECT T3.Institution_Name, COUNT(DISTINCT T1.Conference_ID) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T3.staff_ID = T2.staff_ID WHERE T3.Institution_ID = 1 AND NOT EXISTS (SELECT 1 FROM institution AS T4 WHERE T4.Institution_ID = T3.Institution_ID AND T4.Founded < 1900)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "cc61b7b6b93f363b313af38efc23d0ad59ea28cd",
                "query": "SELECT COUNT(DISTINCT T1.staff_ID) FROM conference_participation AS T1 JOIN staff AS T2 ON T1.staff_ID = T2.staff_ID WHERE T2.Institution_ID = 1 ORDER BY T1.staff_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0f3121848137c1f0f1af803d39100bb74306d6e3",
                "query": "SELECT T4.Institution_Name, T1.Conference_Name, T3.role FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T2.staff_ID = T3.staff_ID JOIN institution AS T4 ON T3.Institution_ID = T4.Institution_ID WHERE T3.Age > 40 GROUP BY T4.Institution_Name, T1.Conference_Name, T3.role HAVING AVG(T3.Age) > 50 ORDER BY T3.role ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#, #COLUMN#, #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c7fe33aaf1c73b79765acbd54d5e1741dbd7bdd4",
                "query": "SELECT T1.Institution_Name FROM institution AS T1 JOIN staff AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Institution_Name = 'University of California' AND T2.Age > 30 AND T2.staff_ID NOT IN ( SELECT staff_ID FROM conference_participation WHERE role = 'Chair' ) ORDER BY T1.Institution_Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            }
        ],
        "workshop_paper": [
            {
                "hash": "b4d872337f3cb2bfa49483f76429e3023025bd9a",
                "query": "SELECT T1.Venue FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T1.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.Scores > 80 AND T1.Name = 'AI Workshop'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "a6222d063d7c3350d0a4b6071add318a66fa48e5",
                "query": "SELECT COUNT(DISTINCT T1.Workshop_ID), COUNT(DISTINCT T2.Submission_ID), COUNT(DISTINCT T3.Result) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T3.Scores >= 80",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "83df7a5a16ca1cbe6dac1887714ab1be1687ce62",
                "query": "SELECT T1.Name, T2.Author, T3.Result FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T1.Venue BETWEEN 'A' AND 'C' OR T3.Scores > 90 OR T2.Author IS NOT NULL",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IS NOT NULL"
            },
            {
                "hash": "e9716820d21389f91c8acc62f6cdb6f56b5748ad",
                "query": "SELECT T1.Workshop_ID, T2.Workshop_ID FROM workshop AS T1 JOIN workshop AS T2 ON T1.Workshop_ID = T2.Workshop_ID WHERE T1.Date <= '2022-01-01' ORDER BY T1.Workshop_ID ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "62aaf34f92e2cc6fe379365ceafde6249d809c67",
                "query": "SELECT T1.Workshop_ID, COUNT(T2.Submission_ID) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID WHERE T2.Submission_ID NOT IN (SELECT Submission_ID FROM Acceptance WHERE Result = 'Reject') GROUP BY T1.Workshop_ID ORDER BY COUNT(T2.Submission_ID) ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "527b927c8c54be993b0fbc61b8fea787889fc24b",
                "query": "SELECT T1.Workshop_ID FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T3.Scores <= T3.Scores",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "c5cce50f118d641f3976a4385d88588efba65456",
                "query": "SELECT COUNT(DISTINCT T2.Workshop_ID) FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T2.Result = 'Accept'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5cb170de61f44dfefeb7b0dee4cedf75d9293b12",
                "query": "SELECT T1.Author, AVG(T1.Scores) FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T2.Workshop_ID < 100 GROUP BY T1.Author ORDER BY AVG(T1.Scores) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "5ebde774af376bd353b238c088399d8874c3421e",
                "query": "SELECT T1.Name, COUNT(T2.Scores) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID WHERE T2.Workshop_ID = 1 OR T2.Workshop_ID NOT IN (SELECT Workshop_ID FROM Acceptance WHERE Result = 'Reject') ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1abd8df4fe664fd73b82a22ebb02bfb9e167650e",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T2.College) FROM workshop AS T1 JOIN submission AS T2 ON T1.Workshop_ID = T2.Submission_ID WHERE (T1.Date = '2022-01-01' OR T2.Scores BETWEEN 80 AND 100) OR T2.College NOT IN (SELECT College FROM submission WHERE Scores < 50)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT COUNT(Result) FROM Acceptance WHERE Result < 0",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "87eed4e61e2c0ceb628c6047c3523fa01d3df6b0",
                "query": "SELECT COUNT(DISTINCT T1.Submission_ID) FROM Acceptance AS T1 JOIN workshop AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T1.Submission_ID = T3.Submission_ID WHERE T2.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.Scores > 80 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "bd17a0f4a787436ab82632ec3528fc3cc76352a1",
                "query": "SELECT T1.Name, COUNT(T2.Submission_ID) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID ORDER BY T3.Scores DESC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "7540d28cefd1d5cd417175de8d6bec0620ff5783",
                "query": "SELECT COUNT(DISTINCT T2.Name) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T1.Workshop_ID BETWEEN 1 AND 10 AND T1.Date = '2020-01-01' AND T3.Scores NOT IN (SELECT Scores FROM submission WHERE Author = 'John') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "15b9844ae6d66be1a38663200c393fb9fa0a0a32",
                "query": "SELECT T1.Name FROM workshop AS T1 WHERE T1.Venue = 'New York' AND T1.Date > '2020-01-01' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "46108471bf03685c90c040b1786dae7ac53efc5f",
                "query": "SELECT T1.Name, T2.Submission_ID FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID WHERE T1.Workshop_ID = 101 AND T1.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Result = 'Accept'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "68cd750c3c49a45012418d33774bc789b21eec7b",
                "query": "SELECT T1.Name, T2.Scores, T3.Result FROM workshop AS T1 JOIN Acceptance AS T3 ON T1.Workshop_ID = T3.Workshop_ID JOIN submission AS T2 ON T3.Submission_ID = T2.Submission_ID WHERE T2.Scores > 80 AND T1.Date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.Result = 'Accepted' ORDER BY T2.Scores DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "056e6f60cbb44567ad9932afd6c80499c20c21c5",
                "query": "SELECT COUNT(DISTINCT T2.Workshop_ID), MIN(T1.Scores) FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T1.Scores BETWEEN 50 AND 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "e516a92a7a4ce85cfe69650827324e59d72afc4c",
                "query": "SELECT MAX(T1.Scores), T2.Workshop_ID FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T2.Workshop_ID = 1 OR T1.Scores BETWEEN 50 AND 100 OR NOT EXISTS (SELECT * FROM workshop AS T3 WHERE T3.Workshop_ID = T2.Workshop_ID GROUP BY T3.Workshop_ID HAVING COUNT(T3.Workshop_ID) > 1) GROUP BY T2.Workshop_ID ORDER BY MAX(T1.Scores) DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "b440b87b4ba5b3729514a6f6c0cac0daaba0364b",
                "query": "SELECT T1.Venue, T2.College FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T3.Scores > 80 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "046c8999034c3a126906c0329572c2dbcba218ac",
                "query": "SELECT T2.Workshop_ID, T1.Scores FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID WHERE T1.Scores = 90",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "f2ee345f70475149c5c952c3d77c17e5b1391679",
                "query": "SELECT T1.Name, T1.Venue FROM workshop AS T1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "ccf7663f0b5b1912a1c2ab6e9e4583f327cce034",
                "query": "SELECT COUNT(DISTINCT T2.Submission_ID), SUM(T1.Scores) FROM submission AS T1 JOIN Acceptance AS T2 ON T1.Submission_ID = T2.Submission_ID JOIN workshop AS T3 ON T3.Workshop_ID = T2.Workshop_ID GROUP BY T3.Workshop_ID HAVING SUM(T1.Scores) <= 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "7021f152aaa9d7d49c01a35b5a3cb2595874f65e",
                "query": "SELECT T1.Venue FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T3.Scores > 80 OR T1.Date BETWEEN '2020-01-01' AND '2020-12-31' OR T3.Author = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "43d14dc42aa2c3f4745b152ba3718b1fba144580",
                "query": "SELECT T1.Name, T2.Author, SUM(T3.Scores) FROM workshop AS T1 JOIN Acceptance AS T2 ON T1.Workshop_ID = T2.Workshop_ID JOIN submission AS T3 ON T2.Submission_ID = T3.Submission_ID WHERE T1.Date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "c5f6fe1dd2cb2179249d85c508a3d45102be6cfb",
                "query": "SELECT T1.Name, SUM(T2.Scores) FROM workshop AS T1 JOIN submission AS T2 ON T1.Workshop_ID = T2.Submission_ID WHERE NOT EXISTS (SELECT 1 FROM Acceptance AS T3 WHERE T3.Workshop_ID = T1.Workshop_ID AND T3.Submission_ID = T2.Submission_ID AND T3.Result = 'Accepted') AND T2.Scores BETWEEN 0 AND 100 GROUP BY T1.Name ORDER BY T1.Name DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "3ab5e50a03f4b1b25ab615dd399d65d7e67e8628",
                "query": "SELECT T1.Workshop_ID, SUM(T1.Scores) FROM submission AS T1 WHERE EXISTS ( SELECT 1 FROM Acceptance AS T2 WHERE T2.Submission_ID = T1.Submission_ID AND T2.Workshop_ID = T1.Submission_ID ) GROUP BY T1.Workshop_ID LIMIT 10",
                "template": "SELECT #COLUMN#"
            }
        ],
        "tracking_grants_for_research": [
            {
                "hash": "22b1cefeefb85fed99c6b110d40560ba8f685f07",
                "query": "SELECT T1.document_type_code, AVG(T2.grant_amount) FROM Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T2.grant_id = T3.grant_id WHERE T1.document_type_code != 'abc' GROUP BY T1.document_type_code",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.organisation_id FROM Projects AS T1 WHERE T1.organisation_id = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "8e413b1d0c6343cd84f362072c12abb40c1bb7cc",
                "query": "SELECT T1.staff_id, T2.grant_amount FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Grants AS T3 ON T2.organisation_id = T3.organisation_id WHERE T3.grant_amount <= 10000 AND T1.role_code = 'Researcher'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "90669105611a58bd122130983b4d876eb108b76e",
                "query": "SELECT COUNT(DISTINCT document_type_code), document_description FROM Document_Types WHERE document_type_code NOT IN (SELECT document_type_code FROM Documents) GROUP BY document_description HAVING MIN(document_type_code) > 'A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "aff555e555357b7eb6197ccca66612c3c8d1556f",
                "query": "SELECT T1.document_type_code, T1.document_description FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.sent_date < T1.response_received_date LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "4955ae01ab81ac1a07e91b4a296b3daa5b4d232c",
                "query": "SELECT grant_amount FROM Grants WHERE grant_amount BETWEEN 1000 AND 2000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c3f09ecd954a3480f4fa1115302fdadd22152c45",
                "query": "SELECT T1.document_type_code FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.grant_id = 500 ORDER BY T1.document_type_code ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "95a5d9c3f0237a18dab3cbbf430d16d03955ffe3",
                "query": "SELECT COUNT(DISTINCT T1.grant_id) FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T1.grant_amount < 100000 ORDER BY COUNT(DISTINCT T1.grant_id) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "c0cc350d933c090aa16c949341159fad3a89241a",
                "query": "SELECT T1.outcome_code FROM Research_Outcomes AS T1 JOIN Project_Outcomes AS T2 ON T1.outcome_code = T2.outcome_code WHERE T1.outcome_code != T2.outcome_code",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "c081f895ba748f9df208f6f042e6e6e9248f22aa",
                "query": "SELECT COUNT(DISTINCT T1.document_id), T2.grant_id, T3.project_id FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Projects AS T3 ON T2.organisation_id = T3.organisation_id LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "14f41ce0e457b779e462d89674b6007c84189aae",
                "query": "SELECT COUNT(DISTINCT T1.document_type_code) , COUNT(T1.document_id) , T1.grant_id FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN Projects AS T4 ON T3.organisation_id = T4.organisation_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "94d55958770f4b89224d097c1d2d57818bf471cf",
                "query": "SELECT COUNT(document_type_code) FROM Document_Types WHERE document_type_code > '100'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "37874fd39372541188afab2ec95c71b6beb5db32",
                "query": "SELECT T1.document_type_code FROM Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "800298db09b6f64cdb72cc48a8ab9cbdb70b6ea8",
                "query": "SELECT T1.document_type_code, AVG(T2.grant_amount) FROM Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T2.grant_id = T3.grant_id WHERE T3.grant_amount BETWEEN 10000 AND 20000 AND T2.sent_date NOT IN (SELECT T4.sent_date FROM Documents AS T4 WHERE T4.document_type_code = 'A') GROUP BY T1.document_type_code LIMIT 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "dd2c15d8c5269c767c87be9025c9b2fdc07b9b41",
                "query": "SELECT T1.grant_id, T2.grant_amount, T3.organisation_type FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T1.organisation_id = T3.organisation_id WHERE T1.grant_amount != 10000",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "77056e3678db3f7b3f04aeb6529f3efc8b807b54",
                "query": "SELECT COUNT (DISTINCT document_type_code), document_description FROM Document_Types WHERE document_type_code = 'doc_type' LIMIT 10",
                "template": "SELECT COUNT (DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "79c53276d20c578c303d0deb13a256613eb3d532",
                "query": "SELECT T1.grant_amount, AVG(T1.grant_amount) FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id GROUP BY T1.grant_amount HAVING T1.grant_amount > 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2edb04145f08050911d6dc76dfda2a2041bdd1c7",
                "query": "SELECT T1.document_description, AVG(T2.grant_amount), T2.grant_start_date, T2.grant_end_date FROM Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T2.grant_id = T3.grant_id WHERE T2.sent_date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.grant_amount > (SELECT AVG(grant_amount) FROM Grants) ORDER BY T1.document_description ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "58199a25762629f4c523a269ba21170544689a52",
                "query": "SELECT * FROM Documents WHERE grant_id = 100 OR document_id BETWEEN 100 AND 200 OR document_type_code IN (SELECT document_type_code FROM Document_Types WHERE document_description = 'document') ORDER BY document_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f98cb4e74712806e12e197c09c40d3d8f36b0ed3",
                "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Projects AS T2 ON T1.organisation_id = T2.organisation_id JOIN Tasks AS T3 ON T2.project_id = T3.project_id LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "7c2f748a6e2b7cf827b2ec1c78e0a9fbd941cbc4",
                "query": "SELECT MAX(T1.grant_amount) AS grant_amount, T2.organisation_id FROM Grants AS T1 JOIN Projects AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING MAX(T1.grant_amount) <= 10000",
                "template": "SELECT MAX(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) <= #VALUE#"
            },
            {
                "hash": "d2b4d0cbe3be159789cc8f3b91fb6842694305c0",
                "query": "SELECT COUNT(DISTINCT T1.project_id), AVG(T2.grant_amount) FROM Projects AS T1 JOIN Grants AS T2 ON T1.organisation_id = T2.organisation_id JOIN Documents AS T3 ON T2.grant_id = T3.grant_id WHERE T3.sent_date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.grant_amount < 10000 OR T1.project_details = 'Project A'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "0e01707f33d3c69df34b27768703fcbabbe6c04f",
                "query": "SELECT T1.document_type_code FROM Document_Types AS T1 WHERE NOT EXISTS (SELECT T2.document_id FROM Documents AS T2 WHERE T2.document_type_code = T1.document_type_code)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "93518afeb8fd43c7b69d29c6f6ad10fb51ecaa01",
                "query": "SELECT T5.grant_amount, COUNT(T4.project_id) FROM Organisations AS T1 JOIN Projects AS T2 ON T1.organisation_id = T2.organisation_id JOIN Project_Staff AS T3 ON T2.project_id = T3.project_id JOIN Project_Outcomes AS T4 ON T3.project_id = T4.project_id JOIN Grants AS T5 ON T2.organisation_id = T5.organisation_id WHERE T5.grant_start_date != '2020-01-01' GROUP BY T5.grant_amount ORDER BY T5.grant_amount ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2d2d491eb571431fa3fc8929d8256d9b769413e4",
                "query": "SELECT T1.document_type_code, T2.grant_id FROM Document_Types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T2.grant_id = T3.grant_id WHERE T2.sent_date < T3.grant_start_date AND T1.document_type_code IN (SELECT document_type_code FROM Document_Types WHERE document_description = 'Type 1')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            }
        ],
        "store_1": [
            {
                "hash": "5b3d0fad9cb73dc0fb268f80854b86ba2d12d576",
                "query": "SELECT COUNT(T1.id), T2.total FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "1f4577b5c895790f0660f6094cf12ac534eb52e4",
                "query": "SELECT T1.name AS AlbumTitle, COUNT(T1.id) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id WHERE T2.unit_price >= 1 GROUP BY T1.name",
                "template": "SELECT #COLUMN# AS #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "1d5e02cc373bab227c18e131cd0c108659ed63d8",
                "query": "SELECT COUNT(T1.id), SUM(T1.total) FROM invoices AS T1 WHERE T1.total > 10 AND T1.total BETWEEN 100 AND 1000 AND EXISTS (SELECT 1 FROM customers AS T2 WHERE T2.id = T1.customer_id) ORDER BY T1.total DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "40dad4a6774a16e5c6839082ec43f64eb990f8dd",
                "query": "SELECT SUM(T2.unit_price) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id WHERE T2.unit_price BETWEEN 0.99 AND 1.99",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "7e037c24c54a47e92238677b597f0a0565586da7",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T2.title < 'title'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "9da09fe1b26137a6ed6a9d994851db8fa923a96d",
                "query": "SELECT T1.name, T2.unit_price, T3.name FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id JOIN genres AS T3 ON T3.id = T2.genre_id WHERE T2.unit_price < (SELECT AVG(unit_price) FROM tracks)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "8f101663f07dbadb73b95e051392e1562e409e03",
                "query": "SELECT T1.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id WHERE T2.name != 'Rock'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "a885c08c3fa79280e5e4e3193a8e4de13e3e528a",
                "query": "SELECT COUNT(T1.name) FROM ( SELECT T2.name FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T1.id < 100 ) AS T3 ORDER BY T3.name ASC",
                "template": "SELECT COUNT(#COLUMN#) FROM ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ) AS #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b27e3aad407614eb0ad49888d1bfb9a532fb48c6",
                "query": "SELECT T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN albums AS T3 ON T2.album_id = T3.id WHERE T2.unit_price BETWEEN 0.99 AND 1.99 ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4b6dcd852dadb880f6cbe529b877811b242bbe7a",
                "query": "SELECT COUNT(DISTINCT T1.album_id), COUNT(DISTINCT T1.media_type_id), T2.name FROM tracks AS T1 JOIN genres AS T2 ON T1.genre_id = T2.id WHERE T1.milliseconds BETWEEN 10000 AND 20000 AND NOT EXISTS (SELECT 1 FROM invoice_lines WHERE track_id = T1.id) ORDER BY T2.name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f88091e7e4d65b7d4124aec18d96d813de429333",
                "query": "SELECT COUNT(T1.name) FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name != 'AC/DC' GROUP BY T1.name",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "0d002affcf7107d83bd9ab0314656b5d9aae3060",
                "query": "SELECT T1.name FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T2.id < 100 AND NOT EXISTS (SELECT 1 FROM invoices AS T3 WHERE T3.total < 100) ORDER BY T1.name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a1983b555008dcdcf73e12e2abd5dbb5dd6dc25f",
                "query": "SELECT first_name FROM customers WHERE last_name > 'A' ORDER BY first_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "45412b8f9051c218663145454f0a931493f2c97a",
                "query": "SELECT T1.name FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T2.title = 'Bourbon Street Jazz' OR T2.title NOT IN (SELECT title FROM albums WHERE id > 10) ORDER BY T1.name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "70474892a22ceb2598cc6c7be933013b7741dbfb",
                "query": "SELECT T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.composer = 'test' AND EXISTS ( SELECT T3.name FROM media_types AS T3 JOIN tracks AS T4 ON T3.id = T4.media_type_id WHERE T4.genre_id = T1.id ) GROUP BY T1.name HAVING MAX(T2.milliseconds) > 10000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT * FROM tracks WHERE milliseconds >= 1000000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "729aacd84d496f99aec9f97ef3a78cc0a9b1bee3",
                "query": "SELECT * FROM ( SELECT T1.first_name, T2.name FROM customers AS T1 INNER JOIN genres AS T2 ON T1.id = 1 AND T1.first_name = 'Alicia' WHERE T1.id NOT IN ( SELECT T3.customer_id FROM invoices AS T3 WHERE T3.total < 10 ) )",
                "template": "SELECT * FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) )"
            },
            {
                "hash": "17757d9685bf391ee6a607a583e590edf3c4782f",
                "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name IN (SELECT name FROM genres WHERE id BETWEEN 1 AND 10) AND T1.id = 1 GROUP BY T2.name HAVING MAX(T2.id) = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "e43b8650a90081304fe039cc91a0d2d3e8f8164d",
                "query": "SELECT T1.name FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id JOIN tracks AS T3 ON T2.id = T3.album_id WHERE T3.name = (SELECT T4.name FROM tracks AS T4 JOIN genres AS T5 ON T4.genre_id = T5.id WHERE T5.name = 'Rock')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "2b2e9e5e363b5df7be6bb9c804c324743956d24b",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T2.id < 10 LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "893ced9c8c18ecfc3bd0f08d3b344e81f0711125",
                "query": "SELECT id FROM albums WHERE artist_id = (SELECT id FROM artists WHERE name = 'AC/DC')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "048d15369dc6f3543d98061e737133ac91a1df46",
                "query": "SELECT COUNT(name) FROM albums WHERE title = 'Bongo Bong' OR title BETWEEN 'A' AND 'M' OR artist_id > 1 ORDER BY id DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9b55e9ce8a965b375b85a75b85175ef26e3e1986",
                "query": "SELECT COUNT(id) , COUNT(name) FROM artists",
                "template": "SELECT COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "0257cab601975a506b00f7721892300109d7e4ce",
                "query": "SELECT T1.name, SUM(T2.unit_price) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = 'Rock' ORDER BY SUM(T2.unit_price) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "0b47eaf15d3fd0055d02d1ac1c4a09c124e4b38f",
                "query": "SELECT T1.name, T2.title FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN albums AS T3 ON T2.album_id = T3.id WHERE T3.title <= 'title' AND T2.name <= 'name'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#' AND #COLUMN# <= '#VALUE#'"
            }
        ],
        "customers_and_products_contacts": [
            {
                "hash": "23f7a7871a08b644fa86e38a33b8998824de1b16",
                "query": "SELECT product_name FROM Products WHERE product_price <= 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "0e4c74c787199bfd328072c529466e3637af1bf1",
                "query": "SELECT * FROM Products WHERE product_price BETWEEN 100 AND 200 OR product_price > (SELECT AVG(product_price) FROM Products)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "ac61d74ccaaad22edd76f427b25e9a5b98a5b511",
                "query": "SELECT COUNT(customer_id) FROM Customers WHERE payment_method_code = 'Credit Card'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "32c09edcda3721cfab73fec0cfc98c0d11a40a60",
                "query": "SELECT product_price FROM Products WHERE product_price > 100 ORDER BY product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6582c71b52e4e1980db03196a1882ba874bdd0e1",
                "query": "SELECT product_name, MIN(product_price) FROM Products GROUP BY product_name LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e65533139470507625a9205d36bdc38d01a1e68d",
                "query": "SELECT COUNT(T1.product_id), T1.product_name FROM Products AS T1 WHERE T1.product_price BETWEEN 10 AND 20 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f60b06795fe5676bf4b76682bf788980d6756a7e",
                "query": "SELECT MAX(T1.product_price) FROM Products AS T1 WHERE T1.product_type_code = 'A'",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "aea93c29898d8fbc6ae7d8a5418db78ede9e39ed",
                "query": "SELECT customer_name FROM Customers WHERE customer_address = '123 Main St'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "48aa7bce5455bcfadfa5d63ec93debd43d1bcd69",
                "query": "SELECT product_name FROM Products WHERE MIN(product_price) BETWEEN 10 AND 50 GROUP BY product_name ORDER BY product_price ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE MIN(#COLUMN#) BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8f81ccbe0fd5a8d8dd59e16f9584e49901dfdfaa",
                "query": "SELECT product_type_code, COUNT(product_name), MAX(product_price) FROM Products WHERE product_name != 'Product1'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "edfb4c02fbdb582ba33cf079926dfad8e801605d",
                "query": "SELECT T.product_name, AVG(T.product_price) FROM ( SELECT product_name, product_price FROM Products WHERE product_price <= 10000 ) T GROUP BY T.product_name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM ( SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ) #TABLE# GROUP BY #COLUMN#"
            },
            {
                "hash": "7880dc33205e0181e7d62d09468ba07fb4abf3b1",
                "query": "SELECT AVG(T1.product_price), SUM(T2.order_quantity) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name != 'Product_1'",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "2c4c2d0af707868bbbb119cfcb96952a421f6f44",
                "query": "SELECT T1.customer_name, SUM(T3.order_quantity) FROM Customers AS T1 JOIN Customer_Address_History AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.customer_id = T3.order_id WHERE T2.customer_id NOT IN (SELECT T4.customer_id FROM Customer_Address_History AS T4 JOIN Addresses AS T5 ON T4.address_id = T5.address_id WHERE T5.city = 'New York') GROUP BY T1.customer_name ORDER BY T1.customer_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "116138097ece4b21102f730c78832fe0c9627eeb",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(T1.order_id) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id BETWEEN 1 AND 100 OR T1.customer_id IN (SELECT customer_id FROM Customers WHERE customer_number = '12345') OR T2.product_id > 500 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4b02df7bceda610916d680d5ced9615067a64ec7",
                "query": "SELECT COUNT(DISTINCT T1.order_id) , COUNT(DISTINCT T2.order_id) , T1.order_id FROM Customer_Orders AS T1 JOIN Customer_Orders AS T2 ON T1.order_date = T2.order_date WHERE T1.order_id > T2.order_id ORDER BY T1.order_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(DISTINCT #COLUMN#) , #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dab6e9d8158f272f65d003f11bc569a386a7bfff",
                "query": "SELECT T1.product_name, T2.order_quantity FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price BETWEEN 10 AND 100 AND T2.order_quantity > 5 ORDER BY T1.product_price DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5d0bd34cfb9a5003e6ea4d9764a5c92f079e1cdd",
                "query": "SELECT COUNT(T1.customer_id) FROM Customers AS T1 WHERE T1.customer_name = 'John Doe' AND T1.customer_email IN (SELECT T2.customer_email FROM Contacts AS T2 WHERE T2.gender = 'Male') AND (T1.customer_phone BETWEEN '1234567890' AND '9876543210')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND (#COLUMN# BETWEEN #VALUE# AND #VALUE#)"
            },
            {
                "hash": "12a6b25c6011f35e26ed2622b6fadf48ef69a40a",
                "query": "SELECT product_name FROM Products WHERE product_price >= 50 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4d6f790173c326f30b04a3488a970b9bac52143e",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.order_quantity != 0 ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e013ae4f9d7bba395d4365cf55012269f7d23f4d",
                "query": "SELECT T2.product_name FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE EXISTS (SELECT 1 FROM Products AS T3 WHERE T3.product_price > 100 AND T2.product_id = T3.product_id) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "a472bf93b0d7bef7d0c049c58971b740eefc18f1",
                "query": "SELECT T1.customer_name FROM Customers AS T1 WHERE T1.customer_id NOT IN (SELECT T2.customer_id FROM Customer_Address_History AS T2)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2)"
            },
            {
                "hash": "f67a6483743d3ebffe8aff8cc31eab6cc5ff4ba8",
                "query": "SELECT product_id FROM Products WHERE product_price = 100 AND product_type_code = 1 AND product_name = 'Product 1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "ab5821862b18eb6d2ff93e4cd12253907dac1cbc",
                "query": "SELECT SUM(T1.product_price) FROM Products AS T1 WHERE T1.product_id = 1 AND EXISTS (SELECT T2.order_id FROM Customer_Orders AS T2 WHERE T2.customer_id = 1)",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "623e34901b15eed107c6e4c1f8bc6962b04f71b8",
                "query": "SELECT COUNT(DISTINCT T4.product_name) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Products AS T4 ON T3.product_id = T4.product_id WHERE T1.customer_name != 'ABC Inc.' GROUP BY T1.customer_name ORDER BY COUNT(DISTINCT T4.product_name) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "2fadd117f963cccb1bc094847dd80727731c42dc",
                "query": "SELECT T1.line_1_number_building FROM Addresses AS T1 WHERE T1.city != 'New York' ORDER BY T1.zip_postcode DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "55ac35ed1e6289a2e551192841ca761679042815",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id WHERE T3.order_date > (SELECT order_date FROM Customer_Orders ORDER BY order_date DESC LIMIT 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT 1)"
            }
        ],
        "district_spokesman": [
            {
                "hash": "c2cf5525b92d74a3de653837f7a31ce9080c9a75",
                "query": "SELECT T1.District_ID, COUNT(DISTINCT T2.Name) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID WHERE T2.District_ID IN ( SELECT T3.District_ID FROM spokesman_district AS T3 WHERE T3.Start_year = '2020' ) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "a9ce15b3085b4e8a7748590afc1d8fe8409183a2",
                "query": "SELECT T1.Name, T1.Density_km, T1.Government_website FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T3.Name != 'John Doe' ORDER BY T1.Population ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "42b0633850012d34ab012d2e216e9f5c03336ef4",
                "query": "SELECT AVG(Area_km) FROM district WHERE Population BETWEEN 50000 AND 100000 ORDER BY Area_km DESC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "276ab3a66b20fed5b2dfb2dfd36083a5e53bb3db",
                "query": "SELECT COUNT(DISTINCT T1.District_ID), T2.Speach_title FROM district AS T1 JOIN spokesman_district AS T3 ON T1.District_ID = T3.District_ID JOIN spokesman AS T2 ON T3.Spoke_ID = T2.Spoke_ID WHERE T1.Population = 100000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "35ded4b98ba962113b1d5f39e299a084d740595b",
                "query": "SELECT T1.District_ID, T2.Name FROM district AS T1 JOIN district AS T2 ON T1.District_ID = T2.District_ID WHERE T1.Population < 100000",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "09b7a5d03df2b4bac98618f82791eb3ee1d0bf1c",
                "query": "SELECT COUNT(DISTINCT Spokesman_ID), MAX(Points) FROM spokesman ORDER BY Points DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "56e6454b108befd748e0478ca3690c8db4b40da1",
                "query": "SELECT T1.Name, SUM(T2.Population) FROM spokesman AS T1 JOIN spokesman_district AS T3 ON T1.Spokesman_ID = T3.Spokesman_ID JOIN district AS T2 ON T3.District_ID = T2.District_ID WHERE T1.Age > 30 OR T2.Population BETWEEN 10000 AND 20000 OR T2.Name = 'District A' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d464de18fa7078c0c334b0ce3818e789a52946d0",
                "query": "SELECT T1.District_ID, COUNT(DISTINCT T2.Spokesman_ID) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID WHERE EXISTS (SELECT 1 FROM spokesman AS T3 WHERE T3.Spokesman_ID = T2.Spokesman_ID) GROUP BY T1.District_ID HAVING SUM(T3.Points) > 100 ORDER BY COUNT(DISTINCT T2.Spokesman_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "3c82d061b46170449512589d5b630a626251742b",
                "query": "SELECT T2.Name, COUNT(DISTINCT T3.District_ID), SUM(T1.Population) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T1.Population >= 100000 ORDER BY T2.Name DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c0295fc992c3c314bb6b96dfdf35fa23931311fd",
                "query": "SELECT T1.Name, T2.Area_km FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID WHERE T1.Name = 'X' OR T2.Start_year BETWEEN 'A' AND 'B' OR EXISTS (SELECT 1 FROM spokesman AS T3 WHERE T3.Speach_title = 'C') LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "592736a7a786c230f59dc87e207e74a71adedd88",
                "query": "SELECT T1.Name, T2.Name, T1.Area_km FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID WHERE T1.Population > 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8ee9f84589e9ce8b018288c70eb78193eb278134",
                "query": "SELECT T1.Name, T2.Name FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T1.Name = 'District_Name' AND T3.Name = 'Spokesman_Name' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "09cee661b9fcda73e3edf29d018dbcdb99c94a74",
                "query": "SELECT T1.Name FROM district AS T1 WHERE T1.Population < 100000 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6990f90719fa0f90f2a89be7037b0742cf9360df",
                "query": "SELECT * FROM district WHERE Population BETWEEN 50000 AND 100000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "37cf9f9e3bb05adc5b1a397d3260d058b3b5b00a",
                "query": "SELECT Name FROM district WHERE Area_km >= 100 ORDER BY Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bbd176881773ab0f8703a71c26b372f0f096a6bb",
                "query": "SELECT Name FROM district WHERE Population < 1000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "334da8a71f9843d7d50660b95ac52af58524bd41",
                "query": "SELECT T1.Name FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "02a6a455cbf7ea0ec9e50c536c9ae8fa933d28d4",
                "query": "SELECT T1.Name, T2.Name FROM spokesman AS T1 JOIN spokesman AS T2 ON T1.Rank_position < T2.Rank_position WHERE T1.Age BETWEEN (SELECT MIN(Age) FROM spokesman) AND (SELECT MAX(Age) FROM spokesman)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "6f12558b1267b5f43945e7abbaa528b01de28e10",
                "query": "SELECT S1.Name, D1.Population FROM spokesman AS S1 JOIN spokesman_district AS SD1 ON S1.Spokesman_ID = SD1.Spokesman_ID JOIN district AS D1 ON SD1.District_ID = D1.District_ID WHERE S1.Age > 30 AND D1.Population BETWEEN 10000 AND 50000 AND EXISTS (SELECT * FROM spokesman AS S2 WHERE S2.Age > 30)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS D1 ON #COLUMN# = D1.#COLUMN# WHERE #COLUMN# > #VALUE# AND D1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "1474b9bc0b95725a21036fd5c8421040914b8162",
                "query": "SELECT COUNT(DISTINCT T1.District_ID), COUNT(DISTINCT T3.District_ID) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T1.Population > 100000 AND T3.Age < 50 AND EXISTS (SELECT 1 FROM spokesman WHERE Spokesman_ID = T3.Spokesman_ID AND Speach_title = 'Good') ORDER BY T1.Population DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "fd19dc7af7f4ff8f7b6713bea9f44b20c4a36f10",
                "query": "SELECT T1.Name, COUNT(T2.Speach_title), MAX(T1.Population), MIN(T1.Population) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Speokesman_ID = T3.Spokeeman_ID WHERE T1.Name != 'District1'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "49536cb876187c08f04b8bdf4c19ea03e18feac6",
                "query": "SELECT T1.District_ID, COUNT(T2.Spokesman_ID) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID WHERE T2.District_ID IN (SELECT District_ID FROM spokesman_district GROUP BY District_ID HAVING COUNT(Spokesman_ID) > 1) GROUP BY T1.District_ID",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "5bb3051e8819ea4e747daa73eb009f1b9fec7839",
                "query": "SELECT COUNT(DISTINCT T3.Name) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID JOIN spokesman AS T3 ON T2.Spokesman_ID = T3.Spokesman_ID WHERE T1.Area_km > (SELECT AVG(Area_km) FROM district)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "480e53ccb915a4c86ecc84874d1271c67e70bfb2",
                "query": "SELECT Name, Population FROM district WHERE Government_website != 'https://www.gov.il/en'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "e6e12575bdbce910a2dbeb234f22877c6f1b50f5",
                "query": "SELECT T1.Name, COUNT(T2.District_ID) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.District_ID = T2.District_ID GROUP BY T1.Name ORDER BY COUNT(T2.District_ID) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            }
        ],
        "real_estate_properties": [
            {
                "hash": "014e050298cfd4a12b6d627c264f12e08c34d561",
                "query": "SELECT T1.feature_name FROM Other_Available_Features AS T1 WHERE EXISTS (SELECT T2.feature_id FROM Properties AS T2 WHERE T2.property_type_code = 'Residential')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2447eb8c6f3ec6890c5a67f852910b8a328fa5eb",
                "query": "SELECT T1.feature_name, T2.feature_name FROM Other_Available_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_id > 10 AND T2.feature_id BETWEEN 5 AND 10 AND EXISTS (SELECT feature_id FROM Other_Available_Features WHERE feature_type_code = T1.feature_type_code)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "97bced46c439d9fc5fa95511bc56401ec4ebd30b",
                "query": "SELECT COUNT(DISTINCT T1.property_id), SUM(T2.feature_id) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T1.vendor_requested_price < 100000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d246c9f632de951d00652e31d981f399a159dd68",
                "query": "SELECT T1.feature_name, T2.feature_name FROM Other_Available_Features AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_id = T2.feature_id ORDER BY T1.feature_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "59f6d9d06b28ce2927b3b99bba4b51aba9866a80",
                "query": "SELECT SUM(vendor_requested_price) FROM Properties",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "ae8a3ecc2430ed05b79db19bc3912abb17a94878",
                "query": "SELECT COUNT(DISTINCT T1.feature_id), COUNT(T2.property_id) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id WHERE T1.feature_type_code = 'Residential' ORDER BY T2.property_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4bb726a913776ed09dfe06b8c11a6ea2e3b5a133",
                "query": "SELECT T1.feature_type_name, COUNT(DISTINCT T2.feature_id) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code GROUP BY T1.feature_type_name HAVING SUM(T2.feature_id) > 10 LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "46fa811af91d1da47c724a9a777d864bd9acb094",
                "query": "SELECT * FROM Other_Available_Features WHERE feature_name = 'feature_name' AND feature_id = 1 AND EXISTS (SELECT 1 FROM Ref_Feature_Types WHERE feature_type_name = 'feature_type') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "180d92a3e24c41ed5126745f65807e95ffb99f3a",
                "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id = 1 OR T2.feature_name = 'feature' OR NOT EXISTS (SELECT 1 FROM Other_Property_Features AS T3 WHERE T3.feature_id = T2.feature_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "4858c46159e2e08b146b7686d96de869aed36754",
                "query": "SELECT COUNT(DISTINCT T1.apt_feature_1), COUNT(DISTINCT T1.apt_feature_2), COUNT(DISTINCT T1.apt_feature_3) FROM Properties AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id WHERE T1.room_count < T2.room_count ORDER BY room_count DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "aaa3b56d4b83a10c578437184b6f22ace3bdcb64",
                "query": "SELECT COUNT(DISTINCT T1.feature_id), COUNT(DISTINCT T2.property_feature_description), COUNT(T3.feature_type_code) FROM Other_Available_Features AS T1 JOIN Other_Property_Features AS T2 ON T1.feature_id = T2.feature_id JOIN Ref_Feature_Types AS T3 ON T2.property_id = T3.feature_type_code WHERE T3.feature_type_code IN (SELECT feature_type_code FROM Ref_Feature_Types WHERE feature_type_name = 'Residential') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "97bcf498b2cd6d45a6903ec38f3f4c5af8bf28c6",
                "query": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code >= 'type_code'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#'"
            },
            {
                "hash": "4498e1cc4012922bbe482124dfdd85665c31a6b5",
                "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE EXISTS (SELECT T3.feature_id FROM Other_Property_Features AS T3 WHERE T3.feature_id = T2.feature_id AND T3.property_feature_description = 'swimming pool')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "54bda5ce963ceebcc8e4a57f441c8bfa40bb2c09",
                "query": "SELECT COUNT(DISTINCT T1.property_id) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Other_Available_Features AS T3 ON T2.feature_id = T3.feature_id WHERE (T1.vendor_requested_price > 100000 OR T1.agreed_selling_price BETWEEN 200000 AND 500000) AND NOT EXISTS (SELECT 1 FROM Ref_Property_Types AS T4 WHERE T4.property_type_code = T1.property_type_code AND T4.property_type_description = 'Unwanted')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#) AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "c5d6efbf064e8dda6ab9a958f9c3ec9591a8437c",
                "query": "SELECT feature_id FROM Other_Available_Features WHERE feature_type_code NOT IN (SELECT feature_type_code FROM Ref_Feature_Types) ORDER BY feature_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "95bb10c446c4803f6ec409adacfa77562c16e301",
                "query": "SELECT SUM(T1.vendor_requested_price) FROM Properties AS T1 JOIN Other_Property_Features AS T2 ON T1.property_id = T2.property_id WHERE T1.agreed_selling_price > T1.vendor_requested_price",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN#"
            },
            {
                "hash": "171f6dcc18266c3b09fc1c64658ee59bb4787e21",
                "query": "SELECT T1.property_name, AVG(T1.vendor_requested_price) FROM Properties AS T1 JOIN Other_Available_Features AS T2 ON T1.property_type_code = T2.feature_type_code JOIN Ref_Feature_Types AS T3 ON T3.feature_type_code = T2.feature_type_code WHERE T1.room_count > 5 AND T1.property_type_code NOT IN (SELECT property_type_code FROM Properties WHERE date_sold IS NULL) ORDER BY T1.property_name ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NULL) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bd281a8f8434e55d8a0eaf15e391446a62449042",
                "query": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code >= 'P' AND feature_type_name >= 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= '#VALUE#' AND #COLUMN# >= '#VALUE#'"
            },
            {
                "hash": "1a308ecfa0ada5ca7f3eab7031638adbd14d1be1",
                "query": "SELECT T1.feature_type_name, COUNT(T2.feature_id) FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_type_code != 'oth' GROUP BY T1.feature_type_name ORDER BY COUNT(T2.feature_id) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "fd41b7d44c8976fa6f0b96ad2f8292c50d02916b",
                "query": "SELECT T3.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code JOIN Other_Property_Features AS T3 ON T1.feature_id = T3.feature_id WHERE T3.feature_id > 100 GROUP BY T3.feature_type_name HAVING COUNT(T3.feature_type_name) > 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "3f23978cef6f52ae9ee745636af18cbb8f92429d",
                "query": "SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code <= 10 ORDER BY feature_type_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bd721f7284d4eac8118050548e810cf2d4062efb",
                "query": "SELECT COUNT(feature_id) FROM Other_Available_Features WHERE feature_type_code NOT IN ( SELECT feature_type_code FROM Ref_Feature_Types ) LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "f1f823b3796f5e41d53d8ff18cc5371d51df9f46",
                "query": "SELECT T1.feature_type_name FROM Ref_Feature_Types AS T1 JOIN Other_Available_Features AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T2.feature_id < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            }
        ],
        "customers_and_orders": [
            {
                "hash": "2a48615d53d1c2dac00fae68ad554f8d077b1990",
                "query": "SELECT T1.product_name, T2.product_name FROM Products AS T1 JOIN Products AS T2 ON T1.product_type_code = T2.product_type_code WHERE T1.product_id = 1 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "461226e673366bd6b1a066c460a8c6301eca89a0",
                "query": "SELECT product_name FROM Products WHERE product_price BETWEEN 10 AND 100 AND EXISTS (SELECT 1 FROM Order_Items WHERE product_id = Products.product_id) AND product_type_code = 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2b7b8328d363d7e85993ad15e5438edcb69abc16",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Products AS T2 ON T1.product_type_code = T2.product_type_code WHERE T1.product_price BETWEEN 10 AND 100 AND T2.product_id NOT IN (SELECT T3.product_id FROM Products AS T3 WHERE T3.product_name = 'Laptop')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "8b7fd870ac634f358e2c87136e12c80a033e4da6",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id WHERE EXISTS (SELECT T4.order_id FROM Customer_Orders AS T4 JOIN Customers AS T5 ON T4.customer_id = T5.customer_id WHERE T4.order_id = T3.order_id AND T5.payment_method_code = 'Credit Card')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "4083c69f83b9bde3beb30c6b0116dd00a950d922",
                "query": "SELECT product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "3af114c5703ef3ddd2665de59eaffe65f3dee40e",
                "query": "SELECT T1.customer_name, SUM(T4.product_price * T5.order_quantity) AS total_spent FROM Customers AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id JOIN Customer_Orders AS T3 ON T1.customer_id = T3.customer_id JOIN Products AS T4 ON T4.product_id = T5.product_id JOIN Order_Items AS T5 ON T3.order_id = T5.order_id WHERE T4.product_price < 10 GROUP BY T1.customer_name ORDER BY total_spent DESC LIMIT 1",
                "template": "SELECT #COLUMN#, SUM(#COLUMN# * #COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "d6abd322ebf7609a367c56c806886aafbe1822f1",
                "query": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customer_Orders AS T1 WHERE T1.order_date BETWEEN '2020-01-01' AND '2020-12-31' OR EXISTS (SELECT 1 FROM Order_Items AS T2 WHERE T2.order_id = T1.order_id AND T2.order_quantity > 5) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "1c3d636246b70b1c5e107ef6292a5afd983794da",
                "query": "SELECT T1.customer_name, T3.product_name FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T3.product_price BETWEEN 100 AND 500 AND T1.customer_email = 'example@gmail.com' ORDER BY T1.customer_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0e2724f4590f9f00efde17b7e2dac3d936afd484",
                "query": "SELECT COUNT(DISTINCT T1.product_id) FROM Products AS T1 WHERE T1.product_price >= 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "d9f25285903d7ab25b04ab7ab79a657aa3d1acb0",
                "query": "SELECT COUNT(DISTINCT T1.order_id), SUM(T2.product_price) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T1.customer_id != 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "13f11a015e3798049b34f381fd1abe64a290d526",
                "query": "SELECT product_name FROM Products WHERE product_type_code = 'Electronics' ORDER BY product_price ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4ac0606a6f6899320310d9b5cdd86fd16109c307",
                "query": "SELECT product_name, product_price FROM Products WHERE product_price >= 10 GROUP BY product_price",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "2f825c55f87300f9885792842653b9b42f2536b3",
                "query": "SELECT T1.product_name, T2.order_date FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id WHERE T1.product_price BETWEEN 100 AND 200 AND T2.order_quantity NOT IN (SELECT T4.order_quantity FROM Order_Items AS T4 WHERE T4.order_quantity < 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T4 WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "3dd8472e363303ebb74f9f5deaac7d72a36ef7f0",
                "query": "SELECT product_name FROM Products WHERE product_type_code != 'A' GROUP BY product_name",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5a964245bcfcdb72df8734635ca355680e4c7817",
                "query": "SELECT T1.product_name, T2.order_quantity FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Customer_Orders AS T3 ON T2.order_id = T3.order_id WHERE T3.order_date >= '2020-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "6b6a690fb73c30ab6d5daf91c70292d08034ab00",
                "query": "SELECT COUNT(DISTINCT product_type_code) , COUNT(product_name) , COUNT(product_name) FROM Products WHERE product_price > 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) , COUNT(#COLUMN#) , COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "9f58a5bf680659a8af67234537586be4b6c64628",
                "query": "SELECT product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items) ORDER BY product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1c5ca3f5294ca90591f24b0aa355919c61111394",
                "query": "SELECT product_name FROM Products WHERE product_type_code != 'A' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "2786a60c2c387eefc217fdf860db7a5bdbf3c321",
                "query": "SELECT product_name FROM Products WHERE product_type_code = 'A' AND product_name = 'ProductA'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "cc04b96b7dd4505d6957ac3fc76364ae8e7bcf06",
                "query": "SELECT product_name, AVG(product_price) FROM Products WHERE product_price <= 100 GROUP BY product_name HAVING AVG(product_price) > 50",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "75d8f8c15239b883503139162ac7ce7ea0dad6e1",
                "query": "SELECT COUNT(DISTINCT product_type_code) FROM Products AS T1 WHERE product_type_code != 'A1' ORDER BY product_price DESC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# != '#VALUE#' ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "8a564a3daf9017023c3f0348d1ccda374bdac724",
                "query": "SELECT COUNT(DISTINCT T1.product_name) FROM Products AS T1 WHERE T1.product_price > 10 AND T1.product_price < 100 AND T1.product_type_code IN (SELECT T2.product_type_code FROM Products AS T2 WHERE T2.product_price > 50)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "b6bbe0744e85f8cc14b1011215670742ecb5e101",
                "query": "SELECT DISTINCT product_name FROM Products WHERE product_price != 10 ORDER BY product_name ASC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0281bb3b7488acacc422ebb44c81c869520704d5",
                "query": "SELECT COUNT(DISTINCT T1.product_name) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.order_quantity >= 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "671c1d43596cd02725f2b238cb1ed3b8d729a2fa",
                "query": "SELECT T1.product_name, COUNT(T2.order_item_id) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "f45446105e7cd8954dee11db998f8e13dfc5279d",
                "query": "SELECT COUNT(DISTINCT T1.order_id), COUNT(DISTINCT T2.order_id) FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T1.customer_id > 100 AND T2.product_id BETWEEN 500 AND 1000 AND NOT EXISTS (SELECT 1 FROM Products AS T3 WHERE T3.product_id = T2.product_id AND T3.product_price > 1000) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "ship_mission": [
            {
                "hash": "b3b2fca4e253c1212d2bcd644cf0d0f0726fae9c",
                "query": "SELECT MAX(T1.Tonnage) FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Launched_Year <= 2000",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "4a4b5d857d5253bc0c4e8e8c736a469d959d4134",
                "query": "SELECT Name FROM ship WHERE Tonnage >= 1000 ORDER BY Tonnage DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "54df5e6b23d22672d99ce73115b40a3bc7873b0d",
                "query": "SELECT T1.Name, SUM(T2.Speed_knots) FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Tonnage > 1000 AND T2.Location = 'North Sea' AND T1.Ship_ID NOT IN (SELECT Ship_ID FROM mission WHERE Fate = 'Sunk') GROUP BY T1.Name HAVING MAX(T2.Speed_knots) > 20 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c24cadc1da87dd515c525d667d3d47c2bac13da1",
                "query": "SELECT T1.Name FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN ship AS T3 ON T2.Ship_ID = T3.Ship_ID WHERE T2.Launched_Year > 1945 AND T3.Tonnage > 1000 AND EXISTS (SELECT 1 FROM mission AS T4 WHERE T4.Ship_ID = T2.Ship_ID AND T4.Speed_knots > 20) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "c82e4554a31355113340007090b7bb6f0ef0358b",
                "query": "SELECT T1.Name, T2.Name FROM ship AS T1, ship AS T2 WHERE T1.Tonnage BETWEEN 1000 AND 2000 AND T1.Ship_ID = T2.Ship_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1, #TABLE# AS T2 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "9e76105c058ffa1378c560e9e44075cdf0d0a0a2",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Ship_ID) FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Code != 'Submarine' GROUP BY T1.Name ORDER BY COUNT(DISTINCT T1.Ship_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "1d83961bd27762702151663d42ec8220cf102b3d",
                "query": "SELECT T1.Mission_ID FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN ship AS T3 ON T2.Ship_ID = T3.Ship_ID WHERE (T1.Speed_knots BETWEEN 10 AND 20) OR (T1.Launched_Year > 1990) OR (T2.Tonnage > 50000) ORDER BY T1.Mission_ID DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE#) OR (#COLUMN# > #VALUE#) OR (#COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e603e02e2543b5c16b2893be435c28c4f7819ae8",
                "query": "SELECT T1.Name, SUM(T2.Speed_knots) FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Tonnage BETWEEN 1000 AND 2000 AND T2.Launched_Year > 1940 AND NOT EXISTS ( SELECT 1 FROM mission AS T3 WHERE T2.Ship_ID = T3.Ship_ID AND T3.Fate = 'Sunk' ) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c33dffaa1100eebfd14fad7a346e166474b20d8a",
                "query": "SELECT T1.Launched_Year, T1.Code FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Location = 'Tokyo' OR T2.Name = 'USS Arizona' OR NOT EXISTS (SELECT 1 FROM ship WHERE T2.Ship_ID = Ship_ID AND Tonnage > 5000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "bd3f517d3828a8f2c30d7111ff16bfce26fcf518",
                "query": "SELECT T1.Launched_Year, T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year <= 1940 ORDER BY T1.Launched_Year DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "acbb1dd272d8d57d65e81aff27569195f6d352e2",
                "query": "SELECT COUNT(T1.Mission_ID) FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Code = 'Code1' OR T1.Code = 'Code2' OR T1.Code IN (SELECT Code FROM mission WHERE Launched_Year > 2000)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "19576f8d8d444344adcb10ccbcee5779cfb6510c",
                "query": "SELECT COUNT(DISTINCT T1.Ship_ID), COUNT(DISTINCT T2.Name), COUNT(T1.Ship_ID) FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year BETWEEN 1950 AND 1960 AND T1.Code IN (SELECT Code FROM mission WHERE Speed_knots > 20)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "899966f4c0165af48d74f1f94febf6240576c128",
                "query": "SELECT T1.Code, T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year >= 1945 AND T2.Type = 'Aircraft Carrier' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "03823ecf218afa083177287d57875980acba7b60",
                "query": "SELECT COUNT(DISTINCT T2.Ship_ID), T1.Location FROM Mission AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Tonnage > 5000 ORDER BY T1.Location DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2bec13b14ed5b6445a06f4a8f3686bce98242ebc",
                "query": "SELECT T1.Mission_ID, COUNT(DISTINCT T2.Ship_ID) FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Code = 'A' OR T2.Name LIKE '%B%' OR EXISTS (SELECT 1 FROM mission AS T3 WHERE T3.Ship_ID = T2.Ship_ID AND T3.Speed_knots > 10) ORDER BY T1.Mission_ID ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# LIKE #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "4027a2d4db1f561518b04e6d46da0b4d6ed1329c",
                "query": "SELECT T1.Ship_ID, SUM(T1.Speed_knots) AS sum_speed, MAX(T2.Tonnage) AS max_tonnage FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Tonnage >= 10000 GROUP BY T1.Ship_ID ORDER BY sum_speed DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) AS sum_#COLUMN#, MAX(#COLUMN#) AS max_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY sum_#COLUMN# DESC"
            },
            {
                "hash": "aff555e555357b7eb6197ccca66612c3c8d1556f",
                "query": "SELECT T1.Name, T2.Code FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Location = 'Japan' AND T2.Fate = 'Sunk'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = '#VALUE#' AND T2.#COLUMN# = '#VALUE#'"
            },
            {
                "hash": "0b021ca03f86a49f79bcb8bebed1f0aa0205f3ea",
                "query": "SELECT * FROM mission WHERE Speed_knots > 20 OR Speed_knots BETWEEN 10 AND 20 OR Speed_knots IN (SELECT Speed_knots FROM mission WHERE Speed_knots < 15)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#)"
            },
            {
                "hash": "4f64458d758f880636b8a6cd902430108163e125",
                "query": "SELECT COUNT(DISTINCT T1.Code), COUNT(DISTINCT T2.Name), SUM(T1.Launched_Year) FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Speed_knots < 20 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c987549923e7b2fb1e236c8f87b80df79f7f0c87",
                "query": "SELECT T1.Mission_ID, T2.Tonnage FROM Mission AS T1 JOIN Ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year <= T2.Tonnage",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #COLUMN#"
            },
            {
                "hash": "b02bdce2e30e3804c473714de52970623cbd740c",
                "query": "SELECT T1.Name, T2.Code FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID ORDER BY T2.Code DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5bd6caeed236cbd1630ca462392225900fcbb925",
                "query": "SELECT T2.Name, T1.Location, SUM(T1.Speed_knots) FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN ship AS T3 ON T2.Ship_ID = T3.Ship_ID WHERE T1.Code = 'Code' GROUP BY T2.Name, T1.Location ORDER BY T2.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#, #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "64da4c006f9ed59be0b65d4bc355cc3992cdfc88",
                "query": "SELECT T1.Name FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Tonnage > 1000 AND T2.Launched_Year BETWEEN 1940 AND 1945 AND T2.Speed_knots < 20 ORDER BY T2.Launched_Year DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ca353a6fac54093796a046fa67b580d15e153f3b",
                "query": "SELECT T1.Name, SUM(T1.Tonnage) FROM ship AS T1 JOIN mission AS T2 ON T1.Ship_ID = T2.Ship_ID JOIN mission AS T3 ON T1.Ship_ID = T3.Ship_ID WHERE T3.Speed_knots <= 30",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            }
        ],
        "boat_1": [
            {
                "hash": "2ab094ca43aaeb165a663bcccf4cd5388697ff40",
                "query": "SELECT COUNT(DISTINCT T1.name), SUM(T1.rating) FROM Sailors AS T1 WHERE T1.age BETWEEN 20 AND 30 AND T1.rating > 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "d746a286c305bc21cd4356906a516767521f2bf5",
                "query": "SELECT * FROM Sailors WHERE NOT EXISTS (SELECT * FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid WHERE T1.sid = Sailors.sid AND T2.color = 'red')",
                "template": "SELECT * FROM #TABLE# WHERE NOT EXISTS (SELECT * FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #TABLE#.#COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "46487a45e2222fa2c53ba5b4845bdbc6c3401203",
                "query": "SELECT COUNT(name) FROM Sailors AS S",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS "
            },
            {
                "hash": "344faba47c8b9fa1d6d4f3dc99010fd5019dcbc3",
                "query": "SELECT T1.name FROM Sailors AS T1 JOIN Sailors AS T2 ON T1.sid = T2.sid WHERE (T1.rating = 10 OR T2.rating = 8 OR T1.name NOT IN (SELECT name FROM Sailors AS T3 WHERE T3.age > 20))",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE (#COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 WHERE #COLUMN# > #VALUE#))"
            },
            {
                "hash": "86ab964a74ee7b6254b9d09b8e53bd88e8ac7937",
                "query": "SELECT COUNT(DISTINCT T1.bid), T2.name FROM Reserves AS T1 JOIN Sailors AS T2 ON T1.sid = T2.sid JOIN Boats AS T3 ON T1.bid = T3.bid WHERE T2.age <= 20 ORDER BY COUNT(DISTINCT T1.bid) DESC LIMIT 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "b3b2fca4e253c1212d2bcd644cf0d0f0726fae9c",
                "query": "SELECT MAX(T2.rating) FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.age <= 25",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "453a82f8155d414bc3a0d7406ed3aeb020e8bd83",
                "query": "SELECT COUNT(T1.bid) FROM Boats AS T1 JOIN Reserves AS T2 ON T1.bid = T2.bid WHERE T2.day = 'Monday' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7d266a895eb3cf05d78b239717d376702f8b7d22",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(DISTINCT T2.name) FROM Sailors AS T1 JOIN Reserves AS T3 ON T1.sid = T3.sid JOIN Boats AS T2 ON T2.bid = T3.bid WHERE T1.rating = 5 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7d105f86f9e37611d94bf42de09638a1479eeda7",
                "query": "SELECT name FROM Sailors WHERE rating > 5 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "4083c69f83b9bde3beb30c6b0116dd00a950d922",
                "query": "SELECT bid FROM Boats WHERE NOT EXISTS (SELECT 1 FROM Reserves WHERE Reserves.bid = Boats.bid AND Reserves.sid = 22) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "0b975cdfc3845ddded8e3152fced28eed1075c7a",
                "query": "SELECT name FROM Sailors WHERE rating BETWEEN 3 AND 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "0e1dffb49ea2c851e9011508aa6ac36bb6ac4d28",
                "query": "SELECT COUNT(DISTINCT T2.day) FROM Sailors AS T1 LEFT JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.day BETWEEN '2019-01-01' AND '2019-12-31' OR T1.rating = 5 OR T1.age > 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "f7ff7c88146710fca836c7a3d0fc6432b345688a",
                "query": "SELECT T1.name, SUM(T1.rating) FROM Sailors AS T1, Sailors AS T2 WHERE T1.sid = T2.sid AND T1.rating >= 5 GROUP BY T1.name ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1, #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T1.#COLUMN# >= #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e593ed543e8eb5cb1d9d7ea30dadcabc6f334867",
                "query": "SELECT S1.name, S2.name FROM Sailors AS S1 JOIN Sailors AS S2 ON S1.sid = S2.sid WHERE S1.age BETWEEN 20 AND 30 OR S1.rating = 5 OR S2.age < 25",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# < #VALUE#"
            },
            {
                "hash": "9315c85f6146c167d74a193259cd62c9deb56711",
                "query": "SELECT name, MAX(rating) FROM Sailors WHERE name != 'John' GROUP BY name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "44ec49096d69d7a01a6609cfcf93f69d23f8d63b",
                "query": "SELECT DISTINCT T1.name FROM Sailors AS T1 WHERE T1.rating = 8 OR T1.sid IN ( SELECT T2.sid FROM Reserves AS T2 WHERE T2.day = 'Monday' ) ORDER BY T1.rating DESC",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8682309fdb5bc68a02976e0e5dd58fcd497ed2c1",
                "query": "SELECT name FROM Sailors WHERE rating >= 5 ORDER BY name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9e1c48515df24a313cd6614409cd067a381be7aa",
                "query": "SELECT COUNT(DISTINCT S1.name), COUNT(DISTINCT B1.name), COUNT(DISTINCT R1.day) FROM Sailors S1 JOIN Reserves R1 ON S1.sid = R1.sid JOIN Boats B1 ON R1.bid = B1.bid LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "8e52e3d49bb4ce14f98c32fa89ab01531a17c674",
                "query": "SELECT T.name, COUNT(DISTINCT T.rating), SUM(T.age) FROM (SELECT S.name, S.rating, S.age FROM Sailors AS S WHERE S.sid NOT IN ( SELECT R.sid FROM Reserves AS R WHERE R.bid = 102 ) AND S.rating > 5 ) AS T GROUP BY T.name ORDER BY T.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM (SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) AND #COLUMN# > #VALUE# ) AS T GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c9844e9eb539e14cffcfbea68fcdf1554115a965",
                "query": "SELECT T1.name, SUM(T1.rating) FROM Sailors AS T1 WHERE T1.sid IN (SELECT T2.sid FROM Reserves AS T2 WHERE T2.day = 'Monday') GROUP BY T1.name HAVING SUM(T1.rating) > 5 ORDER BY T1.rating DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9a96c8e157c3817003e1741f6669255566f1ba6f",
                "query": "SELECT S1.name FROM Sailors AS S1 JOIN Reserves AS R1 ON S1.sid = R1.sid JOIN Boats AS B1 ON R1.bid = B1.bid WHERE S1.sid NOT IN (SELECT S2.sid FROM Sailors AS S2 JOIN Reserves AS R2 ON S2.sid = R2.sid JOIN Boats AS B2 ON R2.bid = B2.bid WHERE S2.rating = 3 AND B2.color = 'red')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "5fd3c17671d89cd4e21d803b3e0c688d0c977c3f",
                "query": "SELECT T2.name FROM Reserves AS T1 JOIN Sailors AS T2 ON T2.sid = T1.sid WHERE T2.rating != 8 ORDER BY T2.rating DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T2.#COLUMN# = T1.#COLUMN# WHERE T2.#COLUMN# != #VALUE# ORDER BY T2.#COLUMN# DESC"
            },
            {
                "hash": "7aabe3d1d4f116b0a749d6e317df9744d4058d56",
                "query": "SELECT COUNT(DISTINCT name) FROM Sailors WHERE rating < 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT SUM(rating) FROM Sailors WHERE age < 20",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "5279858f816f68c4d55b6d6bddbd116148065ae6",
                "query": "SELECT sid FROM Sailors WHERE rating BETWEEN 2 AND 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8866f60fa0c0f63ab929eb457b288b080f54afcf",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM (SELECT T2.name FROM Sailors AS T2 JOIN Reserves AS T1 ON T2.sid = T1.sid) AS T1 WHERE T1.age < 30",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) AS #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "ad3686d117d44ebab2ffcb1e93eafe541273facc",
                "query": "SELECT COUNT(DISTINCT T1.name), T2.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 101 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            }
        ],
        "institution_sports": [
            {
                "hash": "f053db13eb688657b645063a17fb8f86dc77b8ef",
                "query": "SELECT T1.Name, MAX(T1.Enrollment) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Number_of_Championships != 0 GROUP BY T1.Name ORDER BY MAX(T1.Enrollment) ASC",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "a58c8aa45e4e83201fd28f0355cda9e03a28c04e",
                "query": "SELECT T1.Name, T3.Number_of_Championships FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN ( SELECT Institution_ID FROM Championship WHERE Number_of_Championships > 1 ) AS T3 ON T1.Institution_ID = T3.Institution_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AS  ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ef21d842b7825f62169852d8374b77ad89833303",
                "query": "SELECT i.Team, SUM(c.Number_of_Championships) FROM institution AS i JOIN Championship AS c ON i.Institution_ID = c.Institution_ID WHERE i.Enrollment < 10000 OR c.Number_of_Championships > (SELECT AVG(Number_of_Championships) FROM Championship) GROUP BY i.Team LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "751f792f2b09aedf2e497bb0e7e5189fdf8017b3",
                "query": "SELECT T1.Name, T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Enrollment BETWEEN (SELECT MIN(Enrollment) FROM institution) AND (SELECT MAX(Enrollment) FROM institution) OR T2.Nickname = 'Team1' OR T1.Founded > (SELECT AVG(Founded) FROM institution)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN (SELECT MIN(#COLUMN#) FROM #TABLE#) AND (SELECT MAX(#COLUMN#) FROM #TABLE#) OR #COLUMN# = '#VALUE#' OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "6cc94fa69ed777ebdfba44aebd66cb9779f06866",
                "query": "SELECT COUNT(DISTINCT City), Name FROM institution LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "fc99b630c3378542f2bc0403b5502b05c952200c",
                "query": "SELECT T1.Name, COUNT(T2.Number_of_Championships) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Enrollment >= 10000 GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "5c996b4dde983872de27c42559015407cdf507b3",
                "query": "SELECT COUNT(DISTINCT Institution_ID), Team FROM institution WHERE Enrollment < 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "dd1a3f5ba125447da2e69b6927d687b3b1e657b3",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Number_of_Championships > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "41d6345c16726fcf4b4ce2158b78c014ff97c530",
                "query": "SELECT T1.Name, T2.Nickname FROM institution AS T1 JOIN institution AS T2 ON T1.Institution_ID < T2.Institution_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "de1f3331e1f5fbd4183e7896c7ad578afd3ff61d",
                "query": "SELECT Name, Team FROM institution WHERE Province = 'Ontario' OR City IN ( SELECT City FROM institution WHERE Enrollment > 10000 ) ORDER BY Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "bac4eae6d995fbac2e3522dece0586d32f8c7506",
                "query": "SELECT T1.Institution_ID FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Enrollment > 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "82945778be9a844b60ab5aa779035c6dbb6a71c7",
                "query": "SELECT Team, City FROM institution WHERE Enrollment > 10000 AND Founded BETWEEN 1800 AND 1900 AND Name = 'University' ORDER BY Enrollment DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "7d307665ec3234296a3b5794d6cd19f5854df6d9",
                "query": "SELECT Name, MIN(Enrollment) FROM institution WHERE City = 'Ottawa' GROUP BY Name HAVING MIN(Enrollment) < 20000 ORDER BY Name DESC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "faaa193f240c67649f67b14d162090840f42cdb3",
                "query": "SELECT COUNT(DISTINCT T1.Team), COUNT(DISTINCT T2.Nickname), T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Enrollment > 5000 AND T1.Endowment BETWEEN 'High' AND 'Highest' AND T2.Number_of_Championships = 5 ORDER BY T1.Enrollment DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "19296c373eb027eeebcd4b8149d268107dc2aa71",
                "query": "SELECT Enrollment FROM institution AS T1 ORDER BY Enrollment ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7eeb7f2227b600a0ee0226aafd001fe1a842a351",
                "query": "SELECT T1.Name, T1.Team, T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a97bce51d1ed38646d02815e2c1516979cd0087d",
                "query": "SELECT COUNT(DISTINCT T1.Team), T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Enrollment > 10000 OR T1.Founded BETWEEN 1800 AND 1900 OR T1.Institution_ID NOT IN (SELECT Institution_ID FROM Championship) ORDER BY COUNT(DISTINCT T1.Team) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "561db25838a99c6cb6f15ca3eee593dc20a71cf4",
                "query": "SELECT T1.City, COUNT(DISTINCT T1.Name) FROM institution AS T1 GROUP BY T1.City ORDER BY T1.City ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4805fd12d2a97af64c2c3da1e8ceff0affc75c4c",
                "query": "SELECT T1.Name, T2.Capacity FROM institution AS T1 JOIN Championship AS T3 ON T1.Institution_ID = T3.Institution_ID JOIN institution AS T2 ON T3.Institution_ID = T2.Institution_ID WHERE (T1.Enrollment > 1000 OR T2.Capacity < 50000) AND T1.Institution_ID IN (SELECT Institution_ID FROM Championship) ORDER BY T2.Capacity ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# > #VALUE# OR #COLUMN# < #VALUE#) AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "a3b9949b5d9c93a7878012fef95f537288297377",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Nickname) FROM institution AS T1 LEFT JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded > 1900 AND NOT EXISTS ( SELECT 1 FROM Championship AS T3 WHERE T3.Institution_ID = T2.Institution_ID AND T3.Number_of_Championships = 0 ) ORDER BY T1.Founded DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# LEFT JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ca377b850657df7757412773b7bac24160249d68",
                "query": "SELECT Name FROM institution WHERE Enrollment > 20000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "66109b61c18cbe3a6817ec90f2bf8e3fbeff09a3",
                "query": "SELECT Institution_ID FROM institution WHERE Enrollment >= 10000 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "f98c3414eed169b94f5eac24db866c9705dd48e2",
                "query": "SELECT T1.Team, T1.Capacity FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T1.Enrollment >= 10000 AND T3.Founded >= 1800",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE#"
            },
            {
                "hash": "739d89c03ec23a53b7ad1012512157ea7b48a6f3",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Nickname), MIN(T1.Capacity) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN Championship AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T1.Province = 'Ontario' OR T1.Founded BETWEEN 1500 AND 2000 OR T2.Number_of_Championships > 1 GROUP BY T1.Name LIMIT 100",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "99360bf8366b4f0691c511ac444c5bc9979c5e83",
                "query": "SELECT T1.Name, T2.Name FROM institution AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded BETWEEN T2.Founded AND T2.Founded LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN T2.#COLUMN# AND T2.#COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "bd3c8c6db6620b8e5c08ae1f4f8c9e12d9f5821e",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Nickname) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded BETWEEN 1800 AND 1900 GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Nickname) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "a2f887bfc34946ed41566b7731ea95b99518a2e5",
                "query": "SELECT COUNT(DISTINCT T2.Name), COUNT(T2.Institution_ID) FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Founded BETWEEN 1900 AND 1950 AND T2.City NOT IN (SELECT City FROM institution WHERE Province = 'Ontario') ORDER BY T2.Name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "40117f7e26b50530341f391b58b6403d02c9fadc",
                "query": "SELECT COUNT(DISTINCT Name), COUNT(DISTINCT Institution_ID) FROM institution WHERE Enrollment > 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            }
        ],
        "sakila_1": [
            {
                "hash": "2a50b333bdf4186dfbe27287b93e023d867e4188",
                "query": "SELECT AVG(T1.length), AVG(T2.length) FROM film AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id WHERE T1.length > 50 GROUP BY T1.film_id ORDER BY T1.length DESC",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "56a70453a2475ae1ec9d90b9145883f32491b9fe",
                "query": "SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE T1.first_name = 'John' AND T1.last_name = 'Doe' AND NOT EXISTS (SELECT 1 FROM film_actor AS T2 WHERE T2.actor_id = T1.actor_id AND T2.film_id = 1) ORDER BY T1.first_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = '#VALUE#' AND T1.#COLUMN# = '#VALUE#' AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN# AND T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "55628b68658795c604e2d86b14b60f17f5ce21a8",
                "query": "SELECT COUNT(DISTINCT T1.title) FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE T3.return_date != '2006-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "deb68b22425e60e0ecb6fdf41ddae91c9fb93f4d",
                "query": "SELECT COUNT(DISTINCT T1.first_name) FROM actor AS T1 WHERE T1.actor_id IN (SELECT T2.actor_id FROM film_actor AS T2 WHERE T2.film_id = 1) AND T1.last_name = 'GUINESS' ORDER BY T1.first_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 WHERE T1.#COLUMN# IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) AND T1.#COLUMN# = #VALUE# ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "7b3627558c8c0712f178dca70f06ee70468c9153",
                "query": "SELECT T1.first_name FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name != 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "fa49a6c530a2a81239aa6e6e449fd1f79859f40d",
                "query": "SELECT a.first_name, COUNT(*) FROM actor AS a JOIN film_actor AS fa ON a.actor_id = fa.actor_id WHERE a.actor_id NOT IN (SELECT actor_id FROM film_actor WHERE film_id = 1) GROUP BY a.first_name ORDER BY COUNT(*) DESC",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(*) DESC"
            },
            {
                "hash": "4eb8c7182fa9a66d50438a9c42b5bf6926304c02",
                "query": "SELECT COUNT(DISTINCT T1.customer_id), COUNT(T2.rental_id) FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.store_id != 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d45fda4e063dbe1f9a785792d0ec1ab1d23d1b28",
                "query": "SELECT COUNT(T1.film_id) FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id WHERE T2.store_id = 1 LIMIT 1",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT 1"
            },
            {
                "hash": "eef075eed93609c2cabb4565685f7a76cd239302",
                "query": "SELECT COUNT(DISTINCT T1.store_id), COUNT(T2.inventory_id) FROM store AS T1 JOIN inventory AS T2 ON T1.store_id = T2.store_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "2f7127fcd3ec01db95cb247bcb6f7596a507a242",
                "query": "SELECT film_id, SUM(length) FROM film WHERE film_id IN ( SELECT film_id FROM inventory WHERE store_id = 1 ) GROUP BY film_id HAVING SUM(length) > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "43031d88397cc63c742e0c21384a2d3f2b11e6ea",
                "query": "SELECT T1.first_name, COUNT(T2.film_id) FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T1.first_name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "d8f859770346a9f2c3b2dd19d19056a554247c17",
                "query": "SELECT T1.first_name, T2.customer_id FROM staff AS T1  JOIN rental AS T2  ON T1.staff_id = T2.staff_id  JOIN inventory AS T3  ON T2.inventory_id = T3.inventory_id  WHERE T3.film_id BETWEEN 1 AND 100 AND NOT EXISTS ( SELECT 1 FROM film WHERE film_id = T3.film_id AND rating = 'R' ) ORDER BY T2.rental_date DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1  JOIN #TABLE# AS T2  ON #COLUMN# = #COLUMN#  JOIN #TABLE# AS T3  ON #COLUMN# = #COLUMN#  WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "112954b835fa10daa8fa7989acab27a994e47c83",
                "query": "SELECT COUNT(film_id), SUM(rental_duration) FROM film WHERE rental_duration < ( SELECT AVG(rental_duration) FROM film )",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < ( SELECT AVG(#COLUMN#) FROM #TABLE# )"
            },
            {
                "hash": "dc09eb49dfbef885eb77d5377b84d1425678013d",
                "query": "SELECT T3.first_name, T4.first_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id JOIN film AS T3 ON T1.film_id = T3.film_id JOIN staff AS T4 ON T3.film_id = T4.staff_id WHERE T4.first_name = 'Mike' OR T4.first_name = 'Mike' OR EXISTS ( SELECT 1 FROM film_text AS T5 WHERE T5.title = 'Mike' )",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# )"
            },
            {
                "hash": "280a178b0ac4e255e829025381c81f58e50c7b8f",
                "query": "SELECT T1.first_name, T2.first_name FROM actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id WHERE T1.actor_id < 10 ORDER BY T1.first_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0258b1bcc8c4544e79f72cadb171e2c441fc58e5",
                "query": "SELECT T1.first_name, T2.first_name FROM staff AS T1 JOIN staff AS T2 ON T1.staff_id < T2.staff_id LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# < #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "48ad0ce2c46dc21ab4ae0c93eb4cde6a8f4f18bd",
                "query": "SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE T1.actor_id NOT IN (SELECT T2.actor_id FROM film_actor AS T2 WHERE T2.film_id = 1) LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# NOT IN (SELECT T2.#COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "7ac63c4fa2bbd917bce081213cf7566ec3d56f51",
                "query": "SELECT T1.first_name, T2.title FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id ORDER BY T1.first_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "3664205daf295f6cb5928088094ad2fce4813790",
                "query": "SELECT T1.first_name, T1.last_name FROM actor AS T1 WHERE EXISTS (SELECT 1 FROM film_actor AS T2 WHERE T2.actor_id = T1.actor_id LIMIT 10)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# LIMIT #VALUE#)"
            },
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(film_id) FROM film",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "b80b88d5f5f749a0670162ae7d7ba52c64d0c66f",
                "query": "SELECT T1.first_name, T2.first_name FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id WHERE T1.actor_id IN (SELECT actor_id FROM film_actor WHERE film_id = 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "886691884f0eb7225540cbbfa0b4f5a16f84bed8",
                "query": "SELECT T1.title FROM film AS T1 WHERE EXISTS (SELECT T2.film_id FROM inventory AS T2 WHERE T2.film_id = T1.film_id) ORDER BY T1.length DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0638afac1498febedd5c05733314298cf2ad8cd3",
                "query": "SELECT * FROM film WHERE film_id = 1 AND release_year BETWEEN 2000 AND 2010 AND EXISTS (SELECT * FROM inventory WHERE film_id = film.film_id)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #TABLE#.#COLUMN#)"
            },
            {
                "hash": "78e60d1ec7c77763fef8ff50339d516341e07a0f",
                "query": "SELECT COUNT(T1.film_id), SUM(T2.length) FROM film AS T1 JOIN film_text AS T2 ON T1.film_id = T2.film_id WHERE T1.release_year BETWEEN '2000-01-01' AND '2010-01-01' AND T1.rating = 'PG' AND T2.description NOT LIKE '%not exists%'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# NOT LIKE #VALUE#"
            },
            {
                "hash": "e8b1a2783615e5d2b544948331a2d952dcdebf41",
                "query": "SELECT T1.first_name, COUNT(T2.film_id) FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id JOIN film AS T3 ON T2.film_id = T3.film_id GROUP BY T1.first_name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "6e49ce2ebeb7e7e98cb51713520d7f9a1594c384",
                "query": "SELECT COUNT(DISTINCT T1.language_id), T2.name FROM film AS T1 JOIN language AS T2 ON T1.language_id = T2.language_id WHERE T1.release_year BETWEEN 2000 AND 2010 ORDER BY T2.name DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fba5fe9b657e59c4ae752306cb7f55cd0e7a9e98",
                "query": "SELECT COUNT(DISTINCT T1.first_name), T2.title FROM staff AS T1 JOIN inventory AS T2 ON T1.store_id = T2.store_id JOIN film AS T3 ON T2.film_id = T3.film_id JOIN store AS T4 ON T3.film_id = T4.store_id LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "5285734e6b9395a451846e8a72dce3fc010d3452",
                "query": "SELECT T1.first_name, T2.staff_id FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN payment AS T3 ON T2.rental_id = T3.rental_id WHERE T3.amount < 2 ORDER BY T1.first_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7a429b8c59b3c43491decc54fa3af4ecce975e29",
                "query": "SELECT T1.first_name, T2.first_name FROM staff AS T1 JOIN store AS T2 ON T1.store_id = T2.store_id JOIN address AS T3 ON T2.address_id = T3.address_id WHERE T3.city_id <= 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            }
        ],
        "election_representative": [
            {
                "hash": "f5231cd88780888cfe8f7af0fb7cf24916d270ef",
                "query": "SELECT AVG(Votes) FROM election WHERE Date >= '2000-01-01'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "bc51271a368f8f235ffdfeca9bba43d5286e9995",
                "query": "SELECT T1.Name FROM representative AS T1 WHERE T1.Representative_ID IN ( SELECT T2.Representative_ID FROM election AS T2 GROUP BY T2.Representative_ID HAVING MAX(T2.Votes) ) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) ) LIMIT #VALUE#"
            },
            {
                "hash": "98e8f534975a3e4beb69920aa95c5418e51a05f2",
                "query": "SELECT T1.Name, MIN(T2.Votes) FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Seats >= 10 LIMIT 5",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "758383c23fd2920a15a31140c86fbc486f858384",
                "query": "SELECT MIN(Vote_Percent) FROM election WHERE Place < 2 LIMIT 5",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "670180118448ada519544bfc7afd742661c0ace5",
                "query": "SELECT COUNT(Election_ID), SUM(Votes), COUNT(Representative_ID) FROM election WHERE Vote_Percent <= 50",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "a4ab5885ff46ec7f1aea808563acd7addd1d7de0",
                "query": "SELECT COUNT(DISTINCT T1.Representative_ID), COUNT(T1.Representative_ID), T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID JOIN representative AS T3 ON T3.Representative_ID != T2.Representative_ID JOIN election AS T4 ON T4.Representative_ID = T3.Representative_ID WHERE T1.Date = '2020-01-01' OR T2.Name = 'John' OR EXISTS (SELECT 1 FROM representative AS T5 WHERE T5.State = 'CA')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# != #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "65d504fa57e0b5798dbb6a8b9d933035f5c5324c",
                "query": "SELECT COUNT(DISTINCT T1.Representative_ID) FROM election AS T1 WHERE T1.Votes BETWEEN 100 AND 500 AND NOT EXISTS (SELECT T2.Name FROM representative AS T2 WHERE T2.Representative_ID = T1.Representative_ID AND T2.Party = 'Democrat') AND T1.Seats > 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "0d4621ecd0ae711db9edee67e8353744767f5e9e",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Election_ID) FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Votes >= 10000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1e366d3634e05f4f81167c9d0dcce75566b23837",
                "query": "SELECT T2.Name, COUNT(DISTINCT T1.Election_ID), MAX(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Seats > 5 ORDER BY T1.Votes DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "13cde78879dfd209e524f8f47e47d06ef2e07843",
                "query": "SELECT AVG(T1.Votes), AVG(T1.Vote_Percent) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID JOIN election AS T3 ON T3.Representative_ID = T2.Representative_ID WHERE T1.Place != T3.Place",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "e92736a003496a5dc0be344d3f1e6d1b3fac8625",
                "query": "SELECT T1.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Date != '2000' AND T2.State != 'CA'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "c34c612126f8601066aaed0152bddb3510d3929c",
                "query": "SELECT T1.Name, SUM(T2.Votes) FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID GROUP BY T1.Name HAVING SUM(T2.Votes) >= 10000 ORDER BY SUM(T2.Votes) DESC LIMIT 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "9ee212edf9c7c0db64eb30662b4eaedef190a821",
                "query": "SELECT COUNT(DISTINCT Name) , Name, Name FROM representative GROUP BY Name HAVING SUM(Vote_Percent) = 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "a1a3ff3787cb988b74c440499a60d18a3f6244cf",
                "query": "SELECT T1.Name, SUM(T2.Votes) FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Place <= 3 ORDER BY T2.Votes DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "e2136a1df15717d2d6ffc91ca477dfa2250591a0",
                "query": "SELECT COUNT(DISTINCT Representative_ID) FROM election WHERE Seats > 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "b6807644dd8cff975d2ce4e46a2378fda32c30d9",
                "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Votes IN (SELECT Votes FROM election ORDER BY Votes ASC LIMIT 1) ORDER BY T2.Name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC LIMIT 1) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f55c77cb405837c3d226823953ca889f229d6a4f",
                "query": "SELECT COUNT(Place) FROM election AS e ORDER BY Vote_Percent DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "296dbfa03796ac8d7d358f1f9bcf09ec764f0d51",
                "query": "SELECT Votes FROM election WHERE Vote_Percent BETWEEN 40 AND 60 ORDER BY Votes DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "737cc61d5d2c196264c6c3e3e47a3d817ec1a1fe",
                "query": "SELECT COUNT(DISTINCT T1.Representative_ID), COUNT(DISTINCT T2.Name), T1.Seats FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = 'Democrat' AND T1.Date BETWEEN '2000-01-01' AND '2020-12-31' AND T1.Vote_Percent > 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "b05e02e14c0c33e35bbc3460ce821575361ddc74",
                "query": "SELECT T1.Name, T2.Name FROM representative AS T1 JOIN representative AS T2 ON T1.State = T2.State WHERE T1.Party = 'Democrat' AND T2.Party = 'Republican' ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "993ea2b498983aacd6f139d3f7497dcca3344afd",
                "query": "SELECT T1.Representative_ID, T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T1.Vote_Percent < 50 GROUP BY T1.Representative_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "687dbba9f4c109748d9eebf09f394e96a129d588",
                "query": "SELECT T1.Name FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID JOIN election AS T3 ON T2.Election_ID = T3.Election_ID LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "5d3b446f1609e6864203081955c49286b88ff01f",
                "query": "SELECT COUNT(DISTINCT T1.Date), T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Name NOT IN (SELECT Name FROM representative WHERE Party = 'Democrat')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "eae9e30dd2052062f0cf8ea44793a54fc86e5426",
                "query": "SELECT Name FROM representative WHERE Representative_ID IN (SELECT Representative_ID FROM election ORDER BY Votes DESC LIMIT 10)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#)"
            },
            {
                "hash": "80cfc01a31cb789115706be94484f5e428c7bded",
                "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election WHERE Votes = (SELECT MAX(Votes) FROM election)) ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT MAX(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2572d66c5335426f4596eb58db9c3c66943bdc80",
                "query": "SELECT T2.Party, COUNT(T1.Representative_ID) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID GROUP BY T2.Party",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "9b1af029e7d8bc787469bddbe0ccdd83c4e08c97",
                "query": "SELECT T1.Name, MAX(T2.Votes) FROM representative AS T1 JOIN election AS T2 ON T1.Representative_ID = T2.Representative_ID JOIN election AS T3 ON T2.Votes = T3.Votes JOIN election AS T4 ON T3.Votes = T4.Votes WHERE T2.Place = T1.State GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# GROUP BY #COLUMN#"
            },
            {
                "hash": "46f1048cca1eeb4c2b1e625ef35a1b0b1649833d",
                "query": "SELECT Representative_ID FROM election WHERE Election_ID = 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            }
        ],
        "climbing": [
            {
                "hash": "94c380fdc79dbe649a5d1d94a95bcea5a09add1e",
                "query": "SELECT Name FROM mountain WHERE Country != 'USA' ORDER BY Height DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9f7d18b271fd4c3a3840fe4dc3702f7338e8483d",
                "query": "SELECT T1.Name, T2.Name FROM climber AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Points > 100 AND T2.Country = 'Spain' AND NOT EXISTS (SELECT 1 FROM mountain AS T3 WHERE T3.Height < 3000 AND T3.Mountain_ID = T1.Mountain_ID)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# < #VALUE# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "2522cf0958e894d232562d9ab1589c98895e53d9",
                "query": "SELECT T1.Name FROM climber AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Points = ( SELECT MAX(Points) FROM climber ) AND T2.Country = 'USA' LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT MAX(#COLUMN#) FROM #TABLE# ) AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "c1fe29a62a099d2b04d9d3e97a57ba97be9d746f",
                "query": "SELECT T1.Name, SUM(T2.Points) AS Total_Points FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Height BETWEEN 1000 AND 2000 OR T2.Country = 'USA' ORDER BY Total_Points DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) AS #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d821d6529372141c9228105dfa64b2dbbfff4931",
                "query": "SELECT T1.Name, SUM(T2.Points) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Height > 500 AND T1.Height < 1000 AND T2.Time = '2020' GROUP BY T1.Name HAVING SUM(T2.Points) > 100 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "f541322e4af3c2f127d748ba9c37ea4339b32e49",
                "query": "SELECT T2.Country, AVG(T1.Height) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID JOIN mountain AS T3 ON T3.Country = T2.Country WHERE T2.Country = 'USA' OR T1.Height BETWEEN 8000 AND 10000 OR NOT EXISTS (SELECT * FROM climber AS T4 WHERE T4.Mountain_ID = T1.Mountain_ID) GROUP BY T2.Country ORDER BY T2.Country ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c795b35b01f5dc2f3e3b50554c9196a4e8ff4331",
                "query": "SELECT mountain.Height, mountain.Name FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Height > 2000 OR T1.Range = 'Alps' OR NOT EXISTS (SELECT 1 FROM climber AS T3 WHERE T3.Mountain_ID = T1.Mountain_ID AND T3.Points < 100) ORDER BY T1.Height ASC",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "75a11b3eb340c9376257afd3a117661bda0d33e8",
                "query": "SELECT COUNT(DISTINCT T2.Name), AVG(T1.Prominence) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Height BETWEEN 2000 AND 3000 GROUP BY T2.Name",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "3682b285e9ed91dac107c25adc4871ed14d9fee7",
                "query": "SELECT T1.Name, MIN(T1.Height) FROM mountain AS T1 WHERE T1.Name != 'Mount Everest' GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "91f2372fc0a9819aded8f228d602ad8e32b68584",
                "query": "SELECT SUM(T2.Points) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Points > 10 LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "7ba05ba627dc85a58fcd7077682667b37ea283ac",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Points = 100 ORDER BY T2.Points DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "531ba828510c1a17713e50e2c331bda466b4c86a",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Climber_ID) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Time BETWEEN '2010-01-01' AND '2020-12-31' AND (SELECT COUNT(Climber_ID) FROM climber WHERE Mountain_ID = T1.Mountain_ID) > 5 GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Climber_ID) > 1 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND (SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#) > #VALUE# GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "bb8e11741790ccab74c61fb6ccb046280e2505f9",
                "query": "SELECT T1.Name, MIN(T1.Height) FROM mountain AS T1 WHERE NOT EXISTS (SELECT T2.Mountain_ID FROM climber AS T2 WHERE T1.Mountain_ID = T2.Mountain_ID) GROUP BY T1.Name ORDER BY MIN(T1.Height) ASC LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY MIN(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "8c1ede9c9b241e51aae2ef3c4d3a4826b4688135",
                "query": "SELECT C1.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE EXISTS ( SELECT T3.Name FROM mountain AS T3 WHERE T3.Height > ( SELECT MAX(Height) FROM mountain ) ) ORDER BY T1.Points DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > ( SELECT MAX(#COLUMN#) FROM #TABLE# ) ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "088242d7ebf0d8db71fb67f7d313dc105c2c4638",
                "query": "SELECT T1.Country, T2.Name FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Prominence > 500 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "dee2cdb4401ce649c3fe7fd35c1964eff498d1ba",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Climber_ID) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6e46af9f81a8d725047867b1744c44aa328a22d6",
                "query": "SELECT T1.Name, COUNT(T2.Climber_ID) FROM mountain AS T1 LEFT JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE EXISTS (SELECT 1 FROM climber WHERE climber.Mountain_ID = T1.Mountain_ID) GROUP BY T1.Name HAVING COUNT(DISTINCT T2.Climber_ID) > 1 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 LEFT JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d5685bd76ccee046ae0c17e4fc3b0b52e94999d9",
                "query": "SELECT Height FROM mountain WHERE Country = 'USA' AND Height > (SELECT MAX(Height) FROM mountain WHERE Country = 'France') ORDER BY Height DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "f5bc6385df2599cdfd8e0418d31861fa7c75711b",
                "query": "SELECT T1.Name, T2.Name, T3.Country FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID JOIN climber AS T3 ON T2.Mountain_ID = T3.Mountain_ID WHERE T1.Range != 'Alps'",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# JOIN #TABLE# AS T3 ON T2.#COLUMN# = T3.#COLUMN# WHERE T1.#COLUMN# != #VALUE#"
            },
            {
                "hash": "dbdb6b8401d310379d93ea749a028871833f06a5",
                "query": "SELECT COUNT(DISTINCT Country), AVG(Height) FROM mountain WHERE Prominence <= 1000 GROUP BY Country ORDER BY COUNT(DISTINCT Country) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "357fda0ef23fb182f669a850305bd9b2b6f9f979",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Climber_ID), SUM(T2.Points), AVG(T1.Height) FROM mountain AS T1 JOIN climber AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Time BETWEEN '10:00' AND '12:00' OR T1.Range IN (SELECT Range FROM mountain WHERE Country = 'USA')",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "3664205daf295f6cb5928088094ad2fce4813790",
                "query": "SELECT T1.Name, T1.Height FROM mountain AS T1 WHERE EXISTS (SELECT 1 FROM climber AS T2 WHERE T2.Mountain_ID = T1.Mountain_ID AND T2.Points > 1000) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "journal_committee": [
            {
                "hash": "73cd5804232a3479344975888e96bdcc352a5696",
                "query": "SELECT Theme, MAX(Sales) FROM journal GROUP BY Theme ORDER BY MAX(Sales) DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "c0310c8f7eea558e51bc2e7260d77c6450cb512e",
                "query": "SELECT AVG(j.Sales) FROM journal AS j JOIN journal_committee AS jc ON j.Journal_ID = jc.Journal_ID WHERE j.Sales > 500 OR jc.Work_Type = 'Editor' OR NOT EXISTS (SELECT * FROM journal_committee jc2 WHERE jc2.Journal_ID = j.Journal_ID AND jc2.Work_Type = 'Reviewer') GROUP BY j.Date",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "36ad1aea932beeeb9e24825aac657e59343b6ff7",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Journal_ID) FROM editor AS T1 INNER JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID WHERE T2.Journal_ID NOT IN (SELECT Journal_ID FROM journal WHERE Theme = 'Science') GROUP BY T1.Name HAVING MIN(T2.Work_Type) = 'Reviewer' ORDER BY COUNT(DISTINCT T2.Journal_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) = #VALUE# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "0d540ad01a7b09774f9be197d833f960ce790023",
                "query": "SELECT Theme FROM journal WHERE Sales > 100 ORDER BY Theme DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "1c6ffa9cb335f44eeefb347d93f9d6f964f42778",
                "query": "SELECT T1.Journal_ID, SUM(T1.Sales) FROM journal AS T1 WHERE T1.Date < '2000-01-01' GROUP BY T1.Journal_ID",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < 'YYYY-MM-DD' GROUP BY #COLUMN#"
            },
            {
                "hash": "7406643f06f28a744f6e4780b5599015d0b998ea",
                "query": "SELECT COUNT(DISTINCT T2.Editor_ID), T1.Theme FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID WHERE T2.Work_Type != 'Editor'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "b846d5ffe6f67d37659e5f1249d0f34be43fcd2b",
                "query": "SELECT AVG(Sales) FROM journal WHERE Date BETWEEN '2000-01-01' AND '2020-12-31' OR Theme = 'Science' ORDER BY Sales ASC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9d71445086c9ea0c3bad00ae6ad8cc7c4d03af1a",
                "query": "SELECT T1.Date, T1.Theme FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID WHERE T1.Sales > 100 AND T2.Work_Type > 'Editor'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "2b218190bab6e5ed53359e2690cdb5ed997c0407",
                "query": "SELECT Theme FROM journal WHERE Sales > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "d947c8c0d74ff5d87c286b4f3d8c53bc2805ef02",
                "query": "SELECT e.Name, SUM(j.Sales) FROM editor e JOIN journal_committee jc ON e.Editor_ID = jc.Editor_ID JOIN journal j ON jc.Journal_ID = j.Journal_ID WHERE e.Age <= 30 GROUP BY e.Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "ddced2baf5b181d8a71e2785149b2644b60ec12d",
                "query": "SELECT T1.Name, T3.Date FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T2.Journal_ID = T3.Journal_ID WHERE T2.Work_Type = 'Editor' AND T3.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T3.Sales > 100 ORDER BY T3.Date ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "30757ff563d33fa2140b8b441af0907999521e79",
                "query": "SELECT T1.Name, COUNT(T2.Journal_ID), T3.Sales FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T2.Journal_ID = T3.Journal_ID WHERE T3.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Work_Type IN (SELECT Work_Type FROM journal_committee WHERE Editor_ID = 1) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "9ba11178e95aa1eee81de2c7eb5a55d682b36262",
                "query": "SELECT COUNT(DISTINCT T2.Editor_ID), SUM(T1.Sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID WHERE T2.Work_Type = 'Editor' AND T1.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Sales > 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "b315645531af1a36984f66d75040d009b65d209f",
                "query": "SELECT T1.Journal_ID, T2.Name FROM journal AS T1 JOIN journal_committee AS T3 ON T1.Journal_ID = T3.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID WHERE T1.Sales > 500 OR T1.Date = '2020-01-01' AND T2.Age NOT IN (SELECT Age FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Work_Type = 'Editor'))",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#))"
            },
            {
                "hash": "029232c1b1c187a881c471a438c41b69867adb1f",
                "query": "SELECT COUNT(DISTINCT T1.Editor_ID) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID WHERE T2.Work_Type = 'Editor' OR T1.Age BETWEEN 30 AND 50 OR T1.Editor_ID NOT IN (SELECT Editor_ID FROM journal_committee WHERE Work_Type = 'Reviewer') ORDER BY T1.Name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dd7316dce61394291ee0d86c8eff67674d096e2d",
                "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T3.Journal_ID = T2.Journal_ID WHERE T3.Sales < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "88c4c57c83ecd919c8c30f9440bf8cba19f8e1f5",
                "query": "SELECT T2.Name, SUM(T1.Sales) FROM journal AS T1 JOIN journal_committee AS T3 ON T1.Journal_ID = T3.Journal_ID JOIN editor AS T2 ON T3.Editor_ID = T2.Editor_ID WHERE T1.Sales >= 100 AND T2.Age >= 30 GROUP BY T2.Name LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "9cc8e89a45fdd067d66b2d86385f1db2535cc717",
                "query": "SELECT COUNT(DISTINCT Theme), COUNT(DISTINCT Sales), Name FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID JOIN editor AS T3 ON T2.Editor_ID = T3.Editor_ID WHERE T1.Journal_ID = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "5b15ef6c4f837ea246b4fdca9c842e246cdf9597",
                "query": "SELECT T1.Journal_ID, COUNT(DISTINCT T2.Editor_ID) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID JOIN editor AS T3 ON T3.Editor_ID = T2.Editor_ID WHERE NOT EXISTS (SELECT 1 FROM editor AS T4 WHERE T4.Editor_ID = T2.Editor_ID AND T4.Age > 50)",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T4 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "0f19f27edb52a7cbbd51d1dd9d6aefd564ef32ae",
                "query": "SELECT T1.Date FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID JOIN editor AS T3 ON T2.Editor_ID = T3.Editor_ID WHERE T1.Sales < 500 ORDER BY T1.Date ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9f7d5aefe2808d6138ff6806602205bb19d8ee8d",
                "query": "SELECT COUNT(T1.Journal_ID) FROM journal AS T1 WHERE T1.Date BETWEEN '2020-01-01' AND '2020-12-31' OR T1.Sales > (SELECT AVG(Sales) FROM journal WHERE Theme = 'Science') OR T1.Theme IN (SELECT T2.Theme FROM journal AS T2 JOIN journal_committee AS T3 ON T2.Journal_ID = T3.Journal_ID WHERE T3.Work_Type = 'Editor')",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE##VALUE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE##VALUE# JOIN #TABLE# AS #TABLE##VALUE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "9304307c2b0b6f810e65566afd1a907cc3c11ee9",
                "query": "SELECT T1.Name FROM editor AS T1 WHERE NOT EXISTS (SELECT 1 FROM journal_committee AS T2 JOIN journal AS T3 ON T2.Journal_ID = T3.Journal_ID WHERE T2.Editor_ID = T1.Editor_ID AND T3.Theme = 'Science')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2125c5f90a4471de90b7a3b0134b51a58ca06415",
                "query": "SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee WHERE Journal_ID IN (SELECT Journal_ID FROM journal WHERE Sales <= 100)) ORDER BY Name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#)) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "296c8204d3c60e6d298f31580c9b04cd8fdd763c",
                "query": "SELECT T1.Name, T2.Date FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T3.Journal_ID = T2.Journal_ID WHERE T3.Sales < 10000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "6c2b57c119da09dacb94e4d664876efa43f115e8",
                "query": "SELECT AVG(T1.Sales) + COUNT(T2.Editor_ID), T3.Name FROM journal AS T1 JOIN journal_committee AS T2 ON T1.Journal_ID = T2.Journal_ID JOIN editor AS T3 ON T2.Editor_ID = T3.Editor_ID WHERE T1.Date > '2020-01-01' GROUP BY T3.Name",
                "template": "SELECT AVG(#COLUMN#) + COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            }
        ],
        "products_gen_characteristics": [
            {
                "hash": "290ba8e058086dd5fb0396da36244f640c4b891d",
                "query": "SELECT COUNT(*) FROM Ref_Characteristic_Types AS T1",
                "template": "SELECT COUNT(*) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "2565c13f739135b73466d5df8f848b5149d716cb",
                "query": "SELECT MAX(T1.typical_buying_price) , MIN(T1.typical_buying_price) FROM Products AS T1 JOIN Product_Characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.typical_selling_price BETWEEN 100 AND 200 AND T1.product_name = 'product_name' LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) , MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ef7b1e7e2c53adcc1f90d478d0422b1a711d57fe",
                "query": "SELECT COUNT(DISTINCT T1.product_id), T2.typical_buying_price FROM Product_Characteristics AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.typical_buying_price <= 100",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "f789564ec8f6e9b5a369697a957974d06ccc9275",
                "query": "SELECT T1.product_id FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_id NOT IN (SELECT T3.product_id FROM Products AS T3 GROUP BY T3.product_id HAVING COUNT(DISTINCT T3.product_category_code) = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T3 GROUP BY #COLUMN# HAVING COUNT(DISTINCT #COLUMN#) = #VALUE#)"
            },
            {
                "hash": "fe24c158f80377ec76798fbea5b635ae2a4a7d0b",
                "query": "SELECT T1.product_name, COUNT(T2.product_characteristic_value), MAX(T3.characteristic_type_code) FROM Products AS T1 JOIN Product_Characteristics AS T2 ON T1.product_id = T2.product_id JOIN Characteristics AS T3 ON T2.characteristic_id = T3.characteristic_id GROUP BY T1.product_name ORDER BY T1.product_name DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "d67ddb5296a364f5c6e37d3355825ac6b47661f0",
                "query": "SELECT AVG(p.typical_buying_price) FROM Products p WHERE p.product_category_code = 'PC001' AND p.typical_selling_price BETWEEN 10 AND 100 AND p.product_name = 'Product A'",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "dbceddab33366c63c0051a3808cbac926545e389",
                "query": "SELECT COUNT(DISTINCT characteristic_type_code), COUNT(DISTINCT characteristic_data_type) FROM Characteristics WHERE characteristic_name = 'size' ORDER BY characteristic_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "46e41011e729ca0deb5ff0371af2411381d054a7",
                "query": "SELECT COUNT(DISTINCT T1.product_name), COUNT(DISTINCT T2.product_characteristic_value), COUNT(DISTINCT T3.product_category_description) FROM Products AS T1 JOIN Product_Characteristics AS T2 ON T1.product_id = T2.product_id JOIN Ref_Product_Categories AS T3 ON T1.product_category_code = T3.product_category_code WHERE T1.product_name = 'Product A' OR T1.product_name = 'Product B' OR T1.product_id IN (SELECT product_id FROM Product_Characteristics WHERE product_characteristic_value = 'Value 1') GROUP BY T1.product_name HAVING COUNT(T2.product_characteristic_value) > 2",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "f52b336637f2d0387dd07c256be052fbc03031c0",
                "query": "SELECT characteristic_name FROM Characteristics WHERE characteristic_type_code != 'A' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "2280eb484b6e7d24a6a3e43e695afb04ba1f2a56",
                "query": "SELECT T1.characteristic_type_description, T2.product_name FROM Ref_Characteristic_Types AS T1 INNER JOIN Products AS T2 ON T1.characteristic_type_code = T2.product_category_code WHERE T1.characteristic_type_code = 'ABC'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 INNER JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "4ad9624021269c06f8d8f69261092f2b543c48e8",
                "query": "SELECT T1.product_name, T2.characteristic_name FROM Products AS T1 JOIN Product_Characteristics AS T3 ON T1.product_id = T3.product_id JOIN Characteristics AS T2 ON T2.characteristic_id = T3.characteristic_id WHERE T1.product_name = 'Product A' AND T2.characteristic_name = 'Characteristic B' AND T2.characteristic_type_code IN (SELECT characteristic_type_code FROM Ref_Characteristic_Types) ORDER BY T1.product_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "eda0e1349c01babf86c86ee46b483b8ff02ebfa2",
                "query": "SELECT AVG(typical_buying_price), AVG(typical_selling_price) FROM Products WHERE typical_buying_price = typical_selling_price",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ba83ff4801bf5e17caa2820b4dad2d0c551fa079",
                "query": "SELECT COUNT(DISTINCT characteristic_id) , COUNT(DISTINCT characteristic_type_code) FROM Characteristics ORDER BY characteristic_id DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4763b89d4d4f307ed93bcd7bfc0f9a4c65918eec",
                "query": "SELECT T1.characteristic_name FROM Characteristics AS T1 JOIN Characteristics AS T2 ON T1.characteristic_type_code = T2.characteristic_type_code WHERE T1.characteristic_id >= T2.characteristic_id ORDER BY T1.characteristic_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ec48a97467998b6611a92f7f59deeee912e87199",
                "query": "SELECT T1.product_name FROM Products AS T1 WHERE NOT EXISTS (SELECT 1 FROM Product_Characteristics AS T2 WHERE T1.product_id = T2.product_id AND T2.product_characteristic_value = 'S') ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T1.#COLUMN# = T2.#COLUMN# AND T2.#COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# ASC"
            },
            {
                "hash": "875c0aa981a053bd2c95c2749b34f2122c264b17",
                "query": "SELECT * FROM Ref_Product_Categories WHERE product_category_code = ' Electronics' OR product_category_description = 'Electronics' OR product_category_code NOT IN (SELECT product_category_code FROM Products WHERE product_name = 'Laptop') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "cc3bbb3208fbeef7b56b4946fd28c7f1f41b02ba",
                "query": "SELECT COUNT(DISTINCT characteristic_name), product_name FROM Characteristics AS T1 JOIN Products AS T2 ON T1.characteristic_id = T2.product_id WHERE T1.characteristic_name = 'Size' OR T1.characteristic_name = 'Weight' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "76735bea97b103a5e0f2583c7e65f8815ce64876",
                "query": "SELECT T1.product_name, T2.product_characteristic_value FROM Products AS T1 JOIN Product_Characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = 'Apple' AND T2.product_characteristic_value = 'Large'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "b0812a4d8f6ca5a466b8fa1c8499fa7c8b1e4f99",
                "query": "SELECT T1.product_name, T2.product_name FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id ORDER BY T1.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "607ab83089b77d83cdccfef323e702f17fb2b220",
                "query": "SELECT COUNT(DISTINCT T1.characteristic_type_code) AS count_distinct_characteristic_type_code FROM Characteristics AS T1 JOIN Product_Characteristics AS T2 ON T1.characteristic_id = T2.characteristic_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS count_distinct_#COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "ba35a14a103a2d165ee13f7cd972728c3edefa49",
                "query": "SELECT T1.product_name, SUM(T2.product_characteristic_value) FROM Products AS T1 JOIN Product_Characteristics AS T2 ON T1.product_id = T2.product_id WHERE T1.typical_buying_price BETWEEN 10 AND 50 AND T2.product_characteristic_value > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "a303059deee0a5383e96d42c28fcd4ae9cdbb1cc",
                "query": "SELECT T1.product_name, T2.typical_selling_price FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.typical_selling_price > (SELECT AVG(typical_selling_price) FROM Products) ORDER BY T1.typical_selling_price DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8907de43dd185dff2d9323cd169a0f3e9c609501",
                "query": "SELECT T1.product_name, AVG(T2.typical_buying_price) FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name NOT IN (SELECT product_name FROM Products WHERE product_category_code = 'Electronics') GROUP BY T1.product_name ORDER BY AVG(T2.typical_buying_price) ASC",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "a0b727ba2d15599a61cb9e82252c61f841399813",
                "query": "SELECT T3.product_name, T2.characteristic_name FROM Products AS T3 JOIN Product_Characteristics AS T4 ON T3.product_id = T4.product_id JOIN Characteristics AS T2 ON T4.characteristic_id = T2.characteristic_id JOIN Ref_Product_Categories AS T1 ON T3.product_category_code = T1.product_category_code WHERE T2.characteristic_type_code = 'Dimension' OR T2.characteristic_type_code BETWEEN 'Size' AND 'Weight' OR T2.characteristic_type_code IN (SELECT characteristic_type_code FROM Ref_Characteristic_Types WHERE characteristic_type_description LIKE 'Height') ORDER BY T3.product_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b41a5e4245899b89d632eb49c680e0718001e5d1",
                "query": "SELECT COUNT(DISTINCT product_characteristic_value), COUNT(DISTINCT characteristic_name), product_name FROM Product_Characteristics AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Characteristics AS T3 ON T1.characteristic_id = T3.characteristic_id WHERE characteristic_type_code = 'SIZE'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "688ab02f7a3bfeb07fe3a2fa6846b8f43f714311",
                "query": "SELECT T1.product_category_description, COUNT(T2.product_id) FROM Ref_Product_Categories AS T1 JOIN Products AS T2 ON T1.product_category_code = T2.product_category_code WHERE NOT EXISTS ( SELECT 1 FROM Characteristics AS T3 JOIN Product_Characteristics AS T4 ON T3.characteristic_id = T4.characteristic_id WHERE T2.product_id = T4.product_id AND T3.characteristic_type_code = 'Size' ) GROUP BY T1.product_category_description",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# ) GROUP BY #COLUMN#"
            },
            {
                "hash": "4c4abc0954b509781a8804691de9d1be6fc6ab8e",
                "query": "SELECT COUNT(DISTINCT product_id) AS product_count, product_category_code FROM Products GROUP BY product_category_code ORDER BY product_count DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            }
        ],
        "video_game": [
            {
                "hash": "699fab86189d87f04d8db4bb7f2fbf4f708feea4",
                "query": "SELECT MAX(Units_sold_Millions) FROM game AS T1 ORDER BY Units_sold_Millions DESC LIMIT 10",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "99de94d833baf68fada2c293af10817c0895c256",
                "query": "SELECT COUNT(DISTINCT T2.Title), COUNT(DISTINCT T2.Developers), T1.Platform_name FROM platform AS T1 JOIN game AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Game_ID IN (SELECT Game_ID FROM game_player) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "b351ef30995c755f790d4d039054b836fdd59426",
                "query": "SELECT T1.Title, T2.Player_name FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Player_ID WHERE T1.Developers = 'Electronic Arts' AND T1.Platform_ID = 1 AND EXISTS (SELECT 1 FROM platform AS T3 WHERE T3.Platform_ID = T1.Platform_ID AND T3.Download_rank > 10) ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4b419d8d651232cd5fab7639aaa305bc6d16ed6e",
                "query": "SELECT MAX(T2.Units_sold_Millions) FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T1.Developers = 'Nintendo' OR T2.Market_district = 'Global' OR T2.Download_rank BETWEEN 1 AND 10 OR T1.Game_ID IN (SELECT T1.Game_ID FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID) ORDER BY T2.Units_sold_Millions DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "19c18a2d13df7537b890165d5e5b2b30a1655634",
                "query": "SELECT Title FROM game WHERE Platform_ID = 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "14e47c2c89042c910ca4fb01577e42e923b5099f",
                "query": "SELECT MAX(Units_sold_Millions), Title FROM game ORDER BY Units_sold_Millions DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "1cb396c03fecd7a95e1e4d220581e8647bdbb78b",
                "query": "SELECT T1.Title, T2.Title FROM game AS T1 JOIN game AS T2 ON T1.Developers != T2.Developers ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f42f13b756e07f1d574c0299f43a733a45690067",
                "query": "SELECT COUNT(T1.Title), SUM(T1.Units_sold_Millions), T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID JOIN game_player AS T3 ON T1.Game_ID = T3.Game_ID WHERE T2.Download_rank <= 10",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "9c1884225363014c560e8cc3c96bdea339a8663a",
                "query": "SELECT T1.Title, SUM(T1.Units_sold_Millions), T1.Developers FROM game AS T1 WHERE T1.Release_Date < '2020' ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f60d750b3adedbaafa221180cfd0f398d49fcfa6",
                "query": "SELECT T1.Title, COUNT(DISTINCT T2.Player_name) FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Player_ID WHERE T1.Units_sold_Millions > 1 OR T2.Rank_of_the_year BETWEEN 1 AND 10 OR T1.Release_Date = '2020' GROUP BY T1.Title HAVING COUNT(T2.Player_name) > 5",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "44194dea359b9c6337b6533e1a06cbd0990e17c2",
                "query": "SELECT COUNT(Platform_ID) FROM platform ORDER BY Platform_ID ASC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d613a132744cbd6e667314b91df0e91c382c7e9e",
                "query": "SELECT Download_rank FROM platform ORDER BY Download_rank ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "1f2101b8393850c1b3928df06b8cac1dfb333d83",
                "query": "SELECT COUNT(Platform_ID) FROM platform WHERE Platform_name != 'Xbox'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "7790d724f635aeaa327c9b2e00f837949c19ef4a",
                "query": "SELECT Platform_ID, MIN(Download_rank) FROM platform WHERE Download_rank BETWEEN 1 AND 10 GROUP BY Platform_ID ORDER BY Platform_ID ASC",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "3a272a10ac3321382a70e4592d3b336bdf4a92c1",
                "query": "SELECT T1.Title, COUNT(T2.Game_ID) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T3.Player_ID = T2.Player_ID WHERE T1.Release_Date BETWEEN '2000-01-01' AND '2010-12-31' OR T3.Position = 'Forward' OR EXISTS (SELECT * FROM platform AS T4 WHERE T4.Platform_name = 'Xbox' AND T4.Platform_ID = T1.Platform_ID) GROUP BY T1.Title",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "0dacb034809e4aa95f2266ab35c020c046cc7c78",
                "query": "SELECT AVG(p.Download_rank) FROM game AS g JOIN platform AS p ON g.Platform_ID = p.Platform_ID WHERE g.Units_sold_Millions <= 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "81d33e64465878eca63c625d2f378764ad2be7d1",
                "query": "SELECT T1.Title FROM game AS T1 JOIN game AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T1.Platform_ID = 1 OR T2.Title BETWEEN 'A' AND 'Z' OR EXISTS (SELECT 1 FROM game WHERE Game_ID = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "dbdca9ebca025f541cbdb37728ab1dba40cc293f",
                "query": "SELECT Title, SUM(Units_sold_Millions) FROM game WHERE Download_rank BETWEEN 1 AND 5 GROUP BY Title HAVING SUM(Units_sold_Millions) > 100 ORDER BY Title ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "81a7285390a7078310449cd244107d04fe4bbee6",
                "query": "SELECT Platform_name AS College FROM platform WHERE Market_district != 'US'",
                "template": "SELECT #COLUMN# AS #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "06866d891feb7f7a0c74c0018883839d5a9e995c",
                "query": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID JOIN game_player AS T3 ON T1.Game_ID = T3.Game_ID WHERE T2.Download_rank BETWEEN 10 AND 20 AND T3.Player_ID IN (SELECT Player_ID FROM game_player WHERE If_active = 'yes') AND T1.Developers = 'Nintendo'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "7e56a92b25e4c5321d7eb36205315ec1050e61e7",
                "query": "SELECT T1.Title, COUNT(T2.Player_ID) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID WHERE T1.Units_sold_Millions > 10 AND T1.Release_Date BETWEEN '2010' AND '2020' AND T1.Developers = 'EA' GROUP BY T1.Title ORDER BY COUNT(T2.Player_ID) DESC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC"
            },
            {
                "hash": "ab553e941a8c9af60c21adc5a4fa0d3e6f4bc5ef",
                "query": "SELECT T1.Player_name, SUM(T1.Rank_of_the_year) FROM player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T1.Rank_of_the_year > 100 GROUP BY T1.Player_name ORDER BY T1.Player_name ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "c615cd31efe7826880bf54aef043eac91eb85c1e",
                "query": "SELECT T1.Title, SUM(T1.Units_sold_Millions), T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T1.Developers = 'Nintendo' OR T1.Units_sold_Millions BETWEEN 5 AND 10 OR T2.Download_rank > 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "8838731c4578eb1b140486fe2a4a606fd1591612",
                "query": "SELECT MAX(Download_rank) FROM platform WHERE Market_district = 'US' AND Platform_name = 'PlayStation' AND Download_rank > 10 GROUP BY Platform_name ORDER BY Download_rank DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c7677e4c01c21d87da150bcaf90259e18c640fa7",
                "query": "SELECT COUNT(DISTINCT T1.Title), T2.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID WHERE T1.Platform_ID = 1 AND T2.If_active = 'Y' AND T1.Units_sold_Millions BETWEEN 10 AND 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            }
        ],
        "small_bank_1": [
            {
                "hash": "5cf9920afe6001336ba13f62de903719d4a804a9",
                "query": "SELECT T3.name, SUM(T1.balance) + SUM(T2.balance) FROM SAVINGS AS T1 JOIN CHECKING AS T2 ON T1.custid = T2.custid JOIN ACCOUNTS AS T3 ON T1.custid = T3.custid WHERE T3.custid BETWEEN 1 AND 100 OR T1.balance > 1000 OR T2.balance > 1000 GROUP BY T3.name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) + SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "99d45d68429578336f7f4745423a8962c85c9c4b",
                "query": "SELECT T1.name, T2.balance, T3.balance FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T1.custid = T3.custid LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a3eacaebf283e08a7fc6d9469ed32c19815b1b20",
                "query": "SELECT COUNT(DISTINCT T1.name) FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid WHERE T2.balance = 1000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE#"
            },
            {
                "hash": "393842cbee470bf2e63c3b1216381e28e374b65e",
                "query": "SELECT COUNT(DISTINCT T1.custid) FROM SAVINGS AS T1 JOIN ACCOUNTS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T2.custid = T3.custid",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "a918961fcf462c76596206bed148187d8de2a383",
                "query": "SELECT T1.name, T2.balance FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "5705b1a02817e720c734946937fc33040f08bea0",
                "query": "SELECT COUNT(DISTINCT T1.custid), COUNT(T1.balance) FROM SAVINGS AS T1 JOIN ACCOUNTS AS T2 ON T1.custid = T2.custid WHERE T1.balance = 1000 ORDER BY T1.balance DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "97f9924d8974a5257c87e9a75688775146db13c5",
                "query": "SELECT T1.name, T2.balance, T3.balance FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T1.custid = T3.custid WHERE T2.balance BETWEEN 100 AND 1000 OR T2.balance IN (SELECT balance FROM SAVINGS WHERE balance > 500) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "2023adf147644112665681160422a056fdeda7a0",
                "query": "SELECT T1.name FROM ACCOUNTS AS T1 JOIN CHECKING AS T2 ON T1.custid = T2.custid WHERE T2.balance != 0 ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "076f268d3899f115892cbafb9a275623f36dab3f",
                "query": "SELECT COUNT(T1.custid), T1.balance FROM SAVINGS AS T1 WHERE T1.custid NOT IN ( SELECT T2.custid FROM CHECKING AS T2 WHERE T2.balance > 1000 ) AND T1.balance > 1500 LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE# ) AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b4b5ff16019336a9efa2b2c45396573baf3a9c19",
                "query": "SELECT T1.name FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid WHERE T2.balance < 1000 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f3cd4fc771c9520bb6e21f30aecd5c2229662e74",
                "query": "SELECT A.name, SUM(C.balance), SUM(S.balance) FROM ACCOUNTS A JOIN CHECKING C ON A.custid = C.custid JOIN SAVINGS S ON A.custid = S.custid WHERE A.custid <= 100",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "40ecc4a9cbde3a169ea8fa65cc76f979ac49ff66",
                "query": "SELECT COUNT(A.custid), A.name, S.balance FROM ACCOUNTS A JOIN SAVINGS S ON A.custid = S.custid JOIN CHECKING C ON A.custid = C.custid",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "3db386046ffd8e24f64289396124ee458af426ed",
                "query": "SELECT T1.custid, T1.name FROM CHECKING AS T1 INNER JOIN ACCOUNTS AS T2 ON T1.custid = T2.custid WHERE T1.balance <= 500 LIMIT 10",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "ab0c0fa06aaaf68cd7aad365ab72f3e590d3a78a",
                "query": "SELECT * FROM SAVINGS AS T1 WHERE EXISTS (SELECT * FROM CHECKING AS T2 WHERE T1.custid = T2.custid AND T1.balance < 1000) AND T1.balance > 0",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "a4f3e32417957a13ba34344a6170e5ec88af8d45",
                "query": "SELECT name FROM ACCOUNTS WHERE name <= 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "2c715f4bd8d3f6d9ab32e1f59c46a0f754116988",
                "query": "SELECT T1.balance, MIN(T2.balance) FROM CHECKING AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid WHERE T1.balance > 5000 OR T2.balance BETWEEN 1000 AND 2000 OR EXISTS (SELECT 1 FROM ACCOUNTS AS T3 WHERE T3.custid = T1.custid) LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "bf3e2587b4d1a72aef424d70237e4a73c7887903",
                "query": "SELECT T1.name FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T2.custid = T3.custid WHERE T3.balance > 1000 OR T2.balance BETWEEN 500 AND 1000",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "397c75fae49c6c277ec253c22e4298b5fe254c60",
                "query": "SELECT SUM(S1.balance), COUNT(C1.custid), SUM(S2.balance), COUNT(C2.custid) FROM SAVINGS AS S1 JOIN ACCOUNTS AS C1 ON S1.custid = C1.custid JOIN CHECKING AS S2 JOIN ACCOUNTS AS C2 ON S2.custid = C2.custid LIMIT 5",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), SUM(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "48f49065c405524e4386458c15becfab2b53fe86",
                "query": "SELECT name FROM ACCOUNTS WHERE name = 'John' OR name = 'Jane' OR name NOT IN (SELECT name FROM SAVINGS WHERE balance BETWEEN 100 AND 1000) ORDER BY name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "2ded359195eb2f252a8a23a4ef7cc9fabfccb128",
                "query": "SELECT T1.name, MAX(T3.balance + T2.balance) FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T1.custid = T3.custid WHERE T2.balance > 1000 GROUP BY T1.name ORDER BY MAX(T3.balance + T2.balance) DESC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN# + #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN# + #COLUMN#) DESC"
            },
            {
                "hash": "16691f02247947c1c63144ace6b8874678648d8e",
                "query": "SELECT COUNT(DISTINCT T1.custid), COUNT(DISTINCT T2.custid), COUNT(T3.custid) FROM ACCOUNTS AS T1 JOIN CHECKING AS T2 ON T1.custid = T2.custid JOIN SAVINGS AS T3 ON T1.custid = T3.custid WHERE T1.custid != 100 ORDER BY T3.balance DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "334e211f97762d72463fa9739afcc11b8dc22cdb",
                "query": "SELECT T1.name, T1.custid FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid JOIN CHECKING AS T3 ON T2.custid = T3.custid WHERE T2.balance IN (SELECT balance FROM SAVINGS GROUP BY balance HAVING COUNT(balance) > 1)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "c4419dcf19e42db2ca238d24b77acf97c7ce93e1",
                "query": "SELECT T1.name, AVG(T2.balance) FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid WHERE T1.custid = 100 OR T2.balance > 500 OR NOT EXISTS (SELECT * FROM CHECKING AS T3 WHERE T3.custid = T1.custid AND T3.balance < 0) GROUP BY T1.name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "5af3c11b8496b8621f55780f8394ce82e483bd61",
                "query": "SELECT T1.balance FROM CHECKING AS T1 JOIN ACCOUNTS AS T2 ON T1.custid = T2.custid WHERE T2.custid <= 100 ORDER BY T1.balance DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS  JOIN #TABLE# AS  ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "26869c48d946b0c93a8974bca781445bb1fb2ce3",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.balance) FROM ACCOUNTS AS T1 JOIN SAVINGS AS T2 ON T1.custid = T2.custid WHERE T2.balance <= 100 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "cre_Theme_park": [
            {
                "hash": "dfb9ad7beaf33f6010b95deee0c65838d3144fa8",
                "query": "SELECT COUNT(DISTINCT T2.Name), T1.Name, T1.Description FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.Location_Name <= 'Aberdeen'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= '#VALUE#'"
            },
            {
                "hash": "02488d06e500de6104cc4b2c395f90781c9e7225",
                "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.Location_Name != 'Paris' GROUP BY T1.Name ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != '#VALUE#' GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "26534f8ec0a89a271a2828ded6d7e98a6e5bfca7",
                "query": "SELECT T1.Name, T2.Star_Rating_Description FROM Tourist_Attractions AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.Attraction_Type_Code = T2.Star_Rating_Code WHERE T1.Tourist_Attraction_ID = 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "0ff249cf3c0c6d5da782bc5a0c6b985b589f29c1",
                "query": "SELECT T1.Name, T2.Shop_Details FROM Tourist_Attractions AS T1 JOIN Shops AS T2 ON T1.Tourist_Attraction_ID = T2.Shop_ID JOIN Locations AS T3 ON T3.Location_ID = T1.Location_ID WHERE T1.Tourist_Attraction_ID != T3.Location_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "fcec334bc7b8883c0a7cf0f4f402d77ef143ef9c",
                "query": "SELECT COUNT(DISTINCT T1.star_rating_code), T1.star_rating_description FROM Ref_Hotel_Star_Ratings AS T1 WHERE NOT EXISTS ( SELECT 1 FROM Hotels AS T2 WHERE T1.star_rating_code = T2.star_rating_code AND T2.price_range < 100 ) AND T1.star_rating_code = 'LUX'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE# ) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "072b315bea9d27ff164caf98f97b0b18866e21cf",
                "query": "SELECT COUNT(T1.Tourist_ID), COUNT(DISTINCT T1.Location_ID) FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.Location_Name = 'London' OR T2.Address IS NOT NULL OR T2.Location_ID NOT IN (SELECT Location_ID FROM Locations WHERE Location_Name = 'Paris') GROUP BY T1.Tourist_Attraction_ID HAVING COUNT(T1.Tourist_ID) > 1",
                "template": "SELECT COUNT(#COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IS NOT NULL OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "37c80c67ce14188b0e6a7c5b1fa4c24acf5a8b76",
                "query": "SELECT T2.Name FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID JOIN Features AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID WHERE T3.Feature_ID = 10 OR T1.Tourist_Attraction_ID NOT IN (SELECT T4.Tourist_Attraction_ID FROM Photos AS T4 WHERE T4.Photo_ID = 100) LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "18bc44b44b1fcaaa8886150b6119b96b161543a6",
                "query": "SELECT * FROM Hotels WHERE price_range BETWEEN 10 AND 100 ORDER BY star_rating_code ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7255310c1dc2692d0f7de3897a4a613c2945dd4b",
                "query": "SELECT * FROM Tourist_Attractions WHERE Location_ID BETWEEN 1 AND 100 ORDER BY Tourist_Attraction_ID ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7d966bd4b565a6f21b7fac0ed839f55728e25790",
                "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID WHERE NOT EXISTS (SELECT T3.Tourist_ID FROM Visitors AS T3 JOIN Visits AS T4 ON T3.Tourist_ID = T4.Tourist_ID WHERE T4.Tourist_Attraction_ID = T1.Tourist_Attraction_ID) ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f55f9d9f47439ce2ee493cba7b6cfe0c3aa52bd2",
                "query": "SELECT MIN(T1.price_range) FROM Hotels AS T1 WHERE T1.star_rating_code BETWEEN '1' AND '5' OR T1.pets_allowed_yn = 'Y' AND NOT EXISTS (SELECT T2.Tourist_ID FROM Visitors AS T2 WHERE T2.Tourist_ID > 1000)",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "4cf1a7f6a56131ebc9ed737013a2554fbd3366c0",
                "query": "SELECT MIN(h.price_range) FROM Hotels h WHERE h.star_rating_code != '2'",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "ef1375f5aaa80910141ce8a353b1191bb592b559",
                "query": "SELECT COUNT(T1 star_rating_code) FROM Hotels AS T1 WHERE T1 star_rating_code = '1' AND T1 price_range BETWEEN 100 AND 200 AND NOT EXISTS (SELECT * FROM Tourist_Attractions AS T2 WHERE T2 Location_ID = T1 hotel_id) ORDER BY T1 star_rating_code DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT * FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5755c1a4034755521cc93bdd31c38a3563112ed8",
                "query": "SELECT T1.Location_Name FROM Locations AS T1 WHERE T1.Location_ID IN (SELECT T2.Location_ID FROM Tourist_Attractions AS T2 WHERE T2.Attraction_Type_Code = 'HIST') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "e91bf0ccfae835657724f6d6b850bc50f33fe2c9",
                "query": "SELECT COUNT(hotel_id) FROM Hotels WHERE price_range > 100",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "9d8afabcab97d939b56f8f3de78e3cb2c53bd074",
                "query": "SELECT T1.star_rating_description, T2.price_range FROM Ref_Hotel_Star_Ratings AS T1 JOIN Hotels AS T2 ON T1.star_rating_code = T2.star_rating_code JOIN Tourist_Attractions AS T3 ON T3.Tourist_Attraction_ID = T3.Location_ID WHERE T2.price_range BETWEEN 50 AND 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "adf052c36eb37c3f780a3b1ab6b77a12df8a5a56",
                "query": "SELECT COUNT(DISTINCT T1.Location_Name), COUNT(T1.Location_Name) AS count FROM Locations AS T1 WHERE T1.Location_ID <= 100 GROUP BY T1.Location_Name HAVING COUNT(T1.Location_Name) = 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) AS count FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) = #VALUE#"
            },
            {
                "hash": "9b1dfd9866ceea057789fa7129e368dd666d9d89",
                "query": "SELECT * FROM Hotels WHERE price_range > 100 OR price_range BETWEEN 50 AND 150 OR price_range < 50 AND NOT EXISTS ( SELECT 1 FROM Ref_Hotel_Star_Ratings WHERE Ref_Hotel_Star_Ratings.star_rating_code = Hotels.star_rating_code ) ORDER BY price_range DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# < #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.#COLUMN# = #TABLE#.#COLUMN# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a3784cacbb04b0f358eb6db8d0b462753c02cd9e",
                "query": "SELECT COUNT(hotel_id) FROM Hotels WHERE star_rating_code IN (SELECT star_rating_code FROM Ref_Hotel_Star_Ratings WHERE star_rating_code = '5') LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "1eab3607e449011d7070e85e7f2ba4db95271efb",
                "query": "SELECT COUNT(T1.Tourist_ID) FROM Visitors AS T1 WHERE T1.Tourist_ID NOT IN (SELECT T2.Tourist_ID FROM Visits AS T2)",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "93f802ee3ad6141a7176efcff137830438a77b10",
                "query": "SELECT T3.Location_Name FROM Tourist_Attractions AS T1 JOIN Locations AS T2 ON T1.Location_ID = T2.Location_ID JOIN Tourist_Attraction_Features AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID WHERE T3.Feature_ID >= 10 AND T2.Location_ID >= 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# AND #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "e85f6571357da3981736fa373a3d816ce2110afb",
                "query": "SELECT T1.Name, T2.Star_Rating_Code FROM Tourist_Attractions AS T1 JOIN Hotels AS T2 ON T1.Tourist_Attraction_ID = T2.Hotel_ID WHERE EXISTS (SELECT T3.Feature_ID FROM Tourist_Attraction_Features AS T3 WHERE T3.Tourist_Attraction_ID = T1.Tourist_Attraction_ID) ORDER BY T2.Star_Rating_Code DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "572cfdb9c0c2c95c2692be56b71e080dc3ca6236",
                "query": "SELECT T1.star_rating_description FROM Ref_Hotel_Star_Ratings AS T1 JOIN Hotels AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T2.price_range > 100 OR T2.price_range BETWEEN 50 AND 200 OR T2.pets_allowed_yn = 'Y' GROUP BY T1.star_rating_description HAVING MAX(T2.price_range) DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) DESC"
            },
            {
                "hash": "29739543db6a13e17b6ede272c111ea62a3c0f50",
                "query": "SELECT COUNT(DISTINCT T1.Location_ID), SUM(T1.price_range) FROM Locations AS T1 JOIN Hotels AS T2 ON T1.Location_ID = T2.hotel_id WHERE T1.Location_ID IN (SELECT T3.Location_ID FROM Tourist_Attractions AS T3 GROUP BY T3.Location_ID HAVING COUNT(T3.Tourist_Attraction_ID) > 1) GROUP BY T1.Location_ID ORDER BY COUNT(DISTINCT T1.Location_ID) DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#) GROUP BY #COLUMN# ORDER BY COUNT(DISTINCT #COLUMN#) DESC"
            },
            {
                "hash": "8641c4e6f64d13a28dc79dada4c7532324a4c0e2",
                "query": "SELECT T1.Location_Name, T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.Attraction_Type_Code BETWEEN 'A' AND 'F' AND T2.Tourist_Attraction_ID IN (SELECT T3.Tourist_Attraction_ID FROM Photos AS T3 WHERE T3.Photo_ID > 100) ORDER BY T1.Location_Name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "4c0c65391f49946465e2e600603cd188b937d56a",
                "query": "SELECT * FROM Ref_Hotel_Star_Ratings WHERE star_rating_code != '1'",
                "template": "SELECT * FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "d248d5ac848b4246d7d9ea8322f96ff61fd18012",
                "query": "SELECT T1.Location_Name FROM Locations AS T1 WHERE T1.Location_ID = ( SELECT T2.Location_ID FROM Tourist_Attractions AS T2 WHERE T2.Attraction_Type_Code = 'AT1' ) AND T1.Location_Name = 'LN1'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' ) AND #COLUMN# = '#VALUE#'"
            }
        ],
        "e_government": [
            {
                "hash": "b0143d1f0ee1ef1d893a213b681a61d5dfae4d9d",
                "query": "SELECT service_type_code FROM Services WHERE service_name != 'Emergency'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "3d61bfb95341c3ffa3d2cef359370034ec837752",
                "query": "SELECT COUNT(T1.form_id), T2.service_name FROM Forms AS T1 JOIN Services AS T2 ON T1.service_id = T2.service_id WHERE T1.form_number > '100' ORDER BY COUNT(T1.form_id) ASC",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > '#VALUE#' ORDER BY COUNT(#COLUMN#) ASC"
            },
            {
                "hash": "3a6fd065a174e9c57a52a81814ba7b488b39cc13",
                "query": "SELECT SUM(T1.service_id) AS sum_service_id, COUNT(DISTINCT T1.service_id) AS count_service_id FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) AS sum_#COLUMN#, COUNT(DISTINCT #COLUMN#) AS count_#COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "57bd737250a2a396a3e1cfaaebc3cd9748d977fc",
                "query": "SELECT COUNT(DISTINCT Forms.service_id) FROM Forms WHERE Forms.service_id >= 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "b0a4f59bf9d2af965735dd1b825f88c3aad38d6a",
                "query": "SELECT T1.individual_first_name FROM Individuals AS T1 WHERE T1.individual_id IN (SELECT T2.individual_id FROM Organization_Contact_Individuals AS T2 WHERE T2.organization_id = 5) AND T1.individual_last_name = 'Smith'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "2637126da18e09b0d58bbf4c1d473c1945feee15",
                "query": "SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE NOT EXISTS (SELECT T3.party_id FROM Parties AS T3 JOIN Party_Services AS T4 ON T3.party_id = T4.customer_id WHERE T4.service_id = T1.service_id AND T3.party_phone = '1234567890')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "e93a78192997f8b6a44c252db6ed5697c492596b",
                "query": "SELECT T1.service_name, MAX(T2.form_number) FROM Services AS T1 JOIN Forms AS T2 ON T1.service_id = T2.service_id WHERE T1.service_id NOT IN (SELECT T3.service_id FROM Services AS T3 JOIN Party_Services AS T4 ON T3.service_id = T4.service_id) GROUP BY T1.service_id LIMIT 10",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "9b5ed4e2cb7faeb2f93b791b99cb73281d8adb84",
                "query": "SELECT AVG(T1.service_id) FROM Services AS T1 WHERE T1.service_id != 1",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "aa653277e03d7cab56328b26f3f1274a687e64fa",
                "query": "SELECT T1.service_name FROM Services AS T1 WHERE T1.service_descriptio BETWEEN 'a' AND 'b' OR T1.service_descriptio NOT IN (SELECT T2.service_descriptio FROM Services AS T2) OR T1.service_id IN (SELECT T3.service_id FROM Party_Services AS T3) ORDER BY T1.service_id ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#) OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b96ce6efec660b70536487fd9782f65f0e3df277",
                "query": "SELECT T1.organization_name FROM Organizations AS T1 JOIN Organization_Contact_Individuals AS T2 ON T1.organization_id = T2.organization_id WHERE T2.date_contact_from > '2020-01-01' ORDER BY T1.organization_name DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "2dbbb6c98695c25dca025e04ce4e851b58fc71ad",
                "query": "SELECT COUNT(DISTINCT T1.form_id) FROM Party_Forms AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "a94ca695c7e94913230271c39ed78c059f6c9508",
                "query": "SELECT T1.party_phone FROM Parties AS T1 JOIN Party_Forms AS T2 ON T1.party_id = T2.party_id JOIN Forms AS T3 ON T2.form_id = T3.form_id JOIN Party_Services AS T4 ON T1.party_id = T4.customer_id JOIN Services AS T5 ON T4.service_id = T5.service_id WHERE T3.form_number >= 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "7b927fa646d1c8dadfb1c3dd48b0cb6f0b58c0e2",
                "query": "SELECT T1.service_name, T2.form_name, T3.party_email FROM Services AS T1 INNER JOIN Forms AS T2 ON T1.service_id = T2.service_id INNER JOIN Party_Forms AS T3 ON T2.form_id = T3.form_id ORDER BY T1.service_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e3dfac651f89642480edf57c1d1db057a323f1d4",
                "query": "SELECT T1.town_city, T2.individual_first_name FROM Addresses AS T1 JOIN Party_Addresses AS T3 ON T1.address_id = T3.address_id JOIN Individuals AS T2 ON T2.individual_address = T1.address_id",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "141c8e53eb12ef061854449accc95e012a965b15",
                "query": "SELECT COUNT(DISTINCT T1.individual_id), T2.service_name FROM Individuals AS T1 JOIN Party_Services AS T2 ON T1.individual_id = T2.customer_id WHERE T2.service_datetime >= '2020-01-01'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "51e82fae8ded96536abb5e1a4ff36ba0b7c42f5f",
                "query": "SELECT T1.service_name, T2.form_name FROM Services AS T1 INNER JOIN Forms AS T2 ON T1.service_id = T2.service_id INNER JOIN Party_Services AS T3 ON T1.service_id = T3.service_id WHERE T2.form_type_code = 'online' AND T3.service_datetime BETWEEN '2020-01-01' AND '2020-12-31' AND T1.service_descriptio = 'test'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "8f1bb24b279d9c5cd891a1898e7cc13df77fed6f",
                "query": "SELECT T1.individual_first_name, T2.service_name FROM Individuals AS T1 JOIN Party_Services AS T3 ON T1.individual_id = T3.customer_id JOIN Services AS T2 ON T3.service_id = T2.service_id WHERE T1.individual_first_name = 'John' AND T2.service_name = 'Service1' AND T3.service_datetime NOT IN (SELECT T3.service_datetime FROM Party_Services AS T3 JOIN Services AS T2 ON T3.service_id = T2.service_id WHERE T2.service_name = 'Service2') ORDER BY T2.service_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# = '#VALUE#' AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a2a1047d56df0df8479ba7acabc370d6b72c0459",
                "query": "SELECT T1.individual_first_name, T2.service_name FROM Individuals AS T1 JOIN Party_Services AS T3 ON T1.individual_id = T3.customer_id JOIN Services AS T2 ON T3.service_id = T2.service_id ORDER BY T2.service_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "c02312bb18c234b1ad42d29a8aab20678b2b6756",
                "query": "SELECT COUNT(DISTINCT T1.form_id) FROM Forms AS T1 JOIN Party_Forms AS T2 ON T1.form_id = T2.form_id WHERE T2.date_completion_started BETWEEN '2020-01-01' AND '2020-12-31' LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "3618596b5a3b16b8440cc305a5aa2b78baad0e29",
                "query": "SELECT T1.individual_first_name FROM Individuals AS T1 WHERE T1.individual_id = 123 AND T1.individual_phone NOT IN (SELECT T2.inidividual_phone FROM Individuals AS T2 WHERE T2.individual_last_name = 'Doe')",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "22eed7185210e9c653dce6bc2f7f4a579ba3fa40",
                "query": "SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE T1.service_type_code = 'health'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "c40561da744dc41a758c81620da2e6654ac57cba",
                "query": "SELECT T1.party_phone FROM Parties AS T1 JOIN Party_Forms AS T2 ON T1.party_id = T2.party_id WHERE NOT EXISTS (SELECT 1 FROM Forms AS T3 WHERE T3.form_id = T2.form_id AND T3.service_id = 1 AND T3.form_type_code = 'service_type_code')",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "2edac1a070a090630eb88c61477858a47fb86163",
                "query": "SELECT T1.town_city FROM Addresses AS T1 WHERE T1.state_province_county = 'City' OR T1.zip_postcode IN (SELECT T2.zip_postcode FROM Addresses AS T2 WHERE T2.state_province_county = 'City') GROUP BY T1.town_city HAVING MIN(T1.address_id) > 1000 ORDER BY T1.town_city DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = '#VALUE#') GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "133d77ffb6f832507e76c9ed525cc17bdbe41ffb",
                "query": "SELECT T1.service_name FROM Services AS T1 JOIN Party_Services AS T2 ON T1.service_id = T2.service_id WHERE T1.service_name BETWEEN 'Service_A' AND 'Service_Z' AND T1.service_id > 100 ORDER BY T1.service_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b232cd567b05cc75364b72990dd11a55a766991f",
                "query": "SELECT * FROM Services WHERE service_type_code LIKE 'abc%' OR service_id BETWEEN 10 AND 20 OR service_id IN (SELECT service_id FROM Forms)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# LIKE '#VALUE#%' OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#)"
            },
            {
                "hash": "7f857f98c3d929e348b35ec6bec5bd32c388464c",
                "query": "SELECT COUNT(DISTINCT T1.individual_id) FROM Individuals AS T1 JOIN Organization_Contact_Individuals AS T2 ON T1.individual_id = T2.individual_id JOIN Organizations AS T3 ON T2.organization_id = T3.organization_id WHERE T2.date_contact_from < '2020-01-01' AND T3.date_formed > '2019-01-01' ORDER BY T1.individual_id ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0d583c52bf5b5449d070549d0486eaaccbc52946",
                "query": "SELECT COUNT(DISTINCT T1.party_id) FROM Parties AS T1 JOIN Party_Addresses AS T2 ON T1.party_id = T2.party_id WHERE T2.address_type_code = 'HOME'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "1b437154adf8cda3b7536bb216ae445cbbf8ac55",
                "query": "SELECT T1.address_id FROM Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.address_id < 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "add2b65f7c542a4cab9ed32eec187ab32acf473a",
                "query": "SELECT COUNT(T1.party_id) FROM Party_Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.zip_postcode BETWEEN 'AB10 1AB' AND 'AB10 1ZZ' OR T2.zip_postcode IN (SELECT zip_postcode FROM Addresses WHERE country = 'Scotland') ORDER BY T1.party_id DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            }
        ],
        "movie_1": [
            {
                "hash": "e3dfac651f89642480edf57c1d1db057a323f1d4",
                "query": "SELECT title, director FROM Movie",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE#"
            },
            {
                "hash": "8fe8c9d3d1802564292ce297a2a2cdd42b5e8aa0",
                "query": "SELECT COUNT(DISTINCT T1.title) FROM Movie AS T1 WHERE T1.year BETWEEN 1990 AND 2000 AND T1.mID IN (SELECT T2.mID FROM Rating AS T2 GROUP BY T2.mID HAVING SUM(T2.stars) > 3)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#)"
            },
            {
                "hash": "8f834fadfe7a9651aa965d8ee60e1a78e002e803",
                "query": "SELECT COUNT(DISTINCT title) AS title FROM Movie ORDER BY title DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS #COLUMN# FROM #TABLE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "dd5571b3acb0411bbe88ade178552fa0ff1992fa",
                "query": "SELECT DISTINCT T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T3.rID = T2.rID WHERE T1.year = 2010 AND T3.name IN ( SELECT name FROM Reviewer ) LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "4c37508b7bf37507f1c82f0584288d53dcd7da6d",
                "query": "SELECT COUNT(DISTINCT title) FROM Movie WHERE year > 2000 LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "a45d7e3483d42244598f1ca8057361c81d75920d",
                "query": "SELECT T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars BETWEEN 3 AND 4 AND T2.mID IN (SELECT mID FROM Rating WHERE stars > 4)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "d2912721e37c3820e35203a817490e0fc1c31ff3",
                "query": "SELECT title FROM Movie WHERE director != 'Steven Spielberg'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '#VALUE#'"
            },
            {
                "hash": "e4ca4b62c5eb4f37b62c25babf4fbca827ca3a2e",
                "query": "SELECT title FROM Movie WHERE mID = (SELECT mID FROM Rating WHERE stars > 3)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "4c0c65391f49946465e2e600603cd188b937d56a",
                "query": "SELECT title FROM Movie WHERE year != 1999",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "434733593814f938c1461c9dda00110523ce9642",
                "query": "SELECT T1.title, T2.stars FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars BETWEEN 3 AND 5 AND T2.ratingDate > '2000-01-01'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "c99419c5ff23582e6938bb99e36ec9beb380a09b",
                "query": "SELECT T1.title, T2.name, T3.stars FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T2.rID = T3.rID WHERE T2.stars <= 4 AND T3.rID = 201",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "77a8b54e69cb02d3a8ee94ce654726ffc17a8962",
                "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating WHERE stars = 5)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "924b3e283f7dbd1dd017e0df64617db7a38b6605",
                "query": "SELECT AVG(T2.stars) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE NOT EXISTS (SELECT 1 FROM Reviewer AS T3 WHERE T3.rID = T2.rID AND T3.name = 'James') GROUP BY T1.title",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "39ea96f9eb0e1ae1473d5d163366d55f54858057",
                "query": "SELECT title FROM Movie WHERE title = 'Titanic' OR director = (SELECT director FROM Movie WHERE title = 'Alien') LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') LIMIT #VALUE#"
            },
            {
                "hash": "39e8f683b56e9c09265ef4588e0c7a6beed35e76",
                "query": "SELECT T2.title, MIN(T3.stars) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T3.rID = T2.rID GROUP BY T2.title LIMIT 10",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "ac5bb57c06c1fe746c4e47293c8ba3ea7a53cf7e",
                "query": "SELECT COUNT(DISTINCT T1.rID), COUNT(T2.mID) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars > 3 AND T2.year BETWEEN 1990 AND 2000 AND T2.director = 'Steven Spielberg'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "52f752643acef976690c6394c2dcae3f6bdb0ff7",
                "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.year BETWEEN 1990 AND 2000 AND T1.director = 'Steven Spielberg'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "f6a6cff1bc8eb41718a122f15b9af97af251cc8f",
                "query": "SELECT DISTINCT T2.title, T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE (T2.year BETWEEN 1950 AND 1960 OR T3.name = 'James Cameron') AND T2.title = 'Titanic'",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#') AND #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "e793f8eaad38946e2bd6a01bf4195faa0e11492c",
                "query": "SELECT T1.title, AVG(T2.stars) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T1.title NOT IN ( SELECT T3.title FROM Movie AS T3 JOIN Rating AS T4 ON T3.mID = T4.mID WHERE T4.stars > 4 ) GROUP BY T1.title ORDER BY T1.title ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# AS T3 JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "0b975cdfc3845ddded8e3152fced28eed1075c7a",
                "query": "SELECT title FROM Movie WHERE title BETWEEN 'A' AND 'M'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "155bd74babb53657f8767ee2bf66072ca3eb7bf1",
                "query": "SELECT T1.title, T2.name, T3.stars FROM Movie AS T1 JOIN Rating AS T3 ON T1.mID = T3.mID JOIN Reviewer AS T2 ON T3.rID = T2.rID WHERE T3.stars BETWEEN 1 AND 5 ORDER BY T3.stars DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "557ce6c6852fb6bcbd14e7f20f2024a791023882",
                "query": "SELECT T1.title, AVG(T2.stars) FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars <= 5",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "8a3deb1de74f27ea9a2ab981e94978589e2a1a14",
                "query": "SELECT title FROM Movie WHERE year > 1990 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            }
        ],
        "art_1": [
            {
                "hash": "a7bda6370438569dc1a0b5e47d34b265db535cd9",
                "query": "SELECT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE EXISTS (SELECT 1 FROM Sculptures AS T3 WHERE T3.title = T1.title)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN#) LIMIT #VALUE#"
            },
            {
                "hash": "e64dc6149ca28e29e87fa88739be3518d3698b5f",
                "query": "SELECT painterID, COUNT(paintingID) FROM Paintings WHERE painterID NOT IN ( SELECT sculptorID FROM Sculptures ) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) LIMIT #VALUE#"
            },
            {
                "hash": "5a076acaf6ce49b7a263318185fed1046b46403f",
                "query": "SELECT COUNT(DISTINCT T2.painterID) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year > 1900 OR T1.lname = 'Picasso' OR EXISTS (SELECT 1 FROM Sculptures WHERE sculptorID = T1.artistID)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# > #VALUE# OR T1.#COLUMN# = #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#)"
            },
            {
                "hash": "8d3d2e664116aedf5f9495ea4a3ae908bf7b5419",
                "query": "SELECT COUNT(paintingID) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.lname = 'Wong'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T2.#COLUMN# = #VALUE#"
            },
            {
                "hash": "f2cf6a63f98401ac9c4d79c9385b2c277d1fb20f",
                "query": "SELECT T1.artistID, COUNT(T2.paintingID), COUNT(T3.sculptureID) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID WHERE T2.title != T3.title LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "a4c8dd06b70b3cbb6ac01cfa0bba4c161a5bed2d",
                "query": "SELECT DISTINCT T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year > 1800 AND T2.title IN (SELECT T3.title FROM Paintings AS T3 WHERE T3.year > 1900) GROUP BY T1.lname HAVING MAX(T2.year) > 1850 ORDER BY T1.lname ASC LIMIT 10",
                "template": "SELECT DISTINCT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "6fef0012f71e91ce047b248ec1178a63f002f6b1",
                "query": "SELECT T1.lname, T2.title FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T1.fname = 'John' AND EXISTS (SELECT 1 FROM Sculptures AS T3 WHERE T3.sculptorID = T1.artistID AND T3.title = 'David')",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#)"
            },
            {
                "hash": "7594a1442d8b0898f2dfa402778e13fc5305be67",
                "query": "SELECT T1.year, T2.year FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID ORDER BY T1.year ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "afe75edb89cf1428962c3fd8a486bbe20c6868eb",
                "query": "SELECT COUNT(DISTINCT T1.artistID) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID WHERE T2.year BETWEEN 1900 AND 2000 OR T3.year NOT IN (SELECT year FROM Sculptures WHERE location = 'New York') LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "8f1e1889b82aa7e99c0746773a089643d85522ad",
                "query": "SELECT T2.lname FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.title != 'My Title'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "47f68d95ec828c4a43dbe1c141190876e9518b14",
                "query": "SELECT T1.lname, COUNT(T2.title) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T1.birthYear > 1800 GROUP BY T1.lname ORDER BY T1.lname ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4346f970123fff5b406f25708623569fad5c6dd3",
                "query": "SELECT T1(fname), COUNT(DISTINCT T2.paintingID), SUM(T2.year) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID GROUP BY T2.year HAVING SUM(T2.year) >= 1000",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) >= #VALUE#"
            },
            {
                "hash": "954de25b00a2fc7605bac2cd55819d81513ee41e",
                "query": "SELECT lname FROM Artists WHERE fname = 'John' AND birthYear > (SELECT MIN(year) FROM Paintings) ORDER BY lname ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > (SELECT MIN(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "7207c5314a18e6d86a50f4723224cec0bfd10b65",
                "query": "SELECT T1.lname, COUNT(DISTINCT T2.title) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year BETWEEN 1700 AND 1800 GROUP BY T1.lname HAVING MIN(T1.birthYear) IS NOT NULL ORDER BY T1.lname ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) IS NOT NULL ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT COUNT(*) FROM Artists WHERE birthYear < 1900",
                "template": "SELECT COUNT(#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "15332d0ff199f6ddd464313b38d3cbf58dcd1e79",
                "query": "SELECT COUNT(paintingID) FROM Paintings WHERE painterID != 100 LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# != #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "adc92416d60062eb0a04379def28aa217254990b",
                "query": "SELECT T1.fname, T2.year, COUNT(DISTINCT T2.title) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T1.birthYear BETWEEN 1800 AND 1900 AND T2.year > 1850 GROUP BY T2.year ORDER BY T2.year ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "36acaccc04590511a84f0cf678900359497b3cb4",
                "query": "SELECT T1.fname, T1.lname FROM Artists AS T1 WHERE T1.birthYear > 1850 AND T1.artistID IN (SELECT T2.painterID FROM Paintings AS T2 WHERE T2.year > 1900) AND T1.lname = 'Monet'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "f0e122bbc34b1b348b7c096b9a80cb520e27ab0b",
                "query": "SELECT T1.lname, T1.fname, MAX(T2.year), MIN(T2.year) FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.title = 'The Night Watch' ORDER BY T1.lname ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8fad85eee31eae555da912aa5fdce694db229016",
                "query": "SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID JOIN Sculptures AS T3 ON T1.artistID = T3.sculptorID LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "e28e41fec296a5a42e6876c658b4ad1ebec436b6",
                "query": "SELECT COUNT(title), painterID FROM Paintings WHERE year < 1900 OR height_mm > 200 GROUP BY painterID ORDER BY COUNT(title) DESC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "0d0c89424a2911affe8f75b4897a30735c04eeca",
                "query": "SELECT lname FROM Artists WHERE birthYear != 1850 ORDER BY deathYear DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "028e8fa8f0055bd5b9735002a9b1ffdde23e4441",
                "query": "SELECT T1.lname, T2.fname FROM Artists AS T1 JOIN Artists AS T2 ON T1.artistID = T2.artistID WHERE T1.lname = T2.fname ORDER BY T1.lname DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "8f7a258b63a9e4bfccf486ed5625e424e14f9994",
                "query": "SELECT A.fname, A.lname, P.title FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.year BETWEEN 1600 AND 1800 AND EXISTS (SELECT 1 FROM Sculptures S WHERE S.sculptorID = A.artistID AND S.year > 1600) LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#) LIMIT #VALUE#"
            }
        ],
        "roller_coaster": [
            {
                "hash": "18bc44b44b1fcaaa8886150b6119b96b161543a6",
                "query": "SELECT Name FROM roller_coaster WHERE Length BETWEEN 100 AND 200 ORDER BY Length ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "670bad289c57b3faf2e349a627686bef4bda09dc",
                "query": "SELECT COUNT(Roller_Coaster_ID), MAX(Height) FROM roller_coaster LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# LIMIT #VALUE#"
            },
            {
                "hash": "5af8f759c2277c5a218117d81250b8f4ae485b35",
                "query": "SELECT T1.Name FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length > 100 AND T1.Height > 50 AND T1.Country_ID IN ( SELECT Country_ID FROM country WHERE Area > 100000 )",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# )"
            },
            {
                "hash": "26b9772c826a4bbb919de31646a6201db3b4957f",
                "query": "SELECT T1.Name, T2.Name FROM roller_coaster AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length BETWEEN 500 AND 1000 OR T1.Name IN (SELECT Name FROM roller_coaster WHERE Speed = 'Fast') ORDER BY T1.Height DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR T1.#COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "9d9d487f0c50e8e013dcda28cdb7ea796f7459b1",
                "query": "SELECT Name FROM roller_coaster WHERE Country_ID != 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT * FROM roller_coaster WHERE Length >= 500",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "5a13c4010ee168bf7ed26e1779c2ef1caeb0f93b",
                "query": "SELECT MIN(Length) FROM roller_coaster WHERE Height BETWEEN 10 AND 20 ORDER BY Length ASC",
                "template": "SELECT MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "15332d0ff199f6ddd464313b38d3cbf58dcd1e79",
                "query": "SELECT Name FROM roller_coaster WHERE Length != 100 AND Speed != '25'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# AND #COLUMN# != #VALUE#"
            },
            {
                "hash": "4c4bb6b32d42569e84540909eacdb1f361b8ef25",
                "query": "SELECT COUNT(DISTINCT T3.Name), T1.Length FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID JOIN country AS T3 ON T2.Country_ID = T3.Country_ID WHERE T1.Length BETWEEN 100 AND 200 OR T1.Length > 500 AND NOT EXISTS (SELECT 1 FROM roller_coaster WHERE Height > 100) ORDER BY T1.Length ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "d8d868881b00451874bba095fc21b1fed55445af",
                "query": "SELECT Name FROM roller_coaster WHERE Length = 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "c0f474de2b855954743e91476afa7f601b54e236",
                "query": "SELECT Name FROM roller_coaster WHERE Length < 500 ORDER BY Name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9f52dd7c55e90a047567bb41fb48d162d299f765",
                "query": "SELECT T1.Name, T2.Population FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length > 500 AND T2.Population > 50000000 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "34463bf9149d6f7cc386e927446072ae3abecc84",
                "query": "SELECT T1.Name, T2.Name FROM roller_coaster AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "fde605d029f0abeb83c8299f1bbdd6eeeeeb7d66",
                "query": "SELECT T1.Name FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.Population < 1000000 OR T1.Height > 50 OR T1.Country_ID NOT IN (SELECT Country_ID FROM country WHERE Area < 100000) ORDER BY T1.Length ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e7b3f4c8d3e91151ee816d764db8e7d993d8ab3d",
                "query": "SELECT Name FROM roller_coaster WHERE Country_ID = 10 AND Height > 50 AND Length BETWEEN 100 AND 200 GROUP BY Name HAVING COUNT(Status) > 1 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2172cfad7c50dc2708b4cab3a903403ceadc41bb",
                "query": "SELECT T1.Name, T2.Name, COUNT(T1.Roller_Coaster_ID) FROM roller_coaster AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length > 100 OR T2.Height < 50 OR T1.Country_ID IN (SELECT Country_ID FROM country WHERE Population > 1000000)",
                "template": "SELECT #COLUMN#, #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# < #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "5db005ef154e4ff9a012788dbb5d12da90b226a9",
                "query": "SELECT T1.Name, COUNT(T2.Name) FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Park != 'Disneyland' ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ee2bb3d3917f83cff4ac79534cd3cf80b3e4cb77",
                "query": "SELECT T1.Name, AVG(T1.Length) FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Height >= 50 ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "da472d0096603194bfee17f3421cf07819470021",
                "query": "SELECT Name FROM roller_coaster WHERE Length > 1000 OR Speed = 'Fast' ORDER BY Height DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "361370fc538bee723ee33105357ebc66a2fad4f4",
                "query": "SELECT T1.Name, AVG(T1.Height) FROM roller_coaster AS T1 WHERE T1.Country_ID IN (SELECT Country_ID FROM country WHERE Name = 'USA') GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "a4392b0a4e06718afd34ef2652d0f109f49b2b0a",
                "query": "SELECT T2.Name, COUNT(T1.Roller_Coaster_ID) FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length > 100 AND T1.Height < 50 AND T1.Speed LIKE '%mph' AND EXISTS (SELECT * FROM country WHERE T2.Country_ID = T1.Country_ID) GROUP BY T2.Name",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# LIKE '#VALUE#' AND EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN#"
            },
            {
                "hash": "c6580a8529abe17ac82662dc251152180aa472c7",
                "query": "SELECT T1.Name, T2.Name FROM roller_coaster AS T1 JOIN country AS T2 ON T1.Country_ID = T2.Country_ID JOIN country AS T3 ON T2.Country_ID = T3.Country_ID WHERE T1.Length <= 100",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "77404e3ca27d32ccfec169be08907b47fe7307f4",
                "query": "SELECT T1.Name, COUNT(T2.Length) FROM roller_coaster AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.Length > 100 OR T1.Name = 'Roller' OR EXISTS (SELECT * FROM country WHERE country.Country_ID = T2.Country_ID)",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "73c7c0493a0588cf9b1ad7c685908db5c87d8538",
                "query": "SELECT T1.Name, T2.Name FROM roller_coaster AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T1.Length BETWEEN 500 AND 2000 AND EXISTS (SELECT 1 FROM country WHERE Country_ID = T1.Country_ID) ORDER BY T1.Height DESC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# WHERE T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = T1.#COLUMN#) ORDER BY T1.#COLUMN# DESC LIMIT #VALUE#"
            }
        ],
        "swimming": [
            {
                "hash": "edec518e726f33df45eb39e807c63fad67658f3c",
                "query": "SELECT AVG(T2.Result) FROM event AS T1 JOIN record AS T2 ON T1.ID = T2.Event_ID WHERE EXISTS (SELECT 1 FROM swimmer AS T3 WHERE T3.ID = T2.Swimmer_ID AND T3.Nationality = 'USA') GROUP BY T2.Swimmer_ID",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "38865cbfeb944b18d2fb6bf304c760cba490af50",
                "query": "SELECT T1.name, T2.Name, T4.Capacity FROM swimmer AS T1 JOIN record AS T2 ON T1.ID = T2.Swimmer_ID JOIN event AS T3 ON T2.Event_ID = T3.ID JOIN stadium AS T4 ON T3.Stadium_ID = T4.ID WHERE T2.Result BETWEEN '1:00' AND '2:00' AND T1.meter_100 = 1 AND T4.Capacity > 10000 ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "aa33ad172d22fc8b810918af3105818c12ce46b7",
                "query": "SELECT T1.name, T2.Capacity FROM swimmer AS T1 JOIN event AS T2 ON T1.ID = T2.ID JOIN stadium AS T3 ON T2.Stadium_ID = T3.ID WHERE T3.Capacity > 5000 LIMIT 1",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "8106323c8bbb99119d233b1e9744188f284bef9f",
                "query": "SELECT COUNT(DISTINCT T1.Time) FROM record AS T1 WHERE T1.Event_ID IN (SELECT T2.ID FROM event AS T2 WHERE T2.Year BETWEEN '2010' AND '2015') OR T1.Swimmer_ID = 123 OR T1.Result IN (SELECT T3.Result FROM record AS T3 WHERE T3.Swimmer_ID = 456)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1ad95d5a4ab4bef69bea857d6b5812946a7fe309",
                "query": "SELECT SUM(T1.meter_100), SUM(T1.meter_200), SUM(T1.meter_300) FROM swimmer AS T1 WHERE T1.meter_400 > 100 GROUP BY T1.ID HAVING SUM(T1.meter_500) > 100",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "6174019e82c43b4b1e226c860a10517131249722",
                "query": "SELECT name FROM swimmer WHERE Nationality = 'American' AND meter_100 BETWEEN 50 AND 70",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "3f4cc635376c29f33a55be4116eed843c05e13a4",
                "query": "SELECT name FROM swimmer WHERE meter_100 > 10 OR NOT EXISTS ( SELECT 1 FROM record WHERE swimmer.ID = record.Swimmer_ID ) ORDER BY meter_100 DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #TABLE#.ID = #TABLE#.Swimmer_ID ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "44194dea359b9c6337b6533e1a06cbd0990e17c2",
                "query": "SELECT Time FROM swimmer ORDER BY meter_100 ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9ea6e9687d441f1b0abb69ad01b9d7bdb9d6e583",
                "query": "SELECT T1.Name, T3.Capacity FROM swimmer AS T1 INNER JOIN record AS T2 ON T1.ID = T2.Swimmer_ID INNER JOIN stadium AS T3 ON T3.ID = T2.Event_ID WHERE T3.Capacity > 50000 ORDER BY T3.Capacity ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "364b80a0fe2726e30e65ca87f6e5555db6d686e2",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.City) FROM event AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.ID JOIN record AS T3 ON T1.ID = T3.Event_ID WHERE T3.Result > 10 OR T2.Capacity BETWEEN 50000 AND 100000 AND T1.Year < 2010 GROUP BY T1.Name HAVING MIN(T2.Capacity) > 50000 ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "8f941ebd16e17a3c5f3ec3f6371c9a99f7445f48",
                "query": "SELECT name, COUNT(*) FROM swimmer WHERE meter_100 < 100 GROUP BY name ORDER BY name ASC",
                "template": "SELECT #COLUMN#, COUNT(*) FROM #TABLE# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7c3ad074efc88d28ce3d23dfcdbacee0d4ac46cb",
                "query": "SELECT COUNT(DISTINCT T1.Name) AS count FROM swimmer AS T1 JOIN record AS T2 ON T1.ID = T2.Swimmer_ID WHERE T2.Result = 'WR' ORDER BY count ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) AS count FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY count ASC LIMIT #VALUE#"
            },
            {
                "hash": "24e68f6e2b9cf04de9d21e3771b4b5534c71a597",
                "query": "SELECT Name FROM swimmer WHERE meter_100 < 60",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "9fb3ab495584ca7371fea2009ccab0474694afc9",
                "query": "SELECT name FROM swimmer WHERE meter_100 > 50",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "81d5f3533d8f230fc77641d96dd997676ec4d5a9",
                "query": "SELECT name FROM swimmer WHERE meter_100 BETWEEN 20 AND 30 OR meter_100 NOT IN (SELECT meter_100 FROM swimmer WHERE meter_100 > 40) ORDER BY meter_100 DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "eaec7ea56d6353668c0b671b7eb93235eeb02d16",
                "query": "SELECT MAX(T1.Capacity) FROM stadium AS T1 WHERE T1.Capacity <= 50000 LIMIT 1",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# <= #VALUE# LIMIT 1"
            },
            {
                "hash": "1676e974351983ebd143f40dae4132f2c8e765b0",
                "query": "SELECT COUNT (DISTINCT Nationality), name FROM swimmer WHERE Nationality != 'USA'",
                "template": "SELECT COUNT (DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "3137efa17fcff69362eb00633b99219d776e7519",
                "query": "SELECT T1.Name, MIN(T3.Result) FROM swimmer AS T1 JOIN record AS T2 ON T1.ID = T2.Swimmer_ID JOIN event AS T3 ON T2.Event_ID = T3.ID WHERE T1.Nationality != 'USA' GROUP BY T1.Name",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "b868373aa0aedf264bb17525ed7eaf0a74a68a6e",
                "query": "SELECT T1.Name, AVG(T2.Result) FROM event AS T1 JOIN record AS T2 ON T1.ID = T2.Event_ID JOIN swimmer AS T3 ON T2.Swimmer_ID = T3.ID WHERE T1.Stadium_ID = 1 OR T3.Nationality = 'USA' GROUP BY T1.Name HAVING AVG(T2.Result) > ( SELECT AVG(T1.Result) FROM record AS T1 WHERE T1.Swimmer_ID IN ( SELECT ID FROM swimmer WHERE Nationality = 'UK' )) ORDER BY T1.Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > ( SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# )) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "fbdded56769edc4ce26e02ca7fe578d59dc78c4b",
                "query": "SELECT meter_100 FROM swimmer WHERE meter_100 > 50 LIMIT 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "1f48deeccc28758f87ac38540db60d9b31e47a4c",
                "query": "SELECT COUNT(DISTINCT T1.name), COUNT(T1.Result) FROM record AS T1 JOIN event AS T2 ON T1.Event_ID = T2.ID WHERE T2.Year > '2000' ORDER BY COUNT(T1.Result) DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY COUNT(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "72a4d1b721d333b6b92b5d28eee0ec57e50154ac",
                "query": "SELECT Name FROM swimmer AS S WHERE Nationality = 'USA' OR meter_200 = '1:45.00'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# = '#VALUE#'"
            },
            {
                "hash": "2d7ac69d37de886a1164e55ea4279faaf7d7d4ff",
                "query": "SELECT S.name, E.Name FROM swimmer AS S JOIN record AS R ON S.ID = R.Swimmer_ID JOIN event AS E ON R.Event_ID = E.ID WHERE R.Result > 100 OR E.Name = 'TestEvent' OR EXISTS (SELECT * FROM stadium AS T WHERE T.Capacity > 10000)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "f865fac6bf52e717edb043a6a171f9982703ae89",
                "query": "SELECT meter_100, meter_200, meter_300 FROM swimmer ORDER BY meter_100 ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "b2c54934ea52a92da4221cf0b98fdd1649a13875",
                "query": "SELECT COUNT(T1.ID) FROM swimmer AS T1 WHERE T1.Nationality = 'USA' AND T1.Time > '00:01:00' AND T1.meter_100 BETWEEN 50 AND 60 AND T1.ID NOT IN ( SELECT T2.Swimmer_ID FROM record AS T2 ) ORDER BY T1.meter_100 DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# > '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b44efb5ca08319f150905ac686dff8a7f1bea353",
                "query": "SELECT COUNT(DISTINCT Name) FROM swimmer WHERE meter_100 < 60",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            }
        ],
        "twitter_1": [
            {
                "hash": "93f500bc53acb9c26b9757cbd3fed2f7695f6a3e",
                "query": "SELECT COUNT(DISTINCT T1.uid) FROM user_profiles AS T1 WHERE EXISTS (SELECT T2.uid FROM tweets AS T2 WHERE T2.uid = T1.uid)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "09cee661b9fcda73e3edf29d018dbcdb99c94a74",
                "query": "SELECT * FROM tweets WHERE uid < 100 AND createdate < 1643723400 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d4cbb11ce5352b340f3fa96437c18c293a7ee827",
                "query": "SELECT T1.uid, T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 WHERE T1.followers < (SELECT COUNT(f2) FROM follows GROUP BY f2 HAVING f2 = T2.f2) ORDER BY T1.uid ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT COUNT(#COLUMN#) FROM #TABLE# GROUP BY #COLUMN# HAVING #COLUMN# = #COLUMN#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4ee730bac6fa3c7fddb387b8dec146d5db533f4e",
                "query": "SELECT T1.uid, COUNT(T1.uid) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T1.followers < (SELECT AVG(followers) FROM user_profiles) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < (SELECT AVG(#COLUMN#) FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "cf47e5a12f1514bb63e9a1287511334a59c7ee2b",
                "query": "SELECT T1.name, T2.text FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T1.followers > 1000 AND T2.createdate BETWEEN '2020-01-01' AND '2020-12-31' AND T2.text LIKE '%keyword%'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# LIKE '#VALUE#'"
            },
            {
                "hash": "02f8d1bfdae5f26771590ffbb49ce13034dbd997",
                "query": "SELECT T1.name, COUNT(T2.text) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T1.followers > 1000 AND T2.createdate BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY T1.name HAVING COUNT(T2.text) > 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "b36265e492858f4fdb13090d943371809bdff263",
                "query": "SELECT MIN(T1.followers), T2.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T2.f1 < 100 GROUP BY T2.name LIMIT 10",
                "template": "SELECT MIN(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "99b2d503e31df283fb9cd3f0e9d48f4211209162",
                "query": "SELECT T2.name, MAX(T1.followers) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 JOIN tweets AS T3 ON T2.f2 = T3.uid GROUP BY T2.name ORDER BY MAX(T1.followers) ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) ASC"
            },
            {
                "hash": "713fbb9f9e8c61b784eb01843992595dcddb9274",
                "query": "SELECT T1.name, COUNT(T2.uid) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T1.followers = 1000",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "6d857d9ed99bad26824382f5d4de423d298dfbb7",
                "query": "SELECT T1.uid FROM user_profiles AS T1 JOIN user_profiles AS T2 ON T1.uid = T2.uid WHERE T1.followers > (SELECT AVG(followers) FROM user_profiles) ORDER BY T1.uid ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "f8fd6f60922017676b4632a176e2bcd84be6c693",
                "query": "SELECT COUNT(DISTINCT T1.uid), COUNT(T1.id) FROM user_profiles AS T1 WHERE T1.followers < 10000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "8bd8d048bdc3a1271bc8b60fcc6b4d6dcac892b4",
                "query": "SELECT uid FROM user_profiles WHERE followers < 100 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9507aace099037b715a74a8f99c85a34228217e9",
                "query": "SELECT * FROM tweets WHERE id > 1000 ORDER BY uid DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "a3a6409cee5bfb8b7f6f957369a0a3aae2e72623",
                "query": "SELECT T2.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 JOIN tweets AS T3 ON T2.f2 = T3.uid WHERE T1.followers BETWEEN 100 AND 1000 AND T3.text = 'Hello World' AND T1.partitionid > 10 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "61e8731c2c1919a62fdcc2191276d5b09e52d846",
                "query": "SELECT COUNT(DISTINCT T3.uid) FROM follows AS T1 JOIN user_profiles AS T2 ON T1.f1 = T2.uid JOIN tweets AS T3 ON T2.uid = T3.uid WHERE T3.createdate BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "05f3a41d3508d4102f7ac54ab8ddf08a3940e57f",
                "query": "SELECT CAST(SUM(CASE WHEN T1.uid = T2.f1 AND T2.f2 = T3.uid THEN T1.uid END) AS REAL) * 100 / SUM(CASE WHEN T2.f2 = T3.uid THEN T3.followers END), SUM(T1.uid), SUM(T3.followers) FROM user_profiles T1 JOIN follows T2 ON T1.uid = T2.f1 JOIN user_profiles T3 ON T2.f2 = T3.uid GROUP BY T1.uid HAVING SUM(T3.followers) BETWEEN 100 AND 1000 OR SUM(T1.uid) > 1000 OR SUM(T3.followers) > 1000",
                "template": "SELECT CAST(SUM(CASE WHEN #COLUMN# = #COLUMN# AND #COLUMN# = #COLUMN# THEN #COLUMN# END) AS REAL) * 100 / SUM(CASE WHEN #COLUMN# = #COLUMN# THEN #COLUMN# END), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) BETWEEN #VALUE# AND #VALUE# OR SUM(#COLUMN#) > #VALUE# OR SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "969b76920dc565d9cfdc7355b0e23395f6d47223",
                "query": "SELECT * FROM follows WHERE f2 < 100",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "6e272ab26052b2cd75a2e3325734e30e09e5334e",
                "query": "SELECT MAX(T1.followers) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T2.createdate BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY T1.followers ORDER BY MAX(T1.followers) DESC",
                "template": "SELECT MAX(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY MAX(#COLUMN#) DESC"
            },
            {
                "hash": "25aff95b3a342cab623889d9041e4df93a2aeea0",
                "query": "SELECT u.name, MIN(t.createdate) FROM user_profiles u JOIN tweets t ON u.uid = t.uid WHERE t.createdate BETWEEN '2020-01-01' AND '2020-12-31' AND t.uid > 100 GROUP BY u.name HAVING MIN(t.createdate) > '2020-06-01'",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "3638962e11f229c6363ebdcd4ee2512a494e22a9",
                "query": "SELECT AVG(T2.followers), T1.text FROM tweets AS T1 JOIN user_profiles AS T2 ON T1.uid = T2.uid WHERE T1.uid = 100 GROUP BY T1.text HAVING AVG(T2.followers) > 10",
                "template": "SELECT AVG(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "eec198ffb90ebd4fd87a04bd98c2baa822c16d3b",
                "query": "SELECT uid FROM user_profiles WHERE uid IN (SELECT uid FROM tweets WHERE id > 1000) ORDER BY followers DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "0f2974d5f7d32516c2154d4e3db8e523f70cd9fb",
                "query": "SELECT T1.name, T3.text FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 JOIN tweets AS T3 ON T2.f2 = T3.uid WHERE T1.followers BETWEEN 100 AND 1000 AND T1.partitionid < (SELECT partitionid FROM user_profiles WHERE followers > 500) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "21929334399a6d8696f8468f93bb43ef8745bb10",
                "query": "SELECT * FROM tweets WHERE EXISTS (SELECT 1 FROM user_profiles WHERE user_profiles.uid = tweets.uid AND user_profiles.name = 'John')",
                "template": "SELECT * FROM #TABLE# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')"
            }
        ],
        "restaurant_bills": [
            {
                "hash": "77915eaad9518216776c044a0ca19a447bbb5438",
                "query": "SELECT COUNT(DISTINCT T2.Dish_Name), COUNT(DISTINCT T1.Customer_ID) FROM customer AS T1 INNER JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID INNER JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T3.Manager != 'Manager' ORDER BY T1.Customer_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "0ababf219a10e73411412f9a4c896b4665a9a7dc",
                "query": "SELECT MAX(T2.Card_Credit) , T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN#"
            },
            {
                "hash": "25bdd2ef14c6e7a44402fdbf2f2a64312b5cd876",
                "query": "SELECT SUM(T1.Card_Credit), SUM(T1.Level_of_Membership), SUM(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Level_of_Membership BETWEEN 1 AND 3 AND T2.Quantity > 5 GROUP BY T1.Customer_ID HAVING SUM(T2.Quantity) > 10 ORDER BY T1.Customer_ID ASC LIMIT 10",
                "template": "SELECT SUM(#COLUMN#), SUM(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "80e40853ab9d96391636db20586d6890d933cc2d",
                "query": "SELECT T1.Name, T2.Dish_Name, T3.Manager FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Level_of_Membership BETWEEN 1 AND 3 AND T2.Quantity > (SELECT AVG(Quantity) FROM customer_order)",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#)"
            },
            {
                "hash": "e1710464ff0b362acecec65e02fc9c6e3cf03ea9",
                "query": "SELECT T1.Name, COUNT(DISTINCT T1.Customer_ID) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE NOT EXISTS (SELECT 1 FROM branch AS T3 WHERE T3.Branch_ID = T2.Branch_ID AND T3.Manager = 'Manager') ORDER BY T1.Customer_ID ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7610b009216083737631198c281ce9d8ad2ce075",
                "query": "SELECT T1.Name, SUM(T3.Quantity) FROM customer AS T1 JOIN customer_order AS T3 ON T1.Customer_ID = T3.Customer_ID JOIN branch AS T2 ON T3.Branch_ID = T2.Branch_ID WHERE T2.Location_of_office = 'New York' OR T1.Nationality = 'USA' OR T3.Quantity BETWEEN 10 AND 20 LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "9151e542eba1c8b6159b467e9c5d7efb2534edd8",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b2b6a60d5cac9f9bcc496aeace9766bc1f48c231",
                "query": "SELECT T1.Name, SUM(T3.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Card_Credit > 5000 AND T3.Years_opened > 5",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "2f825c55f87300f9885792842653b9b42f2536b3",
                "query": "SELECT T1.Customer_ID FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T3.Branch_ID = T2.Branch_ID WHERE T2.Quantity BETWEEN 1 AND 10 AND T1.Customer_ID NOT IN (SELECT T1.Customer_ID FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T3.Branch_ID = T2.Branch_ID WHERE T2.Branch_ID = 101)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "1c6db781117416a3b7029653dc95756c2a3cba31",
                "query": "SELECT T1.Customer_ID, COUNT(DISTINCT T2.Branch_ID) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID HAVING COUNT(T1.Customer_ID) > 1",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "97bced46c439d9fc5fa95511bc56401ec4ebd30b",
                "query": "SELECT T1.Nationality, COUNT(DISTINCT T2.Dish_Name) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Quantity < 5 GROUP BY T1.Nationality",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "15d8ef5319e1e396fc4dd0da831284d5b99187c4",
                "query": "SELECT T1.Customer_ID FROM customer AS T1 WHERE T1.Card_Credit BETWEEN 500 AND 2000 AND NOT EXISTS (SELECT T2.Customer_ID FROM customer_order AS T2 WHERE T2.Customer_ID = T1.Customer_ID AND T2.Quantity > 10) ORDER BY T1.Card_Credit DESC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# = T1.#COLUMN# AND #COLUMN# > #VALUE#) ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "93828c5857adfc458741604617ca4229d62a58a2",
                "query": "SELECT T1.Name, COUNT(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Card_Credit BETWEEN 1000 AND 2000 AND T1.Level_of_Membership IN (SELECT Level_of_Membership FROM customer WHERE Nationality = 'USA') GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ec59589390932b63d8dcd1b8ad1b8ade22aac83b",
                "query": "SELECT T1.Dish_Name, SUM(T2.Quantity) FROM customer_order AS T1 JOIN customer AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Level_of_Membership IN (SELECT Level_of_Membership FROM customer WHERE Nationality = 'Japanese') GROUP BY T1.Dish_Name",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "f599f23dfb3e5055c2bb18a79cb17823fad93af1",
                "query": "SELECT T1.Name, SUM(T3.Quantity) FROM customer AS T1 JOIN customer_order AS T3 ON T1.Customer_ID = T3.Customer_ID WHERE T1.Card_Credit <= 100 ORDER BY T1.Name DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "19d46eea7b90d3310e87f9e027a67498cd0be6e6",
                "query": "SELECT SUM(Card_Credit) AS total_credit, COUNT(Level_of_Membership) AS total_membership FROM customer AS t1",
                "template": "SELECT SUM(#COLUMN#) AS #COLUMN#, COUNT(#COLUMN#) AS #COLUMN# FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "7fa78cd8c6709eeeecb7e7b51e1255b906fa1a5b",
                "query": "SELECT Name FROM customer WHERE Card_Credit <= 5000 ORDER BY Level_of_Membership ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "ddc52e1127ccf376cc676bd7b38a5f74ff43598c",
                "query": "SELECT COUNT(Level_of_Membership), SUM(Card_Credit) FROM customer",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE#"
            },
            {
                "hash": "19ca0d892b39671147d8c0c55d638ac5b97740fa",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), T1.Level_of_Membership FROM customer AS T1 WHERE T1.Card_Credit < 10000 AND T1.Card_Credit > 5000 AND T1.Nationality = 'USA'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# AND #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "df2d4233f0e8d27dedc658f88a11e72ffbef97f5",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID) , COUNT(DISTINCT T1.Nationality) , COUNT(DISTINCT T1.Level_of_Membership) FROM customer AS T1 ORDER BY T1.Customer_ID DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#)"
            },
            {
                "hash": "ac69d34004d0ff0130e8aa20fba2f25486dff13b",
                "query": "SELECT Name, Nationality FROM customer WHERE Card_Credit = 1000 AND Level_of_Membership < 3 ORDER BY Name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "c071e0a1f6ea586df2a20af73e219083ec5f36de",
                "query": "SELECT COUNT(DISTINCT T1.Customer_ID), COUNT(T2.Customer_ID) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Level_of_Membership = 1 AND T1.Card_Credit > 1000 AND NOT EXISTS (SELECT 1 FROM branch AS T3 WHERE T3.Branch_ID = T2.Branch_ID AND T3.Years_opened < 5) ORDER BY T1.Customer_ID ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# > #VALUE# AND NOT EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "36c5e6ae4ae78897b049858516a70022f6082983",
                "query": "SELECT T1.Name, T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Level_of_Membership > 5 OR T1.Card_Credit = 1000 OR NOT EXISTS (SELECT 1 FROM branch AS T3 WHERE T2.Branch_ID = T3.Branch_ID AND T3.Years_opened < 5)",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# = #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#)"
            },
            {
                "hash": "1f324c494a13b7ae9ca2f1f309935ff91475eeb0",
                "query": "SELECT Name FROM customer WHERE Level_of_Membership IN (SELECT Level_of_Membership FROM customer WHERE Card_Credit > 100) ORDER BY Customer_ID ASC LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "723f51ec7499c8e4948663a79fcb6ca9f29cc8b4",
                "query": "SELECT T1.Branch_ID, SUM(T1.Quantity) FROM customer_order AS T1 WHERE T1.Branch_ID IN (SELECT T2.Branch_ID FROM branch AS T2 WHERE T2.Years_opened > 10) GROUP BY T1.Branch_ID ORDER BY SUM(T1.Quantity) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            }
        ],
        "restaurant_1": [
            {
                "hash": "3b32cdb97346060fdddc2a65d8d70154ea2849b0",
                "query": "SELECT T1.LName FROM Student AS T1 WHERE NOT EXISTS (SELECT 1 FROM Restaurant AS T2 WHERE T2.ResName = 'Johnnies')",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "0ab51a5966b0dcaf8e98ec13bb3c87fc0a8de396",
                "query": "SELECT COUNT(Sex), LName FROM Student WHERE Age BETWEEN 18 AND 25 GROUP BY LName",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "60379e970d11f946b869b2598340d48e526a9dfd",
                "query": "SELECT StuID, LName FROM Student WHERE Age BETWEEN 18 AND 25 OR Fname = 'John' OR Major > 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "16874759a66f56f55c855a8d501624c632a413b9",
                "query": "SELECT T1.Fname, T2.ResName, T3.ResTypeName FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID JOIN Restaurant AS T3 ON T2.ResID = T3.ResID JOIN Type_Of_Restaurant AS T4 ON T3.ResID = T4.ResID JOIN Restaurant_Type AS T5 ON T4.ResTypeID = T5.ResTypeID WHERE T1.Age > 18 AND T2.Time BETWEEN '10:00:00' AND '12:00:00' AND T3.Rating < 5 ORDER BY T1.LName DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# < #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "841827dc5bc9f9449faf3c1ff41e33f7efac6755",
                "query": "SELECT T1.LName, MIN(T1.Age) FROM Student AS T1 GROUP BY T1.LName",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "7222c0abb114f90452be76df64e200faff989e67",
                "query": "SELECT LName, SUM(Spent) FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID JOIN Restaurant AS T3 ON T2.ResID = T3.ResID WHERE T3.Rating <= 3 GROUP BY LName HAVING SUM(Spent) > 100 ORDER BY SUM(Spent) DESC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC LIMIT #VALUE#"
            },
            {
                "hash": "05595fcb47dc23e7d6d0ac6c29518789de778793",
                "query": "SELECT ResName FROM Restaurant WHERE ResID = ( SELECT ResID FROM Type_Of_Restaurant WHERE ResTypeID = ( SELECT ResTypeID FROM Restaurant_Type WHERE ResTypeName = 'Italian' OR ResTypeDescription LIKE '%food%' ) ) OR ResID NOT IN ( SELECT ResID FROM Visits_Restaurant ) ORDER BY ResName ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#' OR #COLUMN# LIKE '#VALUE#' ) ) OR #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# ) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5050d7e488a2453581db0590d46101bf3b45a51c",
                "query": "SELECT DISTINCT T1.LName, T2.LName FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.Advisor WHERE T1.Age BETWEEN 20 AND 25 OR T1.Sex = 'M' OR T1.Major IN (SELECT Major FROM Student WHERE Advisor = 101)",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = '#VALUE#' OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "a3295ffaf2221ec79ee8c3318ab693ed3510ae70",
                "query": "SELECT MAX(S.Age), S.LName FROM Student S WHERE S.Major != 1 GROUP BY S.LName HAVING MAX(S.Age) > 20",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "d5ce1feb9548a8daf4fda2b7c80b130195720d9f",
                "query": "SELECT COUNT(DISTINCT StuID), COUNT(Spent) FROM Visits_Restaurant WHERE ResID = 1 OR Time BETWEEN '10:00' AND '12:00' OR Spent > 20",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "3241b512898f22fce8b28d733f27290a1fce1c4f",
                "query": "SELECT T5.ResTypeName, COUNT(T3.StuID) FROM Restaurant_Type AS T5 INNER JOIN Type_Of_Restaurant AS T4 ON T4.ResTypeID = T5.ResTypeID INNER JOIN Restaurant AS T3 ON T3.ResID = T4.ResID INNER JOIN Visits_Restaurant AS T2 ON T3.ResID = T2.ResID INNER JOIN Student AS T1 ON T2.StuID = T1.StuID WHERE T1.Age > (SELECT AVG(Age) FROM Student) AND T1.Sex = 'M' AND T3.Rating > (SELECT AVG(Rating) FROM Restaurant) GROUP BY T5.ResTypeName ORDER BY COUNT(T3.StuID) ASC LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) AND #COLUMN# = #VALUE# AND #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) GROUP BY #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "fd012ef0e676d7c3fd7d9c297c49233d468d91dc",
                "query": "SELECT T1.LName, T2.ResName FROM Student AS T1 JOIN Visits_Restaurant AS T3 ON T1.StuID = T3.StuID JOIN Restaurant AS T2 ON T3.ResID = T2.ResID WHERE T1.Age >= 20 ORDER BY T1.LName DESC LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "e151e968e7fa5c65d26df2527d21cb7dcab99548",
                "query": "SELECT AVG(T4.Spent), AVG(T4.Time) FROM Restaurant AS T1 INNER JOIN Type_Of_Restaurant AS T2 ON T1.ResID = T2.ResID INNER JOIN Restaurant_Type AS T3 ON T2.ResTypeID = T3.ResTypeID INNER JOIN Visits_Restaurant AS T4 ON T4.ResID = T1.ResID WHERE T1.ResName != 'Burger King' ORDER BY T3.ResTypeName ASC LIMIT 10",
                "template": "SELECT AVG(#COLUMN#), AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "8c2b2c9de30a5f48014ee952c7984689d8725347",
                "query": "SELECT ResName FROM Restaurant WHERE Rating = 5 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "35e8aa58a49982ba037f342ee66a569edef7a7d5",
                "query": "SELECT T1.LName, T2.ResName, T4.ResTypeName FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID JOIN Restaurant AS T3 ON T2.ResID = T3.ResID JOIN Type_Of_Restaurant AS T4 ON T3.ResID = T4.ResID JOIN Restaurant_Type AS T5 ON T4.ResTypeID = T5.ResTypeID WHERE T1.Age >= 20 LIMIT 5",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "2a9930bf9c14783bfb16507cc29a1ba9fcc7587d",
                "query": "SELECT T1.LName, T2.Fname FROM Student AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Age BETWEEN 20 AND 25 OR T2.Major = 2 OR T1.Sex IN ('M', 'F') ORDER BY T1.LName ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "7dd48aed20455f2778febafb9a7ed17b0e986b0d",
                "query": "SELECT DISTINCT T1.LName, T2.ResName FROM Student AS T1 JOIN Visits_Restaurant AS T3 ON T1.StuID = T3.StuID JOIN Restaurant AS T2 ON T3.ResID = T2.ResID WHERE T1.Age > 18 AND T1.Sex = 'M' AND T2.ResID BETWEEN 1 AND 10 AND T2.ResName NOT IN (SELECT ResName FROM Restaurant WHERE Rating < 5) ORDER BY T1.LName ASC LIMIT 5",
                "template": "SELECT DISTINCT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "48385fe31f399415ed5882a8c9ddcc9270d3bae0",
                "query": "SELECT Fname FROM Student WHERE Sex = 'M' AND Age BETWEEN 18 AND 20 AND LName = 'Smith' ORDER BY Fname ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "e27595cf69b9b9d49ac16a5ff6f009ef23ba7eb7",
                "query": "SELECT COUNT(ResID) FROM Restaurant WHERE Rating > 2 AND Rating < 5 AND ResName = 'Pizza Hut' ORDER BY ResName DESC",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# AND #COLUMN# < #VALUE# AND #COLUMN# = '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9f1d9c29ff2effcb543eccdf9280ba197b9e7880",
                "query": "SELECT COUNT(DISTINCT T1.LName), COUNT(DISTINCT T1.Fname), T1.city_code FROM Student AS T1 WHERE T1.Age IN (SELECT T2.Age FROM Student AS T2) ORDER BY T1.Age ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT LName FROM Student WHERE Age >= 20",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "c28f926a63d0de87499618cda768bb3c4af65aa2",
                "query": "SELECT COUNT(T1.StuID) FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 18 AND T1.Sex = 'M' AND T1.StuID IN (SELECT T3.StuID FROM Visits_Restaurant AS T3 WHERE T3.Spent > 50) GROUP BY T1.StuID LIMIT 100",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b86c97cccb300542e0d327ea9b41243fdfef24d5",
                "query": "SELECT T1.LName, SUM(T2.Spent) FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID WHERE T1.StuID NOT IN (SELECT StuID FROM Visits_Restaurant WHERE Spent > 100) GROUP BY T1.LName HAVING SUM(T2.Spent) > 500 ORDER BY SUM(T2.Spent) DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY SUM(#COLUMN#) DESC"
            },
            {
                "hash": "d122004434234f2c667146dc81929cc7ef28ca8a",
                "query": "SELECT COUNT(DISTINCT T1.LName), T2.ResName FROM Student AS T1 JOIN Visits_Restaurant AS T3 ON T1.StuID = T3.StuID JOIN Restaurant AS T2 ON T3.ResID = T2.ResID WHERE T2.Rating BETWEEN 2 AND 5 OR T1.Sex = 'M' OR T2.ResID NOT IN (SELECT T2.ResID FROM Restaurant AS T2 JOIN Type_Of_Restaurant AS T3 ON T2.ResID = T3.ResID JOIN Restaurant_Type AS T4 ON T3.ResTypeID = T4.ResTypeID WHERE T4.ResTypeName = 'Fast-food')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "3f9208b279a0c30c93f8072a67e36b5f9b010f3a",
                "query": "SELECT T4.ResTypeName, SUM(T5.Spent) FROM Restaurant_Type AS T4 JOIN Type_Of_Restaurant AS T3 ON T4.ResTypeID = T3.ResTypeID JOIN Restaurant AS T2 ON T3.ResID = T2.ResID JOIN Visits_Restaurant AS T5 ON T2.ResID = T5.ResID JOIN Student AS T1 ON T5.StuID = T1.StuID WHERE T1.Age BETWEEN 20 AND 30 GROUP BY T4.ResTypeName",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN#"
            }
        ],
        "game_injury": [
            {
                "hash": "83f9e70b434cf6c7c921995dcbb61d9be45ea72f",
                "query": "SELECT T3.Player, COUNT(DISTINCT T1.id) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T3.Player HAVING AVG(T2.Season) > 10 ORDER BY T3.Player ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "687b90c5231d3eb0ad8c0cf5be497b5e5418f146",
                "query": "SELECT T1.name, T2.Score FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T2.Score = '2-0' OR T1.id IN (SELECT T2.stadium_id FROM game AS T2 WHERE T2.Season = 2020) ORDER BY T1.name ASC LIMIT 10",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "b9a4539d9df56a0ad7ab58cf0557fe86540ccda3",
                "query": "SELECT name FROM stadium WHERE Capacity_Percentage != 0 GROUP BY name HAVING MIN(Average_Attendance)",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# GROUP BY #COLUMN# HAVING MIN(#COLUMN#)"
            },
            {
                "hash": "b6a4c29d0590470c2e5091456f9042f77d73001c",
                "query": "SELECT T1.name, T2.Score FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id WHERE T3.Player = 'John' OR T1.Capacity_Percentage < 50 OR EXISTS (SELECT 1 FROM game WHERE game.stadium_id = T1.id AND game.Season = 2020) ORDER BY T2.Score DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# < #VALUE# OR EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "24b54996b5b75d0fa7b4197302ca88a62b24ab56",
                "query": "SELECT MAX(T1.Capacity_Percentage), T2.Date FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T1.Home_Games > 10 AND T2.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T2.Season = 2020",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "6590cfbcabe7bdf1004e775b4d96b30abda1d46a",
                "query": "SELECT SUM(Total_Attendance) FROM stadium WHERE Average_Attendance < 10000",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "183be999143d017ff1ac096dce2e732807264613",
                "query": "SELECT COUNT(DISTINCT T1.id), COUNT(T1.id) FROM stadium AS T1 WHERE (T1.id BETWEEN 1 AND 5 OR T1.id = 10) AND NOT EXISTS (SELECT T2.stadium_id FROM game AS T2 WHERE T2.stadium_id = T1.id AND T2.id = 1) ORDER BY T1.id ASC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(#COLUMN#) FROM #TABLE# WHERE (#COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#) AND NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "2d8fb75d93bffec2c02d14d5d23723c39079c8bd",
                "query": "SELECT COUNT(DISTINCT T1.name), T1.Average_Attendance FROM stadium AS T1 WHERE T1.Average_Attendance > 50000",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "5f9b7f29cab67314572f2f69314cf556c9a4e0b3",
                "query": "SELECT T1.name FROM stadium AS T1 WHERE T1.name = 'Stadium_1'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "a96d0462f4523ffb789536fc5a55ca241c83daf2",
                "query": "SELECT name FROM stadium WHERE Total_Attendance > 10000",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#"
            },
            {
                "hash": "215c0e9e979cb8443c96ccd54c729faddef52187",
                "query": "SELECT COUNT(DISTINCT T1.name) , COUNT(DISTINCT T2.Home_team), T3.Player FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id WHERE T1.Capacity_Percentage > 90 OR T2.Season BETWEEN 2015 AND 2018 OR T3.Injury = 'Hamstring' ORDER BY T1.Capacity_Percentage DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "5e7cd3520c90dc1bcd7f9263f2aee97d0d678cd5",
                "query": "SELECT T1.name, SUM(T1.Total_Attendance) FROM stadium AS T1 WHERE T1.Average_Attendance > 20000 OR T1.Home_Games BETWEEN 10 AND 20 GROUP BY T1.name HAVING SUM(T1.Total_Attendance) > 100000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "607953b51dcf35eaace81b5c077b737415b5895c",
                "query": "SELECT T1.name, COUNT(T1.id) FROM stadium AS T1 WHERE T1.id NOT IN (SELECT T2.stadium_id FROM game AS T2 WHERE T2.Date BETWEEN '2020-01-01' AND '2020-12-31') OR T1.Home_Games > 20 GROUP BY T1.name HAVING COUNT(T1.id) > 1",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#) OR #COLUMN# > #VALUE# GROUP BY #COLUMN# HAVING COUNT(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "d71b6880940c2adf44e3fb9fd44548a31e507c11",
                "query": "SELECT T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T2.Score LIKE '1-0' AND T2.Date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.Capacity_Percentage IN (SELECT Capacity_Percentage FROM stadium WHERE Capacity_Percentage > 80)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE#' AND #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "fe5848dcd2bdbce285f20f316817a3afcecd57d3",
                "query": "SELECT T1.Home_Games FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T2.Score BETWEEN '0-0' AND '2-2' OR T2.Season > 2010 OR T2.id IN (SELECT T3.game_id FROM injury_accident AS T3 WHERE T3.Player = 'John Doe') ORDER BY T1.Home_Games DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#' OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = '#VALUE#') ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "502d582b76f06a1df3c1e405404ef62f3dafba62",
                "query": "SELECT T1.name, COUNT(DISTINCT T3.Player) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id WHERE T1.id = 1 GROUP BY T1.name",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "adc6c7f671e30312b0e55bb2633cf4c31806c16a",
                "query": "SELECT T1.name, COUNT(DISTINCT T2.id), SUM(T1.Total_Attendance) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T1.id = 1 AND T2.Season = 1 AND NOT EXISTS ( SELECT 1 FROM injury_accident AS T3 WHERE T3.game_id = T2.id ) GROUP BY COUNT(DISTINCT T2.id) HAVING SUM(T1.Total_Attendance) > 10000",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND NOT EXISTS ( SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# ) GROUP BY COUNT(DISTINCT #COLUMN#) HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "97bcf498b2cd6d45a6903ec38f3f4c5af8bf28c6",
                "query": "SELECT Home_team FROM game WHERE Home_team >= 'A'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "4a2517d1d1d856766cbdec32acf244d76cafbdbd",
                "query": "SELECT T1.Name, T2.id FROM stadium AS T1 JOIN stadium AS T2 ON T1.id = T2.id WHERE T1.Average_Attendance BETWEEN 10000 AND 20000 ORDER BY T1.id ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "93fddda5ee721220827ad1987a841d1a50514701",
                "query": "SELECT s.name, g.Date FROM stadium AS s JOIN game AS g ON s.id = g.stadium_id WHERE s.id = 1 AND g.id IN (SELECT id FROM game WHERE Season = 2020) ORDER BY g.Date ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "e898260d0be297fe4d2c173232d181084bf3355f",
                "query": "SELECT T1.name FROM stadium AS T1 JOIN stadium AS T2 ON T1.id = T2.id WHERE NOT EXISTS (SELECT T3.id FROM game AS T3 WHERE T3.stadium_id = T1.id AND T3.id NOT IN (SELECT T4.game_id FROM injury_accident AS T4)) GROUP BY T1.name HAVING AVG(T2.Capacity_Percentage) > 0.5",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#)) GROUP BY #COLUMN# HAVING AVG(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "7a9e9cd00cd8d39fdafa8ce28697a0355999e4c7",
                "query": "SELECT name, SUM(Total_Attendance) FROM stadium WHERE Capacity_Percentage <= 0.8 GROUP BY name HAVING SUM(Total_Attendance) > 10000",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "b5fe557e0d358cc9f6f8f7332272c15b760d0890",
                "query": "SELECT T1.id FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T1.Average_Attendance = 10000 AND T2.Score = '1-0' AND EXISTS (SELECT 1 FROM injury_accident AS T3 WHERE T3.game_id = T2.id)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# AS T3 WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "05d9b0ad4e360957c02f3db1ea6e76a4849fb0f3",
                "query": "SELECT COUNT(DISTINCT T1.id), T1.Home_Games FROM stadium AS T1 WHERE T1.Average_Attendance BETWEEN 10000 AND 20000 AND T1.Total_Attendance NOT IN (SELECT T2.Total_Attendance FROM stadium AS T2 WHERE T2.Capacity_Percentage > 50) LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "d5c61d0d0a1e7cc96d4f29ff1a96e3dba33069b2",
                "query": "SELECT COUNT(DISTINCT T1.id), COUNT(DISTINCT T2.id), T3.Home_team FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id WHERE T1.Capacity_Percentage > 50 AND T2.Score = '2-1' AND T3.Player IN (SELECT Player FROM injury_accident WHERE Injury = 'Knee')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "475eff34d86bebe313f83aa4ca7c12c5bbabd1a8",
                "query": "SELECT T1.name, MAX(T1.Capacity_Percentage) FROM stadium AS T1 WHERE EXISTS (SELECT 1 FROM game AS T2 WHERE T2.stadium_id = T1.id) GROUP BY T1.name ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS T1 WHERE EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN#) GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "187943bcdc1156d5f3415fb9e9be277d8db8284f",
                "query": "SELECT T1.name, T2.Score FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id WHERE T2.Season BETWEEN 2010 AND 2020 AND (T2.Score > (SELECT AVG(Score) FROM game) OR T1.Average_Attendance < (SELECT MIN(Average_Attendance) FROM stadium)) ORDER BY T1.name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND (#COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) OR #COLUMN# < (SELECT MIN(#COLUMN#) FROM #TABLE#)) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "14d01312edde18647901640479a6550df334d86c",
                "query": "SELECT T1.name, T2.Score FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T2.Competition = 'La Liga'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            }
        ],
        "assets_maintenance": [
            {
                "hash": "40546c688881e5b49b5f50eab1cc467c5b55e93b",
                "query": "SELECT T1.company_name, T2.part_name, SUM(T1.chargeable_amount) FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id WHERE T2.part_name LIKE 'ABC%' AND T1.chargeable_amount BETWEEN 10 AND 50 GROUP BY T2.part_name HAVING SUM(T1.chargeable_amount) > 100 ORDER BY T2.part_name DESC",
                "template": "SELECT #COLUMN#, #COLUMN#, SUM(#COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# LIKE '#VALUE%' AND #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "f36dde1af56d16124c9c0b7aedf44ed609dc1db6",
                "query": "SELECT T1.asset_id FROM Assets AS T1 JOIN Maintenance_Contracts AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id WHERE T2.contract_start_date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "97542c7c9ce3ca981867fb46e7a4cb899af94919",
                "query": "SELECT COUNT(T1.asset_id), SUM(T2.maintenance_contract_id) FROM Assets AS T1 JOIN Maintenance_Contracts AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id WHERE T1.asset_acquired_date BETWEEN '2020-01-01' AND '2020-12-31' OR T2.contract_start_date > '2021-01-01'",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "ae9f8bb089b002e8818f76a9b5f9dbc1dbe4d40f",
                "query": "SELECT T1.engineer_id FROM Maintenance_Engineers T1 JOIN Maintenance_Engineers T2 ON T1.engineer_id = T2.engineer_id WHERE T2.company_id NOT IN (SELECT company_id FROM Third_Party_Companies WHERE company_name = 'ABC') ORDER BY T1.engineer_id ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# T1 JOIN #TABLE# T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "28e417774f7e7d33e4f0aa4e0209f5aba821d680",
                "query": "SELECT part_fault_id FROM Part_Faults WHERE part_id = 10 OR part_fault_id BETWEEN 15 AND 20 OR part_fault_id > 25",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "e17d8b79e7f08b41d2c4b3cedb10b09e40c095d5",
                "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id JOIN Assets AS T3 ON T2.asset_id = T3.asset_id WHERE T3.asset_acquired_date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN '#VALUE#' AND '#VALUE#'"
            },
            {
                "hash": "aaeb7b74e0da6b091c4c427e015a7ce04aad58e0",
                "query": "SELECT COUNT(T1.fault_log_entry_id), SUM(T2.chargeable_amount), MAX(T1.fault_log_entry_datetime) FROM Fault_Log AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id WHERE T1.fault_description != 'minor' ORDER BY T1.fault_log_entry_datetime DESC",
                "template": "SELECT COUNT(#COLUMN#), SUM(#COLUMN#), MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "478c279535a468a0d5e4113a0be9dcf6f7fcb53b",
                "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id WHERE T1.company_type = 'Contractor' AND T2.engineer_id IN (SELECT engineer_id FROM Engineer_Skills WHERE skill_id = 1)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = '#VALUE#' AND #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "b41eda7bcbe22748a88baadf263d9225c393d451",
                "query": "SELECT COUNT(DISTINCT T1.company_name) FROM Third_Party_Companies AS T1 ORDER BY T1.company_id DESC LIMIT 10",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "fa033e8fcf62132c85357bb16ed3b5147b197791",
                "query": "SELECT T1.company_name, T2.part_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T3 ON T1.company_id = T3.company_id JOIN Engineer_Skills AS T4 ON T3.engineer_id = T4.engineer_id JOIN Skills_Required_To_Fix AS T5 ON T4.skill_id = T5.skill_id JOIN Part_Faults AS T6 ON T5.part_fault_id = T6.part_fault_id JOIN Parts AS T2 ON T6.part_id = T2.part_id WHERE T2.chargeable_yn < 'Yes'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "d324a5ce9f257841f3905093b513668796b752c3",
                "query": "SELECT T1.fault_log_entry_id, COUNT(T2.part_fault_id) FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id WHERE T1.fault_log_entry_id <= 100 GROUP BY T1.fault_log_entry_id LIMIT 5",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "cdd9a4ee0bf91fbb06b61cf89f5f67ab7ed8dab6",
                "query": "SELECT COUNT(T2.maintenance_contract_id) FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id WHERE T2.contract_start_date >= '2020-01-01' LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= '#VALUE#' LIMIT #VALUE#"
            },
            {
                "hash": "86c3f55e88ad9633f9e9f80f450510d0d4ca5d5b",
                "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 WHERE T1.company_type != 'government'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "92b12b10d52569c6d2fccad272bf01d45358c94b",
                "query": "SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Maintenance_Engineers AS T2 ON T1.engineer_id = T2.engineer_id WHERE T1.first_name = 'John'",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE#"
            },
            {
                "hash": "38f61d61c863a781c3cf7391b93e72a2cb186c67",
                "query": "SELECT T1.company_name, COUNT(T2.maintenance_contract_id) FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id WHERE T2.contract_start_date BETWEEN '2020-01-01' AND '2020-12-31'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "b75ab50e2780b986119c0597babb53b1f232bd5d",
                "query": "SELECT T1.part_id FROM Parts AS T1 WHERE T1.part_name != '' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != '' LIMIT #VALUE#"
            },
            {
                "hash": "b55699c0c2de457cc658c837d993ee8c1fdbd34c",
                "query": "SELECT COUNT(T1.maintenance_contract_id) FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id ORDER BY COUNT(T1.maintenance_contract_id) ASC LIMIT 10",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY COUNT(#COLUMN#) ASC LIMIT #VALUE#"
            },
            {
                "hash": "35a10fe95ab6bbe599d8af4f4b593d6d2e27e417",
                "query": "SELECT COUNT(DISTINCT T1.staff_name) FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id = T2.recorded_by_staff_id WHERE T1.staff_id = 1 OR T2.fault_log_entry_datetime > '2020-01-01' OR T1.staff_id IN (SELECT staff_id FROM Staff WHERE staff_name = 'John')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# > #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "567355de89de791e6baeb3e1a1cf2a4b9294e3b6",
                "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id WHERE T2.first_name = 'John' OR T2.first_name IN (SELECT T3.first_name FROM Maintenance_Engineers AS T3 WHERE T3.last_name = 'Doe') GROUP BY T1.company_name",
                "template": "SELECT #COLUMN# FROM #TABLE# AS #TABLE# JOIN #TABLE# AS #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN#"
            },
            {
                "hash": "063743b812f6934759831185a626cece432bf369",
                "query": "SELECT T2.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id WHERE T1.fault_log_entry_datetime < '2022-01-01' ORDER BY T2.fault_status DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < '#VALUE#' ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "196d4eda2b10729cd82bf2a8df45b82954a0d610",
                "query": "SELECT COUNT(DISTINCT T1.company_name), T2.part_name, T3.fault_short_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T4 ON T1.company_id = T4.maintenance_contract_company_id JOIN Assets AS T5 ON T4.maintenance_contract_id = T5.maintenance_contract_id JOIN Fault_Log AS T6 ON T5.asset_id = T6.asset_id JOIN Fault_Log_Parts AS T7 ON T6.fault_log_entry_id = T7.fault_log_entry_id JOIN Part_Faults AS T3 ON T7.part_fault_id = T3.part_fault_id JOIN Parts AS T2 ON T3.part_id = T2.part_id ORDER BY T1.company_name DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ad3c78b98c128ae6d90ee60cc6c6944597627925",
                "query": "SELECT T1.company_name, T5.part_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id JOIN Engineer_Skills AS T3 ON T2.engineer_id = T3.engineer_id JOIN Skills AS T4 ON T3.skill_id = T4.skill_id JOIN Parts AS T5 ON T4.skill_id = T5.part_id WHERE T5.chargeable_yn = 'Y' ORDER BY T1.company_name ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T4 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T5 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "customer_deliveries": [
            {
                "hash": "e31caf2743e4aa4956c67c6e67fa713e18eb4a27",
                "query": "SELECT COUNT(DISTINCT T1.product_id), COUNT(DISTINCT T2.product_id) FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id JOIN Actual_Orders AS T3 ON T2.actual_order_id = T3.actual_order_id WHERE T3.actual_order_date BETWEEN '2020-01-01' AND '2020-12-31' AND T1.product_price NOT IN (SELECT product_price FROM Products WHERE product_price > 1000)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE#)"
            },
            {
                "hash": "b0e8c9c73987e934a6a91b759f47a102f8dc52a0",
                "query": "SELECT SUM(T1.product_price) AS sum, MAX(T1.product_price) FROM Products AS T1 WHERE T1.product_price BETWEEN 100 AND 200 AND T1.product_description = 'Product Description' AND T1.product_name = 'Product Name' ORDER BY T1.product_price DESC",
                "template": "SELECT SUM(#COLUMN#) AS #COLUMN#, MAX(#COLUMN#) FROM #TABLE# AS #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "524f9ebaf559db67defe7c58d84bc40ef152ff77",
                "query": "SELECT AVG(T1.product_price) AS avg_product_price, T2.route_name FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id JOIN Regular_Orders AS T3 ON T2.regular_order_id = T3.regular_order_id JOIN Actual_Orders AS T4 ON T3.regular_order_id = T4.regular_order_id JOIN Delivery_Route_Locations AS T5 ON T4.actual_order_id = T5.location_code JOIN Delivery_Routes AS T6 ON T5.route_id = T6.route_id WHERE T1.product_price BETWEEN 10 AND 20 GROUP BY T6.route_name ORDER BY T6.route_name ASC",
                "template": "SELECT AVG(#COLUMN#) AS #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "4edb2de5013e98fe4201515c37b03a446699890a",
                "query": "SELECT COUNT(DISTINCT T1.customer_name), COUNT(DISTINCT T1.customer_email), T2.address_details FROM Customers AS T1 JOIN Customer_Addresses AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method = 'cash' AND T1.date_became_customer BETWEEN '2020-01-01' AND '2021-01-01' AND T2.address_type = 'billing'",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "5af8f759c2277c5a218117d81250b8f4ae485b35",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE T2.actual_order_id = ( SELECT actual_order_id FROM Actual_Orders WHERE actual_order_date > '2022-01-01' ) AND T1.product_price > 10",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ) AND #COLUMN# > #VALUE#"
            },
            {
                "hash": "1ded6fff48574b0fcd783b13258b35d3b3ed26cb",
                "query": "SELECT COUNT(T1.product_id), T1.product_name FROM Products AS T1 WHERE T1.product_price = 10 GROUP BY T1.product_name ORDER BY T1.product_name ASC LIMIT 5",
                "template": "SELECT COUNT(#COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "b5c8445ef4d49cbf25fe0a6be3172f79e4596e13",
                "query": "SELECT COUNT(T1.customer_name) FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_id = T2.address_id WHERE T1.customer_id <= 100",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE#"
            },
            {
                "hash": "a527caf7f58877bacf5b30b318711166b3c15e74",
                "query": "SELECT product_name FROM Products WHERE product_price IN (SELECT product_price FROM Products) ORDER BY product_price DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "6ede7d00e7eb6529b28f83fbb695d1c86de95991",
                "query": "SELECT T1.product_name FROM Products AS T1 WHERE T1.product_name NOT IN (SELECT T2.product_name FROM Products AS T2 WHERE T2.product_price > 10) LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# AS T2 WHERE #COLUMN# > #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "e92736a003496a5dc0be344d3f1e6d1b3fac8625",
                "query": "SELECT T1.product_name, T2.location_name FROM Products AS T1 JOIN Delivery_Route_Locations AS T2 ON T1.product_id != T2.location_code",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# != #COLUMN#"
            },
            {
                "hash": "04f9d40c95bda88b1389b8d0c6e917febe697ab1",
                "query": "SELECT COUNT(DISTINCT T1.product_name) FROM Products AS T1 WHERE NOT EXISTS (SELECT T2.product_id FROM Actual_Order_Products AS T2 WHERE T1.product_id = T2.product_id)",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE# WHERE NOT EXISTS (SELECT #COLUMN# FROM #TABLE# AS #TABLE# WHERE #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "747bb2101d694215957b1dc68535cd34816fc39c",
                "query": "SELECT COUNT(DISTINCT T1.product_name), T2.product_description FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "883da9fdf9c803f1485e6ffed15a13c8387db596",
                "query": "SELECT T1.product_name FROM Products AS T1 WHERE T1.product_price > 10 OR NOT EXISTS ( SELECT 1 FROM Regular_Order_Products AS T2 WHERE T2.product_id = T1.product_id ) GROUP BY T1.product_name HAVING SUM(T1.product_price) > 100",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE #COLUMN# > #VALUE# OR NOT EXISTS ( SELECT 1 FROM #TABLE# AS T2 WHERE #COLUMN# = #COLUMN# ) GROUP BY #COLUMN# HAVING SUM(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "310baae53ad67a21c686713733a9b8f5c9b76b8a",
                "query": "SELECT T1.product_name FROM Products AS T1 WHERE T1.product_id = 1 OR T1.product_price BETWEEN 10 AND 20 OR NOT EXISTS (SELECT 1 FROM Actual_Order_Products AS T2 WHERE T2.product_id = T1.product_id) ORDER BY T1.product_id DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 WHERE T1.#COLUMN# = #VALUE# OR T1.#COLUMN# BETWEEN #VALUE# AND #VALUE# OR NOT EXISTS (SELECT 1 FROM #TABLE# AS T2 WHERE T2.#COLUMN# = T1.#COLUMN#) ORDER BY T1.#COLUMN# DESC"
            },
            {
                "hash": "45a114987d286d9b687162d3a98b076d15f76907",
                "query": "SELECT AVG(T1.product_price) FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id JOIN Regular_Orders AS T3 ON T2.regular_order_id = T3.regular_order_id WHERE T3.distributer_id = 1 AND EXISTS (SELECT 1 FROM Actual_Orders AS T4 WHERE T4.regular_order_id = T3.regular_order_id AND T4.order_status_code = 'DELIVERED')",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# = '#VALUE#')"
            },
            {
                "hash": "922bcedb305bb904dac0e81a8862b35f5fa1a590",
                "query": "SELECT T2.product_name, SUM(T1.product_price) FROM Actual_Order_Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_id = ( SELECT T3.product_id FROM Actual_Orders AS T4 JOIN Actual_Order_Products AS T3 ON T4.actual_order_id = T3.actual_order_id WHERE T4.actual_order_date > T4.order_status_code ) OR T1.product_id = ( SELECT T5.product_id FROM Regular_Orders AS T6 JOIN Regular_Order_Products AS T5 ON T6.regular_order_id = T5.regular_order_id WHERE T6.distributer_id = 100 ) ORDER BY T2.product_name ASC LIMIT 10",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #COLUMN# ) OR #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "ad59daeee46594030dd34e0e47542ee470a31cf7",
                "query": "SELECT T1.product_name, T2.product_name FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price BETWEEN 10 AND 20 OR T1.product_description IN ('sample1', 'sample2') ORDER BY T1.product_price ASC LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) ORDER BY #COLUMN# ASC LIMIT #VALUE#"
            },
            {
                "hash": "70fa9608545116642cfb496f5efe33eb9b0411bb",
                "query": "SELECT COUNT(T1.product_id) FROM Products AS T1 WHERE T1.product_price > 10 OR T1.product_price BETWEEN 5 AND 15 OR T1.product_name = 'Product A'",
                "template": "SELECT COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# > #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "7fa14dfdf9dbde4c0d5a7640dab3b33aede3b7c4",
                "query": "SELECT COUNT(DISTINCT T1.product_id) FROM Products AS T1 JOIN Actual_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price = 10 ORDER BY T1.product_price DESC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "28a4614bdaa85edb57a0308773a63cf543619feb",
                "query": "SELECT T1.product_name FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price < 100 GROUP BY T1.product_name HAVING MAX(T2.product_id) > 0 ORDER BY T1.product_name DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# GROUP BY #COLUMN# HAVING MAX(#COLUMN#) > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "9f9a01e4e36e7da62dee9b679c7ddfb35db31c47",
                "query": "SELECT SUM(T1.product_price) FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price > 10 ORDER BY T1.product_price DESC LIMIT 10",
                "template": "SELECT SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "349c4cccd45c5c32868a20eaf0c747a1c985b01e",
                "query": "SELECT COUNT(DISTINCT T1.product_id) FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id JOIN Regular_Orders AS T3 ON T2.regular_order_id = T3.regular_order_id WHERE T3.distributer_id != 1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            },
            {
                "hash": "aaa3ee9a9ab93cb882e570d72c999b21051d861b",
                "query": "SELECT COUNT(DISTINCT T1.product_name) FROM Products AS T1 JOIN Regular_Order_Products AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price BETWEEN 10 AND 20 OR T1.product_price > 50",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE#"
            },
            {
                "hash": "5860d551b2b0fb3c968e7179eac3dbf1d64a5755",
                "query": "SELECT COUNT(DISTINCT T1.product_name), T1.product_description FROM Products AS T1 WHERE T1.product_price BETWEEN 10 AND 50 ORDER BY T1.product_name ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), #COLUMN# FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            }
        ],
        "movie_2": [
            {
                "hash": "d87c2e9f40219c0f2dd0e37cd69fb8f7b61f58e2",
                "query": "SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'AMC' AND T1.Rating >= 4 ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# >= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "84b75104be9a79473d15a525f055638b13a60b26",
                "query": "SELECT T1.Title, T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Code != T2.Code",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #COLUMN#"
            },
            {
                "hash": "cc3c255225381feeea2bc5ad00c23b228ba1f628",
                "query": "SELECT T1.Title, T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON T1.#COLUMN# = T2.#COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "b2ab48f9e152f6428c652d4c54fe24971a61f031",
                "query": "SELECT Movie, COUNT(Movie) FROM MovieTheaters WHERE Movie >= 1 GROUP BY Movie",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN#"
            },
            {
                "hash": "036c8c6b9749654a3abff4c5dfacec9f233bc30e",
                "query": "SELECT M1.Title, M2.Name, M3.Rating FROM Movies AS M1 JOIN MovieTheaters AS M2 ON M1.Code = M2.Movie JOIN Movies AS M3 ON M2.Movie = M3.Code WHERE M2.Code = 1 LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "698b93dd0eb4991859f7e0d882622def3887c9ff",
                "query": "SELECT T1.Title, T1.Rating FROM Movies AS T1 WHERE T1.Code <= 10",
                "template": "SELECT #COLUMN#"
            },
            {
                "hash": "80c6f6409cf4bb1865bf172a7564850a092a096c",
                "query": "SELECT Name FROM MovieTheaters WHERE Movie = ( SELECT Code FROM Movies WHERE Title = 'Inception' ) OR Name = 'AMC Empire 25'",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# ) OR #COLUMN# = #VALUE#"
            },
            {
                "hash": "7b768cde2a1a0b17c516dfdb18efe5003a1c2fcd",
                "query": "SELECT T1.Title, MIN(T1.Rating) FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T1.Title HAVING T2.Code > 2",
                "template": "SELECT #COLUMN#, MIN(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING #COLUMN# > #VALUE#"
            },
            {
                "hash": "956782bf261de1142898b8201249da5ed35ec46d",
                "query": "SELECT COUNT(DISTINCT Movie) FROM MovieTheaters WHERE Movie BETWEEN 1 AND 10 ORDER BY Movie ASC",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "9737351b206f95226c95930885b6c15d14260e46",
                "query": "SELECT M.Title FROM Movies AS M JOIN MovieTheaters AS MT ON M.Code = MT.Movie WHERE EXISTS (SELECT 1 FROM MovieTheaters AS MT2 WHERE MT2.Name = 'Theater1' AND MT2.Code = MT.Code)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT 1 FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #COLUMN#)"
            },
            {
                "hash": "6206b20b9ccdc0f2bb3b5590f29a3488ac8d7475",
                "query": "SELECT Title FROM Movies WHERE Code = 100 LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "732b395f560503807d5624454ee55cf5eae249b0",
                "query": "SELECT T1.Title, COUNT(DISTINCT T2.Code) FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating < 'PG'",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "979f89eae881da79bd61e1ed76fe77b020cf51c4",
                "query": "SELECT T1.Title, SUM(T1.Rating != 'R') FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T1.Title HAVING SUM(T1.Rating != 'R') ORDER BY T1.Title DESC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN# != #VALUE#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# HAVING SUM(#COLUMN# != #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "877d1ea165fc2813e51f9e8e483f216beaea7467",
                "query": "SELECT Title, Rating FROM Movies WHERE Rating > 5 ORDER BY Rating DESC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# WHERE #COLUMN# > #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "a3d021661c17e7a5e4de8eb75d81640ad27f1697",
                "query": "SELECT T1.Title, COUNT(T2.Code) FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G' OR T1.Code NOT IN (SELECT Movie FROM MovieTheaters) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE#) LIMIT #VALUE#"
            },
            {
                "hash": "393a3ba9e14c853dc9060391427463998d67b772",
                "query": "SELECT SUM(T1.Code), COUNT(T1.Code), MIN(T1.Code) FROM MovieTheaters AS T1 WHERE T1.Code BETWEEN 10 AND 15",
                "template": "SELECT SUM(#COLUMN#), COUNT(#COLUMN#), MIN(#COLUMN#) FROM #TABLE# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE#"
            },
            {
                "hash": "5c4137722bd85a372eb59617b46004b9562de37c",
                "query": "SELECT T2.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie JOIN Movies AS T3 ON T2.Movie = T3.Code",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN#"
            },
            {
                "hash": "738b43d8cba93395cc2d29104fc347d722665b67",
                "query": "SELECT T1.Title FROM Movies AS T1 JOIN Movies AS T2 ON T1.Code = T2.Code WHERE T1.Code IN (SELECT Movie FROM MovieTheaters WHERE Movie IS NOT NULL) ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IS NOT NULL) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "873a9e5000db4110bd8371aae8edb5d90bdce6c8",
                "query": "SELECT T1.Title, T2.Name, MAX(T1.Rating) FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Code BETWEEN 1 AND 10 OR T1.Title IN ('Movie1', 'Movie2') OR T1.Title NOT IN (SELECT Title FROM Movies WHERE Rating = 'PG') ORDER BY T1.Title ASC",
                "template": "SELECT #COLUMN#, #COLUMN#, MAX(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# IN (#VALUE#, #VALUE#) OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5a633e29fbb6aed5cb3ff91f748276978fe48e54",
                "query": "SELECT Title FROM Movies WHERE Rating = 'G' OR Rating = 'PG' OR Rating BETWEEN 'R' AND 'NC-17' LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# OR #COLUMN# = #VALUE# OR #COLUMN# BETWEEN #VALUE# AND #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "b53e2e8acc9049863717d929acbd0d62ec74c58f",
                "query": "SELECT MAX(T2.Code), T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Code BETWEEN 100 AND 200 OR T1.Title NOT IN (SELECT Title FROM Movies WHERE Rating = 'G') ORDER BY T2.Code DESC",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "49e18dd05a2bc605c4802b64604e6b78125f5439",
                "query": "SELECT Name FROM MovieTheaters WHERE Movie >= 1",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "58bac8bf684332adc5fa0bb25fea86113b021bd9",
                "query": "SELECT M1.Title, T1.Name FROM Movies AS M1 JOIN MovieTheaters AS T1 ON M1.Code = T1.Movie JOIN MovieTheaters AS T2 ON T1.Code = T2.Code WHERE M1.Rating >= 'PG' LIMIT 10",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# JOIN #TABLE# AS T3 ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "af6465934a12503dbc032ccb5901f3d25312fcc0",
                "query": "SELECT T1.Title FROM Movies AS T1 WHERE T1.Rating > 'PG13' ORDER BY T1.Code ASC LIMIT 10",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            },
            {
                "hash": "08af63c7d6f75c4fa46e830dbfea097dd2d4047c",
                "query": "SELECT T1.Title, COUNT(T2.Name) FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie JOIN MovieTheaters AS T3 ON T2.Code = T3.Code WHERE T1.Rating != 'G'",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# != #VALUE#"
            }
        ],
        "theme_gallery": [
            {
                "hash": "f8202d85c2239b3d89cef1feeb2360ec060e04ac",
                "query": "SELECT COUNT(DISTINCT T1.Artist_ID) FROM exhibition AS T1 JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID WHERE T1.Year < 2000 LIMIT 5",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "d5cdaf77fac4ca7199666987a33ef16d64a601d5",
                "query": "SELECT COUNT(DISTINCT T1.Name), COUNT(DISTINCT T2.Attendance) FROM artist AS T1 JOIN exhibition_record AS T2 ON T1.Artist_ID = T2.Exhibition_ID WHERE T1.Name = 'John' AND T2.Date = '2020-01-01' AND T1.Country = (SELECT T3.Country FROM artist AS T3 WHERE T3.Name = 'John')",
                "template": "SELECT COUNT(DISTINCT #COLUMN#), COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# AND #COLUMN# = (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#)"
            },
            {
                "hash": "0accd5a541f87b4d3497a5e61e5f7b439605354e",
                "query": "SELECT T1.Name, T3.Date FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID WHERE T2.Ticket_Price > 10 AND T1.Country = 'USA'",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# AND #COLUMN# = #VALUE#"
            },
            {
                "hash": "1bc06683997121c653c4f6fe30c7be3b6f676094",
                "query": "SELECT T1.Artist_ID, T2.Year FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID WHERE T2.Year <= 2010 AND T1.Age <= 50 ORDER BY T2.Year ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# <= #VALUE# AND #COLUMN# <= #VALUE# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "aeb8b01103c7b0886d673b2bd027236f69062121",
                "query": "SELECT Name FROM artist WHERE Artist_ID NOT IN (SELECT Artist_ID FROM exhibition WHERE Theme = 'Painting') LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "8a7c2aff31b8cefaf8702a498946fdf6caa00ac4",
                "query": "SELECT AVG(T1.Attendance) FROM exhibition_record AS T1 WHERE T1.Exhibition_ID NOT IN ( SELECT T2.Exhibition_ID FROM exhibition AS T2 WHERE T2.Year < 2010 ) LIMIT 10",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# WHERE #COLUMN# NOT IN ( SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# < #VALUE# ) LIMIT #VALUE#"
            },
            {
                "hash": "d684c32ef6297581b9025faa8a7d899dbaec62c7",
                "query": "SELECT T1.Name, COUNT(DISTINCT T3.Date), SUM(T2.Attendance) FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID WHERE T2.Ticket_Price > 50 GROUP BY T1.Name ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "657adcbb306589e4dac5003233b519fa303b524e",
                "query": "SELECT AVG(e1.Attendance), SUM(e2.Ticket_Price) FROM exhibition_record e1 JOIN exhibition e2 ON e1.Exhibition_ID = e2.Exhibition_ID JOIN artist a ON e2.Artist_ID = a.Artist_ID WHERE a.Age >= 50",
                "template": "SELECT AVG(#COLUMN#), SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "bec901be79b3151070d293b0d241966c47218a17",
                "query": "SELECT COUNT(DISTINCT T2.Artist_ID) FROM exhibition AS T1 JOIN exhibition_record AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID JOIN artist AS T3 ON T1.Artist_ID = T3.Artist_ID WHERE T3.Age < 30",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "433f2abc51feaa8447f9801ef10072b1904b139a",
                "query": "SELECT AVG(T2.Attendance) FROM artist AS T1 INNER JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID INNER JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID GROUP BY T1.Name ORDER BY AVG(T2.Attendance) ASC",
                "template": "SELECT AVG(#COLUMN#) FROM #TABLE# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# INNER JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY AVG(#COLUMN#) ASC"
            },
            {
                "hash": "8d5684814d798e3782e3a4f3e7a5261d8e2462da",
                "query": "SELECT Artist_ID FROM artist WHERE Year_Join != 2010 ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# != #VALUE# ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "b8d2f19791dfa5e18dd4a7c6e8575803ceb8b31d",
                "query": "SELECT * FROM exhibition WHERE Artist_ID = 10 AND Ticket_Price = 20 LIMIT 5",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE# AND #COLUMN# = #VALUE# LIMIT #VALUE#"
            },
            {
                "hash": "ff0b3a07395b076502fb33e0821751cf3552502b",
                "query": "SELECT T1.Name, COUNT(T1.Artist_ID) FROM artist AS T1 WHERE T1.Age >= 20 GROUP BY T1.Name LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#) FROM #TABLE# AS T1 WHERE #COLUMN# >= #VALUE# GROUP BY #COLUMN# LIMIT #VALUE#"
            },
            {
                "hash": "bc52584b374f2d84e77e21de673b9327f5627d93",
                "query": "SELECT Name, COUNT(DISTINCT Year_Join) FROM artist WHERE Age < 50",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# WHERE #COLUMN# < #VALUE#"
            },
            {
                "hash": "5af08b3a929b1888e10bc3d1ddba2793231b0996",
                "query": "SELECT Artist_ID FROM exhibition WHERE Artist_ID IN (SELECT Artist_ID FROM artist WHERE Age > (SELECT AVG(Age) FROM artist))",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#))"
            },
            {
                "hash": "a3eacaebf283e08a7fc6d9469ed32c19815b1b20",
                "query": "SELECT COUNT(DISTINCT T1.Name) FROM artist AS T1",
                "template": "SELECT COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS #TABLE#"
            },
            {
                "hash": "ff614c1c072f10540a585267ec9421f3e7ba5914",
                "query": "SELECT Name FROM artist WHERE Age >= 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# >= #VALUE#"
            },
            {
                "hash": "34ce4aa2a001bfb1b309a91fb4af9fce64ea9399",
                "query": "SELECT T1.Name FROM artist AS T1 WHERE T1.Artist_ID NOT IN (SELECT T2.Artist_ID FROM exhibition AS T2 WHERE T2.Year = 2010) GROUP BY T1.Name HAVING MIN(T1.Age) > 30",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) GROUP BY #COLUMN# HAVING MIN(#COLUMN#) > #VALUE#"
            },
            {
                "hash": "798985dbb8c245779eee59512b4fe7c7d92a4bb5",
                "query": "SELECT MAX(T1.Ticket_Price), T2.Name FROM exhibition AS T1 JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID GROUP BY T2.Name ORDER BY T1.Ticket_Price DESC LIMIT 5",
                "template": "SELECT MAX(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# GROUP BY #COLUMN# ORDER BY #COLUMN# DESC LIMIT #VALUE#"
            },
            {
                "hash": "04d50440e5c6a2aa8c641c310740893b087f8878",
                "query": "SELECT T1.Name FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE EXISTS (SELECT T3.Date FROM exhibition_record AS T3 WHERE T3.Exhibition_ID = T2.Exhibition_ID AND T3.Attendance > 1000)",
                "template": "SELECT #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE EXISTS (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# > #VALUE#)"
            },
            {
                "hash": "00f2e9f4ab31b826c87a88340825de7b6935c3e2",
                "query": "SELECT T1.Name, SUM(T2.Attendance) FROM artist AS T1 JOIN exhibition_record AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Date BETWEEN '2000-01-01' AND '2010-12-31' AND T1.Age > 30 GROUP BY T1.Name ORDER BY SUM(T2.Attendance) ASC",
                "template": "SELECT #COLUMN#, SUM(#COLUMN#) FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# AND #COLUMN# > #VALUE# GROUP BY #COLUMN# ORDER BY SUM(#COLUMN#) ASC"
            },
            {
                "hash": "6bdbf97513ed10277e8708676f956e071d18c6ac",
                "query": "SELECT T1.Name, COUNT(DISTINCT T2.Artist_ID) FROM artist AS T1 JOIN artist AS T2 ON T1.Artist_ID < T2.Artist_ID ORDER BY T1.Name ASC",
                "template": "SELECT #COLUMN#, COUNT(DISTINCT #COLUMN#) FROM #TABLE# AS T1 JOIN #TABLE# AS T2 ON #COLUMN# < #COLUMN# ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "eb3c9f517514e31296c2d3f6dee2d792dedcc3d2",
                "query": "SELECT T1.Name, COUNT(T2.Exhibition_ID), T3.Attendance FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID WHERE T1.Year_Join BETWEEN 2010 AND 2020 OR T2.Ticket_Price > 20 OR NOT EXISTS (SELECT * FROM exhibition_record WHERE Exhibition_ID = T2.Exhibition_ID AND Attendance < 100) LIMIT 10",
                "template": "SELECT #COLUMN#, COUNT(#COLUMN#), #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# BETWEEN #VALUE# AND #VALUE# OR #COLUMN# > #VALUE# OR NOT EXISTS (SELECT * FROM #TABLE# WHERE #COLUMN# = #COLUMN# AND #COLUMN# < #VALUE#) LIMIT #VALUE#"
            },
            {
                "hash": "a15e1154719799eb948d4c4f18b8f33a63dd210c",
                "query": "SELECT T1.Name, T2.Attendance FROM artist AS T1 JOIN exhibition AS T2 ON T1.Artist_ID = T2.Artist_ID JOIN exhibition_record AS T3 ON T2.Exhibition_ID = T3.Exhibition_ID WHERE T2.Ticket_Price > (SELECT AVG(Ticket_Price) FROM exhibition) ORDER BY T2.Ticket_Price ASC",
                "template": "SELECT #COLUMN#, #COLUMN# FROM #TABLE# JOIN #TABLE# ON #COLUMN# = #COLUMN# JOIN #TABLE# ON #COLUMN# = #COLUMN# WHERE #COLUMN# > (SELECT AVG(#COLUMN#) FROM #TABLE#) ORDER BY #COLUMN# ASC"
            },
            {
                "hash": "5eb5c1b9d72ca6db53812c88162282e843715193",
                "query": "SELECT Artist_ID FROM artist WHERE Artist_ID NOT IN (SELECT Artist_ID FROM exhibition WHERE Artist_ID = 10) ORDER BY Age DESC",
                "template": "SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# NOT IN (SELECT #COLUMN# FROM #TABLE# WHERE #COLUMN# = #VALUE#) ORDER BY #COLUMN# DESC"
            },
            {
                "hash": "ad098259edaefbae5bd5984385deb8ca0f47ae64",
                "query": "SELECT T1.Name FROM artist AS T1 WHERE NOT EXISTS (SELECT 1 FROM exhibition AS T2 WHERE T2.Artist_ID = T1.Artist_ID AND T2.Year > 2010)",
                "template": "SELECT #COLUMN# FROM #TABLE# AS \""
            }
        ]
    }
}