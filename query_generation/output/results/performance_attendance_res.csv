Specification,query
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'basic_comparison': '>'}, 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'DESC', 'limit_type': 'without_offset', 'value_exp_types': ['arithmatic_exp', 'arithmatic_exp', 'count_distinct_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table_with_name_changing', 'where_type': {'basic_comparison': '='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['arithmatic_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT h.Performance_ID, h.Member_ID FROM member_attendance AS h WHERE  h.Performance_ID = h.Num_of_Pieces"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'basic_comparison': '!='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['agg_exp', 'count_distinct_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT SUM(Num_of_Pieces), COUNT(DISTINCT member_attendance.Performance_ID) FROM member_attendance JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID WHERE  Num_of_Pieces != performance.Performance_ID ORDER BY 2 ASC"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'logical_operator': ['AND', 'between', 'basic_comparison']}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'DESC', 'limit_type': 'none', 'value_exp_types': ['arithmatic_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT Attendance, Attendance FROM performance WHERE (Performance_ID BETWEEN 1 AND 10) AND ( Attendance <= Performance_ID) ORDER BY 1 DESC"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': 'exists_subquery', 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': '*', 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","Error in EXISTS/NOT EXISTS subquery: can only concatenate str (not ""list"") to str"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'logical_operator': ['AND', 'basic_comparison', 'in_with_subquery']}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['single_exp_text', 'single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT Date, Host FROM performance WHERE ( Performance_ID <> Attendance) AND (Attendance IN (SELECT Attendance FROM performance WHERE  Performance_ID != Performance_ID))"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'basic_comparison': '>'}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['alias_exp', 'single_exp_number'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'basic_comparison': '='}, 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['single_exp_number'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT Member_ID, Num_of_Pieces FROM member_attendance WHERE  Member_ID = Performance_ID GROUP BY Num_of_Pieces LIMIT 3"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN_JOIN', 'where_type': {'logical_operator': ['OR', 'basic_comparison', 'in_with_subquery']}, 'number_of_value_exp_in_group_by': 1, 'having_type': {'single': 'COUNT'}, 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['alias_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT Attendance AS Attendance_h, Num_of_Pieces, Name FROM member JOIN member_attendance JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID AND member.Member_ID = member_attendance.Member_ID WHERE ( Attendance >= Attendance) OR (Performance_ID IN (SELECT Performance_ID FROM member_attendance WHERE  Member_ID >= Member_ID)) GROUP BY Name HAVING COUNT(Num_of_Pieces) >= 67 ORDER BY Attendance_h ASC"
"{'meaningful_joins': 'yes', 'table_exp_type': 'SELF JOIN', 'where_type': {'basic_comparison': '<='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['agg_exp', 'count_distinct_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT COUNT(performance.Attendance), COUNT(DISTINCT f.Location) FROM performance JOIN performance AS f ON performance.Performance_ID = f.Performance_ID WHERE  f.Performance_ID <= performance.Performance_ID"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': 'not_exists_subquery', 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['agg_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","Error in EXISTS/NOT EXISTS subquery: can only concatenate str (not ""list"") to str"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'basic_comparison': '='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['count_distinct_exp', 'single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT COUNT(DISTINCT Member_ID), Host FROM member_attendance JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID WHERE  performance.Performance_ID = Attendance LIMIT 5"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table_with_name_changing', 'where_type': {'basic_comparison': '!='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'without_offset', 'value_exp_types': ['alias_exp', 'alias_exp', 'single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'SELF JOIN_SELF JOIN', 'where_type': 'none', 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'DESC', 'limit_type': 'none', 'value_exp_types': ['alias_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT z.Attendance AS Attendance_r, s.Performance_ID FROM performance JOIN performance AS z JOIN performance AS s ON performance.Performance_ID = z.Performance_ID AND z.Performance_ID = s.Performance_ID ORDER BY Attendance_r DESC"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'basic_comparison': '!='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['agg_exp', 'count_distinct_exp', 'single_exp_number'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT AVG(Num_of_Pieces), COUNT(DISTINCT member_attendance.Member_ID), Performance_ID FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID WHERE  Num_of_Pieces != Num_of_Pieces ORDER BY Performance_ID ASC"
"{'meaningful_joins': 'yes', 'table_exp_type': 'SELF JOIN_SELF JOIN', 'where_type': {'basic_comparison': '>'}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",No text columns in single_exp
"{'meaningful_joins': 'yes', 'table_exp_type': 'SELF JOIN_SELF JOIN', 'where_type': 'not_in_with_subquery', 'number_of_value_exp_in_group_by': 1, 'having_type': {'single': 'MAX'}, 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT u.Host, u.Attendance FROM performance JOIN performance AS z JOIN performance AS u ON performance.Performance_ID = u.Performance_ID AND u.Performance_ID = z.Performance_ID WHERE Host NOT IN (SELECT Host FROM performance WHERE  Attendance != Performance_ID) GROUP BY u.Attendance HAVING MAX(u.Attendance) >= 13"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'logical_operator': ['AND', 'between', 'not_in_with_subquery']}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': '*', 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': 'in_with_subquery', 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['arithmatic_exp', 'single_exp_number'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",Error in IN/NOT IN subquery: There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'basic_comparison': '<='}, 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'without_offset', 'value_exp_types': ['arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT Performance_ID, Nationality FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID WHERE  Num_of_Pieces <= Performance_ID GROUP BY Nationality LIMIT 1"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'logical_operator': ['AND', 'between', 'exists_subquery']}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['arithmatic_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",Error in EXISTS/NOT EXISTS subquery: There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table', 'where_type': {'basic_comparison': '>='}, 'number_of_value_exp_in_group_by': 1, 'having_type': 'none', 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",There is no number column in the schema
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN_SELF JOIN', 'where_type': 'exists_subquery', 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['agg_exp', 'alias_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","Error in EXISTS/NOT EXISTS subquery: can only concatenate str (not ""list"") to str"
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN', 'where_type': {'basic_comparison': '!='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'ASC', 'limit_type': 'none', 'value_exp_types': ['single_exp_text'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}",SELECT Date FROM member_attendance JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID WHERE  Num_of_Pieces != Member_ID ORDER BY Date ASC
"{'meaningful_joins': 'yes', 'table_exp_type': 'JOIN_SELF JOIN', 'where_type': {'basic_comparison': '<='}, 'number_of_value_exp_in_group_by': 0, 'having_type': 'none', 'orderby_type': 'DESC', 'limit_type': 'without_offset', 'value_exp_types': ['agg_exp', 'arithmatic_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT MIN(x.Performance_ID), member_attendance.Performance_ID FROM member JOIN member_attendance JOIN member_attendance AS x ON member.Member_ID = member_attendance.Member_ID AND member_attendance.Member_ID = x.Member_ID WHERE  x.Num_of_Pieces <= x.Performance_ID ORDER BY 2 DESC LIMIT 3"
"{'meaningful_joins': 'yes', 'table_exp_type': 'single_table_with_name_changing', 'where_type': {'basic_comparison': '>'}, 'number_of_value_exp_in_group_by': 1, 'having_type': {'single': 'AVG'}, 'orderby_type': 'none', 'limit_type': 'none', 'value_exp_types': ['agg_exp', 'alias_exp'], 'distinct_type': 'none', 'min_max_depth_in_subquery': [1, 1]}","SELECT SUM(b.Member_ID), b.Member_ID AS Member_ID_p, b.Performance_ID FROM member_attendance AS b WHERE  b.Member_ID > b.Performance_ID GROUP BY b.Performance_ID HAVING AVG(b.Member_ID) < 79"
