easy: 1.90
medium: 7.40
hard: 5.20
extra: 10.50
table_1: 15.70
table_2: 6.15
table_3: 2.50
table_4: 0.50
table_5: 0.15
table_6: 0.00
table_7: 0.00
nested: 6.30
all: 25.00
Total Statistics: {'easy': 38, 'medium': 148, 'hard': 104, 'extra': 210, 'table_1': 314, 'table_2': 123, 'table_3': 50, 'table_4': 10, 'table_5': 3, 'table_6': 0, 'table_7': 0, 'nested': 126, 'all': 500}
Error in Parsing: {'world_1': ['SELECT T1.Percentage, T2.Percentage FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode = T2.Code JOIN city AS T3 ON T3.CountryCode = T2.Code WHERE T1.Percentage BETWEEN 1 AND 10 OR T2.Continent IN (SELECT Continent FROM country WHERE  GNP != 65)', 'SELECT T1.Population, T2.GNPOld FROM city AS T1 JOIN country AS T2 ON T2.Code = T1.CountryCode WHERE T1.LifeExpectancy BETWEEN 1 AND 10 OR T2.GNP < 31 GROUP BY T2.GNPOld HAVING MAX(T1.LifeExpectancy) = 55 ORDER BY T2.GNPOld ASC'], 'museum_visit': ['SELECT COUNT(DISTINCT CAST(visit.visitor_ID AS number)) AS count, visit.Num_of_Ticket FROM visit JOIN visitor ON CAST(visit.visitor_ID AS number) = visitor.ID WHERE visitor.Age >= 56 GROUP BY visit.Num_of_Ticket;', 'SELECT COUNT(DISTINCT Total_spent), COUNT(DISTINCT CAST(visitor_ID AS number)) FROM visit WHERE Num_of_Ticket BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM museum AS k WHERE  k.Museum_ID <= 27 AND visit.Museum_ID = k.Museum_ID) LIMIT 1', 'SELECT COUNT(DISTINCT visit.Num_of_Ticket), CAST(visit.visitor_ID AS number), visit.Num_of_Ticket FROM visit JOIN visit AS p ON visit.Museum_ID = p.Museum_ID WHERE  p.Num_of_Ticket < 54 GROUP BY visit.Num_of_Ticket ORDER BY CAST(visit.visitor_ID AS number) ASC', 'SELECT COUNT(DISTINCT CAST(visitor.ID AS TEXT)), visitor.Name FROM visit JOIN visitor ON visit.visitor_ID = CAST(visitor.ID AS TEXT) WHERE Num_of_Ticket BETWEEN 1 AND 10 LIMIT 2', 'SELECT v.visitor_ID, v.Name, m.Museum_ID FROM visit AS m JOIN visitor AS v ON m.visitor_ID = v.ID WHERE m.Museum_ID BETWEEN 1 AND 10', 'SELECT CAST(visit.visitor_ID AS NUMBER) AS visitor_ID FROM visit JOIN visitor ON CAST(visit.visitor_ID AS NUMBER) = visitor.ID WHERE visitor.Age BETWEEN 1 AND 10 AND visitor.ID = 31 ORDER BY CAST(visit.visitor_ID AS NUMBER) ASC', 'SELECT SUM(T2.Num_of_Staff), T3.Age FROM visit AS T1 INNER JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID INNER JOIN visitor AS T3 ON CAST(T1.visitor_ID AS NUMBER) = T3.ID WHERE T2.Num_of_Staff != 53 LIMIT 1', 'SELECT CAST(visitor_ID AS INTEGER), CAST(visitor_ID AS INTEGER) FROM visit WHERE Museum_ID BETWEEN 1 AND 10 OR EXISTS (SELECT * FROM visitor WHERE Age BETWEEN 1 AND 10 AND CAST(visit.visitor_ID AS INTEGER) = visitor.ID) ORDER BY CAST(visitor_ID AS INTEGER) ASC LIMIT 8', 'SELECT ID, Name FROM visitor WHERE ID BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM visit WHERE Museum_ID BETWEEN 1 AND 10 AND CAST(visitor_ID AS number) = visitor.ID) ORDER BY ID ASC', 'SELECT COUNT(T2.Level_of_membership), COUNT(DISTINCT T3.Num_of_Ticket), T1.Open_Year FROM museum T1 JOIN visit T3 JOIN visitor T2 ON CAST(T3.visitor_ID AS NUMBER) = T2.ID AND T1.Museum_ID = T3.Museum_ID WHERE T2.Age != 18 ORDER BY T1.Open_Year ASC LIMIT 3', 'SELECT SUM(q.Total_spent), COUNT(DISTINCT CAST(q.visitor_ID AS NUMBER)), q.Num_of_Ticket FROM visit AS q WHERE q.Total_spent BETWEEN 1 AND 10 AND q.Museum_ID IN (SELECT y.Museum_ID FROM visit AS y WHERE y.Num_of_Ticket > 89) ORDER BY q.Num_of_Ticket DESC LIMIT 9', 'SELECT MAX(l.Total_spent), l.Num_of_Ticket, CAST(l.visitor_ID AS number) FROM visit AS l GROUP BY CAST(l.visitor_ID AS number) HAVING MAX(l.Total_spent) > 63'], 'flight_2': ['SELECT COUNT(DISTINCT T3.AirportCode), T3.SourceAirport FROM flights AS T1 JOIN airports AS T3 ON T1.SourceAirport = T3.AirportCode WHERE  T1.Airline = 24 GROUP BY T3.SourceAirport'], 'cre_Doc_Template_Mgt': [nan], 'employee_hire_evaluation': ['SELECT AVG(T1.Bonus), T2.Number_products FROM evaluation AS T1 JOIN employee AS T2 JOIN hiring AS T3 JOIN shop AS T4 ON T3.Employee_ID = T2.Employee_ID AND T2.Employee_ID = T1.Employee_ID AND T4.Shop_ID = T3.Shop_ID WHERE T4.Shop_ID BETWEEN 1 AND 10', 'SELECT e.Age, e.City FROM employee e JOIN hiring h ON e.Employee_ID = h.Employee_ID JOIN shop s ON h.Shop_ID = s.Shop_ID JOIN evaluation ev ON CAST(ev.Employee_ID AS number) = e.Employee_ID WHERE e.Age < 6', nan, 'SELECT COUNT(DISTINCT Name), Age, Name FROM employee WHERE Age >= 5 GROUP BY Name, Age HAVING MIN(STR(Employee_ID)) = "78" ORDER BY Age ASC LIMIT 7', 'SELECT City FROM employee WHERE Employee_ID = 43 OR EXISTS (SELECT * FROM evaluation WHERE CAST(employee.Employee_ID AS TEXT) = evaluation.Employee_ID) ORDER BY City DESC;', "SELECT MIN(Bonus) FROM evaluation WHERE Bonus BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM employee WHERE  CAST(Employee_ID AS TEXT) != '25' AND CAST(evaluation.Employee_ID AS TEXT) = CAST(employee.Employee_ID AS TEXT))", 'SELECT COUNT(DISTINCT T2.Name), T1.Bonus FROM evaluation AS T1 JOIN employee AS T2 ON CAST(T2.Employee_ID AS TEXT) = T1.Employee_ID WHERE T1.Bonus BETWEEN 1 AND 10 GROUP BY T1.Bonus HAVING SUM(CAST(T2.Age AS REAL)) < 12', nan, 'SELECT T4.Location, T1.Year_awarded FROM evaluation AS T1 JOIN hiring AS T2 ON T1.Employee_ID = T2.Employee_ID JOIN employee AS T3 ON T2.Employee_ID = T3.Employee_ID JOIN shop AS T4 ON T2.Shop_ID = T4.Shop_ID WHERE CAST(T1.Bonus AS REAL) BETWEEN 1 AND 10 OR T3.Age = 77 GROUP BY CAST(T1.Year_awarded AS REAL) ORDER BY CAST(T1.Year_awarded AS REAL) DESC'], 'tvshow': ['SELECT MIN(Production_code) OVER (), Production_code FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Original_air_date NOT IN (SELECT Original_air_date FROM Cartoon WHERE  id < 26)', nan, 'SELECT y["18_49_Rating_Share"] FROM TV_series JOIN TV_series AS y ON TV_series.id = y.id WHERE  TV_series.Weekly_Rank = 80'], 'car_1': ['SELECT CAST(v.MPG AS number) FROM cars_data AS v WHERE v.Accelerate = 96 ORDER BY CAST(v.MPG AS number) DESC', 'SELECT i.CountryId FROM car_makers AS i WHERE i.Id BETWEEN 1 AND 10 OR i.FullName IN (SELECT v.FullName FROM car_makers AS v LIMIT 2)', 'SELECT CountryName, CAST(countries.Continent AS TEXT) AS Continent FROM countries JOIN continents ON CAST(countries.Continent AS TEXT) = continents.Continent WHERE  CAST(countries.Continent AS TEXT) = CAST(continents.ContId AS TEXT) OR CountryName IN (SELECT CountryName FROM countries WHERE  CAST(countries.Continent AS TEXT) != CAST(continents.ContId AS TEXT)) GROUP BY CAST(countries.Continent AS TEXT) HAVING SUM(CountryId) <= 35 ORDER BY CAST(countries.Continent AS TEXT) DESC LIMIT 4', 'SELECT SUM(T2.Edispl), COUNT(DISTINCT T1.Year), T1.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Accelerate BETWEEN 1 AND 10', 'SELECT COUNT(DISTINCT T1.Make), T1.MakeId, T4.MakeId FROM car_names AS T1 JOIN model_list AS T2 ON T1.Model = T2.Model JOIN car_makers AS T3 ON T2.Maker = T3.Id JOIN cars_data AS T4 ON T1.MakeId = T4.Id WHERE T4.MakeId BETWEEN 1 AND 10 AND T1.MakeId = 44 LIMIT 9', nan, 'SELECT car_names.MakeId, r.Model FROM car_names AS r JOIN model_list ON car_names.MakeId = CAST(model_list.Maker AS TEXT) WHERE car_names.MakeId > 59 OR EXISTS (SELECT * FROM model_list WHERE CAST(Maker AS TEXT) = car_names.MakeId AND ModelId != 54 LIMIT 8)', 'SELECT T1.ModelId, T2.ModelId FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker = T2.Maker LIMIT 1'], 'dog_kennels': ['SELECT CAST(age AS number) AS age FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Dogs.owner_id > 45 AND last_name >= (SELECT MAX(last_name) FROM Owners AS m WHERE m.owner_id <= 18 LIMIT 5) ORDER BY CAST(age AS number) ASC'], 'course_teach': ['SELECT COUNT(DISTINCT CAST(Age AS number)) FROM teacher WHERE Teacher_ID BETWEEN 1 AND 10 OR Hometown NOT IN (SELECT Hometown FROM teacher WHERE  Teacher_ID = 19 LIMIT 1) LIMIT 5', 'SELECT T2.Course_ID, T1.Starting_Date, T3.Name FROM course T1 JOIN course_arrange T2 ON T1.Course_ID = T2.Course_ID JOIN teacher T3 ON T2.Teacher_ID = T3.Teacher_ID WHERE T2.Teacher_ID BETWEEN 1 AND 10 AND T3.Teacher_ID < 23 GROUP BY T2.Course_ID, T1.Starting_Date, T3.Name ORDER BY CAST(SUBSTRING_INDEX(T1.Starting_Date, "-", 2) AS INT) DESC', 'SELECT b.Course_ID, course.Starting_Date FROM course AS b JOIN course AS c ON c.Course_ID = b.Course_ID GROUP BY c.Starting_Date HAVING MIN(b.Course_ID) = 69', 'SELECT T1.Name, T2.Name FROM teacher AS T1 INNER JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID INNER JOIN course AS T2 ON T3.Course_ID = T2.Course_ID WHERE T3.Grade < 39 ORDER BY T1.Name ASC;'], 'concert_singer': [nan, 'SELECT MAX(singer.Age), COUNTconcert.concert_ID), concert.Stadium_ID FROM singer_in_concert JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE singer_in_concert.concert_ID IN (SELECT concert_ID FROM singer_in_concert) GROUP BY concert.Stadium_ID HAVING SUM(singer.Age) >= 67 ORDER BY concert.Stadium_ID DESC', 'SELECT COUNT(concert_ID), Year, Theme FROM concert GROUP BY Theme, Year HAVING COUNT(concert_ID) = 46 ORDER BY CAST(Year AS number) DESC;', 'SELECT Capacity, concert.Stadium_ID FROM stadium JOIN concert ON CAST(stadium.Stadium_ID AS text) = concert.Stadium_ID WHERE CAST(stadium.Stadium_ID AS text) BETWEEN "1" AND "10" OR Capacity IN (SELECT Capacity FROM stadium AS k WHERE  k.Capacity <= 68) ORDER BY Capacity ASC', 'SELECT Singer_ID FROM singer_in_concert WHERE CAST(concert_ID AS TEXT) != "53";', 'SELECT COUNT(DISTINCT Country), Age FROM singer WHERE CAST(Song_release_year AS number) < (SELECT AVG(CAST(Song_release_year AS number)) FROM singer WHERE Singer_ID > 46)', 'SELECT AVG(stadium.Highest) FROM stadium JOIN concert ON CAST(concert.Stadium_ID AS NUMBER) = stadium.Stadium_ID WHERE stadium.Highest = 75;', 'SELECT COUNT(DISTINCT f.concert_Name), COUNT(DISTINCT f.Stadium_ID), f.concert_ID FROM concert AS f WHERE f.concert_ID BETWEEN 1 AND 10 AND CAST(Year AS NUMBER) > (SELECT AVG(CAST(Year AS NUMBER)) FROM concert AS q)'], 'poker_player': ['SELECT Birth_Date FROM people ORDER BY STR_TO_DATE(Birth_Date, "%Y-%m-%d") ASC;']}
