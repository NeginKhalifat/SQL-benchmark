query,question,iter,flag
"SELECT Problems.product_id, other_problem_details FROM Problems JOIN Product ON Product.product_id = Problems.product_id WHERE EXISTS (SELECT * FROM Product AS l WHERE  l.product_id = Problems.product_id) GROUP BY Problems.product_id, other_problem_details","What are the product IDs and other problem details of problems that have a corresponding product, grouped by product ID and other problem details?",5,True
"SELECT COUNT(DISTINCT k.product_details), k.product_id, k.product_name FROM Product AS k WHERE  k.product_id != 60 GROUP BY k.product_name","What is the count of distinct product details, along with product id and name for all products except the one with product id 60, grouped by product name?",2,True
"SELECT AVG(problem_log_id), other_log_details FROM Problem_Log WHERE problem_log_id BETWEEN 1 AND 10 AND assigned_to_staff_id >= 99 GROUP BY other_log_details ORDER BY other_log_details ASC","What is the average problem log id for each other log details, where the problem log id is between 1 and 10 and assigned to staff id is 99 or more, listed in ascending order by other log details?",2,True
"SELECT COUNT(DISTINCT log_entry_fix), problem_id, assigned_to_staff_id FROM Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id WHERE assigned_to_staff_id BETWEEN 1 AND 10 OR assigned_to_staff_id != 79 GROUP BY problem_id, assigned_to_staff_id",How many distinct fixes were logged for each problem assigned to each staff member with a staff ID between 1 and 10 or not equal to 79?,6,False
SELECT y.product_name FROM Product AS y JOIN Product AS z ON y.product_id = z.product_id WHERE y.product_id BETWEEN 1 AND 10,What are the names of products with IDs between 1 and 10?,2,True
"SELECT problem_category_description, log_entry_description FROM Product JOIN Problems ON Product.product_id = Problems.product_id JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id JOIN Problem_Category_Codes ON Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE Problems.problem_id BETWEEN 1 AND 10 AND log_entry_fix != (SELECT log_entry_fix FROM Problem_Log WHERE problem_id BETWEEN 1 AND 10 ORDER BY log_entry_date DESC LIMIT 1) GROUP BY log_entry_description LIMIT 3","What are the problem category descriptions and log entry descriptions for problems 1 through 10, excluding the most recent fix, grouped by log entry description, showing the 4th to 6th results?",6,False
"SELECT COUNT(DISTINCT product_id), Problems.problem_id FROM Problems JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id WHERE Problems.product_id != 4 ORDER BY Problems.problem_id ASC","What are the counts of distinct products that are not equal to 4 for each problem, ordered by problem id in ascending order?",6,False
"SELECT MIN(T1.reported_by_staff_id), T2.staff_first_name FROM Problems AS T1 JOIN Staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_id > 6 ORDER BY T2.staff_first_name ASC","What is the lowest staff id and the corresponding first name of staff whose staff id is greater than 6, listed in ascending order by staff first name?",6,False
"SELECT other_problem_details, product_details FROM Problems JOIN Product ON Product.product_id = Problems.product_id WHERE closure_authorised_by_staff_id BETWEEN 1 AND 10 AND date_problem_reported >= (SELECT MIN(date_problem_reported) FROM Problems AS m WHERE  m.closure_authorised_by_staff_id <= 34)",What are the other problem details and product details for problems reported on or after the earliest problem reported date by staff with closure authorised by staff id between 1 and 10 and staff id less than or equal to 34?,6,False
"SELECT other_staff_details, staff_last_name FROM Staff WHERE staff_id <= 2 GROUP BY staff_last_name HAVING COUNT(staff_id) >= 8","Which staff members have more than 8 entries and what are their corresponding details, given the staff id is less than or equal to 2?",6,False
SELECT MIN(product_id) FROM Product WHERE  product_id != 52,What is the smallest product id excluding 52?,2,True
"SELECT SUM(product_id), COUNT(DISTINCT product_name) FROM Product WHERE  product_id < 91",What is the sum of product ids and the count of distinct product names for products with id less than 91?,3,True
"SELECT s.staff_first_name, s.staff_last_name, s.other_staff_details FROM Staff AS s WHERE s.staff_id BETWEEN 1 AND 10 ORDER BY s.staff_last_name DESC","What are the first name, last name, and other details of staff with IDs between 1 and 10, listed in descending order by last name?",6,True
"SELECT problem_log_id, staff_last_name, log_entry_fix, Problem_Log.problem_category_code FROM Problem_Category_Codes JOIN Staff JOIN Problem_Log ON Problem_Log.assigned_to_staff_id = Staff.staff_id AND Problem_Category_Codes.problem_category_code = Problem_Log.problem_category_code WHERE assigned_to_staff_id = 30 GROUP BY Problem_Log.problem_category_code ORDER BY problem_log_id DESC","What are the problem log IDs, staff last names, log entry fixes, and problem category codes for the problems assigned to staff ID 30, grouped by problem category code and ordered by problem log ID in descending order?",6,False
"SELECT T3.staff_first_name, T2.log_entry_fix, T2.log_entry_description FROM Problems AS T1 JOIN Problem_Log AS T2 ON T1.problem_id = T2.problem_id JOIN Staff AS T3 ON T1.reported_by_staff_id = T3.staff_id JOIN Problem_Status_Codes AS T4 ON T2.problem_status_code = T4.problem_status_code WHERE T1.closure_authorised_by_staff_id BETWEEN 1 AND 10 AND T3.staff_id = 81 GROUP BY T2.log_entry_description HAVING AVG(T1.closure_authorised_by_staff_id) >= 3","What are the names of the staff who reported the problems and the fixes, along with the descriptions of the log entries for problems whose average closure authorised by staff id is greater than or equal to 3, where the problems were reported by staff id 81 and the closure authorised by staff id is between 1 and 10?",6,False
"SELECT COUNT(DISTINCT T3.closure_authorised_by_staff_id), COUNT(DISTINCT T1.problem_category_description), T2.log_entry_fix FROM Problem_Category_Codes AS T1 JOIN Problem_Log AS T2 JOIN Problems AS T3 ON T1.problem_category_code = T2.problem_category_code AND T3.problem_id = T2.problem_id WHERE T2.assigned_to_staff_id < 13 LIMIT 10","What are the distinct counts of closure authorised staff ids, problem category descriptions, and log entry fixes for problems where the assigned staff id is less than 13?",6,False
SELECT Problem_Log.problem_status_code FROM Problems JOIN Problem_Log ON Problems.problem_id = Problem_Log.problem_id JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code WHERE Problem_Log.assigned_to_staff_id >= 48,What are the problem status codes for problems assigned to staff with an ID of 48 or higher?,6,False
SELECT problem_id FROM Problems WHERE  closure_authorised_by_staff_id < 25 LIMIT 3,"What are the problem ids of the fourth, fifth, and sixth problems authorised by staff with an id less than 25?",6,False
"SELECT problem_category_code, log_entry_date FROM Problem_Log WHERE  assigned_to_staff_id < 72 GROUP BY log_entry_date ORDER BY problem_category_code ASC","What are the problem category codes and log entry dates for problems assigned to staff with an ID below 72, grouped by log entry date and ordered by problem category code?",5,True
SELECT other_staff_details FROM Staff ORDER BY other_staff_details ASC LIMIT 9,What are the 10th to last other staff details in ascending order?,6,False
"SELECT c.product_id, c.product_name FROM Product AS c;",What are the product ids and names of all products?,2,True
"SELECT closure_authorised_by_staff_id, MIN(problem_id), problem_description FROM Problems WHERE closure_authorised_by_staff_id >= 88 GROUP BY closure_authorised_by_staff_id, problem_description LIMIT 2","What are the lowest problem IDs with their descriptions for staff IDs 88 and above, excluding the first two results?",6,False
"SELECT MAX(assigned_to_staff_id), Problem_Log.problem_status_code, other_log_details FROM Problem_Log JOIN Problem_Status_Codes ON Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code WHERE  Problem_Log.problem_log_id >= 99 LIMIT 3","What are the maximum assigned staff IDs, corresponding problem status codes, and other log details for the top 3 problem logs with IDs greater than or equal to 99?",6,False
"SELECT COUNT(p.product_id), p.product_details FROM Product AS p JOIN Problems ON p.product_id = Problems.product_id WHERE p.product_id BETWEEN 1 AND 10 AND EXISTS (SELECT * FROM Staff WHERE Staff.staff_id BETWEEN 1 AND 10 AND Problems.reported_by_staff_id = Staff.staff_id) GROUP BY p.product_details ORDER BY p.product_details ASC","What are the product details and the number of products with problems reported by staff members between staff id 1 and 10 for products with ids between 1 and 10, grouped by product details and ordered by product details in ascending order?",2,True
