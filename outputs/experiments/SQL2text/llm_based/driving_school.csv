query,question,iter,flag,hardness
"SELECT staff_address_id, MIN(date_of_birth) FROM Staff WHERE staff_id > 10 ORDER BY staff_address_id ASC","What is the staff address id and the youngest date of birth for each staff address, for staff members with staff id greater than 10, ordered by staff address id in ascending order?",6,True,medium
SELECT last_name FROM Customers WHERE last_name != 'Smith' ORDER BY last_name DESC,What are the last names of all customers excluding 'Smith' listed in descending order?,2,True,medium
SELECT staff_id FROM Staff WHERE staff_id BETWEEN 1 AND 5 OR staff_id NOT IN (SELECT staff_id FROM Lessons) ORDER BY staff_id ASC,"What are the staff ids of the staff members with ids between 1 and 5 or those who have not taught any lessons, listed in ascending order?",2,True,extra
SELECT COUNT(customer_id) FROM Customers WHERE customer_status_code = 'active' AND date_of_birth BETWEEN '1990-01-01' AND '1999-12-31' AND amount_outstanding < 1000 LIMIT 10,"What is the number of active customers born in the 1990s with outstanding amounts less than 1000, counted from the 11th to the 20th customer in the list?",5,True,medium
"SELECT T1.first_name, T2.first_name FROM Customers AS T1 JOIN Customers AS T2 ON T1.customer_address_id = T2.customer_address_id WHERE T1.amount_outstanding >= 1000",What are the first names of the pairs of customers who share the same address and have an outstanding amount of at least $1000?,6,False,medium
"SELECT T1.first_name, T2.price FROM Customers AS T1 JOIN Lessons AS T2 ON T1.customer_id = T2.customer_id WHERE T2.price < 100 ORDER BY T1.first_name ASC","What are the names of customers who paid less than $100 for a lesson, listed alphabetically?",6,False,hard
SELECT * FROM Customers WHERE EXISTS (SELECT * FROM Customer_Payments WHERE Customer_Payments.customer_id = Customers.customer_id AND Customer_Payments.amount_payment > 1000 AND Customer_Payments.amount_payment < 5000) LIMIT 10,What are the details of the next 10 customers who have made payments between $1000 and $5000?,2,True,extra
"SELECT T1.nickname, T2.vehicle_details FROM Staff AS T1 JOIN Vehicles AS T2 ON T1.staff_id = T2.vehicle_id JOIN Customers AS T3 ON T3.customer_id = T2.vehicle_id WHERE T1.first_name = 'John' OR T1.middle_name BETWEEN 'A' AND 'Z' OR T1.last_name = 'Doe'","What are the nicknames of the staff members with the first name John, and those with middle names between A and Z, as well as last name Doe, along with the vehicle details they are associated with?",6,False,extra
SELECT T1.first_name FROM Customers AS T1 JOIN Customer_Payments AS T2 ON T1.customer_id = T2.customer_id WHERE T2.amount_payment < 100 LIMIT 10,What are the first names of the next 10 customers who made a payment of less than 100?,4,True,hard
"SELECT MAX(T1.amount_outstanding), T1.first_name FROM Customers AS T1 WHERE T1.amount_outstanding BETWEEN 100 AND 1000 GROUP BY T1.first_name",What is the maximum amount outstanding for each customer's first name where the amount outstanding is between 100 and 1000?,3,True,medium
SELECT T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.amount_outstanding < 100,What are the last names of customers who owe less than $100?,2,True,medium
"SELECT T1.first_name, T2.line_1_number_building FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name != 'John' ORDER BY T2.line_1_number_building DESC LIMIT 10","What are the first names and addresses of the top 10 customers, excluding those named 'John', with the highest address line 1 number building, skipping the first 10 results?",6,True,extra
SELECT * FROM Customers WHERE customer_id IN (SELECT customer_id FROM Customer_Payments GROUP BY customer_id ORDER BY SUM(amount_payment) ASC),What information is available about customers who have made the lowest total payments,6,False,hard
"SELECT T1.first_name, COUNT(T1.first_name) FROM Customers AS T1 WHERE T1.customer_status_code = 'Active' OR T1.amount_outstanding > 1000 OR T1.customer_id IN (SELECT T2.customer_id FROM Lessons AS T2 WHERE T2.lesson_status_code = 'Completed') GROUP BY T1.first_name HAVING MIN(T1.amount_outstanding) > 500","What are the names of customers with active status, outstanding amount over 1000, or completed lessons, who have a minimum outstanding amount greater than 500?",6,False,extra
SELECT T1.first_name FROM Customers AS T1 WHERE T1.amount_outstanding > 100 OR T1.date_of_birth BETWEEN '1990-01-01' AND '2000-12-31' OR T1.last_name = 'Smith' LIMIT 10,"What are the first names of the next 10 customers who either owe more than 100, were born between 1990 and 2000, or have the last name Smith?",3,True,extra
"SELECT COUNT(DISTINCT T1.staff_id), COUNT(DISTINCT T2.customer_id), COUNT(T1.staff_id) FROM Staff AS T1 JOIN Customers AS T2 ON T1.staff_address_id = T2.customer_address_id WHERE T2.customer_status_code = 'active' AND T1.date_joined_staff BETWEEN '2020-01-01' AND '2020-12-31' AND EXISTS ( SELECT 1 FROM Lessons AS T3 WHERE T3.staff_id = T1.staff_id AND T3.lesson_status_code = 'completed' ) LIMIT 10","What are the counts of distinct staff members, distinct active customers, and total staff members who joined between 2020 and have taught at least one completed lesson, among the 10 staff members who joined the latest?",6,False,extra
SELECT T2.staff_id FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.staff_id NOT IN (SELECT staff_id FROM Staff WHERE staff_id = 1),What are the staff ids of all staff except the one with staff id 1?,2,True,extra
"SELECT COUNT(last_name), MAX(amount_outstanding) FROM Customers",What is the number of customers and the highest amount outstanding?,6,False,medium
SELECT COUNT(DISTINCT T1.first_name) FROM Customers AS T1 INNER JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.zip_postcode != '11111',How many unique first names of customers are there who do not reside in the 11111 zip postcode area?,3,True,medium
SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 WHERE T1.amount_outstanding > 100 AND T1.amount_outstanding < 500,How many customers have an outstanding amount greater than 100 and less than 500?,5,True,medium
SELECT COUNT(DISTINCT T1.staff_id) FROM Staff AS T1 JOIN Addresses AS T2 ON T1.staff_address_id = T2.address_id WHERE T1.staff_id != 1 ORDER BY T1.staff_id ASC LIMIT 1,What is the second lowest staff id among the unique staff ids excluding staff id 1?,5,True,extra
"SELECT COUNT(T1.staff_id), COUNT(T3.customer_id) FROM Staff AS T1 JOIN Addresses AS T2 ON T1.staff_address_id = T2.address_id JOIN Customers AS T3 ON T3.customer_address_id = T2.address_id ORDER BY T1.staff_id ASC","What is the count of staff and their corresponding customers for each staff id, sorted by staff id in ascending order?",6,False,hard
SELECT country FROM Addresses,What countries are listed in the addresses?,3,True,easy
SELECT amount_outstanding FROM Customers WHERE amount_outstanding BETWEEN 0 AND 1000 ORDER BY amount_outstanding ASC LIMIT 1,What is the smallest amount outstanding that is greater than the lowest amount outstanding among customers with an amount outstanding between 0 and 1000?,5,True,hard
"SELECT T1.first_name, T2.first_name FROM Customers AS T1 JOIN Staff AS T2 ON T1.first_name != T2.first_name",What are all possible pairs of first names of customers and staff members that are not the same?,3,True,medium
SELECT COUNT(DISTINCT T4.staff_id) FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id JOIN Lessons AS T3 ON T1.customer_id = T3.customer_id JOIN Staff AS T4 ON T3.staff_id = T4.staff_id WHERE T1.amount_outstanding < 1000 OR T3.lesson_status_code = 'PLANNED' OR NOT EXISTS ( SELECT 1 FROM Customer_Payments AS T5 WHERE T5.customer_id = T1.customer_id ),"How many distinct staff members are assigned to customers who either have an outstanding balance of less than 1000, have a planned lesson, or have no payment history?",3,True,extra
